<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kalos Starter Set on Pokémonitor</title>
    <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/</link>
    <description>Recent content in Kalos Starter Set on Pokémonitor</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>001/039 - Weedle</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/001---weedle/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/001---weedle/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047502.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 25-04-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1650884400000, Close: 1.49},&#xD;&#xA;  { Date: 1654513200000, Close: 1.19},&#xD;&#xA;  { Date: 1665399600000, Close: 0.89},&#xD;&#xA;  { Date: 1669028400000, Close: 0.79},&#xD;&#xA;  { Date: 1684753200000, Close: 0.69},&#xD;&#xA;  { Date: 1729545627877, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1650884400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>002/039 - Pansage</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/002---pansage/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/002---pansage/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047485.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 16-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.59},&#xD;&#xA;  { Date: 1604919600000, Close: 0.49},&#xD;&#xA;  { Date: 1652698800000, Close: 1.99},&#xD;&#xA;  { Date: 1669633200000, Close: 1.69},&#xD;&#xA;  { Date: 1672052400000, Close: 1.59},&#xD;&#xA;  { Date: 1680519600000, Close: 1.29},&#xD;&#xA;  { Date: 1684753200000, Close: 0.99},&#xD;&#xA;  { Date: 1688986800000, Close: 0.89},&#xD;&#xA;  { Date: 1701082800000, Close: 0.79},&#xD;&#xA;  { Date: 1705921200000, Close: 0.49},&#xD;&#xA;  { Date: 1729545627693, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1652698800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>003/039 - Chespin</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/003---chespin/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/003---chespin/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047462.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 12-04-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 17-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 0.39},&#xD;&#xA;  { Date: 1576580400000, Close: 0.35},&#xD;&#xA;  { Date: 1619089200000, Close: 0.59},&#xD;&#xA;  { Date: 1642676400000, Close: 0.89},&#xD;&#xA;  { Date: 1647428400000, Close: 0.79},&#xD;&#xA;  { Date: 1649761200000, Close: 0.99},&#xD;&#xA;  { Date: 1653822000000, Close: 0.89},&#xD;&#xA;  { Date: 1674471600000, Close: 0.79},&#xD;&#xA;  { Date: 1681815600000, Close: 0.69},&#xD;&#xA;  { Date: 1692788400000, Close: 0.59},&#xD;&#xA;  { Date: 1700737200000, Close: 0.49},&#xD;&#xA;  { Date: 1704798000000, Close: 0.45},&#xD;&#xA;  { Date: 1704970800000, Close: 0.49},&#xD;&#xA;  { Date: 1709204400000, Close: 0.45},&#xD;&#xA;  { Date: 1709377200000, Close: 0.49},&#xD;&#xA;  { Date: 1714820400000, Close: 0.69},&#xD;&#xA;  { Date: 1719486000000, Close: 0.99},&#xD;&#xA;  { Date: 1723460400000, Close: 0.89},&#xD;&#xA;  { Date: 1729545627396, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1649761200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576580400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>004/039 - Quilladin</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/004---quilladin/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/004---quilladin/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047494.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 25-04-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-10-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1602500400000, Close: 0.49},&#xD;&#xA;  { Date: 1630321200000, Close: 0.39},&#xD;&#xA;  { Date: 1634554800000, Close: 0.35},&#xD;&#xA;  { Date: 1650884400000, Close: 1.49},&#xD;&#xA;  { Date: 1665399600000, Close: 1.19},&#xD;&#xA;  { Date: 1667214000000, Close: 0.89},&#xD;&#xA;  { Date: 1686567600000, Close: 0.79},&#xD;&#xA;  { Date: 1690801200000, Close: 0.69},&#xD;&#xA;  { Date: 1716807600000, Close: 0.79},&#xD;&#xA;  { Date: 1729545627787, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1650884400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1634554800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>005/039 - Chesnaught</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/005---chesnaught/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/005---chesnaught/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047460.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.49 on 25-01-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 13-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 0.79},&#xD;&#xA;  { Date: 1596711600000, Close: 0.89},&#xD;&#xA;  { Date: 1601722800000, Close: 0.99},&#xD;&#xA;  { Date: 1610708400000, Close: 1.29},&#xD;&#xA;  { Date: 1614423600000, Close: 1.99},&#xD;&#xA;  { Date: 1618916400000, Close: 2.29},&#xD;&#xA;  { Date: 1621422000000, Close: 2.49},&#xD;&#xA;  { Date: 1634295600000, Close: 2.99},&#xD;&#xA;  { Date: 1643108400000, Close: 3.49},&#xD;&#xA;  { Date: 1643454000000, Close: 2.99},&#xD;&#xA;  { Date: 1645873200000, Close: 3.09},&#xD;&#xA;  { Date: 1649934000000, Close: 2.49},&#xD;&#xA;  { Date: 1653994800000, Close: 2.19},&#xD;&#xA;  { Date: 1654599600000, Close: 1.99},&#xD;&#xA;  { Date: 1665054000000, Close: 1.79},&#xD;&#xA;  { Date: 1666263600000, Close: 1.89},&#xD;&#xA;  { Date: 1673434800000, Close: 2.99},&#xD;&#xA;  { Date: 1680260400000, Close: 2.39},&#xD;&#xA;  { Date: 1684753200000, Close: 2.69},&#xD;&#xA;  { Date: 1697540400000, Close: 2.89},&#xD;&#xA;  { Date: 1701514800000, Close: 2.59},&#xD;&#xA;  { Date: 1717498800000, Close: 2.49},&#xD;&#xA;  { Date: 1729545627352, Close: 2.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1643108400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576234800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>006/039 - Slugma</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/006---slugma/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/006---slugma/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047496.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.79 on 18-07-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 07-08-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1593428400000, Close: 0.49},&#xD;&#xA;  { Date: 1658142000000, Close: 1.79},&#xD;&#xA;  { Date: 1665399600000, Close: 1.49},&#xD;&#xA;  { Date: 1666609200000, Close: 1.79},&#xD;&#xA;  { Date: 1668423600000, Close: 1.49},&#xD;&#xA;  { Date: 1670842800000, Close: 0.99},&#xD;&#xA;  { Date: 1677495600000, Close: 0.89},&#xD;&#xA;  { Date: 1680519600000, Close: 0.79},&#xD;&#xA;  { Date: 1684148400000, Close: 0.69},&#xD;&#xA;  { Date: 1685962800000, Close: 0.59},&#xD;&#xA;  { Date: 1687777200000, Close: 0.49},&#xD;&#xA;  { Date: 1689591600000, Close: 0.39},&#xD;&#xA;  { Date: 1691406000000, Close: 0.35},&#xD;&#xA;  { Date: 1729545627804, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1658142000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1691406000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>007/039 - Pansear</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/007---pansear/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/007---pansear/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047486.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 22-03-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1606734000000, Close: 0.39},&#xD;&#xA;  { Date: 1616410800000, Close: 0.35},&#xD;&#xA;  { Date: 1617015600000, Close: 0.49},&#xD;&#xA;  { Date: 1620644400000, Close: 0.39},&#xD;&#xA;  { Date: 1622458800000, Close: 0.35},&#xD;&#xA;  { Date: 1638788400000, Close: 0.49},&#xD;&#xA;  { Date: 1677495600000, Close: 0.39},&#xD;&#xA;  { Date: 1680519600000, Close: 0.35},&#xD;&#xA;  { Date: 1729545627705, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1616410800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>008/039 - Fennekin</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/008---fennekin/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/008---fennekin/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047469.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 13-12-2019.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 17-02-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 0.59},&#xD;&#xA;  { Date: 1578135600000, Close: 0.49},&#xD;&#xA;  { Date: 1581937200000, Close: 0.39},&#xD;&#xA;  { Date: 1584097200000, Close: 0.49},&#xD;&#xA;  { Date: 1588158000000, Close: 0.39},&#xD;&#xA;  { Date: 1588244400000, Close: 0.49},&#xD;&#xA;  { Date: 1667646000000, Close: 0.59},&#xD;&#xA;  { Date: 1729545627494, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1576234800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1581937200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>009/039 - Braixen</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/009---braixen/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/009---braixen/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047457.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 07-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 17-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 0.49},&#xD;&#xA;  { Date: 1584442800000, Close: 0.39},&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1649761200000, Close: 0.99},&#xD;&#xA;  { Date: 1676458800000, Close: 1.95},&#xD;&#xA;  { Date: 1696676400000, Close: 2.49},&#xD;&#xA;  { Date: 1700737200000, Close: 2.19},&#xD;&#xA;  { Date: 1704711600000, Close: 1.89},&#xD;&#xA;  { Date: 1729545627294, Close: 1.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1696676400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584442800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>010/039 - Delphox</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/010---delphox/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/010---delphox/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047466.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.99 on 04-05-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 02-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 0.59},&#xD;&#xA;  { Date: 1591095600000, Close: 0.49},&#xD;&#xA;  { Date: 1604055600000, Close: 0.59},&#xD;&#xA;  { Date: 1649761200000, Close: 1.49},&#xD;&#xA;  { Date: 1668078000000, Close: 1.99},&#xD;&#xA;  { Date: 1673521200000, Close: 2.49},&#xD;&#xA;  { Date: 1676458800000, Close: 2.99},&#xD;&#xA;  { Date: 1678532400000, Close: 3.49},&#xD;&#xA;  { Date: 1714820400000, Close: 3.99},&#xD;&#xA;  { Date: 1718881200000, Close: 3.39},&#xD;&#xA;  { Date: 1722855600000, Close: 2.79},&#xD;&#xA;  { Date: 1726916400000, Close: 2.49},&#xD;&#xA;  { Date: 1729545627455, Close: 2.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1714820400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591095600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>011/039 - Panpour</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/011---panpour/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/011---panpour/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047487.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 18-04-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1591441200000, Close: 0.39},&#xD;&#xA;  { Date: 1600426800000, Close: 0.49},&#xD;&#xA;  { Date: 1612782000000, Close: 0.39},&#xD;&#xA;  { Date: 1613386800000, Close: 0.49},&#xD;&#xA;  { Date: 1650279600000, Close: 1.99},&#xD;&#xA;  { Date: 1653908400000, Close: 1.69},&#xD;&#xA;  { Date: 1655722800000, Close: 1.39},&#xD;&#xA;  { Date: 1656327600000, Close: 1.29},&#xD;&#xA;  { Date: 1658142000000, Close: 0.99},&#xD;&#xA;  { Date: 1666609200000, Close: 0.89},&#xD;&#xA;  { Date: 1668423600000, Close: 0.79},&#xD;&#xA;  { Date: 1670238000000, Close: 0.69},&#xD;&#xA;  { Date: 1672052400000, Close: 0.59},&#xD;&#xA;  { Date: 1716807600000, Close: 0.99},&#xD;&#xA;  { Date: 1722250800000, Close: 0.89},&#xD;&#xA;  { Date: 1727089200000, Close: 0.99},&#xD;&#xA;  { Date: 1727694000000, Close: 1.09},&#xD;&#xA;  { Date: 1729545627682, Close: 1.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1650279600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>012/039 - Froakie</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/012---froakie/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/012---froakie/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047472.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 05-04-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 29-02-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 0.49},&#xD;&#xA;  { Date: 1581159600000, Close: 0.39},&#xD;&#xA;  { Date: 1582974000000, Close: 0.35},&#xD;&#xA;  { Date: 1591959600000, Close: 0.49},&#xD;&#xA;  { Date: 1600945200000, Close: 0.59},&#xD;&#xA;  { Date: 1649156400000, Close: 0.99},&#xD;&#xA;  { Date: 1729545627529, Close: 0.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1649156400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1582974000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>013/039 - Frogadier</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/013---frogadier/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/013---frogadier/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047474.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.99 on 21-07-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 18-04-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 0.79},&#xD;&#xA;  { Date: 1587207600000, Close: 0.69},&#xD;&#xA;  { Date: 1608721200000, Close: 0.79},&#xD;&#xA;  { Date: 1626174000000, Close: 3.49},&#xD;&#xA;  { Date: 1626865200000, Close: 3.99},&#xD;&#xA;  { Date: 1632394800000, Close: 3.49},&#xD;&#xA;  { Date: 1634727600000, Close: 2.89},&#xD;&#xA;  { Date: 1636542000000, Close: 2.59},&#xD;&#xA;  { Date: 1638615600000, Close: 2.49},&#xD;&#xA;  { Date: 1654858800000, Close: 3.49},&#xD;&#xA;  { Date: 1657364400000, Close: 2.99},&#xD;&#xA;  { Date: 1665918000000, Close: 2.39},&#xD;&#xA;  { Date: 1679137200000, Close: 2.09},&#xD;&#xA;  { Date: 1694862000000, Close: 2.49},&#xD;&#xA;  { Date: 1703847600000, Close: 2.19},&#xD;&#xA;  { Date: 1729545627558, Close: 2.19},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1626865200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1587207600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>014/039 - Greninja</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/014---greninja/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/014---greninja/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047479.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.99 on 20-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 03-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 1.19},&#xD;&#xA;  { Date: 1583233200000, Close: 0.89},&#xD;&#xA;  { Date: 1592478000000, Close: 1.29},&#xD;&#xA;  { Date: 1597748400000, Close: 1.49},&#xD;&#xA;  { Date: 1604055600000, Close: 1.79},&#xD;&#xA;  { Date: 1607166000000, Close: 2.49},&#xD;&#xA;  { Date: 1618916400000, Close: 9.99},&#xD;&#xA;  { Date: 1624186800000, Close: 8.79},&#xD;&#xA;  { Date: 1626951600000, Close: 8.19},&#xD;&#xA;  { Date: 1627124400000, Close: 7.99},&#xD;&#xA;  { Date: 1629802800000, Close: 7.39},&#xD;&#xA;  { Date: 1632394800000, Close: 6.99},&#xD;&#xA;  { Date: 1635073200000, Close: 6.39},&#xD;&#xA;  { Date: 1635591600000, Close: 5.99},&#xD;&#xA;  { Date: 1638183600000, Close: 5.39},&#xD;&#xA;  { Date: 1638270000000, Close: 4.99},&#xD;&#xA;  { Date: 1640948400000, Close: 4.39},&#xD;&#xA;  { Date: 1643540400000, Close: 3.79},&#xD;&#xA;  { Date: 1645182000000, Close: 3.99},&#xD;&#xA;  { Date: 1650538800000, Close: 3.39},&#xD;&#xA;  { Date: 1657623600000, Close: 3.99},&#xD;&#xA;  { Date: 1666436400000, Close: 3.49},&#xD;&#xA;  { Date: 1666954800000, Close: 2.99},&#xD;&#xA;  { Date: 1669633200000, Close: 2.39},&#xD;&#xA;  { Date: 1672225200000, Close: 2.09},&#xD;&#xA;  { Date: 1675249200000, Close: 2.49},&#xD;&#xA;  { Date: 1678964400000, Close: 2.99},&#xD;&#xA;  { Date: 1729545627629, Close: 2.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618916400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1583233200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>015/039 - Clauncher</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/015---clauncher/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/015---clauncher/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047464.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 18-04-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1621249200000, Close: 0.69},&#xD;&#xA;  { Date: 1650279600000, Close: 1.99},&#xD;&#xA;  { Date: 1652698800000, Close: 1.59},&#xD;&#xA;  { Date: 1655118000000, Close: 1.29},&#xD;&#xA;  { Date: 1656327600000, Close: 1.09},&#xD;&#xA;  { Date: 1665399600000, Close: 0.99},&#xD;&#xA;  { Date: 1667214000000, Close: 0.89},&#xD;&#xA;  { Date: 1669028400000, Close: 0.79},&#xD;&#xA;  { Date: 1671447600000, Close: 0.69},&#xD;&#xA;  { Date: 1682334000000, Close: 0.59},&#xD;&#xA;  { Date: 1685962800000, Close: 0.49},&#xD;&#xA;  { Date: 1706526000000, Close: 0.89},&#xD;&#xA;  { Date: 1720436400000, Close: 1.09},&#xD;&#xA;  { Date: 1721646000000, Close: 0.99},&#xD;&#xA;  { Date: 1722250800000, Close: 0.89},&#xD;&#xA;  { Date: 1727089200000, Close: 0.79},&#xD;&#xA;  { Date: 1727694000000, Close: 0.89},&#xD;&#xA;  { Date: 1729545627410, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1650279600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>016/039 - Poochyena</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/016---poochyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/016---poochyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047491.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 11-04-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 07-12-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1607338800000, Close: 0.35},&#xD;&#xA;  { Date: 1612177200000, Close: 0.49},&#xD;&#xA;  { Date: 1616410800000, Close: 0.39},&#xD;&#xA;  { Date: 1619434800000, Close: 0.35},&#xD;&#xA;  { Date: 1639998000000, Close: 0.40},&#xD;&#xA;  { Date: 1649674800000, Close: 0.99},&#xD;&#xA;  { Date: 1652698800000, Close: 0.89},&#xD;&#xA;  { Date: 1654513200000, Close: 0.79},&#xD;&#xA;  { Date: 1669028400000, Close: 0.69},&#xD;&#xA;  { Date: 1670238000000, Close: 0.59},&#xD;&#xA;  { Date: 1682938800000, Close: 0.49},&#xD;&#xA;  { Date: 1687172400000, Close: 0.39},&#xD;&#xA;  { Date: 1692010800000, Close: 0.35},&#xD;&#xA;  { Date: 1692615600000, Close: 0.49},&#xD;&#xA;  { Date: 1716807600000, Close: 0.69},&#xD;&#xA;  { Date: 1717412400000, Close: 0.49},&#xD;&#xA;  { Date: 1729545627762, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1649674800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1607338800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>017/039 - Mightyena</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/017---mightyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/017---mightyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047483.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.09 on 05-09-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 02-08-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1627902000000, Close: 0.59},&#xD;&#xA;  { Date: 1662375600000, Close: 2.09},&#xD;&#xA;  { Date: 1666004400000, Close: 1.79},&#xD;&#xA;  { Date: 1666609200000, Close: 1.69},&#xD;&#xA;  { Date: 1667818800000, Close: 1.59},&#xD;&#xA;  { Date: 1672052400000, Close: 1.69},&#xD;&#xA;  { Date: 1672657200000, Close: 1.49},&#xD;&#xA;  { Date: 1679310000000, Close: 1.99},&#xD;&#xA;  { Date: 1682334000000, Close: 1.79},&#xD;&#xA;  { Date: 1685962800000, Close: 1.49},&#xD;&#xA;  { Date: 1716807600000, Close: 1.59},&#xD;&#xA;  { Date: 1717412400000, Close: 1.49},&#xD;&#xA;  { Date: 1719831600000, Close: 1.19},&#xD;&#xA;  { Date: 1722855600000, Close: 0.89},&#xD;&#xA;  { Date: 1729545627661, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1662375600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1627902000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>018/039 - Inkay</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/018---inkay/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/018---inkay/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047482.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 19-02-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1621249200000, Close: 0.49},&#xD;&#xA;  { Date: 1671447600000, Close: 0.59},&#xD;&#xA;  { Date: 1705921200000, Close: 0.49},&#xD;&#xA;  { Date: 1708340400000, Close: 0.79},&#xD;&#xA;  { Date: 1729545627651, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1708340400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>019/039 - Pawniard</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/019---pawniard/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/019---pawniard/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047488.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 27-11-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1591441200000, Close: 0.39},&#xD;&#xA;  { Date: 1600426800000, Close: 0.35},&#xD;&#xA;  { Date: 1636974000000, Close: 0.49},&#xD;&#xA;  { Date: 1642417200000, Close: 0.39},&#xD;&#xA;  { Date: 1643626800000, Close: 0.49},&#xD;&#xA;  { Date: 1649674800000, Close: 0.39},&#xD;&#xA;  { Date: 1651489200000, Close: 0.49},&#xD;&#xA;  { Date: 1655118000000, Close: 0.39},&#xD;&#xA;  { Date: 1655722800000, Close: 0.49},&#xD;&#xA;  { Date: 1670238000000, Close: 0.59},&#xD;&#xA;  { Date: 1682334000000, Close: 0.49},&#xD;&#xA;  { Date: 1686567600000, Close: 0.39},&#xD;&#xA;  { Date: 1690801200000, Close: 0.35},&#xD;&#xA;  { Date: 1691406000000, Close: 0.89},&#xD;&#xA;  { Date: 1692615600000, Close: 0.79},&#xD;&#xA;  { Date: 1701082800000, Close: 0.99},&#xD;&#xA;  { Date: 1704711600000, Close: 0.89},&#xD;&#xA;  { Date: 1709550000000, Close: 0.79},&#xD;&#xA;  { Date: 1729545627720, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1701082800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>020/039 - Bisharp</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/020---bisharp/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/020---bisharp/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047456.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 22-01-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 30-11-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1606734000000, Close: 0.35},&#xD;&#xA;  { Date: 1609758000000, Close: 0.49},&#xD;&#xA;  { Date: 1650279600000, Close: 0.79},&#xD;&#xA;  { Date: 1705921200000, Close: 0.89},&#xD;&#xA;  { Date: 1707130800000, Close: 0.69},&#xD;&#xA;  { Date: 1729545627232, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1705921200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1606734000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>021/039 - Honedge</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/021---honedge/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/021---honedge/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047481.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.29 on 06-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.79},&#xD;&#xA;  { Date: 1654513200000, Close: 2.29},&#xD;&#xA;  { Date: 1666004400000, Close: 1.99},&#xD;&#xA;  { Date: 1670238000000, Close: 1.69},&#xD;&#xA;  { Date: 1674471600000, Close: 1.49},&#xD;&#xA;  { Date: 1675681200000, Close: 1.39},&#xD;&#xA;  { Date: 1678705200000, Close: 1.49},&#xD;&#xA;  { Date: 1679310000000, Close: 1.29},&#xD;&#xA;  { Date: 1681124400000, Close: 0.99},&#xD;&#xA;  { Date: 1685962800000, Close: 0.89},&#xD;&#xA;  { Date: 1720436400000, Close: 0.79},&#xD;&#xA;  { Date: 1722250800000, Close: 0.99},&#xD;&#xA;  { Date: 1723460400000, Close: 1.09},&#xD;&#xA;  { Date: 1727694000000, Close: 1.19},&#xD;&#xA;  { Date: 1729545627642, Close: 1.19},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1654513200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>022/039 - Snubbull</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/022---snubbull/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/022---snubbull/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047498.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 29-01-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 10-05-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1591441200000, Close: 0.39},&#xD;&#xA;  { Date: 1601290800000, Close: 0.49},&#xD;&#xA;  { Date: 1618830000000, Close: 0.39},&#xD;&#xA;  { Date: 1620644400000, Close: 0.35},&#xD;&#xA;  { Date: 1638788400000, Close: 0.49},&#xD;&#xA;  { Date: 1642417200000, Close: 0.39},&#xD;&#xA;  { Date: 1647860400000, Close: 0.35},&#xD;&#xA;  { Date: 1656932400000, Close: 0.49},&#xD;&#xA;  { Date: 1665399600000, Close: 0.39},&#xD;&#xA;  { Date: 1667818800000, Close: 0.35},&#xD;&#xA;  { Date: 1679310000000, Close: 0.49},&#xD;&#xA;  { Date: 1683543600000, Close: 0.39},&#xD;&#xA;  { Date: 1685358000000, Close: 0.49},&#xD;&#xA;  { Date: 1689591600000, Close: 0.39},&#xD;&#xA;  { Date: 1705921200000, Close: 0.59},&#xD;&#xA;  { Date: 1706526000000, Close: 0.69},&#xD;&#xA;  { Date: 1722250800000, Close: 0.59},&#xD;&#xA;  { Date: 1725879600000, Close: 0.49},&#xD;&#xA;  { Date: 1729545627825, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1706526000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1620644400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>023/039 - Granbull</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/023---granbull/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/023---granbull/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047478.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 21-08-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 08-11-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1604314800000, Close: 0.49},&#xD;&#xA;  { Date: 1608548400000, Close: 0.39},&#xD;&#xA;  { Date: 1609153200000, Close: 0.49},&#xD;&#xA;  { Date: 1634554800000, Close: 0.39},&#xD;&#xA;  { Date: 1636369200000, Close: 0.35},&#xD;&#xA;  { Date: 1638788400000, Close: 0.49},&#xD;&#xA;  { Date: 1652698800000, Close: 0.79},&#xD;&#xA;  { Date: 1669028400000, Close: 0.69},&#xD;&#xA;  { Date: 1676890800000, Close: 0.89},&#xD;&#xA;  { Date: 1679914800000, Close: 0.69},&#xD;&#xA;  { Date: 1687777200000, Close: 0.79},&#xD;&#xA;  { Date: 1692615600000, Close: 0.99},&#xD;&#xA;  { Date: 1701082800000, Close: 0.89},&#xD;&#xA;  { Date: 1704711600000, Close: 0.79},&#xD;&#xA;  { Date: 1708945200000, Close: 0.89},&#xD;&#xA;  { Date: 1713783600000, Close: 0.79},&#xD;&#xA;  { Date: 1722250800000, Close: 0.69},&#xD;&#xA;  { Date: 1724065200000, Close: 0.79},&#xD;&#xA;  { Date: 1729545627591, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1692615600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1636369200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>024/039 - Swirlix</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/024---swirlix/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/024---swirlix/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047499.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 20-02-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-09-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1600426800000, Close: 0.49},&#xD;&#xA;  { Date: 1610967600000, Close: 0.59},&#xD;&#xA;  { Date: 1618830000000, Close: 0.69},&#xD;&#xA;  { Date: 1627297200000, Close: 0.79},&#xD;&#xA;  { Date: 1629111600000, Close: 0.69},&#xD;&#xA;  { Date: 1634554800000, Close: 0.59},&#xD;&#xA;  { Date: 1638788400000, Close: 0.49},&#xD;&#xA;  { Date: 1652698800000, Close: 1.09},&#xD;&#xA;  { Date: 1667214000000, Close: 0.99},&#xD;&#xA;  { Date: 1676890800000, Close: 1.29},&#xD;&#xA;  { Date: 1680519600000, Close: 0.99},&#xD;&#xA;  { Date: 1720436400000, Close: 0.89},&#xD;&#xA;  { Date: 1729545627834, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1676890800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1600426800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>025/039 - Farfetch&#39;d</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/025---farfetchd/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/025---farfetchd/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047468.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.49 on 24-10-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1643626800000, Close: 0.89},&#xD;&#xA;  { Date: 1666609200000, Close: 3.49},&#xD;&#xA;  { Date: 1674471600000, Close: 2.89},&#xD;&#xA;  { Date: 1705921200000, Close: 3.09},&#xD;&#xA;  { Date: 1720436400000, Close: 2.49},&#xD;&#xA;  { Date: 1724670000000, Close: 2.19},&#xD;&#xA;  { Date: 1728298800000, Close: 1.89},&#xD;&#xA;  { Date: 1729545627471, Close: 1.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1666609200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>026/039 - Snorlax</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/026---snorlax/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/026---snorlax/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047497.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 17.99 on 10-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 6.99 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 6.99},&#xD;&#xA;  { Date: 1600426800000, Close: 7.49},&#xD;&#xA;  { Date: 1620644400000, Close: 17.99},&#xD;&#xA;  { Date: 1626692400000, Close: 16.49},&#xD;&#xA;  { Date: 1627297200000, Close: 15.99},&#xD;&#xA;  { Date: 1646046000000, Close: 17.79},&#xD;&#xA;  { Date: 1650279600000, Close: 17.69},&#xD;&#xA;  { Date: 1666004400000, Close: 17.99},&#xD;&#xA;  { Date: 1669633200000, Close: 16.49},&#xD;&#xA;  { Date: 1729508400000, Close: 16.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1620644400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>027/039 - Miltank</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/027---miltank/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/027---miltank/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047484.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 15.99 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 3.69 on 23-01-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1600426800000, Close: 6.99},&#xD;&#xA;  { Date: 1606734000000, Close: 8.99},&#xD;&#xA;  { Date: 1619434800000, Close: 15.99},&#xD;&#xA;  { Date: 1621249200000, Close: 14.49},&#xD;&#xA;  { Date: 1623063600000, Close: 12.99},&#xD;&#xA;  { Date: 1626692400000, Close: 11.49},&#xD;&#xA;  { Date: 1628506800000, Close: 10.49},&#xD;&#xA;  { Date: 1630321200000, Close: 9.39},&#xD;&#xA;  { Date: 1632135600000, Close: 8.99},&#xD;&#xA;  { Date: 1633950000000, Close: 8.39},&#xD;&#xA;  { Date: 1635764400000, Close: 7.79},&#xD;&#xA;  { Date: 1636369200000, Close: 6.99},&#xD;&#xA;  { Date: 1638183600000, Close: 6.39},&#xD;&#xA;  { Date: 1638788400000, Close: 5.99},&#xD;&#xA;  { Date: 1640602800000, Close: 5.39},&#xD;&#xA;  { Date: 1641207600000, Close: 4.99},&#xD;&#xA;  { Date: 1646046000000, Close: 5.39},&#xD;&#xA;  { Date: 1646650800000, Close: 5.49},&#xD;&#xA;  { Date: 1653303600000, Close: 5.39},&#xD;&#xA;  { Date: 1658142000000, Close: 4.99},&#xD;&#xA;  { Date: 1666004400000, Close: 4.39},&#xD;&#xA;  { Date: 1670238000000, Close: 3.79},&#xD;&#xA;  { Date: 1674471600000, Close: 3.69},&#xD;&#xA;  { Date: 1676890800000, Close: 3.99},&#xD;&#xA;  { Date: 1700478000000, Close: 4.89},&#xD;&#xA;  { Date: 1708945200000, Close: 4.39},&#xD;&#xA;  { Date: 1729545627671, Close: 4.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619434800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1674471600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>028/039 - Skitty</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/028---skitty/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/028---skitty/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047495.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 06-03-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.19 on 26-12-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1657537200000, Close: 1.29},&#xD;&#xA;  { Date: 1667818800000, Close: 1.49},&#xD;&#xA;  { Date: 1672052400000, Close: 1.19},&#xD;&#xA;  { Date: 1678100400000, Close: 1.99},&#xD;&#xA;  { Date: 1729545627795, Close: 1.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1678100400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1672052400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>029/039 - Bidoof</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/029---bidoof/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/029---bidoof/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047455.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 18.79 on 20-02-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.99 on 18-09-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 3.49},&#xD;&#xA;  { Date: 1600426800000, Close: 1.99},&#xD;&#xA;  { Date: 1606734000000, Close: 2.99},&#xD;&#xA;  { Date: 1620644400000, Close: 7.99},&#xD;&#xA;  { Date: 1621854000000, Close: 7.49},&#xD;&#xA;  { Date: 1626692400000, Close: 10.99},&#xD;&#xA;  { Date: 1632740400000, Close: 9.99},&#xD;&#xA;  { Date: 1636369200000, Close: 8.79},&#xD;&#xA;  { Date: 1636974000000, Close: 7.99},&#xD;&#xA;  { Date: 1643626800000, Close: 9.99},&#xD;&#xA;  { Date: 1655118000000, Close: 10.99},&#xD;&#xA;  { Date: 1675681200000, Close: 14.99},&#xD;&#xA;  { Date: 1676286000000, Close: 16.79},&#xD;&#xA;  { Date: 1676890800000, Close: 18.79},&#xD;&#xA;  { Date: 1680519600000, Close: 17.49},&#xD;&#xA;  { Date: 1684753200000, Close: 15.99},&#xD;&#xA;  { Date: 1714993200000, Close: 14.49},&#xD;&#xA;  { Date: 1719226800000, Close: 12.99},&#xD;&#xA;  { Date: 1722855600000, Close: 11.49},&#xD;&#xA;  { Date: 1727089200000, Close: 9.99},&#xD;&#xA;  { Date: 1729545627220, Close: 9.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1676890800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1600426800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>030/039 - Bunnelby</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/030---bunnelby/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/030---bunnelby/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047459.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 06-03-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1678100400000, Close: 1.29},&#xD;&#xA;  { Date: 1679914800000, Close: 1.09},&#xD;&#xA;  { Date: 1683543600000, Close: 0.99},&#xD;&#xA;  { Date: 1687777200000, Close: 0.89},&#xD;&#xA;  { Date: 1693825200000, Close: 0.99},&#xD;&#xA;  { Date: 1701687600000, Close: 0.89},&#xD;&#xA;  { Date: 1706526000000, Close: 0.79},&#xD;&#xA;  { Date: 1711969200000, Close: 0.99},&#xD;&#xA;  { Date: 1713783600000, Close: 1.09},&#xD;&#xA;  { Date: 1718017200000, Close: 0.99},&#xD;&#xA;  { Date: 1721041200000, Close: 1.09},&#xD;&#xA;  { Date: 1725274800000, Close: 0.99},&#xD;&#xA;  { Date: 1726484400000, Close: 0.89},&#xD;&#xA;  { Date: 1729545627307, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1678100400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>031/039 - Fletchling</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/031---fletchling/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/031---fletchling/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047471.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 20-02-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 31-05-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1610967600000, Close: 0.39},&#xD;&#xA;  { Date: 1616410800000, Close: 0.49},&#xD;&#xA;  { Date: 1620644400000, Close: 0.39},&#xD;&#xA;  { Date: 1622458800000, Close: 0.35},&#xD;&#xA;  { Date: 1630926000000, Close: 0.49},&#xD;&#xA;  { Date: 1667818800000, Close: 0.75},&#xD;&#xA;  { Date: 1676890800000, Close: 1.49},&#xD;&#xA;  { Date: 1681124400000, Close: 1.19},&#xD;&#xA;  { Date: 1685358000000, Close: 0.79},&#xD;&#xA;  { Date: 1686567600000, Close: 0.69},&#xD;&#xA;  { Date: 1690196400000, Close: 0.59},&#xD;&#xA;  { Date: 1691406000000, Close: 0.69},&#xD;&#xA;  { Date: 1716807600000, Close: 1.49},&#xD;&#xA;  { Date: 1720436400000, Close: 1.19},&#xD;&#xA;  { Date: 1724670000000, Close: 0.89},&#xD;&#xA;  { Date: 1727694000000, Close: 0.69},&#xD;&#xA;  { Date: 1729545627507, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1676890800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1622458800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>032/039 - Furfrou (Male)</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/032---furfrou-male/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/032---furfrou-male/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047476.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 6.99 on 14-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.19 on 29-01-2024.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1606734000000, Close: 5.99},&#xD;&#xA;  { Date: 1607943600000, Close: 6.99},&#xD;&#xA;  { Date: 1611572400000, Close: 6.39},&#xD;&#xA;  { Date: 1612782000000, Close: 5.99},&#xD;&#xA;  { Date: 1615806000000, Close: 5.39},&#xD;&#xA;  { Date: 1618225200000, Close: 5.49},&#xD;&#xA;  { Date: 1621249200000, Close: 4.89},&#xD;&#xA;  { Date: 1623668400000, Close: 4.49},&#xD;&#xA;  { Date: 1629111600000, Close: 3.99},&#xD;&#xA;  { Date: 1635764400000, Close: 3.39},&#xD;&#xA;  { Date: 1638788400000, Close: 2.99},&#xD;&#xA;  { Date: 1657537200000, Close: 4.99},&#xD;&#xA;  { Date: 1680519600000, Close: 4.39},&#xD;&#xA;  { Date: 1684753200000, Close: 3.79},&#xD;&#xA;  { Date: 1688986800000, Close: 3.19},&#xD;&#xA;  { Date: 1689591600000, Close: 2.49},&#xD;&#xA;  { Date: 1706526000000, Close: 2.19},&#xD;&#xA;  { Date: 1721646000000, Close: 2.29},&#xD;&#xA;  { Date: 1723460400000, Close: 2.49},&#xD;&#xA;  { Date: 1727089200000, Close: 2.19},&#xD;&#xA;  { Date: 1727694000000, Close: 2.49},&#xD;&#xA;  { Date: 1729545627579, Close: 2.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607943600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1706526000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>033/039 - Furfrou (Heart Trim)</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/033---furfrou-heart-trim/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/033---furfrou-heart-trim/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047477.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.99 on 09-08-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.49 on 18-12-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1620644400000, Close: 2.29},&#xD;&#xA;  { Date: 1628506800000, Close: 4.99},&#xD;&#xA;  { Date: 1629111600000, Close: 4.49},&#xD;&#xA;  { Date: 1633345200000, Close: 3.89},&#xD;&#xA;  { Date: 1634554800000, Close: 3.99},&#xD;&#xA;  { Date: 1638788400000, Close: 3.39},&#xD;&#xA;  { Date: 1643626800000, Close: 3.49},&#xD;&#xA;  { Date: 1647860400000, Close: 2.89},&#xD;&#xA;  { Date: 1652094000000, Close: 2.59},&#xD;&#xA;  { Date: 1658142000000, Close: 2.49},&#xD;&#xA;  { Date: 1662375600000, Close: 2.99},&#xD;&#xA;  { Date: 1666004400000, Close: 2.39},&#xD;&#xA;  { Date: 1670238000000, Close: 2.09},&#xD;&#xA;  { Date: 1696849200000, Close: 1.99},&#xD;&#xA;  { Date: 1701082800000, Close: 1.69},&#xD;&#xA;  { Date: 1702897200000, Close: 1.49},&#xD;&#xA;  { Date: 1716807600000, Close: 1.79},&#xD;&#xA;  { Date: 1729545627569, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1628506800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1702897200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>034/039 - Crushing Hammer</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/034---crushing-hammer/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/034---crushing-hammer/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047465.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 17-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 28-09-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1601290800000, Close: 0.39},&#xD;&#xA;  { Date: 1603710000000, Close: 0.49},&#xD;&#xA;  { Date: 1620644400000, Close: 1.99},&#xD;&#xA;  { Date: 1621249200000, Close: 2.49},&#xD;&#xA;  { Date: 1624878000000, Close: 2.19},&#xD;&#xA;  { Date: 1626087600000, Close: 1.89},&#xD;&#xA;  { Date: 1626692400000, Close: 1.49},&#xD;&#xA;  { Date: 1627902000000, Close: 1.29},&#xD;&#xA;  { Date: 1629111600000, Close: 0.89},&#xD;&#xA;  { Date: 1657537200000, Close: 1.29},&#xD;&#xA;  { Date: 1667818800000, Close: 0.99},&#xD;&#xA;  { Date: 1674471600000, Close: 0.79},&#xD;&#xA;  { Date: 1675076400000, Close: 0.69},&#xD;&#xA;  { Date: 1678705200000, Close: 0.89},&#xD;&#xA;  { Date: 1695639600000, Close: 0.79},&#xD;&#xA;  { Date: 1701082800000, Close: 0.69},&#xD;&#xA;  { Date: 1705316400000, Close: 0.59},&#xD;&#xA;  { Date: 1708945200000, Close: 0.69},&#xD;&#xA;  { Date: 1716202800000, Close: 0.59},&#xD;&#xA;  { Date: 1721646000000, Close: 0.49},&#xD;&#xA;  { Date: 1726484400000, Close: 0.39},&#xD;&#xA;  { Date: 1727089200000, Close: 0.49},&#xD;&#xA;  { Date: 1729545627423, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1621249200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1601290800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>035/039 - Poke Ball</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/035---poke-ball/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/035---poke-ball/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047489.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1729545627740, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>036/039 - Pokemon Catcher</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/036---pokemon-catcher/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/036---pokemon-catcher/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047490.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 08-02-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.39},&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1604919600000, Close: 0.49},&#xD;&#xA;  { Date: 1609153200000, Close: 0.39},&#xD;&#xA;  { Date: 1612782000000, Close: 0.35},&#xD;&#xA;  { Date: 1628506800000, Close: 0.49},&#xD;&#xA;  { Date: 1629716400000, Close: 0.39},&#xD;&#xA;  { Date: 1630926000000, Close: 0.35},&#xD;&#xA;  { Date: 1652094000000, Close: 0.49},&#xD;&#xA;  { Date: 1689591600000, Close: 0.39},&#xD;&#xA;  { Date: 1690196400000, Close: 0.49},&#xD;&#xA;  { Date: 1729545627751, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1612782000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>037/039 - Potion</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/037---potion/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/037---potion/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047492.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1591441200000, Close: 0.35},&#xD;&#xA;  { Date: 1678100400000, Close: 0.49},&#xD;&#xA;  { Date: 1682334000000, Close: 0.39},&#xD;&#xA;  { Date: 1685962800000, Close: 0.35},&#xD;&#xA;  { Date: 1714388400000, Close: 0.49},&#xD;&#xA;  { Date: 1729545627776, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>038/039 - Switch</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/038---switch/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/038---switch/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047500.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.35},&#xD;&#xA;  { Date: 1670842800000, Close: 0.49},&#xD;&#xA;  { Date: 1678705200000, Close: 0.39},&#xD;&#xA;  { Date: 1681729200000, Close: 0.49},&#xD;&#xA;  { Date: 1693825200000, Close: 0.39},&#xD;&#xA;  { Date: 1694430000000, Close: 0.49},&#xD;&#xA;  { Date: 1705316400000, Close: 0.39},&#xD;&#xA;  { Date: 1708945200000, Close: 0.49},&#xD;&#xA;  { Date: 1713783600000, Close: 0.39},&#xD;&#xA;  { Date: 1714388400000, Close: 0.49},&#xD;&#xA;  { Date: 1722250800000, Close: 0.39},&#xD;&#xA;  { Date: 1722855600000, Close: 0.49},&#xD;&#xA;  { Date: 1729545627851, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>039/039 - Tierno</title>
      <link>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/039---tierno/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/11-xy-series/01-xy-kalos-starter-sets/039---tierno/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1047501.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 12-10-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1602500400000, Close: 0.49},&#xD;&#xA;  { Date: 1606734000000, Close: 0.39},&#xD;&#xA;  { Date: 1610362800000, Close: 0.35},&#xD;&#xA;  { Date: 1729545627867, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1383908400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1602500400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
