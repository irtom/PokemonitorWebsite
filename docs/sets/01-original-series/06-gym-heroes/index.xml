<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gym Heroes on Pokémonitor</title>
    <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/</link>
    <description>Recent content in Gym Heroes on Pokémonitor</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>001/132 - Blaine&#39;s Moltres</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/001---blaines-moltres/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/001---blaines-moltres/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148859.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 139.99 on 15-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 24.99 on 06-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 24.99},&#xD;&#xA;  { Date: 1579042800000, Close: 27.99},&#xD;&#xA;  { Date: 1580338800000, Close: 29.99},&#xD;&#xA;  { Date: 1582844400000, Close: 31.99},&#xD;&#xA;  { Date: 1585263600000, Close: 34.99},&#xD;&#xA;  { Date: 1591052400000, Close: 49.99},&#xD;&#xA;  { Date: 1593730800000, Close: 79.99},&#xD;&#xA;  { Date: 1594940400000, Close: 89.99},&#xD;&#xA;  { Date: 1595372400000, Close: 94.99},&#xD;&#xA;  { Date: 1597186800000, Close: 89.99},&#xD;&#xA;  { Date: 1598655600000, Close: 94.99},&#xD;&#xA;  { Date: 1599433200000, Close: 89.99},&#xD;&#xA;  { Date: 1600729200000, Close: 84.99},&#xD;&#xA;  { Date: 1602543600000, Close: 79.99},&#xD;&#xA;  { Date: 1603494000000, Close: 84.99},&#xD;&#xA;  { Date: 1604444400000, Close: 89.99},&#xD;&#xA;  { Date: 1605135600000, Close: 99.99},&#xD;&#xA;  { Date: 1606172400000, Close: 109.99},&#xD;&#xA;  { Date: 1606777200000, Close: 119.99},&#xD;&#xA;  { Date: 1606950000000, Close: 109.99},&#xD;&#xA;  { Date: 1608159600000, Close: 99.99},&#xD;&#xA;  { Date: 1608505200000, Close: 89.99},&#xD;&#xA;  { Date: 1609714800000, Close: 99.99},&#xD;&#xA;  { Date: 1611615600000, Close: 93.99},&#xD;&#xA;  { Date: 1612393200000, Close: 89.99},&#xD;&#xA;  { Date: 1613602800000, Close: 99.99},&#xD;&#xA;  { Date: 1615244400000, Close: 109.99},&#xD;&#xA;  { Date: 1615417200000, Close: 124.99},&#xD;&#xA;  { Date: 1618873200000, Close: 129.99},&#xD;&#xA;  { Date: 1621033200000, Close: 139.99},&#xD;&#xA;  { Date: 1625180400000, Close: 131.99},&#xD;&#xA;  { Date: 1626994800000, Close: 124.99},&#xD;&#xA;  { Date: 1628809200000, Close: 117.99},&#xD;&#xA;  { Date: 1632265200000, Close: 119.99},&#xD;&#xA;  { Date: 1635894000000, Close: 112.99},&#xD;&#xA;  { Date: 1640127600000, Close: 106.99},&#xD;&#xA;  { Date: 1654902000000, Close: 99.99},&#xD;&#xA;  { Date: 1668380400000, Close: 93.99},&#xD;&#xA;  { Date: 1670626800000, Close: 79.99},&#xD;&#xA;  { Date: 1673478000000, Close: 74.99},&#xD;&#xA;  { Date: 1675206000000, Close: 70.99},&#xD;&#xA;  { Date: 1677020400000, Close: 66.99},&#xD;&#xA;  { Date: 1689721200000, Close: 69.99},&#xD;&#xA;  { Date: 1695942000000, Close: 79.99},&#xD;&#xA;  { Date: 1696028400000, Close: 74.99},&#xD;&#xA;  { Date: 1700694000000, Close: 64.99},&#xD;&#xA;  { Date: 1700694000000, Close: 64.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1621033200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575586800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>002/132 - Brock&#39;s Rhydon</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/002---brocks-rhydon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/002---brocks-rhydon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148892.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 30.99 on 26-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 5.99 on 10-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575932400000, Close: 5.99},&#xD;&#xA;  { Date: 1578610800000, Close: 6.49},&#xD;&#xA;  { Date: 1580943600000, Close: 7.49},&#xD;&#xA;  { Date: 1581548400000, Close: 7.99},&#xD;&#xA;  { Date: 1582239600000, Close: 8.49},&#xD;&#xA;  { Date: 1584054000000, Close: 7.79},&#xD;&#xA;  { Date: 1584658800000, Close: 7.99},&#xD;&#xA;  { Date: 1588633200000, Close: 10.99},&#xD;&#xA;  { Date: 1588978800000, Close: 12.99},&#xD;&#xA;  { Date: 1589929200000, Close: 13.99},&#xD;&#xA;  { Date: 1591743600000, Close: 15.99},&#xD;&#xA;  { Date: 1592521200000, Close: 14.99},&#xD;&#xA;  { Date: 1595631600000, Close: 21.99},&#xD;&#xA;  { Date: 1597878000000, Close: 20.49},&#xD;&#xA;  { Date: 1600383600000, Close: 18.99},&#xD;&#xA;  { Date: 1601420400000, Close: 19.99},&#xD;&#xA;  { Date: 1604358000000, Close: 20.99},&#xD;&#xA;  { Date: 1605654000000, Close: 24.99},&#xD;&#xA;  { Date: 1606345200000, Close: 30.99},&#xD;&#xA;  { Date: 1608246000000, Close: 24.99},&#xD;&#xA;  { Date: 1610578800000, Close: 25.99},&#xD;&#xA;  { Date: 1611097200000, Close: 26.99},&#xD;&#xA;  { Date: 1614985200000, Close: 29.99},&#xD;&#xA;  { Date: 1617231600000, Close: 27.99},&#xD;&#xA;  { Date: 1618527600000, Close: 24.99},&#xD;&#xA;  { Date: 1620342000000, Close: 22.99},&#xD;&#xA;  { Date: 1622070000000, Close: 19.99},&#xD;&#xA;  { Date: 1623798000000, Close: 17.99},&#xD;&#xA;  { Date: 1624489200000, Close: 16.99},&#xD;&#xA;  { Date: 1625266800000, Close: 17.99},&#xD;&#xA;  { Date: 1626303600000, Close: 19.99},&#xD;&#xA;  { Date: 1629500400000, Close: 18.49},&#xD;&#xA;  { Date: 1631919600000, Close: 17.49},&#xD;&#xA;  { Date: 1639436400000, Close: 21.99},&#xD;&#xA;  { Date: 1643238000000, Close: 24.99},&#xD;&#xA;  { Date: 1646953200000, Close: 22.99},&#xD;&#xA;  { Date: 1648594800000, Close: 23.99},&#xD;&#xA;  { Date: 1653433200000, Close: 22.99},&#xD;&#xA;  { Date: 1657321200000, Close: 21.49},&#xD;&#xA;  { Date: 1662505200000, Close: 19.99},&#xD;&#xA;  { Date: 1664406000000, Close: 17.99},&#xD;&#xA;  { Date: 1666134000000, Close: 15.99},&#xD;&#xA;  { Date: 1666220400000, Close: 14.69},&#xD;&#xA;  { Date: 1666566000000, Close: 14.39},&#xD;&#xA;  { Date: 1669244400000, Close: 11.99},&#xD;&#xA;  { Date: 1684537200000, Close: 29.99},&#xD;&#xA;  { Date: 1696633200000, Close: 24.99},&#xD;&#xA;  { Date: 1700694000000, Close: 19.99},&#xD;&#xA;  { Date: 1701212400000, Close: 24.99},&#xD;&#xA;  { Date: 1705186800000, Close: 23.49},&#xD;&#xA;  { Date: 1715209200000, Close: 23.99},&#xD;&#xA;  { Date: 1715209200000, Close: 23.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606345200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575932400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>003/132 - Erika&#39;s Clefable</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/003---erikas-clefable/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/003---erikas-clefable/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149012.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 35.99 on 11-09-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 8.49 on 21-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578351600000, Close: 12.99},&#xD;&#xA;  { Date: 1579215600000, Close: 11.49},&#xD;&#xA;  { Date: 1580166000000, Close: 9.99},&#xD;&#xA;  { Date: 1582066800000, Close: 8.79},&#xD;&#xA;  { Date: 1584745200000, Close: 8.49},&#xD;&#xA;  { Date: 1585350000000, Close: 8.99},&#xD;&#xA;  { Date: 1586559600000, Close: 9.99},&#xD;&#xA;  { Date: 1589410800000, Close: 14.99},&#xD;&#xA;  { Date: 1590015600000, Close: 15.99},&#xD;&#xA;  { Date: 1591052400000, Close: 19.99},&#xD;&#xA;  { Date: 1591743600000, Close: 21.99},&#xD;&#xA;  { Date: 1594767600000, Close: 29.99},&#xD;&#xA;  { Date: 1596236400000, Close: 31.99},&#xD;&#xA;  { Date: 1596582000000, Close: 34.99},&#xD;&#xA;  { Date: 1599778800000, Close: 35.99},&#xD;&#xA;  { Date: 1600815600000, Close: 33.99},&#xD;&#xA;  { Date: 1601766000000, Close: 31.99},&#xD;&#xA;  { Date: 1602025200000, Close: 29.99},&#xD;&#xA;  { Date: 1602889200000, Close: 24.99},&#xD;&#xA;  { Date: 1603753200000, Close: 23.49},&#xD;&#xA;  { Date: 1604358000000, Close: 21.99},&#xD;&#xA;  { Date: 1605222000000, Close: 19.99},&#xD;&#xA;  { Date: 1606086000000, Close: 18.49},&#xD;&#xA;  { Date: 1606345200000, Close: 19.99},&#xD;&#xA;  { Date: 1606431600000, Close: 17.99},&#xD;&#xA;  { Date: 1610406000000, Close: 29.49},&#xD;&#xA;  { Date: 1611788400000, Close: 27.99},&#xD;&#xA;  { Date: 1612566000000, Close: 29.49},&#xD;&#xA;  { Date: 1614380400000, Close: 29.99},&#xD;&#xA;  { Date: 1614812400000, Close: 31.99},&#xD;&#xA;  { Date: 1615330800000, Close: 29.99},&#xD;&#xA;  { Date: 1616108400000, Close: 27.99},&#xD;&#xA;  { Date: 1617058800000, Close: 24.99},&#xD;&#xA;  { Date: 1617922800000, Close: 22.99},&#xD;&#xA;  { Date: 1618786800000, Close: 21.49},&#xD;&#xA;  { Date: 1623366000000, Close: 24.99},&#xD;&#xA;  { Date: 1625266800000, Close: 23.49},&#xD;&#xA;  { Date: 1629932400000, Close: 24.99},&#xD;&#xA;  { Date: 1632006000000, Close: 23.49},&#xD;&#xA;  { Date: 1633215600000, Close: 21.99},&#xD;&#xA;  { Date: 1634079600000, Close: 20.49},&#xD;&#xA;  { Date: 1635807600000, Close: 20.99},&#xD;&#xA;  { Date: 1641337200000, Close: 21.99},&#xD;&#xA;  { Date: 1655506800000, Close: 24.99},&#xD;&#xA;  { Date: 1657321200000, Close: 27.99},&#xD;&#xA;  { Date: 1664838000000, Close: 26.49},&#xD;&#xA;  { Date: 1665529200000, Close: 24.99},&#xD;&#xA;  { Date: 1666479600000, Close: 23.49},&#xD;&#xA;  { Date: 1667343600000, Close: 21.99},&#xD;&#xA;  { Date: 1667516400000, Close: 17.99},&#xD;&#xA;  { Date: 1667602800000, Close: 15.69},&#xD;&#xA;  { Date: 1668121200000, Close: 15.19},&#xD;&#xA;  { Date: 1668466800000, Close: 15.29},&#xD;&#xA;  { Date: 1676588400000, Close: 18.99},&#xD;&#xA;  { Date: 1695942000000, Close: 24.99},&#xD;&#xA;  { Date: 1700694000000, Close: 19.99},&#xD;&#xA;  { Date: 1722034800000, Close: 27.99},&#xD;&#xA;  { Date: 1722034800000, Close: 27.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1599778800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584745200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>004/132 - Erika&#39;s Dragonair</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/004---erikas-dragonair/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/004---erikas-dragonair/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149014.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 94.99 on 15-08-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 14.99 on 11-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 14.99},&#xD;&#xA;  { Date: 1579561200000, Close: 15.99},&#xD;&#xA;  { Date: 1580943600000, Close: 16.99},&#xD;&#xA;  { Date: 1582239600000, Close: 17.99},&#xD;&#xA;  { Date: 1584140400000, Close: 19.99},&#xD;&#xA;  { Date: 1585350000000, Close: 18.99},&#xD;&#xA;  { Date: 1585868400000, Close: 19.99},&#xD;&#xA;  { Date: 1586818800000, Close: 21.99},&#xD;&#xA;  { Date: 1588892400000, Close: 29.49},&#xD;&#xA;  { Date: 1591052400000, Close: 34.99},&#xD;&#xA;  { Date: 1593558000000, Close: 59.99},&#xD;&#xA;  { Date: 1595372400000, Close: 79.99},&#xD;&#xA;  { Date: 1596063600000, Close: 84.99},&#xD;&#xA;  { Date: 1596495600000, Close: 89.99},&#xD;&#xA;  { Date: 1597446000000, Close: 94.99},&#xD;&#xA;  { Date: 1598655600000, Close: 89.99},&#xD;&#xA;  { Date: 1600470000000, Close: 84.99},&#xD;&#xA;  { Date: 1601334000000, Close: 79.99},&#xD;&#xA;  { Date: 1603062000000, Close: 74.99},&#xD;&#xA;  { Date: 1604790000000, Close: 70.99},&#xD;&#xA;  { Date: 1605049200000, Close: 69.99},&#xD;&#xA;  { Date: 1606431600000, Close: 59.99},&#xD;&#xA;  { Date: 1606777200000, Close: 69.99},&#xD;&#xA;  { Date: 1606863600000, Close: 49.99},&#xD;&#xA;  { Date: 1606950000000, Close: 44.99},&#xD;&#xA;  { Date: 1607382000000, Close: 69.99},&#xD;&#xA;  { Date: 1608159600000, Close: 64.99},&#xD;&#xA;  { Date: 1609974000000, Close: 59.99},&#xD;&#xA;  { Date: 1611702000000, Close: 49.99},&#xD;&#xA;  { Date: 1612220400000, Close: 44.99},&#xD;&#xA;  { Date: 1615244400000, Close: 69.99},&#xD;&#xA;  { Date: 1616540400000, Close: 65.99},&#xD;&#xA;  { Date: 1616713200000, Close: 59.99},&#xD;&#xA;  { Date: 1618527600000, Close: 55.99},&#xD;&#xA;  { Date: 1621378800000, Close: 59.99},&#xD;&#xA;  { Date: 1623798000000, Close: 74.99},&#xD;&#xA;  { Date: 1626390000000, Close: 70.99},&#xD;&#xA;  { Date: 1628204400000, Close: 66.99},&#xD;&#xA;  { Date: 1630018800000, Close: 62.99},&#xD;&#xA;  { Date: 1632956400000, Close: 64.99},&#xD;&#xA;  { Date: 1634338800000, Close: 60.99},&#xD;&#xA;  { Date: 1636153200000, Close: 56.99},&#xD;&#xA;  { Date: 1645052400000, Close: 59.99},&#xD;&#xA;  { Date: 1648940400000, Close: 55.99},&#xD;&#xA;  { Date: 1653433200000, Close: 54.99},&#xD;&#xA;  { Date: 1657321200000, Close: 49.99},&#xD;&#xA;  { Date: 1684191600000, Close: 54.99},&#xD;&#xA;  { Date: 1685055600000, Close: 51.99},&#xD;&#xA;  { Date: 1695942000000, Close: 54.99},&#xD;&#xA;  { Date: 1700694000000, Close: 44.99},&#xD;&#xA;  { Date: 1703631600000, Close: 54.99},&#xD;&#xA;  { Date: 1708642800000, Close: 59.99},&#xD;&#xA;  { Date: 1708642800000, Close: 59.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1597446000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576018800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>005/132 - Erika&#39;s Vileplume</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/005---erikas-vileplume/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/005---erikas-vileplume/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149033.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 24.99 on 27-10-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 5.79 on 10-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575932400000, Close: 5.79},&#xD;&#xA;  { Date: 1578524400000, Close: 6.99},&#xD;&#xA;  { Date: 1578610800000, Close: 7.39},&#xD;&#xA;  { Date: 1580943600000, Close: 7.79},&#xD;&#xA;  { Date: 1582066800000, Close: 7.49},&#xD;&#xA;  { Date: 1583535600000, Close: 6.79},&#xD;&#xA;  { Date: 1584572400000, Close: 6.19},&#xD;&#xA;  { Date: 1586559600000, Close: 7.99},&#xD;&#xA;  { Date: 1586646000000, Close: 8.99},&#xD;&#xA;  { Date: 1588460400000, Close: 10.99},&#xD;&#xA;  { Date: 1591311600000, Close: 12.99},&#xD;&#xA;  { Date: 1592348400000, Close: 13.49},&#xD;&#xA;  { Date: 1594940400000, Close: 14.99},&#xD;&#xA;  { Date: 1596495600000, Close: 15.99},&#xD;&#xA;  { Date: 1596582000000, Close: 16.99},&#xD;&#xA;  { Date: 1598569200000, Close: 17.99},&#xD;&#xA;  { Date: 1599778800000, Close: 16.49},&#xD;&#xA;  { Date: 1600642800000, Close: 14.99},&#xD;&#xA;  { Date: 1601334000000, Close: 12.99},&#xD;&#xA;  { Date: 1602543600000, Close: 14.99},&#xD;&#xA;  { Date: 1603753200000, Close: 24.99},&#xD;&#xA;  { Date: 1605999600000, Close: 23.49},&#xD;&#xA;  { Date: 1607036400000, Close: 22.99},&#xD;&#xA;  { Date: 1608159600000, Close: 21.99},&#xD;&#xA;  { Date: 1609887600000, Close: 20.99},&#xD;&#xA;  { Date: 1610578800000, Close: 21.49},&#xD;&#xA;  { Date: 1611356400000, Close: 19.99},&#xD;&#xA;  { Date: 1614294000000, Close: 22.99},&#xD;&#xA;  { Date: 1615676400000, Close: 21.49},&#xD;&#xA;  { Date: 1616454000000, Close: 19.99},&#xD;&#xA;  { Date: 1617318000000, Close: 17.99},&#xD;&#xA;  { Date: 1618182000000, Close: 16.49},&#xD;&#xA;  { Date: 1618268400000, Close: 14.99},&#xD;&#xA;  { Date: 1619132400000, Close: 12.99},&#xD;&#xA;  { Date: 1620428400000, Close: 11.49},&#xD;&#xA;  { Date: 1620946800000, Close: 11.99},&#xD;&#xA;  { Date: 1621033200000, Close: 10.99},&#xD;&#xA;  { Date: 1621897200000, Close: 9.99},&#xD;&#xA;  { Date: 1623193200000, Close: 11.99},&#xD;&#xA;  { Date: 1623366000000, Close: 12.99},&#xD;&#xA;  { Date: 1624316400000, Close: 14.99},&#xD;&#xA;  { Date: 1625266800000, Close: 15.99},&#xD;&#xA;  { Date: 1628290800000, Close: 14.49},&#xD;&#xA;  { Date: 1628809200000, Close: 12.99},&#xD;&#xA;  { Date: 1629759600000, Close: 11.49},&#xD;&#xA;  { Date: 1630710000000, Close: 9.99},&#xD;&#xA;  { Date: 1641337200000, Close: 12.99},&#xD;&#xA;  { Date: 1647471600000, Close: 17.99},&#xD;&#xA;  { Date: 1655593200000, Close: 16.49},&#xD;&#xA;  { Date: 1656457200000, Close: 14.99},&#xD;&#xA;  { Date: 1656543600000, Close: 12.89},&#xD;&#xA;  { Date: 1657580400000, Close: 13.99},&#xD;&#xA;  { Date: 1661900400000, Close: 15.99},&#xD;&#xA;  { Date: 1675983600000, Close: 18.39},&#xD;&#xA;  { Date: 1676415600000, Close: 19.39},&#xD;&#xA;  { Date: 1681513200000, Close: 19.99},&#xD;&#xA;  { Date: 1685055600000, Close: 18.49},&#xD;&#xA;  { Date: 1685142000000, Close: 15.99},&#xD;&#xA;  { Date: 1688166000000, Close: 16.99},&#xD;&#xA;  { Date: 1688252400000, Close: 17.29},&#xD;&#xA;  { Date: 1695769200000, Close: 19.99},&#xD;&#xA;  { Date: 1700694000000, Close: 14.99},&#xD;&#xA;  { Date: 1701212400000, Close: 19.99},&#xD;&#xA;  { Date: 1705186800000, Close: 18.49},&#xD;&#xA;  { Date: 1712962800000, Close: 18.99},&#xD;&#xA;  { Date: 1721170800000, Close: 19.99},&#xD;&#xA;  { Date: 1721170800000, Close: 19.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1603753200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575932400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>006/132 - Lt. Surge&#39;s Electabuzz</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/006---lt.-surges-electabuzz/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/006---lt.-surges-electabuzz/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149205.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 39.99 on 18-11-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 7.99 on 06-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 7.99},&#xD;&#xA;  { Date: 1578697200000, Close: 8.49},&#xD;&#xA;  { Date: 1579215600000, Close: 8.99},&#xD;&#xA;  { Date: 1581375600000, Close: 10.99},&#xD;&#xA;  { Date: 1586991600000, Close: 12.99},&#xD;&#xA;  { Date: 1587682800000, Close: 11.99},&#xD;&#xA;  { Date: 1588201200000, Close: 12.99},&#xD;&#xA;  { Date: 1591052400000, Close: 19.99},&#xD;&#xA;  { Date: 1594681200000, Close: 29.99},&#xD;&#xA;  { Date: 1595372400000, Close: 34.99},&#xD;&#xA;  { Date: 1596754800000, Close: 37.99},&#xD;&#xA;  { Date: 1598050800000, Close: 35.99},&#xD;&#xA;  { Date: 1598655600000, Close: 34.99},&#xD;&#xA;  { Date: 1600470000000, Close: 32.99},&#xD;&#xA;  { Date: 1600729200000, Close: 29.99},&#xD;&#xA;  { Date: 1602543600000, Close: 24.99},&#xD;&#xA;  { Date: 1604358000000, Close: 19.99},&#xD;&#xA;  { Date: 1605049200000, Close: 24.99},&#xD;&#xA;  { Date: 1605740400000, Close: 25.99},&#xD;&#xA;  { Date: 1606518000000, Close: 29.99},&#xD;&#xA;  { Date: 1607122800000, Close: 31.99},&#xD;&#xA;  { Date: 1607554800000, Close: 32.99},&#xD;&#xA;  { Date: 1610751600000, Close: 33.99},&#xD;&#xA;  { Date: 1613775600000, Close: 34.99},&#xD;&#xA;  { Date: 1615503600000, Close: 32.99},&#xD;&#xA;  { Date: 1618182000000, Close: 30.99},&#xD;&#xA;  { Date: 1619996400000, Close: 28.99},&#xD;&#xA;  { Date: 1623452400000, Close: 27.49},&#xD;&#xA;  { Date: 1626908400000, Close: 25.99},&#xD;&#xA;  { Date: 1628636400000, Close: 24.49},&#xD;&#xA;  { Date: 1637190000000, Close: 39.99},&#xD;&#xA;  { Date: 1638918000000, Close: 36.99},&#xD;&#xA;  { Date: 1640732400000, Close: 34.99},&#xD;&#xA;  { Date: 1642460400000, Close: 32.99},&#xD;&#xA;  { Date: 1644706800000, Close: 30.99},&#xD;&#xA;  { Date: 1646434800000, Close: 28.99},&#xD;&#xA;  { Date: 1646866800000, Close: 24.99},&#xD;&#xA;  { Date: 1648681200000, Close: 23.49},&#xD;&#xA;  { Date: 1649458800000, Close: 20.99},&#xD;&#xA;  { Date: 1649890800000, Close: 21.99},&#xD;&#xA;  { Date: 1650322800000, Close: 20.99},&#xD;&#xA;  { Date: 1661900400000, Close: 21.99},&#xD;&#xA;  { Date: 1673391600000, Close: 23.99},&#xD;&#xA;  { Date: 1689721200000, Close: 23.49},&#xD;&#xA;  { Date: 1695942000000, Close: 24.19},&#xD;&#xA;  { Date: 1700694000000, Close: 24.79},&#xD;&#xA;  { Date: 1703631600000, Close: 24.19},&#xD;&#xA;  { Date: 1707865200000, Close: 22.89},&#xD;&#xA;  { Date: 1708642800000, Close: 24.99},&#xD;&#xA;  { Date: 1708642800000, Close: 24.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1637190000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575586800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>007/132 - Lt. Surge&#39;s Fearow</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/007---lt.-surges-fearow/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/007---lt.-surges-fearow/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149206.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 44.99 on 13-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 12.99 on 12-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575932400000, Close: 15.99},&#xD;&#xA;  { Date: 1578956400000, Close: 14.49},&#xD;&#xA;  { Date: 1580425200000, Close: 13.99},&#xD;&#xA;  { Date: 1581116400000, Close: 13.49},&#xD;&#xA;  { Date: 1582671600000, Close: 13.99},&#xD;&#xA;  { Date: 1583967600000, Close: 12.99},&#xD;&#xA;  { Date: 1588633200000, Close: 15.99},&#xD;&#xA;  { Date: 1588892400000, Close: 16.49},&#xD;&#xA;  { Date: 1591052400000, Close: 21.99},&#xD;&#xA;  { Date: 1593558000000, Close: 22.99},&#xD;&#xA;  { Date: 1596495600000, Close: 25.99},&#xD;&#xA;  { Date: 1599778800000, Close: 27.99},&#xD;&#xA;  { Date: 1600729200000, Close: 25.99},&#xD;&#xA;  { Date: 1602802800000, Close: 24.99},&#xD;&#xA;  { Date: 1603321200000, Close: 25.99},&#xD;&#xA;  { Date: 1605654000000, Close: 27.99},&#xD;&#xA;  { Date: 1606777200000, Close: 37.99},&#xD;&#xA;  { Date: 1609196400000, Close: 35.99},&#xD;&#xA;  { Date: 1612393200000, Close: 33.99},&#xD;&#xA;  { Date: 1615590000000, Close: 44.99},&#xD;&#xA;  { Date: 1617404400000, Close: 41.99},&#xD;&#xA;  { Date: 1619218800000, Close: 38.99},&#xD;&#xA;  { Date: 1620428400000, Close: 34.99},&#xD;&#xA;  { Date: 1622502000000, Close: 32.99},&#xD;&#xA;  { Date: 1624489200000, Close: 30.99},&#xD;&#xA;  { Date: 1625266800000, Close: 24.99},&#xD;&#xA;  { Date: 1635807600000, Close: 26.99},&#xD;&#xA;  { Date: 1648076400000, Close: 29.99},&#xD;&#xA;  { Date: 1661554800000, Close: 31.99},&#xD;&#xA;  { Date: 1665788400000, Close: 29.99},&#xD;&#xA;  { Date: 1667602800000, Close: 27.99},&#xD;&#xA;  { Date: 1669330800000, Close: 26.49},&#xD;&#xA;  { Date: 1671058800000, Close: 24.99},&#xD;&#xA;  { Date: 1676588400000, Close: 28.29},&#xD;&#xA;  { Date: 1681426800000, Close: 29.99},&#xD;&#xA;  { Date: 1695942000000, Close: 31.99},&#xD;&#xA;  { Date: 1700694000000, Close: 24.99},&#xD;&#xA;  { Date: 1703286000000, Close: 31.99},&#xD;&#xA;  { Date: 1718406000000, Close: 34.99},&#xD;&#xA;  { Date: 1718406000000, Close: 34.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615590000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1583967600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>008/132 - Lt. Surge&#39;s Magneton</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/008---lt.-surges-magneton/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/008---lt.-surges-magneton/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149209.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 29.99 on 28-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.29 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 4.89},&#xD;&#xA;  { Date: 1577401200000, Close: 4.29},&#xD;&#xA;  { Date: 1578610800000, Close: 4.89},&#xD;&#xA;  { Date: 1579561200000, Close: 5.49},&#xD;&#xA;  { Date: 1582239600000, Close: 6.99},&#xD;&#xA;  { Date: 1583535600000, Close: 6.39},&#xD;&#xA;  { Date: 1584572400000, Close: 6.49},&#xD;&#xA;  { Date: 1586559600000, Close: 7.49},&#xD;&#xA;  { Date: 1591052400000, Close: 10.99},&#xD;&#xA;  { Date: 1593730800000, Close: 14.99},&#xD;&#xA;  { Date: 1594767600000, Close: 15.99},&#xD;&#xA;  { Date: 1595286000000, Close: 16.49},&#xD;&#xA;  { Date: 1595545200000, Close: 17.99},&#xD;&#xA;  { Date: 1595890800000, Close: 18.99},&#xD;&#xA;  { Date: 1596495600000, Close: 19.99},&#xD;&#xA;  { Date: 1598569200000, Close: 21.99},&#xD;&#xA;  { Date: 1600297200000, Close: 20.49},&#xD;&#xA;  { Date: 1600815600000, Close: 17.99},&#xD;&#xA;  { Date: 1602025200000, Close: 15.99},&#xD;&#xA;  { Date: 1603148400000, Close: 16.99},&#xD;&#xA;  { Date: 1604098800000, Close: 17.49},&#xD;&#xA;  { Date: 1605049200000, Close: 19.99},&#xD;&#xA;  { Date: 1605654000000, Close: 21.99},&#xD;&#xA;  { Date: 1606345200000, Close: 24.99},&#xD;&#xA;  { Date: 1606518000000, Close: 29.99},&#xD;&#xA;  { Date: 1608246000000, Close: 24.99},&#xD;&#xA;  { Date: 1609455600000, Close: 19.99},&#xD;&#xA;  { Date: 1610578800000, Close: 21.99},&#xD;&#xA;  { Date: 1611961200000, Close: 22.99},&#xD;&#xA;  { Date: 1612306800000, Close: 24.49},&#xD;&#xA;  { Date: 1614985200000, Close: 29.99},&#xD;&#xA;  { Date: 1616194800000, Close: 27.99},&#xD;&#xA;  { Date: 1617058800000, Close: 24.99},&#xD;&#xA;  { Date: 1618268400000, Close: 19.99},&#xD;&#xA;  { Date: 1619478000000, Close: 17.99},&#xD;&#xA;  { Date: 1620687600000, Close: 15.99},&#xD;&#xA;  { Date: 1621897200000, Close: 14.99},&#xD;&#xA;  { Date: 1623106800000, Close: 13.99},&#xD;&#xA;  { Date: 1624316400000, Close: 11.99},&#xD;&#xA;  { Date: 1625698800000, Close: 10.99},&#xD;&#xA;  { Date: 1626994800000, Close: 9.99},&#xD;&#xA;  { Date: 1628895600000, Close: 8.99},&#xD;&#xA;  { Date: 1631919600000, Close: 9.99},&#xD;&#xA;  { Date: 1632870000000, Close: 10.99},&#xD;&#xA;  { Date: 1635807600000, Close: 12.99},&#xD;&#xA;  { Date: 1647385200000, Close: 14.99},&#xD;&#xA;  { Date: 1653519600000, Close: 14.49},&#xD;&#xA;  { Date: 1655506800000, Close: 17.99},&#xD;&#xA;  { Date: 1664578800000, Close: 15.99},&#xD;&#xA;  { Date: 1665788400000, Close: 11.99},&#xD;&#xA;  { Date: 1666998000000, Close: 10.49},&#xD;&#xA;  { Date: 1667516400000, Close: 8.99},&#xD;&#xA;  { Date: 1676674800000, Close: 12.99},&#xD;&#xA;  { Date: 1682550000000, Close: 15.99},&#xD;&#xA;  { Date: 1689721200000, Close: 20.99},&#xD;&#xA;  { Date: 1695769200000, Close: 24.99},&#xD;&#xA;  { Date: 1700694000000, Close: 19.99},&#xD;&#xA;  { Date: 1700866800000, Close: 17.99},&#xD;&#xA;  { Date: 1701212400000, Close: 24.99},&#xD;&#xA;  { Date: 1705186800000, Close: 23.49},&#xD;&#xA;  { Date: 1707606000000, Close: 21.99},&#xD;&#xA;  { Date: 1726182000000, Close: 20.49},&#xD;&#xA;  { Date: 1727478000000, Close: 18.99},&#xD;&#xA;  { Date: 1727478000000, Close: 18.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606518000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>009/132 - Misty&#39;s Seadra</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/009---mistys-seadra/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/009---mistys-seadra/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149280.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 29.99 on 04-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 5.99 on 09-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578524400000, Close: 5.99},&#xD;&#xA;  { Date: 1580857200000, Close: 6.49},&#xD;&#xA;  { Date: 1582239600000, Close: 7.49},&#xD;&#xA;  { Date: 1583967600000, Close: 6.79},&#xD;&#xA;  { Date: 1584745200000, Close: 6.49},&#xD;&#xA;  { Date: 1591052400000, Close: 8.99},&#xD;&#xA;  { Date: 1593730800000, Close: 11.99},&#xD;&#xA;  { Date: 1595890800000, Close: 12.99},&#xD;&#xA;  { Date: 1596754800000, Close: 13.99},&#xD;&#xA;  { Date: 1597446000000, Close: 14.99},&#xD;&#xA;  { Date: 1598396400000, Close: 13.99},&#xD;&#xA;  { Date: 1599001200000, Close: 14.99},&#xD;&#xA;  { Date: 1601679600000, Close: 17.99},&#xD;&#xA;  { Date: 1602716400000, Close: 19.99},&#xD;&#xA;  { Date: 1604098800000, Close: 24.99},&#xD;&#xA;  { Date: 1607382000000, Close: 26.99},&#xD;&#xA;  { Date: 1608850800000, Close: 25.49},&#xD;&#xA;  { Date: 1609196400000, Close: 22.99},&#xD;&#xA;  { Date: 1610578800000, Close: 23.99},&#xD;&#xA;  { Date: 1612825200000, Close: 24.99},&#xD;&#xA;  { Date: 1614812400000, Close: 29.99},&#xD;&#xA;  { Date: 1616540400000, Close: 24.99},&#xD;&#xA;  { Date: 1618268400000, Close: 19.99},&#xD;&#xA;  { Date: 1619996400000, Close: 18.49},&#xD;&#xA;  { Date: 1620082800000, Close: 16.99},&#xD;&#xA;  { Date: 1621810800000, Close: 15.99},&#xD;&#xA;  { Date: 1621897200000, Close: 14.99},&#xD;&#xA;  { Date: 1623625200000, Close: 13.99},&#xD;&#xA;  { Date: 1623711600000, Close: 12.99},&#xD;&#xA;  { Date: 1625439600000, Close: 11.49},&#xD;&#xA;  { Date: 1625785200000, Close: 10.99},&#xD;&#xA;  { Date: 1626303600000, Close: 12.99},&#xD;&#xA;  { Date: 1627081200000, Close: 11.99},&#xD;&#xA;  { Date: 1631142000000, Close: 12.99},&#xD;&#xA;  { Date: 1631919600000, Close: 13.99},&#xD;&#xA;  { Date: 1635289200000, Close: 19.99},&#xD;&#xA;  { Date: 1648594800000, Close: 18.49},&#xD;&#xA;  { Date: 1665788400000, Close: 15.99},&#xD;&#xA;  { Date: 1667602800000, Close: 14.49},&#xD;&#xA;  { Date: 1667689200000, Close: 12.59},&#xD;&#xA;  { Date: 1668121200000, Close: 12.49},&#xD;&#xA;  { Date: 1669158000000, Close: 12.39},&#xD;&#xA;  { Date: 1669503600000, Close: 12.09},&#xD;&#xA;  { Date: 1669849200000, Close: 11.89},&#xD;&#xA;  { Date: 1670540400000, Close: 10.99},&#xD;&#xA;  { Date: 1676674800000, Close: 13.99},&#xD;&#xA;  { Date: 1695942000000, Close: 20.59},&#xD;&#xA;  { Date: 1697583600000, Close: 19.99},&#xD;&#xA;  { Date: 1700780400000, Close: 21.49},&#xD;&#xA;  { Date: 1701126000000, Close: 20.89},&#xD;&#xA;  { Date: 1701990000000, Close: 23.39},&#xD;&#xA;  { Date: 1703631600000, Close: 23.99},&#xD;&#xA;  { Date: 1703804400000, Close: 21.59},&#xD;&#xA;  { Date: 1704582000000, Close: 20.79},&#xD;&#xA;  { Date: 1704754800000, Close: 19.99},&#xD;&#xA;  { Date: 1709938800000, Close: 20.69},&#xD;&#xA;  { Date: 1725663600000, Close: 20.99},&#xD;&#xA;  { Date: 1725663600000, Close: 20.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614812400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578524400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>010/132 - Misty&#39;s Tentacruel</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/010---mistys-tentacruel/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/010---mistys-tentacruel/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149289.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 24.99 on 13-07-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.19 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575673200000, Close: 4.19},&#xD;&#xA;  { Date: 1578610800000, Close: 6.99},&#xD;&#xA;  { Date: 1579042800000, Close: 7.99},&#xD;&#xA;  { Date: 1582326000000, Close: 7.39},&#xD;&#xA;  { Date: 1583276400000, Close: 6.79},&#xD;&#xA;  { Date: 1584658800000, Close: 5.49},&#xD;&#xA;  { Date: 1585263600000, Close: 5.99},&#xD;&#xA;  { Date: 1586905200000, Close: 6.99},&#xD;&#xA;  { Date: 1588633200000, Close: 9.49},&#xD;&#xA;  { Date: 1588892400000, Close: 9.99},&#xD;&#xA;  { Date: 1590793200000, Close: 10.99},&#xD;&#xA;  { Date: 1591052400000, Close: 11.99},&#xD;&#xA;  { Date: 1593471600000, Close: 13.99},&#xD;&#xA;  { Date: 1594940400000, Close: 17.99},&#xD;&#xA;  { Date: 1596236400000, Close: 16.99},&#xD;&#xA;  { Date: 1597100400000, Close: 17.99},&#xD;&#xA;  { Date: 1597618800000, Close: 16.99},&#xD;&#xA;  { Date: 1598050800000, Close: 14.99},&#xD;&#xA;  { Date: 1598655600000, Close: 15.99},&#xD;&#xA;  { Date: 1598742000000, Close: 14.99},&#xD;&#xA;  { Date: 1599606000000, Close: 13.99},&#xD;&#xA;  { Date: 1600470000000, Close: 11.99},&#xD;&#xA;  { Date: 1601334000000, Close: 9.99},&#xD;&#xA;  { Date: 1602198000000, Close: 8.99},&#xD;&#xA;  { Date: 1604444400000, Close: 19.99},&#xD;&#xA;  { Date: 1605135600000, Close: 21.99},&#xD;&#xA;  { Date: 1605740400000, Close: 19.99},&#xD;&#xA;  { Date: 1606863600000, Close: 21.99},&#xD;&#xA;  { Date: 1607814000000, Close: 20.49},&#xD;&#xA;  { Date: 1608159600000, Close: 17.99},&#xD;&#xA;  { Date: 1609110000000, Close: 16.49},&#xD;&#xA;  { Date: 1609974000000, Close: 16.99},&#xD;&#xA;  { Date: 1610319600000, Close: 15.99},&#xD;&#xA;  { Date: 1611961200000, Close: 17.99},&#xD;&#xA;  { Date: 1614121200000, Close: 22.99},&#xD;&#xA;  { Date: 1614985200000, Close: 21.49},&#xD;&#xA;  { Date: 1615330800000, Close: 19.99},&#xD;&#xA;  { Date: 1616194800000, Close: 18.99},&#xD;&#xA;  { Date: 1617058800000, Close: 16.99},&#xD;&#xA;  { Date: 1618873200000, Close: 15.99},&#xD;&#xA;  { Date: 1619737200000, Close: 12.99},&#xD;&#xA;  { Date: 1620687600000, Close: 9.99},&#xD;&#xA;  { Date: 1621292400000, Close: 12.99},&#xD;&#xA;  { Date: 1621983600000, Close: 14.99},&#xD;&#xA;  { Date: 1624921200000, Close: 13.49},&#xD;&#xA;  { Date: 1625266800000, Close: 11.99},&#xD;&#xA;  { Date: 1626130800000, Close: 12.49},&#xD;&#xA;  { Date: 1626994800000, Close: 11.99},&#xD;&#xA;  { Date: 1628031600000, Close: 10.49},&#xD;&#xA;  { Date: 1629932400000, Close: 12.99},&#xD;&#xA;  { Date: 1632524400000, Close: 13.99},&#xD;&#xA;  { Date: 1633993200000, Close: 14.99},&#xD;&#xA;  { Date: 1638831600000, Close: 15.99},&#xD;&#xA;  { Date: 1639695600000, Close: 16.99},&#xD;&#xA;  { Date: 1643238000000, Close: 17.99},&#xD;&#xA;  { Date: 1647385200000, Close: 19.99},&#xD;&#xA;  { Date: 1652742000000, Close: 21.99},&#xD;&#xA;  { Date: 1664578800000, Close: 19.99},&#xD;&#xA;  { Date: 1667170800000, Close: 18.49},&#xD;&#xA;  { Date: 1667516400000, Close: 15.99},&#xD;&#xA;  { Date: 1669244400000, Close: 12.99},&#xD;&#xA;  { Date: 1684278000000, Close: 19.99},&#xD;&#xA;  { Date: 1689202800000, Close: 24.99},&#xD;&#xA;  { Date: 1707778800000, Close: 19.99},&#xD;&#xA;  { Date: 1711062000000, Close: 17.99},&#xD;&#xA;  { Date: 1727391600000, Close: 16.99},&#xD;&#xA;  { Date: 1727391600000, Close: 16.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1689202800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575673200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>011/132 - Rocket&#39;s Hitmonchan</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/011---rockets-hitmonchan/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/011---rockets-hitmonchan/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149395.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 41.99 on 15-08-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 12.99 on 06-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 12.99},&#xD;&#xA;  { Date: 1581116400000, Close: 13.99},&#xD;&#xA;  { Date: 1590706800000, Close: 17.99},&#xD;&#xA;  { Date: 1591052400000, Close: 19.99},&#xD;&#xA;  { Date: 1592089200000, Close: 26.99},&#xD;&#xA;  { Date: 1595890800000, Close: 34.99},&#xD;&#xA;  { Date: 1596495600000, Close: 39.99},&#xD;&#xA;  { Date: 1597446000000, Close: 41.99},&#xD;&#xA;  { Date: 1598655600000, Close: 39.99},&#xD;&#xA;  { Date: 1600470000000, Close: 36.99},&#xD;&#xA;  { Date: 1600729200000, Close: 31.99},&#xD;&#xA;  { Date: 1602457200000, Close: 29.99},&#xD;&#xA;  { Date: 1602543600000, Close: 24.99},&#xD;&#xA;  { Date: 1603234800000, Close: 29.99},&#xD;&#xA;  { Date: 1604444400000, Close: 34.99},&#xD;&#xA;  { Date: 1605135600000, Close: 39.99},&#xD;&#xA;  { Date: 1607122800000, Close: 41.99},&#xD;&#xA;  { Date: 1608937200000, Close: 38.99},&#xD;&#xA;  { Date: 1609974000000, Close: 39.99},&#xD;&#xA;  { Date: 1612911600000, Close: 36.99},&#xD;&#xA;  { Date: 1613602800000, Close: 37.99},&#xD;&#xA;  { Date: 1615244400000, Close: 38.49},&#xD;&#xA;  { Date: 1618009200000, Close: 38.89},&#xD;&#xA;  { Date: 1621378800000, Close: 35.99},&#xD;&#xA;  { Date: 1623106800000, Close: 33.99},&#xD;&#xA;  { Date: 1628722800000, Close: 34.99},&#xD;&#xA;  { Date: 1631574000000, Close: 37.99},&#xD;&#xA;  { Date: 1635375600000, Close: 39.99},&#xD;&#xA;  { Date: 1646866800000, Close: 34.99},&#xD;&#xA;  { Date: 1648681200000, Close: 32.99},&#xD;&#xA;  { Date: 1652742000000, Close: 34.99},&#xD;&#xA;  { Date: 1655506800000, Close: 37.99},&#xD;&#xA;  { Date: 1662505200000, Close: 36.99},&#xD;&#xA;  { Date: 1664924400000, Close: 34.99},&#xD;&#xA;  { Date: 1665010800000, Close: 29.99},&#xD;&#xA;  { Date: 1666738800000, Close: 27.99},&#xD;&#xA;  { Date: 1667516400000, Close: 21.99},&#xD;&#xA;  { Date: 1669244400000, Close: 18.99},&#xD;&#xA;  { Date: 1680822000000, Close: 25.59},&#xD;&#xA;  { Date: 1695942000000, Close: 34.99},&#xD;&#xA;  { Date: 1700694000000, Close: 29.99},&#xD;&#xA;  { Date: 1700866800000, Close: 24.99},&#xD;&#xA;  { Date: 1701212400000, Close: 34.99},&#xD;&#xA;  { Date: 1701212400000, Close: 34.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1597446000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575586800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>012/132 - Rocket&#39;s Moltres</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/012---rockets-moltres/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/012---rockets-moltres/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149398.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 64.99 on 04-08-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 16.99 on 02-04-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 21.99},&#xD;&#xA;  { Date: 1576796400000, Close: 19.99},&#xD;&#xA;  { Date: 1579129200000, Close: 18.49},&#xD;&#xA;  { Date: 1579215600000, Close: 17.99},&#xD;&#xA;  { Date: 1581030000000, Close: 19.49},&#xD;&#xA;  { Date: 1584658800000, Close: 17.99},&#xD;&#xA;  { Date: 1585782000000, Close: 16.99},&#xD;&#xA;  { Date: 1588892400000, Close: 21.99},&#xD;&#xA;  { Date: 1590706800000, Close: 25.99},&#xD;&#xA;  { Date: 1591052400000, Close: 27.99},&#xD;&#xA;  { Date: 1594940400000, Close: 54.99},&#xD;&#xA;  { Date: 1595372400000, Close: 59.99},&#xD;&#xA;  { Date: 1596495600000, Close: 64.99},&#xD;&#xA;  { Date: 1598655600000, Close: 59.99},&#xD;&#xA;  { Date: 1600729200000, Close: 57.99},&#xD;&#xA;  { Date: 1602543600000, Close: 64.99},&#xD;&#xA;  { Date: 1605135600000, Close: 60.99},&#xD;&#xA;  { Date: 1607382000000, Close: 61.99},&#xD;&#xA;  { Date: 1608764400000, Close: 57.99},&#xD;&#xA;  { Date: 1609974000000, Close: 54.99},&#xD;&#xA;  { Date: 1611183600000, Close: 51.99},&#xD;&#xA;  { Date: 1612566000000, Close: 54.99},&#xD;&#xA;  { Date: 1616108400000, Close: 64.99},&#xD;&#xA;  { Date: 1618009200000, Close: 60.99},&#xD;&#xA;  { Date: 1620255600000, Close: 56.99},&#xD;&#xA;  { Date: 1624143600000, Close: 53.99},&#xD;&#xA;  { Date: 1625698800000, Close: 49.99},&#xD;&#xA;  { Date: 1627340400000, Close: 52.99},&#xD;&#xA;  { Date: 1635289200000, Close: 59.99},&#xD;&#xA;  { Date: 1646089200000, Close: 55.99},&#xD;&#xA;  { Date: 1647039600000, Close: 52.99},&#xD;&#xA;  { Date: 1648335600000, Close: 49.99},&#xD;&#xA;  { Date: 1665788400000, Close: 46.99},&#xD;&#xA;  { Date: 1682550000000, Close: 49.99},&#xD;&#xA;  { Date: 1695942000000, Close: 54.99},&#xD;&#xA;  { Date: 1696028400000, Close: 49.99},&#xD;&#xA;  { Date: 1697324400000, Close: 54.99},&#xD;&#xA;  { Date: 1700694000000, Close: 44.99},&#xD;&#xA;  { Date: 1701212400000, Close: 54.99},&#xD;&#xA;  { Date: 1701212400000, Close: 54.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1596495600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585782000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>013/132 - Rocket&#39;s Scyther</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/013---rockets-scyther/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/013---rockets-scyther/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149399.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 69.99 on 04-08-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 15.99 on 11-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 15.99},&#xD;&#xA;  { Date: 1578610800000, Close: 19.99},&#xD;&#xA;  { Date: 1580338800000, Close: 20.99},&#xD;&#xA;  { Date: 1581030000000, Close: 21.99},&#xD;&#xA;  { Date: 1585263600000, Close: 23.99},&#xD;&#xA;  { Date: 1585954800000, Close: 24.99},&#xD;&#xA;  { Date: 1589670000000, Close: 39.99},&#xD;&#xA;  { Date: 1591052400000, Close: 54.99},&#xD;&#xA;  { Date: 1595372400000, Close: 59.99},&#xD;&#xA;  { Date: 1596063600000, Close: 64.99},&#xD;&#xA;  { Date: 1596495600000, Close: 69.99},&#xD;&#xA;  { Date: 1599778800000, Close: 65.99},&#xD;&#xA;  { Date: 1600642800000, Close: 61.99},&#xD;&#xA;  { Date: 1600729200000, Close: 59.99},&#xD;&#xA;  { Date: 1600815600000, Close: 55.99},&#xD;&#xA;  { Date: 1601593200000, Close: 49.99},&#xD;&#xA;  { Date: 1602543600000, Close: 44.99},&#xD;&#xA;  { Date: 1603839600000, Close: 46.99},&#xD;&#xA;  { Date: 1604358000000, Close: 49.99},&#xD;&#xA;  { Date: 1606777200000, Close: 59.99},&#xD;&#xA;  { Date: 1607986800000, Close: 64.99},&#xD;&#xA;  { Date: 1609110000000, Close: 60.99},&#xD;&#xA;  { Date: 1610060400000, Close: 56.99},&#xD;&#xA;  { Date: 1611010800000, Close: 53.99},&#xD;&#xA;  { Date: 1611874800000, Close: 50.99},&#xD;&#xA;  { Date: 1614726000000, Close: 54.99},&#xD;&#xA;  { Date: 1615935600000, Close: 55.99},&#xD;&#xA;  { Date: 1617836400000, Close: 52.99},&#xD;&#xA;  { Date: 1618786800000, Close: 49.99},&#xD;&#xA;  { Date: 1619737200000, Close: 46.99},&#xD;&#xA;  { Date: 1620687600000, Close: 43.99},&#xD;&#xA;  { Date: 1621292400000, Close: 49.99},&#xD;&#xA;  { Date: 1623366000000, Close: 54.99},&#xD;&#xA;  { Date: 1624662000000, Close: 59.99},&#xD;&#xA;  { Date: 1624921200000, Close: 69.99},&#xD;&#xA;  { Date: 1626994800000, Close: 65.99},&#xD;&#xA;  { Date: 1627945200000, Close: 61.99},&#xD;&#xA;  { Date: 1628895600000, Close: 57.99},&#xD;&#xA;  { Date: 1629846000000, Close: 54.99},&#xD;&#xA;  { Date: 1636758000000, Close: 59.99},&#xD;&#xA;  { Date: 1657321200000, Close: 61.99},&#xD;&#xA;  { Date: 1666825200000, Close: 57.99},&#xD;&#xA;  { Date: 1688166000000, Close: 54.99},&#xD;&#xA;  { Date: 1691103600000, Close: 51.99},&#xD;&#xA;  { Date: 1695942000000, Close: 54.99},&#xD;&#xA;  { Date: 1696028400000, Close: 49.99},&#xD;&#xA;  { Date: 1706914800000, Close: 51.99},&#xD;&#xA;  { Date: 1706914800000, Close: 51.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1596495600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576018800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>014/132 - Sabrina&#39;s Gengar</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/014---sabrinas-gengar/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/014---sabrinas-gengar/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149418.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 139.99 on 21-08-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 18.99 on 21-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 19.99},&#xD;&#xA;  { Date: 1576882800000, Close: 18.99},&#xD;&#xA;  { Date: 1578956400000, Close: 19.49},&#xD;&#xA;  { Date: 1579906800000, Close: 19.89},&#xD;&#xA;  { Date: 1581116400000, Close: 19.99},&#xD;&#xA;  { Date: 1583276400000, Close: 21.99},&#xD;&#xA;  { Date: 1583535600000, Close: 23.99},&#xD;&#xA;  { Date: 1584745200000, Close: 22.99},&#xD;&#xA;  { Date: 1588719600000, Close: 27.99},&#xD;&#xA;  { Date: 1588892400000, Close: 29.99},&#xD;&#xA;  { Date: 1591052400000, Close: 31.99},&#xD;&#xA;  { Date: 1594767600000, Close: 64.99},&#xD;&#xA;  { Date: 1595372400000, Close: 69.99},&#xD;&#xA;  { Date: 1596495600000, Close: 74.99},&#xD;&#xA;  { Date: 1599778800000, Close: 84.99},&#xD;&#xA;  { Date: 1600210800000, Close: 89.99},&#xD;&#xA;  { Date: 1600729200000, Close: 94.99},&#xD;&#xA;  { Date: 1602111600000, Close: 89.99},&#xD;&#xA;  { Date: 1603321200000, Close: 99.99},&#xD;&#xA;  { Date: 1606172400000, Close: 109.99},&#xD;&#xA;  { Date: 1608246000000, Close: 99.99},&#xD;&#xA;  { Date: 1609974000000, Close: 93.99},&#xD;&#xA;  { Date: 1614812400000, Close: 119.99},&#xD;&#xA;  { Date: 1616886000000, Close: 112.99},&#xD;&#xA;  { Date: 1618873200000, Close: 106.99},&#xD;&#xA;  { Date: 1620082800000, Close: 99.99},&#xD;&#xA;  { Date: 1621810800000, Close: 93.99},&#xD;&#xA;  { Date: 1623625200000, Close: 88.99},&#xD;&#xA;  { Date: 1625612400000, Close: 74.99},&#xD;&#xA;  { Date: 1627599600000, Close: 70.99},&#xD;&#xA;  { Date: 1631574000000, Close: 74.99},&#xD;&#xA;  { Date: 1634166000000, Close: 79.99},&#xD;&#xA;  { Date: 1655506800000, Close: 99.99},&#xD;&#xA;  { Date: 1665356400000, Close: 93.99},&#xD;&#xA;  { Date: 1684191600000, Close: 109.99},&#xD;&#xA;  { Date: 1689721200000, Close: 124.99},&#xD;&#xA;  { Date: 1696028400000, Close: 129.99},&#xD;&#xA;  { Date: 1724194800000, Close: 139.99},&#xD;&#xA;  { Date: 1724194800000, Close: 139.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1724194800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576882800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>015/132 - Brock</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/015---brock/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/015---brock/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148872.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 49.99 on 14-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 8.89 on 10-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578610800000, Close: 8.89},&#xD;&#xA;  { Date: 1580943600000, Close: 10.99},&#xD;&#xA;  { Date: 1583276400000, Close: 11.99},&#xD;&#xA;  { Date: 1583881200000, Close: 12.99},&#xD;&#xA;  { Date: 1591052400000, Close: 22.99},&#xD;&#xA;  { Date: 1594681200000, Close: 24.99},&#xD;&#xA;  { Date: 1596063600000, Close: 27.99},&#xD;&#xA;  { Date: 1597446000000, Close: 29.99},&#xD;&#xA;  { Date: 1598655600000, Close: 28.99},&#xD;&#xA;  { Date: 1599606000000, Close: 25.99},&#xD;&#xA;  { Date: 1600470000000, Close: 23.99},&#xD;&#xA;  { Date: 1601334000000, Close: 19.99},&#xD;&#xA;  { Date: 1602198000000, Close: 17.99},&#xD;&#xA;  { Date: 1603148400000, Close: 19.99},&#xD;&#xA;  { Date: 1606172400000, Close: 29.99},&#xD;&#xA;  { Date: 1606777200000, Close: 34.99},&#xD;&#xA;  { Date: 1607986800000, Close: 39.99},&#xD;&#xA;  { Date: 1614985200000, Close: 44.99},&#xD;&#xA;  { Date: 1618354800000, Close: 49.99},&#xD;&#xA;  { Date: 1620774000000, Close: 46.99},&#xD;&#xA;  { Date: 1621724400000, Close: 43.99},&#xD;&#xA;  { Date: 1622674800000, Close: 40.99},&#xD;&#xA;  { Date: 1622761200000, Close: 37.99},&#xD;&#xA;  { Date: 1623625200000, Close: 35.99},&#xD;&#xA;  { Date: 1623884400000, Close: 34.99},&#xD;&#xA;  { Date: 1624748400000, Close: 32.99},&#xD;&#xA;  { Date: 1625698800000, Close: 30.99},&#xD;&#xA;  { Date: 1626649200000, Close: 28.99},&#xD;&#xA;  { Date: 1627599600000, Close: 27.49},&#xD;&#xA;  { Date: 1631314800000, Close: 27.99},&#xD;&#xA;  { Date: 1635289200000, Close: 26.49},&#xD;&#xA;  { Date: 1636239600000, Close: 24.99},&#xD;&#xA;  { Date: 1637103600000, Close: 23.49},&#xD;&#xA;  { Date: 1661986800000, Close: 29.99},&#xD;&#xA;  { Date: 1664838000000, Close: 27.99},&#xD;&#xA;  { Date: 1664924400000, Close: 24.79},&#xD;&#xA;  { Date: 1665270000000, Close: 24.69},&#xD;&#xA;  { Date: 1665529200000, Close: 21.99},&#xD;&#xA;  { Date: 1666393200000, Close: 20.49},&#xD;&#xA;  { Date: 1667343600000, Close: 18.99},&#xD;&#xA;  { Date: 1675983600000, Close: 25.99},&#xD;&#xA;  { Date: 1676242800000, Close: 28.99},&#xD;&#xA;  { Date: 1684278000000, Close: 29.99},&#xD;&#xA;  { Date: 1684623600000, Close: 27.59},&#xD;&#xA;  { Date: 1685746800000, Close: 26.99},&#xD;&#xA;  { Date: 1686956400000, Close: 28.39},&#xD;&#xA;  { Date: 1687302000000, Close: 28.69},&#xD;&#xA;  { Date: 1687734000000, Close: 29.09},&#xD;&#xA;  { Date: 1688166000000, Close: 29.99},&#xD;&#xA;  { Date: 1688511600000, Close: 29.09},&#xD;&#xA;  { Date: 1689807600000, Close: 28.99},&#xD;&#xA;  { Date: 1690239600000, Close: 29.09},&#xD;&#xA;  { Date: 1695942000000, Close: 29.99},&#xD;&#xA;  { Date: 1700694000000, Close: 19.99},&#xD;&#xA;  { Date: 1702594800000, Close: 29.99},&#xD;&#xA;  { Date: 1725404400000, Close: 31.99},&#xD;&#xA;  { Date: 1725404400000, Close: 31.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618354800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578610800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>016/132 - Erika</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/016---erika/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/016---erika/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149005.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 49.99 on 21-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 8.79 on 11-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 9.99},&#xD;&#xA;  { Date: 1578697200000, Close: 8.79},&#xD;&#xA;  { Date: 1579734000000, Close: 9.99},&#xD;&#xA;  { Date: 1580943600000, Close: 10.99},&#xD;&#xA;  { Date: 1585263600000, Close: 12.99},&#xD;&#xA;  { Date: 1586559600000, Close: 13.99},&#xD;&#xA;  { Date: 1587769200000, Close: 12.99},&#xD;&#xA;  { Date: 1589497200000, Close: 14.99},&#xD;&#xA;  { Date: 1591311600000, Close: 15.99},&#xD;&#xA;  { Date: 1596495600000, Close: 20.99},&#xD;&#xA;  { Date: 1597446000000, Close: 21.99},&#xD;&#xA;  { Date: 1598310000000, Close: 22.99},&#xD;&#xA;  { Date: 1599174000000, Close: 23.99},&#xD;&#xA;  { Date: 1600902000000, Close: 22.49},&#xD;&#xA;  { Date: 1601852400000, Close: 20.99},&#xD;&#xA;  { Date: 1602716400000, Close: 19.99},&#xD;&#xA;  { Date: 1603666800000, Close: 18.49},&#xD;&#xA;  { Date: 1604444400000, Close: 18.99},&#xD;&#xA;  { Date: 1607036400000, Close: 23.99},&#xD;&#xA;  { Date: 1607382000000, Close: 24.99},&#xD;&#xA;  { Date: 1608332400000, Close: 23.49},&#xD;&#xA;  { Date: 1610406000000, Close: 25.99},&#xD;&#xA;  { Date: 1612566000000, Close: 29.99},&#xD;&#xA;  { Date: 1614985200000, Close: 31.99},&#xD;&#xA;  { Date: 1615590000000, Close: 39.99},&#xD;&#xA;  { Date: 1618009200000, Close: 44.99},&#xD;&#xA;  { Date: 1618959600000, Close: 49.99},&#xD;&#xA;  { Date: 1621119600000, Close: 46.99},&#xD;&#xA;  { Date: 1622070000000, Close: 43.99},&#xD;&#xA;  { Date: 1623020400000, Close: 40.99},&#xD;&#xA;  { Date: 1624402800000, Close: 37.99},&#xD;&#xA;  { Date: 1625612400000, Close: 34.99},&#xD;&#xA;  { Date: 1626476400000, Close: 32.99},&#xD;&#xA;  { Date: 1627426800000, Close: 30.99},&#xD;&#xA;  { Date: 1636498800000, Close: 31.99},&#xD;&#xA;  { Date: 1637362800000, Close: 29.99},&#xD;&#xA;  { Date: 1638313200000, Close: 27.99},&#xD;&#xA;  { Date: 1639177200000, Close: 26.49},&#xD;&#xA;  { Date: 1661900400000, Close: 29.99},&#xD;&#xA;  { Date: 1665788400000, Close: 24.99},&#xD;&#xA;  { Date: 1665874800000, Close: 22.29},&#xD;&#xA;  { Date: 1666652400000, Close: 22.39},&#xD;&#xA;  { Date: 1668121200000, Close: 22.49},&#xD;&#xA;  { Date: 1671231600000, Close: 22.29},&#xD;&#xA;  { Date: 1671750000000, Close: 22.39},&#xD;&#xA;  { Date: 1672354800000, Close: 22.59},&#xD;&#xA;  { Date: 1672700400000, Close: 22.79},&#xD;&#xA;  { Date: 1675983600000, Close: 22.59},&#xD;&#xA;  { Date: 1684191600000, Close: 24.19},&#xD;&#xA;  { Date: 1684364400000, Close: 24.29},&#xD;&#xA;  { Date: 1684796400000, Close: 24.49},&#xD;&#xA;  { Date: 1685746800000, Close: 26.99},&#xD;&#xA;  { Date: 1691276400000, Close: 29.99},&#xD;&#xA;  { Date: 1692572400000, Close: 25.69},&#xD;&#xA;  { Date: 1695942000000, Close: 26.99},&#xD;&#xA;  { Date: 1695942000000, Close: 26.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618959600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578697200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>017/132 - Lt. Surge</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/017---lt.-surge/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/017---lt.-surge/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149201.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 39.99 on 12-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 9.99 on 10-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578610800000, Close: 9.99},&#xD;&#xA;  { Date: 1580943600000, Close: 11.99},&#xD;&#xA;  { Date: 1582239600000, Close: 12.99},&#xD;&#xA;  { Date: 1585263600000, Close: 13.99},&#xD;&#xA;  { Date: 1585782000000, Close: 12.99},&#xD;&#xA;  { Date: 1587078000000, Close: 11.99},&#xD;&#xA;  { Date: 1587596400000, Close: 12.49},&#xD;&#xA;  { Date: 1591052400000, Close: 13.99},&#xD;&#xA;  { Date: 1594940400000, Close: 19.99},&#xD;&#xA;  { Date: 1595977200000, Close: 20.99},&#xD;&#xA;  { Date: 1598655600000, Close: 21.99},&#xD;&#xA;  { Date: 1599346800000, Close: 20.49},&#xD;&#xA;  { Date: 1600815600000, Close: 20.99},&#xD;&#xA;  { Date: 1602630000000, Close: 22.99},&#xD;&#xA;  { Date: 1605567600000, Close: 24.99},&#xD;&#xA;  { Date: 1606863600000, Close: 29.99},&#xD;&#xA;  { Date: 1607986800000, Close: 31.99},&#xD;&#xA;  { Date: 1612220400000, Close: 33.99},&#xD;&#xA;  { Date: 1614121200000, Close: 35.99},&#xD;&#xA;  { Date: 1614985200000, Close: 37.99},&#xD;&#xA;  { Date: 1620774000000, Close: 39.99},&#xD;&#xA;  { Date: 1625180400000, Close: 36.99},&#xD;&#xA;  { Date: 1626994800000, Close: 34.99},&#xD;&#xA;  { Date: 1630450800000, Close: 32.99},&#xD;&#xA;  { Date: 1632178800000, Close: 30.99},&#xD;&#xA;  { Date: 1633993200000, Close: 28.99},&#xD;&#xA;  { Date: 1635807600000, Close: 27.49},&#xD;&#xA;  { Date: 1637017200000, Close: 24.99},&#xD;&#xA;  { Date: 1638831600000, Close: 23.49},&#xD;&#xA;  { Date: 1640559600000, Close: 21.99},&#xD;&#xA;  { Date: 1642374000000, Close: 20.49},&#xD;&#xA;  { Date: 1642546800000, Close: 17.99},&#xD;&#xA;  { Date: 1645657200000, Close: 21.99},&#xD;&#xA;  { Date: 1645916400000, Close: 21.89},&#xD;&#xA;  { Date: 1646866800000, Close: 22.29},&#xD;&#xA;  { Date: 1647990000000, Close: 22.39},&#xD;&#xA;  { Date: 1654642800000, Close: 31.99},&#xD;&#xA;  { Date: 1656716400000, Close: 29.99},&#xD;&#xA;  { Date: 1665874800000, Close: 27.99},&#xD;&#xA;  { Date: 1665961200000, Close: 24.29},&#xD;&#xA;  { Date: 1666306800000, Close: 24.19},&#xD;&#xA;  { Date: 1667170800000, Close: 23.89},&#xD;&#xA;  { Date: 1667516400000, Close: 23.59},&#xD;&#xA;  { Date: 1667862000000, Close: 23.29},&#xD;&#xA;  { Date: 1668639600000, Close: 22.89},&#xD;&#xA;  { Date: 1669071600000, Close: 21.99},&#xD;&#xA;  { Date: 1669417200000, Close: 22.39},&#xD;&#xA;  { Date: 1669676400000, Close: 22.99},&#xD;&#xA;  { Date: 1682377200000, Close: 24.99},&#xD;&#xA;  { Date: 1684278000000, Close: 25.99},&#xD;&#xA;  { Date: 1684710000000, Close: 24.29},&#xD;&#xA;  { Date: 1685314800000, Close: 23.99},&#xD;&#xA;  { Date: 1688079600000, Close: 24.09},&#xD;&#xA;  { Date: 1688166000000, Close: 24.99},&#xD;&#xA;  { Date: 1688511600000, Close: 24.09},&#xD;&#xA;  { Date: 1689289200000, Close: 23.99},&#xD;&#xA;  { Date: 1690412400000, Close: 23.79},&#xD;&#xA;  { Date: 1690585200000, Close: 22.99},&#xD;&#xA;  { Date: 1690930800000, Close: 23.89},&#xD;&#xA;  { Date: 1692745200000, Close: 22.49},&#xD;&#xA;  { Date: 1693782000000, Close: 22.39},&#xD;&#xA;  { Date: 1694214000000, Close: 21.79},&#xD;&#xA;  { Date: 1694559600000, Close: 21.69},&#xD;&#xA;  { Date: 1695250800000, Close: 21.09},&#xD;&#xA;  { Date: 1697583600000, Close: 19.99},&#xD;&#xA;  { Date: 1699570800000, Close: 18.49},&#xD;&#xA;  { Date: 1700694000000, Close: 14.99},&#xD;&#xA;  { Date: 1701212400000, Close: 18.49},&#xD;&#xA;  { Date: 1701385200000, Close: 16.69},&#xD;&#xA;  { Date: 1703718000000, Close: 16.59},&#xD;&#xA;  { Date: 1704150000000, Close: 16.49},&#xD;&#xA;  { Date: 1704495600000, Close: 15.99},&#xD;&#xA;  { Date: 1704927600000, Close: 16.59},&#xD;&#xA;  { Date: 1706050800000, Close: 15.99},&#xD;&#xA;  { Date: 1706569200000, Close: 16.39},&#xD;&#xA;  { Date: 1707001200000, Close: 16.89},&#xD;&#xA;  { Date: 1707433200000, Close: 16.99},&#xD;&#xA;  { Date: 1707865200000, Close: 17.19},&#xD;&#xA;  { Date: 1708124400000, Close: 18.99},&#xD;&#xA;  { Date: 1712962800000, Close: 24.99},&#xD;&#xA;  { Date: 1712962800000, Close: 24.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1620774000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578610800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>018/132 - Misty</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/018---misty/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/018---misty/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149262.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 49.99 on 09-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 16.99 on 13-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578697200000, Close: 17.99},&#xD;&#xA;  { Date: 1584054000000, Close: 16.99},&#xD;&#xA;  { Date: 1588719600000, Close: 18.49},&#xD;&#xA;  { Date: 1591052400000, Close: 21.99},&#xD;&#xA;  { Date: 1592348400000, Close: 23.99},&#xD;&#xA;  { Date: 1594767600000, Close: 31.99},&#xD;&#xA;  { Date: 1595890800000, Close: 34.99},&#xD;&#xA;  { Date: 1596495600000, Close: 32.99},&#xD;&#xA;  { Date: 1597359600000, Close: 30.99},&#xD;&#xA;  { Date: 1598310000000, Close: 28.99},&#xD;&#xA;  { Date: 1598655600000, Close: 25.99},&#xD;&#xA;  { Date: 1599606000000, Close: 22.99},&#xD;&#xA;  { Date: 1600642800000, Close: 21.49},&#xD;&#xA;  { Date: 1601593200000, Close: 19.99},&#xD;&#xA;  { Date: 1602284400000, Close: 17.99},&#xD;&#xA;  { Date: 1604444400000, Close: 34.99},&#xD;&#xA;  { Date: 1605049200000, Close: 39.99},&#xD;&#xA;  { Date: 1606950000000, Close: 36.99},&#xD;&#xA;  { Date: 1607900400000, Close: 34.99},&#xD;&#xA;  { Date: 1608850800000, Close: 32.99},&#xD;&#xA;  { Date: 1609714800000, Close: 30.99},&#xD;&#xA;  { Date: 1610751600000, Close: 28.99},&#xD;&#xA;  { Date: 1613170800000, Close: 31.99},&#xD;&#xA;  { Date: 1614985200000, Close: 34.99},&#xD;&#xA;  { Date: 1616108400000, Close: 44.99},&#xD;&#xA;  { Date: 1617922800000, Close: 49.99},&#xD;&#xA;  { Date: 1623106800000, Close: 46.99},&#xD;&#xA;  { Date: 1624057200000, Close: 43.99},&#xD;&#xA;  { Date: 1624921200000, Close: 39.99},&#xD;&#xA;  { Date: 1625785200000, Close: 34.99},&#xD;&#xA;  { Date: 1626649200000, Close: 32.99},&#xD;&#xA;  { Date: 1626735600000, Close: 29.99},&#xD;&#xA;  { Date: 1627599600000, Close: 24.99},&#xD;&#xA;  { Date: 1632870000000, Close: 25.99},&#xD;&#xA;  { Date: 1632956400000, Close: 27.99},&#xD;&#xA;  { Date: 1635289200000, Close: 29.99},&#xD;&#xA;  { Date: 1639436400000, Close: 32.99},&#xD;&#xA;  { Date: 1647471600000, Close: 34.99},&#xD;&#xA;  { Date: 1652050800000, Close: 30.09},&#xD;&#xA;  { Date: 1655074800000, Close: 30.29},&#xD;&#xA;  { Date: 1660950000000, Close: 34.99},&#xD;&#xA;  { Date: 1675465200000, Close: 29.99},&#xD;&#xA;  { Date: 1675983600000, Close: 28.99},&#xD;&#xA;  { Date: 1678316400000, Close: 30.89},&#xD;&#xA;  { Date: 1678489200000, Close: 30.99},&#xD;&#xA;  { Date: 1695942000000, Close: 44.99},&#xD;&#xA;  { Date: 1700607600000, Close: 41.99},&#xD;&#xA;  { Date: 1700694000000, Close: 34.99},&#xD;&#xA;  { Date: 1700866800000, Close: 29.99},&#xD;&#xA;  { Date: 1701212400000, Close: 41.99},&#xD;&#xA;  { Date: 1709506800000, Close: 38.99},&#xD;&#xA;  { Date: 1721343600000, Close: 39.99},&#xD;&#xA;  { Date: 1721343600000, Close: 39.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1617922800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584054000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>019/132 - The Rocket&#39;s Trap</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/019---the-rockets-trap/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/019---the-rockets-trap/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149487.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 31.99 on 06-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.89 on 06-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 4.89},&#xD;&#xA;  { Date: 1579215600000, Close: 5.99},&#xD;&#xA;  { Date: 1582239600000, Close: 6.39},&#xD;&#xA;  { Date: 1583362800000, Close: 5.79},&#xD;&#xA;  { Date: 1586559600000, Close: 7.99},&#xD;&#xA;  { Date: 1587250800000, Close: 8.99},&#xD;&#xA;  { Date: 1588633200000, Close: 10.99},&#xD;&#xA;  { Date: 1591052400000, Close: 11.99},&#xD;&#xA;  { Date: 1592521200000, Close: 13.99},&#xD;&#xA;  { Date: 1594767600000, Close: 17.99},&#xD;&#xA;  { Date: 1595286000000, Close: 18.99},&#xD;&#xA;  { Date: 1596495600000, Close: 19.99},&#xD;&#xA;  { Date: 1600470000000, Close: 18.49},&#xD;&#xA;  { Date: 1601938800000, Close: 18.99},&#xD;&#xA;  { Date: 1602543600000, Close: 19.49},&#xD;&#xA;  { Date: 1606777200000, Close: 21.99},&#xD;&#xA;  { Date: 1607986800000, Close: 23.99},&#xD;&#xA;  { Date: 1608937200000, Close: 22.49},&#xD;&#xA;  { Date: 1609974000000, Close: 20.99},&#xD;&#xA;  { Date: 1610924400000, Close: 19.49},&#xD;&#xA;  { Date: 1614812400000, Close: 29.99},&#xD;&#xA;  { Date: 1614985200000, Close: 31.99},&#xD;&#xA;  { Date: 1615935600000, Close: 29.99},&#xD;&#xA;  { Date: 1616626800000, Close: 24.99},&#xD;&#xA;  { Date: 1617577200000, Close: 23.49},&#xD;&#xA;  { Date: 1621033200000, Close: 24.49},&#xD;&#xA;  { Date: 1625180400000, Close: 22.99},&#xD;&#xA;  { Date: 1636758000000, Close: 21.49},&#xD;&#xA;  { Date: 1654556400000, Close: 19.99},&#xD;&#xA;  { Date: 1657321200000, Close: 16.99},&#xD;&#xA;  { Date: 1684450800000, Close: 24.99},&#xD;&#xA;  { Date: 1700694000000, Close: 19.99},&#xD;&#xA;  { Date: 1701212400000, Close: 24.99},&#xD;&#xA;  { Date: 1705186800000, Close: 23.49},&#xD;&#xA;  { Date: 1710716400000, Close: 21.99},&#xD;&#xA;  { Date: 1710716400000, Close: 21.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614985200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575586800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>020/132 - Brock&#39;s Golem</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/020---brocks-golem/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/020---brocks-golem/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148879.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 16.99 on 28-01-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 5.39 on 04-09-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 6.99},&#xD;&#xA;  { Date: 1578697200000, Close: 7.49},&#xD;&#xA;  { Date: 1580425200000, Close: 6.99},&#xD;&#xA;  { Date: 1581030000000, Close: 7.49},&#xD;&#xA;  { Date: 1581548400000, Close: 6.99},&#xD;&#xA;  { Date: 1584745200000, Close: 5.99},&#xD;&#xA;  { Date: 1586818800000, Close: 6.89},&#xD;&#xA;  { Date: 1586905200000, Close: 6.99},&#xD;&#xA;  { Date: 1588633200000, Close: 7.99},&#xD;&#xA;  { Date: 1589410800000, Close: 8.99},&#xD;&#xA;  { Date: 1589929200000, Close: 9.99},&#xD;&#xA;  { Date: 1595458800000, Close: 15.99},&#xD;&#xA;  { Date: 1596582000000, Close: 14.49},&#xD;&#xA;  { Date: 1597532400000, Close: 12.99},&#xD;&#xA;  { Date: 1598655600000, Close: 13.99},&#xD;&#xA;  { Date: 1601506800000, Close: 12.99},&#xD;&#xA;  { Date: 1602025200000, Close: 11.99},&#xD;&#xA;  { Date: 1603148400000, Close: 10.49},&#xD;&#xA;  { Date: 1604098800000, Close: 9.39},&#xD;&#xA;  { Date: 1604617200000, Close: 9.99},&#xD;&#xA;  { Date: 1605135600000, Close: 10.99},&#xD;&#xA;  { Date: 1607727600000, Close: 11.49},&#xD;&#xA;  { Date: 1608332400000, Close: 11.99},&#xD;&#xA;  { Date: 1610751600000, Close: 12.99},&#xD;&#xA;  { Date: 1613257200000, Close: 13.99},&#xD;&#xA;  { Date: 1615330800000, Close: 12.49},&#xD;&#xA;  { Date: 1615849200000, Close: 10.99},&#xD;&#xA;  { Date: 1616799600000, Close: 9.99},&#xD;&#xA;  { Date: 1618700400000, Close: 9.39},&#xD;&#xA;  { Date: 1621378800000, Close: 9.99},&#xD;&#xA;  { Date: 1622761200000, Close: 8.79},&#xD;&#xA;  { Date: 1624143600000, Close: 8.19},&#xD;&#xA;  { Date: 1625266800000, Close: 8.49},&#xD;&#xA;  { Date: 1626735600000, Close: 7.79},&#xD;&#xA;  { Date: 1627772400000, Close: 7.19},&#xD;&#xA;  { Date: 1628809200000, Close: 6.59},&#xD;&#xA;  { Date: 1629759600000, Close: 5.99},&#xD;&#xA;  { Date: 1630710000000, Close: 5.39},&#xD;&#xA;  { Date: 1632524400000, Close: 5.99},&#xD;&#xA;  { Date: 1634252400000, Close: 6.99},&#xD;&#xA;  { Date: 1647385200000, Close: 7.99},&#xD;&#xA;  { Date: 1649286000000, Close: 8.09},&#xD;&#xA;  { Date: 1653346800000, Close: 8.99},&#xD;&#xA;  { Date: 1657148400000, Close: 9.99},&#xD;&#xA;  { Date: 1661900400000, Close: 11.99},&#xD;&#xA;  { Date: 1666134000000, Close: 10.49},&#xD;&#xA;  { Date: 1667084400000, Close: 9.39},&#xD;&#xA;  { Date: 1676674800000, Close: 11.99},&#xD;&#xA;  { Date: 1695942000000, Close: 12.99},&#xD;&#xA;  { Date: 1699398000000, Close: 14.99},&#xD;&#xA;  { Date: 1700694000000, Close: 9.99},&#xD;&#xA;  { Date: 1706396400000, Close: 16.99},&#xD;&#xA;  { Date: 1706396400000, Close: 16.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1706396400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1630710000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>021/132 - Brock&#39;s Onix</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/021---brocks-onix/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/021---brocks-onix/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148888.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.99 on 22-09-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.99 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.99},&#xD;&#xA;  { Date: 1579215600000, Close: 2.29},&#xD;&#xA;  { Date: 1582239600000, Close: 3.99},&#xD;&#xA;  { Date: 1584486000000, Close: 4.19},&#xD;&#xA;  { Date: 1584745200000, Close: 3.99},&#xD;&#xA;  { Date: 1585350000000, Close: 3.49},&#xD;&#xA;  { Date: 1586818800000, Close: 3.59},&#xD;&#xA;  { Date: 1588633200000, Close: 3.99},&#xD;&#xA;  { Date: 1591311600000, Close: 4.49},&#xD;&#xA;  { Date: 1592262000000, Close: 4.99},&#xD;&#xA;  { Date: 1595977200000, Close: 5.99},&#xD;&#xA;  { Date: 1596582000000, Close: 6.49},&#xD;&#xA;  { Date: 1598655600000, Close: 6.99},&#xD;&#xA;  { Date: 1600729200000, Close: 7.99},&#xD;&#xA;  { Date: 1601420400000, Close: 7.39},&#xD;&#xA;  { Date: 1602370800000, Close: 6.79},&#xD;&#xA;  { Date: 1603407600000, Close: 6.19},&#xD;&#xA;  { Date: 1604444400000, Close: 5.59},&#xD;&#xA;  { Date: 1605913200000, Close: 5.99},&#xD;&#xA;  { Date: 1606777200000, Close: 6.99},&#xD;&#xA;  { Date: 1608246000000, Close: 6.59},&#xD;&#xA;  { Date: 1609196400000, Close: 5.99},&#xD;&#xA;  { Date: 1609369200000, Close: 4.99},&#xD;&#xA;  { Date: 1610578800000, Close: 4.39},&#xD;&#xA;  { Date: 1611961200000, Close: 4.99},&#xD;&#xA;  { Date: 1612566000000, Close: 5.99},&#xD;&#xA;  { Date: 1614207600000, Close: 6.99},&#xD;&#xA;  { Date: 1614380400000, Close: 7.29},&#xD;&#xA;  { Date: 1616626800000, Close: 6.79},&#xD;&#xA;  { Date: 1617231600000, Close: 6.99},&#xD;&#xA;  { Date: 1617750000000, Close: 7.19},&#xD;&#xA;  { Date: 1618354800000, Close: 7.29},&#xD;&#xA;  { Date: 1620428400000, Close: 6.79},&#xD;&#xA;  { Date: 1621378800000, Close: 6.99},&#xD;&#xA;  { Date: 1624057200000, Close: 6.39},&#xD;&#xA;  { Date: 1624316400000, Close: 5.49},&#xD;&#xA;  { Date: 1626303600000, Close: 5.99},&#xD;&#xA;  { Date: 1628982000000, Close: 5.39},&#xD;&#xA;  { Date: 1630018800000, Close: 4.79},&#xD;&#xA;  { Date: 1631055600000, Close: 4.19},&#xD;&#xA;  { Date: 1632092400000, Close: 3.59},&#xD;&#xA;  { Date: 1633734000000, Close: 3.99},&#xD;&#xA;  { Date: 1640041200000, Close: 4.49},&#xD;&#xA;  { Date: 1645052400000, Close: 4.99},&#xD;&#xA;  { Date: 1645916400000, Close: 5.19},&#xD;&#xA;  { Date: 1650582000000, Close: 5.49},&#xD;&#xA;  { Date: 1650668400000, Close: 4.99},&#xD;&#xA;  { Date: 1651359600000, Close: 5.09},&#xD;&#xA;  { Date: 1664838000000, Close: 4.49},&#xD;&#xA;  { Date: 1665615600000, Close: 3.99},&#xD;&#xA;  { Date: 1666566000000, Close: 3.39},&#xD;&#xA;  { Date: 1667602800000, Close: 2.79},&#xD;&#xA;  { Date: 1673910000000, Close: 3.49},&#xD;&#xA;  { Date: 1674428400000, Close: 3.99},&#xD;&#xA;  { Date: 1707865200000, Close: 4.99},&#xD;&#xA;  { Date: 1707865200000, Close: 4.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1600729200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>022/132 - Brock&#39;s Rhyhorn</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/022---brocks-rhyhorn/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/022---brocks-rhyhorn/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148893.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 10-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.29 on 07-02-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1581030000000, Close: 2.29},&#xD;&#xA;  { Date: 1582153200000, Close: 2.49},&#xD;&#xA;  { Date: 1590706800000, Close: 3.99},&#xD;&#xA;  { Date: 1593212400000, Close: 4.19},&#xD;&#xA;  { Date: 1596495600000, Close: 4.99},&#xD;&#xA;  { Date: 1598482800000, Close: 5.99},&#xD;&#xA;  { Date: 1598655600000, Close: 6.49},&#xD;&#xA;  { Date: 1600642800000, Close: 5.79},&#xD;&#xA;  { Date: 1601074800000, Close: 4.99},&#xD;&#xA;  { Date: 1602025200000, Close: 4.49},&#xD;&#xA;  { Date: 1602630000000, Close: 4.99},&#xD;&#xA;  { Date: 1604444400000, Close: 5.49},&#xD;&#xA;  { Date: 1605913200000, Close: 5.99},&#xD;&#xA;  { Date: 1606777200000, Close: 6.99},&#xD;&#xA;  { Date: 1609887600000, Close: 7.99},&#xD;&#xA;  { Date: 1611788400000, Close: 8.99},&#xD;&#xA;  { Date: 1611961200000, Close: 9.99},&#xD;&#xA;  { Date: 1614034800000, Close: 10.99},&#xD;&#xA;  { Date: 1615244400000, Close: 11.99},&#xD;&#xA;  { Date: 1615503600000, Close: 12.99},&#xD;&#xA;  { Date: 1617922800000, Close: 13.99},&#xD;&#xA;  { Date: 1618009200000, Close: 14.99},&#xD;&#xA;  { Date: 1619132400000, Close: 13.49},&#xD;&#xA;  { Date: 1620169200000, Close: 11.99},&#xD;&#xA;  { Date: 1621206000000, Close: 10.49},&#xD;&#xA;  { Date: 1622156400000, Close: 9.39},&#xD;&#xA;  { Date: 1623193200000, Close: 8.79},&#xD;&#xA;  { Date: 1623452400000, Close: 8.49},&#xD;&#xA;  { Date: 1624489200000, Close: 7.79},&#xD;&#xA;  { Date: 1625266800000, Close: 8.99},&#xD;&#xA;  { Date: 1628982000000, Close: 8.39},&#xD;&#xA;  { Date: 1630191600000, Close: 7.79},&#xD;&#xA;  { Date: 1631228400000, Close: 7.19},&#xD;&#xA;  { Date: 1633647600000, Close: 7.99},&#xD;&#xA;  { Date: 1634943600000, Close: 7.39},&#xD;&#xA;  { Date: 1636930800000, Close: 6.99},&#xD;&#xA;  { Date: 1637881200000, Close: 6.39},&#xD;&#xA;  { Date: 1638918000000, Close: 5.79},&#xD;&#xA;  { Date: 1661900400000, Close: 7.99},&#xD;&#xA;  { Date: 1665442800000, Close: 7.89},&#xD;&#xA;  { Date: 1666738800000, Close: 7.19},&#xD;&#xA;  { Date: 1667775600000, Close: 6.59},&#xD;&#xA;  { Date: 1674255600000, Close: 7.99},&#xD;&#xA;  { Date: 1674946800000, Close: 7.19},&#xD;&#xA;  { Date: 1676588400000, Close: 7.99},&#xD;&#xA;  { Date: 1684969200000, Close: 7.89},&#xD;&#xA;  { Date: 1685314800000, Close: 7.69},&#xD;&#xA;  { Date: 1689202800000, Close: 7.19},&#xD;&#xA;  { Date: 1695942000000, Close: 8.99},&#xD;&#xA;  { Date: 1701730800000, Close: 9.99},&#xD;&#xA;  { Date: 1703286000000, Close: 8.99},&#xD;&#xA;  { Date: 1703286000000, Close: 8.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618009200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1581030000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>023/132 - Brock&#39;s Sandslash</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/023---brocks-sandslash/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/023---brocks-sandslash/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148897.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.99 on 27-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.99 on 11-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578697200000, Close: 1.99},&#xD;&#xA;  { Date: 1581030000000, Close: 2.09},&#xD;&#xA;  { Date: 1581634800000, Close: 2.29},&#xD;&#xA;  { Date: 1584658800000, Close: 1.99},&#xD;&#xA;  { Date: 1591311600000, Close: 3.49},&#xD;&#xA;  { Date: 1591743600000, Close: 3.99},&#xD;&#xA;  { Date: 1593644400000, Close: 4.99},&#xD;&#xA;  { Date: 1596150000000, Close: 5.49},&#xD;&#xA;  { Date: 1597705200000, Close: 4.89},&#xD;&#xA;  { Date: 1598569200000, Close: 4.99},&#xD;&#xA;  { Date: 1599606000000, Close: 4.39},&#xD;&#xA;  { Date: 1600210800000, Close: 4.99},&#xD;&#xA;  { Date: 1601938800000, Close: 5.09},&#xD;&#xA;  { Date: 1602630000000, Close: 4.79},&#xD;&#xA;  { Date: 1603148400000, Close: 4.99},&#xD;&#xA;  { Date: 1605913200000, Close: 4.49},&#xD;&#xA;  { Date: 1606777200000, Close: 4.99},&#xD;&#xA;  { Date: 1609455600000, Close: 6.99},&#xD;&#xA;  { Date: 1609887600000, Close: 7.99},&#xD;&#xA;  { Date: 1610751600000, Close: 8.99},&#xD;&#xA;  { Date: 1614380400000, Close: 9.99},&#xD;&#xA;  { Date: 1617318000000, Close: 8.79},&#xD;&#xA;  { Date: 1618614000000, Close: 8.99},&#xD;&#xA;  { Date: 1619132400000, Close: 8.39},&#xD;&#xA;  { Date: 1622847600000, Close: 7.79},&#xD;&#xA;  { Date: 1623884400000, Close: 7.19},&#xD;&#xA;  { Date: 1623970800000, Close: 6.49},&#xD;&#xA;  { Date: 1624921200000, Close: 4.99},&#xD;&#xA;  { Date: 1626303600000, Close: 5.49},&#xD;&#xA;  { Date: 1627081200000, Close: 4.99},&#xD;&#xA;  { Date: 1628118000000, Close: 4.39},&#xD;&#xA;  { Date: 1628895600000, Close: 4.99},&#xD;&#xA;  { Date: 1631919600000, Close: 5.99},&#xD;&#xA;  { Date: 1634079600000, Close: 7.49},&#xD;&#xA;  { Date: 1634857200000, Close: 7.99},&#xD;&#xA;  { Date: 1640300400000, Close: 8.99},&#xD;&#xA;  { Date: 1645657200000, Close: 8.39},&#xD;&#xA;  { Date: 1646866800000, Close: 8.49},&#xD;&#xA;  { Date: 1652569200000, Close: 7.79},&#xD;&#xA;  { Date: 1653346800000, Close: 7.99},&#xD;&#xA;  { Date: 1653606000000, Close: 6.89},&#xD;&#xA;  { Date: 1661900400000, Close: 6.99},&#xD;&#xA;  { Date: 1668812400000, Close: 6.39},&#xD;&#xA;  { Date: 1674342000000, Close: 5.79},&#xD;&#xA;  { Date: 1675983600000, Close: 5.99},&#xD;&#xA;  { Date: 1676415600000, Close: 6.09},&#xD;&#xA;  { Date: 1680908400000, Close: 6.99},&#xD;&#xA;  { Date: 1682722800000, Close: 6.39},&#xD;&#xA;  { Date: 1684105200000, Close: 6.49},&#xD;&#xA;  { Date: 1684796400000, Close: 6.69},&#xD;&#xA;  { Date: 1685314800000, Close: 6.59},&#xD;&#xA;  { Date: 1695942000000, Close: 7.99},&#xD;&#xA;  { Date: 1710198000000, Close: 9.99},&#xD;&#xA;  { Date: 1710198000000, Close: 9.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614380400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578697200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>024/132 - Brock&#39;s Zubat</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/024---brocks-zubat/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/024---brocks-zubat/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148902.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 11.99 on 31-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 3.09 on 23-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578610800000, Close: 3.69},&#xD;&#xA;  { Date: 1579734000000, Close: 3.09},&#xD;&#xA;  { Date: 1581116400000, Close: 3.29},&#xD;&#xA;  { Date: 1582844400000, Close: 3.49},&#xD;&#xA;  { Date: 1588892400000, Close: 4.49},&#xD;&#xA;  { Date: 1594940400000, Close: 4.99},&#xD;&#xA;  { Date: 1595372400000, Close: 5.49},&#xD;&#xA;  { Date: 1596754800000, Close: 5.99},&#xD;&#xA;  { Date: 1597705200000, Close: 6.99},&#xD;&#xA;  { Date: 1598655600000, Close: 7.49},&#xD;&#xA;  { Date: 1601161200000, Close: 6.79},&#xD;&#xA;  { Date: 1601938800000, Close: 6.99},&#xD;&#xA;  { Date: 1603148400000, Close: 7.99},&#xD;&#xA;  { Date: 1605654000000, Close: 8.99},&#xD;&#xA;  { Date: 1606777200000, Close: 9.99},&#xD;&#xA;  { Date: 1608332400000, Close: 10.99},&#xD;&#xA;  { Date: 1615417200000, Close: 9.99},&#xD;&#xA;  { Date: 1616367600000, Close: 8.79},&#xD;&#xA;  { Date: 1617404400000, Close: 7.99},&#xD;&#xA;  { Date: 1618527600000, Close: 8.49},&#xD;&#xA;  { Date: 1619046000000, Close: 8.99},&#xD;&#xA;  { Date: 1623106800000, Close: 9.99},&#xD;&#xA;  { Date: 1624489200000, Close: 9.39},&#xD;&#xA;  { Date: 1625439600000, Close: 8.79},&#xD;&#xA;  { Date: 1627081200000, Close: 8.19},&#xD;&#xA;  { Date: 1628031600000, Close: 7.59},&#xD;&#xA;  { Date: 1628982000000, Close: 6.99},&#xD;&#xA;  { Date: 1632524400000, Close: 7.99},&#xD;&#xA;  { Date: 1633042800000, Close: 8.99},&#xD;&#xA;  { Date: 1635807600000, Close: 9.49},&#xD;&#xA;  { Date: 1639782000000, Close: 9.99},&#xD;&#xA;  { Date: 1650582000000, Close: 8.79},&#xD;&#xA;  { Date: 1653606000000, Close: 8.99},&#xD;&#xA;  { Date: 1656543600000, Close: 10.99},&#xD;&#xA;  { Date: 1661900400000, Close: 11.99},&#xD;&#xA;  { Date: 1664924400000, Close: 10.49},&#xD;&#xA;  { Date: 1665874800000, Close: 9.39},&#xD;&#xA;  { Date: 1666825200000, Close: 8.79},&#xD;&#xA;  { Date: 1667516400000, Close: 7.99},&#xD;&#xA;  { Date: 1668466800000, Close: 7.39},&#xD;&#xA;  { Date: 1669503600000, Close: 6.79},&#xD;&#xA;  { Date: 1674687600000, Close: 5.99},&#xD;&#xA;  { Date: 1675292400000, Close: 5.39},&#xD;&#xA;  { Date: 1676502000000, Close: 5.09},&#xD;&#xA;  { Date: 1682550000000, Close: 5.79},&#xD;&#xA;  { Date: 1695942000000, Close: 6.09},&#xD;&#xA;  { Date: 1707519600000, Close: 6.99},&#xD;&#xA;  { Date: 1707519600000, Close: 6.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1661900400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579734000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>025/132 - Erika&#39;s Clefairy</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/025---erikas-clefairy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/025---erikas-clefairy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149013.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.99 on 06-03-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.39 on 17-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 3.49},&#xD;&#xA;  { Date: 1578006000000, Close: 3.69},&#xD;&#xA;  { Date: 1579302000000, Close: 3.09},&#xD;&#xA;  { Date: 1580511600000, Close: 2.49},&#xD;&#xA;  { Date: 1584486000000, Close: 3.29},&#xD;&#xA;  { Date: 1585004400000, Close: 3.49},&#xD;&#xA;  { Date: 1586905200000, Close: 3.59},&#xD;&#xA;  { Date: 1591311600000, Close: 2.99},&#xD;&#xA;  { Date: 1592348400000, Close: 2.39},&#xD;&#xA;  { Date: 1596495600000, Close: 2.99},&#xD;&#xA;  { Date: 1597273200000, Close: 3.49},&#xD;&#xA;  { Date: 1599778800000, Close: 3.99},&#xD;&#xA;  { Date: 1600297200000, Close: 4.49},&#xD;&#xA;  { Date: 1600815600000, Close: 4.99},&#xD;&#xA;  { Date: 1601334000000, Close: 4.49},&#xD;&#xA;  { Date: 1602370800000, Close: 3.89},&#xD;&#xA;  { Date: 1602543600000, Close: 3.49},&#xD;&#xA;  { Date: 1603234800000, Close: 3.99},&#xD;&#xA;  { Date: 1604530800000, Close: 3.39},&#xD;&#xA;  { Date: 1606777200000, Close: 4.99},&#xD;&#xA;  { Date: 1607468400000, Close: 5.99},&#xD;&#xA;  { Date: 1608678000000, Close: 5.39},&#xD;&#xA;  { Date: 1612306800000, Close: 5.99},&#xD;&#xA;  { Date: 1612998000000, Close: 6.99},&#xD;&#xA;  { Date: 1614985200000, Close: 7.39},&#xD;&#xA;  { Date: 1615935600000, Close: 6.79},&#xD;&#xA;  { Date: 1616972400000, Close: 6.19},&#xD;&#xA;  { Date: 1618009200000, Close: 5.59},&#xD;&#xA;  { Date: 1618527600000, Close: 5.99},&#xD;&#xA;  { Date: 1620169200000, Close: 6.99},&#xD;&#xA;  { Date: 1621983600000, Close: 6.39},&#xD;&#xA;  { Date: 1623970800000, Close: 5.79},&#xD;&#xA;  { Date: 1624057200000, Close: 4.99},&#xD;&#xA;  { Date: 1625007600000, Close: 4.39},&#xD;&#xA;  { Date: 1625871600000, Close: 4.49},&#xD;&#xA;  { Date: 1641942000000, Close: 4.79},&#xD;&#xA;  { Date: 1645916400000, Close: 4.89},&#xD;&#xA;  { Date: 1647039600000, Close: 4.79},&#xD;&#xA;  { Date: 1647471600000, Close: 4.69},&#xD;&#xA;  { Date: 1648249200000, Close: 4.59},&#xD;&#xA;  { Date: 1653346800000, Close: 5.29},&#xD;&#xA;  { Date: 1655247600000, Close: 5.59},&#xD;&#xA;  { Date: 1661900400000, Close: 5.99},&#xD;&#xA;  { Date: 1667343600000, Close: 5.39},&#xD;&#xA;  { Date: 1673132400000, Close: 4.79},&#xD;&#xA;  { Date: 1674082800000, Close: 4.09},&#xD;&#xA;  { Date: 1675983600000, Close: 3.69},&#xD;&#xA;  { Date: 1676415600000, Close: 3.59},&#xD;&#xA;  { Date: 1695942000000, Close: 5.99},&#xD;&#xA;  { Date: 1702594800000, Close: 6.99},&#xD;&#xA;  { Date: 1709679600000, Close: 7.99},&#xD;&#xA;  { Date: 1709679600000, Close: 7.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1709679600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1592348400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>026/132 - Erika&#39;s Victreebel</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/026---erikas-victreebel/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/026---erikas-victreebel/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149032.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 10.99 on 22-07-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.99 on 31-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577746800000, Close: 2.99},&#xD;&#xA;  { Date: 1579042800000, Close: 3.99},&#xD;&#xA;  { Date: 1581030000000, Close: 4.49},&#xD;&#xA;  { Date: 1588633200000, Close: 6.99},&#xD;&#xA;  { Date: 1591138800000, Close: 9.99},&#xD;&#xA;  { Date: 1592348400000, Close: 10.49},&#xD;&#xA;  { Date: 1593126000000, Close: 9.79},&#xD;&#xA;  { Date: 1595372400000, Close: 10.99},&#xD;&#xA;  { Date: 1601334000000, Close: 8.49},&#xD;&#xA;  { Date: 1603926000000, Close: 7.79},&#xD;&#xA;  { Date: 1604358000000, Close: 6.99},&#xD;&#xA;  { Date: 1605308400000, Close: 7.99},&#xD;&#xA;  { Date: 1605740400000, Close: 9.99},&#xD;&#xA;  { Date: 1606777200000, Close: 10.99},&#xD;&#xA;  { Date: 1610406000000, Close: 9.79},&#xD;&#xA;  { Date: 1610492400000, Close: 8.99},&#xD;&#xA;  { Date: 1612998000000, Close: 9.99},&#xD;&#xA;  { Date: 1613602800000, Close: 10.49},&#xD;&#xA;  { Date: 1614207600000, Close: 10.89},&#xD;&#xA;  { Date: 1617318000000, Close: 9.79},&#xD;&#xA;  { Date: 1618527600000, Close: 10.49},&#xD;&#xA;  { Date: 1621983600000, Close: 9.39},&#xD;&#xA;  { Date: 1623452400000, Close: 9.59},&#xD;&#xA;  { Date: 1625612400000, Close: 8.99},&#xD;&#xA;  { Date: 1627081200000, Close: 8.49},&#xD;&#xA;  { Date: 1631142000000, Close: 7.79},&#xD;&#xA;  { Date: 1633734000000, Close: 7.19},&#xD;&#xA;  { Date: 1643324400000, Close: 7.99},&#xD;&#xA;  { Date: 1646348400000, Close: 8.39},&#xD;&#xA;  { Date: 1646866800000, Close: 8.19},&#xD;&#xA;  { Date: 1647471600000, Close: 8.39},&#xD;&#xA;  { Date: 1647990000000, Close: 8.59},&#xD;&#xA;  { Date: 1648681200000, Close: 8.79},&#xD;&#xA;  { Date: 1649113200000, Close: 8.89},&#xD;&#xA;  { Date: 1653606000000, Close: 10.99},&#xD;&#xA;  { Date: 1657580400000, Close: 9.99},&#xD;&#xA;  { Date: 1664924400000, Close: 8.69},&#xD;&#xA;  { Date: 1665529200000, Close: 7.99},&#xD;&#xA;  { Date: 1668207600000, Close: 7.39},&#xD;&#xA;  { Date: 1671231600000, Close: 7.69},&#xD;&#xA;  { Date: 1675983600000, Close: 7.29},&#xD;&#xA;  { Date: 1678921200000, Close: 7.49},&#xD;&#xA;  { Date: 1695078000000, Close: 7.99},&#xD;&#xA;  { Date: 1701730800000, Close: 8.99},&#xD;&#xA;  { Date: 1706396400000, Close: 9.99},&#xD;&#xA;  { Date: 1706396400000, Close: 9.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1595372400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577746800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>027/132 - Lt. Surge&#39;s Electabuzz</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/027---lt.-surges-electabuzz/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/027---lt.-surges-electabuzz/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149204.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.99 on 10-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.59 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.59},&#xD;&#xA;  { Date: 1580943600000, Close: 1.69},&#xD;&#xA;  { Date: 1582758000000, Close: 2.99},&#xD;&#xA;  { Date: 1584658800000, Close: 2.39},&#xD;&#xA;  { Date: 1585177200000, Close: 2.29},&#xD;&#xA;  { Date: 1585695600000, Close: 2.49},&#xD;&#xA;  { Date: 1591138800000, Close: 4.99},&#xD;&#xA;  { Date: 1592348400000, Close: 5.49},&#xD;&#xA;  { Date: 1593730800000, Close: 4.89},&#xD;&#xA;  { Date: 1594681200000, Close: 4.29},&#xD;&#xA;  { Date: 1598482800000, Close: 4.99},&#xD;&#xA;  { Date: 1598655600000, Close: 5.49},&#xD;&#xA;  { Date: 1599778800000, Close: 5.99},&#xD;&#xA;  { Date: 1601938800000, Close: 6.99},&#xD;&#xA;  { Date: 1602889200000, Close: 6.59},&#xD;&#xA;  { Date: 1603148400000, Close: 6.49},&#xD;&#xA;  { Date: 1604098800000, Close: 5.79},&#xD;&#xA;  { Date: 1606777200000, Close: 6.99},&#xD;&#xA;  { Date: 1610146800000, Close: 7.29},&#xD;&#xA;  { Date: 1610665200000, Close: 7.49},&#xD;&#xA;  { Date: 1612825200000, Close: 6.79},&#xD;&#xA;  { Date: 1614985200000, Close: 6.99},&#xD;&#xA;  { Date: 1616540400000, Close: 6.39},&#xD;&#xA;  { Date: 1617231600000, Close: 6.69},&#xD;&#xA;  { Date: 1618009200000, Close: 7.99},&#xD;&#xA;  { Date: 1620169200000, Close: 7.39},&#xD;&#xA;  { Date: 1621206000000, Close: 6.79},&#xD;&#xA;  { Date: 1621897200000, Close: 6.49},&#xD;&#xA;  { Date: 1622934000000, Close: 5.79},&#xD;&#xA;  { Date: 1623452400000, Close: 6.29},&#xD;&#xA;  { Date: 1623970800000, Close: 6.45},&#xD;&#xA;  { Date: 1624489200000, Close: 5.99},&#xD;&#xA;  { Date: 1628290800000, Close: 5.39},&#xD;&#xA;  { Date: 1629241200000, Close: 4.79},&#xD;&#xA;  { Date: 1630191600000, Close: 4.19},&#xD;&#xA;  { Date: 1637276400000, Close: 3.99},&#xD;&#xA;  { Date: 1638226800000, Close: 3.49},&#xD;&#xA;  { Date: 1639177200000, Close: 2.99},&#xD;&#xA;  { Date: 1661900400000, Close: 4.99},&#xD;&#xA;  { Date: 1664924400000, Close: 4.69},&#xD;&#xA;  { Date: 1665874800000, Close: 4.09},&#xD;&#xA;  { Date: 1666134000000, Close: 3.49},&#xD;&#xA;  { Date: 1667084400000, Close: 2.89},&#xD;&#xA;  { Date: 1684450800000, Close: 3.49},&#xD;&#xA;  { Date: 1686956400000, Close: 3.99},&#xD;&#xA;  { Date: 1695942000000, Close: 4.99},&#xD;&#xA;  { Date: 1707865200000, Close: 5.99},&#xD;&#xA;  { Date: 1707865200000, Close: 5.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618009200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>028/132 - Lt. Surge&#39;s Raichu</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/028---lt.-surges-raichu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/028---lt.-surges-raichu/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149217.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 24.99 on 06-07-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 7.99 on 10-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578610800000, Close: 7.99},&#xD;&#xA;  { Date: 1581375600000, Close: 8.39},&#xD;&#xA;  { Date: 1582066800000, Close: 7.99},&#xD;&#xA;  { Date: 1584745200000, Close: 9.99},&#xD;&#xA;  { Date: 1585782000000, Close: 8.99},&#xD;&#xA;  { Date: 1588114800000, Close: 9.99},&#xD;&#xA;  { Date: 1588892400000, Close: 10.99},&#xD;&#xA;  { Date: 1589583600000, Close: 12.99},&#xD;&#xA;  { Date: 1593212400000, Close: 15.99},&#xD;&#xA;  { Date: 1595372400000, Close: 16.99},&#xD;&#xA;  { Date: 1596582000000, Close: 15.99},&#xD;&#xA;  { Date: 1597791600000, Close: 16.99},&#xD;&#xA;  { Date: 1598655600000, Close: 17.99},&#xD;&#xA;  { Date: 1599174000000, Close: 16.99},&#xD;&#xA;  { Date: 1601593200000, Close: 17.99},&#xD;&#xA;  { Date: 1602198000000, Close: 18.99},&#xD;&#xA;  { Date: 1604530800000, Close: 19.99},&#xD;&#xA;  { Date: 1605135600000, Close: 20.99},&#xD;&#xA;  { Date: 1607554800000, Close: 19.49},&#xD;&#xA;  { Date: 1609974000000, Close: 19.99},&#xD;&#xA;  { Date: 1612220400000, Close: 21.99},&#xD;&#xA;  { Date: 1613775600000, Close: 22.49},&#xD;&#xA;  { Date: 1615590000000, Close: 20.99},&#xD;&#xA;  { Date: 1617058800000, Close: 17.99},&#xD;&#xA;  { Date: 1623970800000, Close: 16.49},&#xD;&#xA;  { Date: 1626303600000, Close: 16.99},&#xD;&#xA;  { Date: 1629932400000, Close: 15.49},&#xD;&#xA;  { Date: 1632351600000, Close: 16.99},&#xD;&#xA;  { Date: 1640041200000, Close: 19.99},&#xD;&#xA;  { Date: 1643842800000, Close: 20.99},&#xD;&#xA;  { Date: 1657062000000, Close: 24.99},&#xD;&#xA;  { Date: 1670540400000, Close: 21.99},&#xD;&#xA;  { Date: 1674601200000, Close: 20.49},&#xD;&#xA;  { Date: 1676588400000, Close: 18.99},&#xD;&#xA;  { Date: 1683241200000, Close: 17.49},&#xD;&#xA;  { Date: 1685055600000, Close: 14.99},&#xD;&#xA;  { Date: 1686956400000, Close: 15.79},&#xD;&#xA;  { Date: 1695942000000, Close: 16.19},&#xD;&#xA;  { Date: 1698102000000, Close: 15.99},&#xD;&#xA;  { Date: 1701730800000, Close: 14.39},&#xD;&#xA;  { Date: 1703286000000, Close: 14.19},&#xD;&#xA;  { Date: 1708124400000, Close: 14.49},&#xD;&#xA;  { Date: 1711753200000, Close: 14.99},&#xD;&#xA;  { Date: 1711753200000, Close: 14.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1657062000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578610800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>029/132 - Misty&#39;s Cloyster</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/029---mistys-cloyster/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/029---mistys-cloyster/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149264.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 24-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.99 on 24-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 3.49},&#xD;&#xA;  { Date: 1582239600000, Close: 3.69},&#xD;&#xA;  { Date: 1582671600000, Close: 3.79},&#xD;&#xA;  { Date: 1584486000000, Close: 3.19},&#xD;&#xA;  { Date: 1585004400000, Close: 2.99},&#xD;&#xA;  { Date: 1586818800000, Close: 3.49},&#xD;&#xA;  { Date: 1587164400000, Close: 3.59},&#xD;&#xA;  { Date: 1589929200000, Close: 4.49},&#xD;&#xA;  { Date: 1591311600000, Close: 4.99},&#xD;&#xA;  { Date: 1593644400000, Close: 6.99},&#xD;&#xA;  { Date: 1594767600000, Close: 8.49},&#xD;&#xA;  { Date: 1596582000000, Close: 8.99},&#xD;&#xA;  { Date: 1597446000000, Close: 8.39},&#xD;&#xA;  { Date: 1598396400000, Close: 7.79},&#xD;&#xA;  { Date: 1598655600000, Close: 7.99},&#xD;&#xA;  { Date: 1599606000000, Close: 8.99},&#xD;&#xA;  { Date: 1601679600000, Close: 8.39},&#xD;&#xA;  { Date: 1602025200000, Close: 7.99},&#xD;&#xA;  { Date: 1603234800000, Close: 7.39},&#xD;&#xA;  { Date: 1604271600000, Close: 6.79},&#xD;&#xA;  { Date: 1605913200000, Close: 6.99},&#xD;&#xA;  { Date: 1606777200000, Close: 7.99},&#xD;&#xA;  { Date: 1606863600000, Close: 8.99},&#xD;&#xA;  { Date: 1608073200000, Close: 8.39},&#xD;&#xA;  { Date: 1609023600000, Close: 7.79},&#xD;&#xA;  { Date: 1609369200000, Close: 6.99},&#xD;&#xA;  { Date: 1610492400000, Close: 7.99},&#xD;&#xA;  { Date: 1611788400000, Close: 8.49},&#xD;&#xA;  { Date: 1612825200000, Close: 8.99},&#xD;&#xA;  { Date: 1614294000000, Close: 9.99},&#xD;&#xA;  { Date: 1614985200000, Close: 10.49},&#xD;&#xA;  { Date: 1616194800000, Close: 9.99},&#xD;&#xA;  { Date: 1617231600000, Close: 8.79},&#xD;&#xA;  { Date: 1618614000000, Close: 9.49},&#xD;&#xA;  { Date: 1623970800000, Close: 10.99},&#xD;&#xA;  { Date: 1626822000000, Close: 12.99},&#xD;&#xA;  { Date: 1627513200000, Close: 13.99},&#xD;&#xA;  { Date: 1631574000000, Close: 12.49},&#xD;&#xA;  { Date: 1632610800000, Close: 10.99},&#xD;&#xA;  { Date: 1633647600000, Close: 9.79},&#xD;&#xA;  { Date: 1633734000000, Close: 8.99},&#xD;&#xA;  { Date: 1634684400000, Close: 8.39},&#xD;&#xA;  { Date: 1634857200000, Close: 7.99},&#xD;&#xA;  { Date: 1635894000000, Close: 7.39},&#xD;&#xA;  { Date: 1640300400000, Close: 8.99},&#xD;&#xA;  { Date: 1645743600000, Close: 11.99},&#xD;&#xA;  { Date: 1652396400000, Close: 12.99},&#xD;&#xA;  { Date: 1661295600000, Close: 14.99},&#xD;&#xA;  { Date: 1664924400000, Close: 13.49},&#xD;&#xA;  { Date: 1665010800000, Close: 11.99},&#xD;&#xA;  { Date: 1666047600000, Close: 10.49},&#xD;&#xA;  { Date: 1666134000000, Close: 8.99},&#xD;&#xA;  { Date: 1667170800000, Close: 8.39},&#xD;&#xA;  { Date: 1667257200000, Close: 7.49},&#xD;&#xA;  { Date: 1667516400000, Close: 6.99},&#xD;&#xA;  { Date: 1668466800000, Close: 6.39},&#xD;&#xA;  { Date: 1669417200000, Close: 6.99},&#xD;&#xA;  { Date: 1670022000000, Close: 6.59},&#xD;&#xA;  { Date: 1670972400000, Close: 5.99},&#xD;&#xA;  { Date: 1672009200000, Close: 5.39},&#xD;&#xA;  { Date: 1672959600000, Close: 4.79},&#xD;&#xA;  { Date: 1673910000000, Close: 4.19},&#xD;&#xA;  { Date: 1695942000000, Close: 4.49},&#xD;&#xA;  { Date: 1695942000000, Close: 4.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1661295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585004400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>030/132 - Misty&#39;s Goldeen</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/030---mistys-goldeen/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/030---mistys-goldeen/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149269.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 6.99 on 08-11-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.29 on 11-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578697200000, Close: 2.29},&#xD;&#xA;  { Date: 1581030000000, Close: 2.49},&#xD;&#xA;  { Date: 1582239600000, Close: 2.99},&#xD;&#xA;  { Date: 1585868400000, Close: 3.49},&#xD;&#xA;  { Date: 1587510000000, Close: 2.99},&#xD;&#xA;  { Date: 1589583600000, Close: 3.09},&#xD;&#xA;  { Date: 1589929200000, Close: 2.99},&#xD;&#xA;  { Date: 1591398000000, Close: 3.49},&#xD;&#xA;  { Date: 1593298800000, Close: 3.99},&#xD;&#xA;  { Date: 1596409200000, Close: 3.39},&#xD;&#xA;  { Date: 1597100400000, Close: 3.49},&#xD;&#xA;  { Date: 1598655600000, Close: 3.59},&#xD;&#xA;  { Date: 1599606000000, Close: 3.99},&#xD;&#xA;  { Date: 1600383600000, Close: 4.09},&#xD;&#xA;  { Date: 1602025200000, Close: 3.49},&#xD;&#xA;  { Date: 1602716400000, Close: 3.99},&#xD;&#xA;  { Date: 1605308400000, Close: 4.99},&#xD;&#xA;  { Date: 1606777200000, Close: 5.99},&#xD;&#xA;  { Date: 1608764400000, Close: 5.39},&#xD;&#xA;  { Date: 1610492400000, Close: 4.79},&#xD;&#xA;  { Date: 1611961200000, Close: 4.99},&#xD;&#xA;  { Date: 1614380400000, Close: 5.99},&#xD;&#xA;  { Date: 1615762800000, Close: 5.39},&#xD;&#xA;  { Date: 1616626800000, Close: 4.99},&#xD;&#xA;  { Date: 1617922800000, Close: 5.99},&#xD;&#xA;  { Date: 1618959600000, Close: 5.39},&#xD;&#xA;  { Date: 1622156400000, Close: 5.99},&#xD;&#xA;  { Date: 1623452400000, Close: 5.39},&#xD;&#xA;  { Date: 1624489200000, Close: 4.79},&#xD;&#xA;  { Date: 1625266800000, Close: 3.99},&#xD;&#xA;  { Date: 1626303600000, Close: 4.49},&#xD;&#xA;  { Date: 1626994800000, Close: 3.99},&#xD;&#xA;  { Date: 1634252400000, Close: 4.49},&#xD;&#xA;  { Date: 1648076400000, Close: 4.19},&#xD;&#xA;  { Date: 1653001200000, Close: 4.99},&#xD;&#xA;  { Date: 1664924400000, Close: 4.39},&#xD;&#xA;  { Date: 1665788400000, Close: 3.79},&#xD;&#xA;  { Date: 1666134000000, Close: 3.69},&#xD;&#xA;  { Date: 1667084400000, Close: 3.09},&#xD;&#xA;  { Date: 1668034800000, Close: 2.49},&#xD;&#xA;  { Date: 1691535600000, Close: 4.99},&#xD;&#xA;  { Date: 1695942000000, Close: 5.99},&#xD;&#xA;  { Date: 1699398000000, Close: 6.99},&#xD;&#xA;  { Date: 1703286000000, Close: 6.39},&#xD;&#xA;  { Date: 1706137200000, Close: 6.99},&#xD;&#xA;  { Date: 1706137200000, Close: 6.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1699398000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578697200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>031/132 - Misty&#39;s Poliwrath</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/031---mistys-poliwrath/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/031---mistys-poliwrath/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149276.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 21-07-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 5.79 on 26-12-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578610800000, Close: 5.99},&#xD;&#xA;  { Date: 1581030000000, Close: 6.49},&#xD;&#xA;  { Date: 1582066800000, Close: 6.99},&#xD;&#xA;  { Date: 1583881200000, Close: 7.99},&#xD;&#xA;  { Date: 1584658800000, Close: 7.49},&#xD;&#xA;  { Date: 1585177200000, Close: 6.99},&#xD;&#xA;  { Date: 1589842800000, Close: 11.99},&#xD;&#xA;  { Date: 1591657200000, Close: 10.49},&#xD;&#xA;  { Date: 1593385200000, Close: 9.39},&#xD;&#xA;  { Date: 1594335600000, Close: 8.79},&#xD;&#xA;  { Date: 1595372400000, Close: 7.99},&#xD;&#xA;  { Date: 1596322800000, Close: 7.39},&#xD;&#xA;  { Date: 1597791600000, Close: 7.99},&#xD;&#xA;  { Date: 1600729200000, Close: 9.99},&#xD;&#xA;  { Date: 1601334000000, Close: 9.39},&#xD;&#xA;  { Date: 1602025200000, Close: 8.99},&#xD;&#xA;  { Date: 1602975600000, Close: 8.39},&#xD;&#xA;  { Date: 1604012400000, Close: 7.79},&#xD;&#xA;  { Date: 1604617200000, Close: 6.99},&#xD;&#xA;  { Date: 1605999600000, Close: 6.39},&#xD;&#xA;  { Date: 1606863600000, Close: 6.99},&#xD;&#xA;  { Date: 1607900400000, Close: 6.39},&#xD;&#xA;  { Date: 1608937200000, Close: 5.79},&#xD;&#xA;  { Date: 1609887600000, Close: 6.99},&#xD;&#xA;  { Date: 1610578800000, Close: 7.99},&#xD;&#xA;  { Date: 1612479600000, Close: 9.99},&#xD;&#xA;  { Date: 1614726000000, Close: 10.99},&#xD;&#xA;  { Date: 1615244400000, Close: 11.99},&#xD;&#xA;  { Date: 1615417200000, Close: 12.99},&#xD;&#xA;  { Date: 1618786800000, Close: 11.49},&#xD;&#xA;  { Date: 1621983600000, Close: 12.49},&#xD;&#xA;  { Date: 1623106800000, Close: 12.99},&#xD;&#xA;  { Date: 1623711600000, Close: 11.99},&#xD;&#xA;  { Date: 1626822000000, Close: 14.99},&#xD;&#xA;  { Date: 1628118000000, Close: 13.49},&#xD;&#xA;  { Date: 1629154800000, Close: 11.99},&#xD;&#xA;  { Date: 1630105200000, Close: 10.49},&#xD;&#xA;  { Date: 1631142000000, Close: 9.39},&#xD;&#xA;  { Date: 1632178800000, Close: 8.79},&#xD;&#xA;  { Date: 1633215600000, Close: 8.19},&#xD;&#xA;  { Date: 1634166000000, Close: 7.59},&#xD;&#xA;  { Date: 1635202800000, Close: 6.99},&#xD;&#xA;  { Date: 1636930800000, Close: 6.59},&#xD;&#xA;  { Date: 1649286000000, Close: 9.99},&#xD;&#xA;  { Date: 1651100400000, Close: 8.69},&#xD;&#xA;  { Date: 1651532400000, Close: 8.59},&#xD;&#xA;  { Date: 1652137200000, Close: 8.29},&#xD;&#xA;  { Date: 1653346800000, Close: 9.99},&#xD;&#xA;  { Date: 1659999600000, Close: 11.99},&#xD;&#xA;  { Date: 1664838000000, Close: 10.49},&#xD;&#xA;  { Date: 1665874800000, Close: 9.39},&#xD;&#xA;  { Date: 1666825200000, Close: 8.79},&#xD;&#xA;  { Date: 1666911600000, Close: 7.89},&#xD;&#xA;  { Date: 1667257200000, Close: 7.79},&#xD;&#xA;  { Date: 1667862000000, Close: 7.69},&#xD;&#xA;  { Date: 1668812400000, Close: 7.59},&#xD;&#xA;  { Date: 1669071600000, Close: 8.99},&#xD;&#xA;  { Date: 1670367600000, Close: 7.69},&#xD;&#xA;  { Date: 1670540400000, Close: 7.49},&#xD;&#xA;  { Date: 1670886000000, Close: 7.69},&#xD;&#xA;  { Date: 1671577200000, Close: 7.59},&#xD;&#xA;  { Date: 1675983600000, Close: 7.49},&#xD;&#xA;  { Date: 1676761200000, Close: 7.09},&#xD;&#xA;  { Date: 1677711600000, Close: 6.39},&#xD;&#xA;  { Date: 1677970800000, Close: 7.09},&#xD;&#xA;  { Date: 1678575600000, Close: 7.19},&#xD;&#xA;  { Date: 1682636400000, Close: 7.49},&#xD;&#xA;  { Date: 1684450800000, Close: 7.89},&#xD;&#xA;  { Date: 1695942000000, Close: 10.19},&#xD;&#xA;  { Date: 1700607600000, Close: 10.99},&#xD;&#xA;  { Date: 1706396400000, Close: 12.99},&#xD;&#xA;  { Date: 1706396400000, Close: 12.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1626822000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1608937200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>032/132 - Misty&#39;s Tentacool</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/032---mistys-tentacool/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/032---mistys-tentacool/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149290.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.99 on 11-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.89 on 10-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578610800000, Close: 2.89},&#xD;&#xA;  { Date: 1581980400000, Close: 3.49},&#xD;&#xA;  { Date: 1584658800000, Close: 3.69},&#xD;&#xA;  { Date: 1588892400000, Close: 4.49},&#xD;&#xA;  { Date: 1594508400000, Close: 5.49},&#xD;&#xA;  { Date: 1596236400000, Close: 6.49},&#xD;&#xA;  { Date: 1596495600000, Close: 6.99},&#xD;&#xA;  { Date: 1598655600000, Close: 7.99},&#xD;&#xA;  { Date: 1599174000000, Close: 7.39},&#xD;&#xA;  { Date: 1600210800000, Close: 6.99},&#xD;&#xA;  { Date: 1600988400000, Close: 7.29},&#xD;&#xA;  { Date: 1601420400000, Close: 6.79},&#xD;&#xA;  { Date: 1602198000000, Close: 7.49},&#xD;&#xA;  { Date: 1604098800000, Close: 7.99},&#xD;&#xA;  { Date: 1606604400000, Close: 9.49},&#xD;&#xA;  { Date: 1607295600000, Close: 8.99},&#xD;&#xA;  { Date: 1607986800000, Close: 7.99},&#xD;&#xA;  { Date: 1609023600000, Close: 7.39},&#xD;&#xA;  { Date: 1609196400000, Close: 6.49},&#xD;&#xA;  { Date: 1610578800000, Close: 6.99},&#xD;&#xA;  { Date: 1614207600000, Close: 7.99},&#xD;&#xA;  { Date: 1614380400000, Close: 8.99},&#xD;&#xA;  { Date: 1615417200000, Close: 9.99},&#xD;&#xA;  { Date: 1616626800000, Close: 8.79},&#xD;&#xA;  { Date: 1618959600000, Close: 8.19},&#xD;&#xA;  { Date: 1619996400000, Close: 7.59},&#xD;&#xA;  { Date: 1621119600000, Close: 6.99},&#xD;&#xA;  { Date: 1621378800000, Close: 5.99},&#xD;&#xA;  { Date: 1622329200000, Close: 5.39},&#xD;&#xA;  { Date: 1622588400000, Close: 4.99},&#xD;&#xA;  { Date: 1623106800000, Close: 5.29},&#xD;&#xA;  { Date: 1625612400000, Close: 5.99},&#xD;&#xA;  { Date: 1625698800000, Close: 6.99},&#xD;&#xA;  { Date: 1627513200000, Close: 7.39},&#xD;&#xA;  { Date: 1628982000000, Close: 6.79},&#xD;&#xA;  { Date: 1629932400000, Close: 6.19},&#xD;&#xA;  { Date: 1640905200000, Close: 7.49},&#xD;&#xA;  { Date: 1661900400000, Close: 7.99},&#xD;&#xA;  { Date: 1665788400000, Close: 7.39},&#xD;&#xA;  { Date: 1666738800000, Close: 6.79},&#xD;&#xA;  { Date: 1667516400000, Close: 5.99},&#xD;&#xA;  { Date: 1667862000000, Close: 5.09},&#xD;&#xA;  { Date: 1668812400000, Close: 4.49},&#xD;&#xA;  { Date: 1669762800000, Close: 3.89},&#xD;&#xA;  { Date: 1674255600000, Close: 3.99},&#xD;&#xA;  { Date: 1684537200000, Close: 4.19},&#xD;&#xA;  { Date: 1695337200000, Close: 4.99},&#xD;&#xA;  { Date: 1695337200000, Close: 4.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615417200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578610800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>033/132 - Rocket&#39;s Snorlax</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/033---rockets-snorlax/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/033---rockets-snorlax/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149401.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 19.99 on 26-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.89 on 13-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 3.49},&#xD;&#xA;  { Date: 1578870000000, Close: 2.89},&#xD;&#xA;  { Date: 1579906800000, Close: 2.99},&#xD;&#xA;  { Date: 1582239600000, Close: 3.99},&#xD;&#xA;  { Date: 1591138800000, Close: 11.99},&#xD;&#xA;  { Date: 1594422000000, Close: 12.99},&#xD;&#xA;  { Date: 1595372400000, Close: 11.99},&#xD;&#xA;  { Date: 1598050800000, Close: 10.49},&#xD;&#xA;  { Date: 1598655600000, Close: 10.99},&#xD;&#xA;  { Date: 1601679600000, Close: 9.99},&#xD;&#xA;  { Date: 1602025200000, Close: 9.49},&#xD;&#xA;  { Date: 1602543600000, Close: 9.99},&#xD;&#xA;  { Date: 1603148400000, Close: 10.49},&#xD;&#xA;  { Date: 1604358000000, Close: 10.99},&#xD;&#xA;  { Date: 1606518000000, Close: 11.99},&#xD;&#xA;  { Date: 1606777200000, Close: 12.99},&#xD;&#xA;  { Date: 1608159600000, Close: 13.99},&#xD;&#xA;  { Date: 1610146800000, Close: 14.99},&#xD;&#xA;  { Date: 1610665200000, Close: 15.99},&#xD;&#xA;  { Date: 1612306800000, Close: 16.99},&#xD;&#xA;  { Date: 1614294000000, Close: 19.99},&#xD;&#xA;  { Date: 1616626800000, Close: 17.99},&#xD;&#xA;  { Date: 1618527600000, Close: 18.99},&#xD;&#xA;  { Date: 1620342000000, Close: 17.99},&#xD;&#xA;  { Date: 1623020400000, Close: 16.49},&#xD;&#xA;  { Date: 1624921200000, Close: 15.99},&#xD;&#xA;  { Date: 1625698800000, Close: 16.99},&#xD;&#xA;  { Date: 1626303600000, Close: 17.49},&#xD;&#xA;  { Date: 1631833200000, Close: 15.99},&#xD;&#xA;  { Date: 1634511600000, Close: 14.49},&#xD;&#xA;  { Date: 1637276400000, Close: 13.49},&#xD;&#xA;  { Date: 1641510000000, Close: 14.99},&#xD;&#xA;  { Date: 1646262000000, Close: 17.99},&#xD;&#xA;  { Date: 1666393200000, Close: 16.99},&#xD;&#xA;  { Date: 1669071600000, Close: 15.49},&#xD;&#xA;  { Date: 1671836400000, Close: 15.99},&#xD;&#xA;  { Date: 1681426800000, Close: 17.99},&#xD;&#xA;  { Date: 1688079600000, Close: 19.99},&#xD;&#xA;  { Date: 1688079600000, Close: 19.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614294000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578870000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>034/132 - Sabrina&#39;s Venomoth</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/034---sabrinas-venomoth/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/034---sabrinas-venomoth/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149433.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 5.99 on 06-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.89 on 03-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578006000000, Close: 1.89},&#xD;&#xA;  { Date: 1583881200000, Close: 1.99},&#xD;&#xA;  { Date: 1583967600000, Close: 2.29},&#xD;&#xA;  { Date: 1584572400000, Close: 2.49},&#xD;&#xA;  { Date: 1585004400000, Close: 2.99},&#xD;&#xA;  { Date: 1585695600000, Close: 2.79},&#xD;&#xA;  { Date: 1586905200000, Close: 2.89},&#xD;&#xA;  { Date: 1587423600000, Close: 2.99},&#xD;&#xA;  { Date: 1589929200000, Close: 3.49},&#xD;&#xA;  { Date: 1591311600000, Close: 3.99},&#xD;&#xA;  { Date: 1591657200000, Close: 4.49},&#xD;&#xA;  { Date: 1592348400000, Close: 4.59},&#xD;&#xA;  { Date: 1593039600000, Close: 4.69},&#xD;&#xA;  { Date: 1596495600000, Close: 4.99},&#xD;&#xA;  { Date: 1598050800000, Close: 4.49},&#xD;&#xA;  { Date: 1600124400000, Close: 4.99},&#xD;&#xA;  { Date: 1602802800000, Close: 4.39},&#xD;&#xA;  { Date: 1603321200000, Close: 4.89},&#xD;&#xA;  { Date: 1604617200000, Close: 4.99},&#xD;&#xA;  { Date: 1609282800000, Close: 5.59},&#xD;&#xA;  { Date: 1609974000000, Close: 4.99},&#xD;&#xA;  { Date: 1611788400000, Close: 5.49},&#xD;&#xA;  { Date: 1614121200000, Close: 5.89},&#xD;&#xA;  { Date: 1614985200000, Close: 5.99},&#xD;&#xA;  { Date: 1617058800000, Close: 5.39},&#xD;&#xA;  { Date: 1617922800000, Close: 5.49},&#xD;&#xA;  { Date: 1618527600000, Close: 5.89},&#xD;&#xA;  { Date: 1623366000000, Close: 5.99},&#xD;&#xA;  { Date: 1624230000000, Close: 5.39},&#xD;&#xA;  { Date: 1624921200000, Close: 4.99},&#xD;&#xA;  { Date: 1626217200000, Close: 4.49},&#xD;&#xA;  { Date: 1627513200000, Close: 3.99},&#xD;&#xA;  { Date: 1632524400000, Close: 4.99},&#xD;&#xA;  { Date: 1634943600000, Close: 4.39},&#xD;&#xA;  { Date: 1642633200000, Close: 4.69},&#xD;&#xA;  { Date: 1645311600000, Close: 4.09},&#xD;&#xA;  { Date: 1647471600000, Close: 4.79},&#xD;&#xA;  { Date: 1653519600000, Close: 4.49},&#xD;&#xA;  { Date: 1664924400000, Close: 4.19},&#xD;&#xA;  { Date: 1665442800000, Close: 4.09},&#xD;&#xA;  { Date: 1667516400000, Close: 3.99},&#xD;&#xA;  { Date: 1675724400000, Close: 4.29},&#xD;&#xA;  { Date: 1677884400000, Close: 3.99},&#xD;&#xA;  { Date: 1686956400000, Close: 4.99},&#xD;&#xA;  { Date: 1686956400000, Close: 4.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614985200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578006000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>035/132 - Blaine&#39;s Growlithe</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/035---blaines-growlithe/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/035---blaines-growlithe/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148854.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 5.99 on 28-06-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.99},&#xD;&#xA;  { Date: 1591398000000, Close: 2.49},&#xD;&#xA;  { Date: 1593385200000, Close: 2.99},&#xD;&#xA;  { Date: 1593817200000, Close: 3.09},&#xD;&#xA;  { Date: 1600383600000, Close: 2.49},&#xD;&#xA;  { Date: 1602457200000, Close: 2.99},&#xD;&#xA;  { Date: 1606086000000, Close: 2.49},&#xD;&#xA;  { Date: 1606690800000, Close: 2.99},&#xD;&#xA;  { Date: 1609714800000, Close: 3.09},&#xD;&#xA;  { Date: 1615158000000, Close: 2.49},&#xD;&#xA;  { Date: 1617577200000, Close: 3.49},&#xD;&#xA;  { Date: 1619996400000, Close: 4.99},&#xD;&#xA;  { Date: 1624230000000, Close: 5.39},&#xD;&#xA;  { Date: 1624834800000, Close: 5.99},&#xD;&#xA;  { Date: 1627858800000, Close: 5.39},&#xD;&#xA;  { Date: 1628463600000, Close: 4.99},&#xD;&#xA;  { Date: 1630278000000, Close: 4.49},&#xD;&#xA;  { Date: 1632092400000, Close: 3.99},&#xD;&#xA;  { Date: 1634511600000, Close: 3.39},&#xD;&#xA;  { Date: 1635116400000, Close: 2.99},&#xD;&#xA;  { Date: 1636930800000, Close: 2.49},&#xD;&#xA;  { Date: 1639350000000, Close: 2.19},&#xD;&#xA;  { Date: 1653260400000, Close: 4.49},&#xD;&#xA;  { Date: 1656284400000, Close: 3.49},&#xD;&#xA;  { Date: 1657494000000, Close: 2.99},&#xD;&#xA;  { Date: 1664751600000, Close: 2.49},&#xD;&#xA;  { Date: 1666566000000, Close: 2.19},&#xD;&#xA;  { Date: 1667775600000, Close: 1.79},&#xD;&#xA;  { Date: 1668380400000, Close: 1.69},&#xD;&#xA;  { Date: 1668985200000, Close: 1.59},&#xD;&#xA;  { Date: 1670194800000, Close: 1.49},&#xD;&#xA;  { Date: 1672009200000, Close: 1.29},&#xD;&#xA;  { Date: 1673823600000, Close: 0.99},&#xD;&#xA;  { Date: 1678662000000, Close: 1.09},&#xD;&#xA;  { Date: 1687734000000, Close: 1.49},&#xD;&#xA;  { Date: 1699830000000, Close: 1.99},&#xD;&#xA;  { Date: 1701644400000, Close: 2.29},&#xD;&#xA;  { Date: 1701644400000, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1624834800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>036/132 - Blaine&#39;s Kangaskhan</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/036---blaines-kangaskhan/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/036---blaines-kangaskhan/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148855.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.99 on 19-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.89},&#xD;&#xA;  { Date: 1593817200000, Close: 1.19},&#xD;&#xA;  { Date: 1600383600000, Close: 2.49},&#xD;&#xA;  { Date: 1601852400000, Close: 2.99},&#xD;&#xA;  { Date: 1602457200000, Close: 2.79},&#xD;&#xA;  { Date: 1603062000000, Close: 2.99},&#xD;&#xA;  { Date: 1603666800000, Close: 3.09},&#xD;&#xA;  { Date: 1605481200000, Close: 3.29},&#xD;&#xA;  { Date: 1606086000000, Close: 2.99},&#xD;&#xA;  { Date: 1606690800000, Close: 3.09},&#xD;&#xA;  { Date: 1608505200000, Close: 2.49},&#xD;&#xA;  { Date: 1610319600000, Close: 2.89},&#xD;&#xA;  { Date: 1612134000000, Close: 2.99},&#xD;&#xA;  { Date: 1615762800000, Close: 3.49},&#xD;&#xA;  { Date: 1618786800000, Close: 4.99},&#xD;&#xA;  { Date: 1621810800000, Close: 4.39},&#xD;&#xA;  { Date: 1624230000000, Close: 3.79},&#xD;&#xA;  { Date: 1626044400000, Close: 2.99},&#xD;&#xA;  { Date: 1630882800000, Close: 2.49},&#xD;&#xA;  { Date: 1635116400000, Close: 2.99},&#xD;&#xA;  { Date: 1639954800000, Close: 3.49},&#xD;&#xA;  { Date: 1646002800000, Close: 2.59},&#xD;&#xA;  { Date: 1647212400000, Close: 2.49},&#xD;&#xA;  { Date: 1647817200000, Close: 2.69},&#xD;&#xA;  { Date: 1648422000000, Close: 2.49},&#xD;&#xA;  { Date: 1649026800000, Close: 2.39},&#xD;&#xA;  { Date: 1649631600000, Close: 2.29},&#xD;&#xA;  { Date: 1650841200000, Close: 2.19},&#xD;&#xA;  { Date: 1653865200000, Close: 1.99},&#xD;&#xA;  { Date: 1662332400000, Close: 2.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.39},&#xD;&#xA;  { Date: 1666566000000, Close: 1.89},&#xD;&#xA;  { Date: 1667775600000, Close: 1.79},&#xD;&#xA;  { Date: 1668985200000, Close: 1.59},&#xD;&#xA;  { Date: 1669590000000, Close: 1.49},&#xD;&#xA;  { Date: 1671404400000, Close: 1.39},&#xD;&#xA;  { Date: 1672009200000, Close: 1.09},&#xD;&#xA;  { Date: 1690153200000, Close: 2.49},&#xD;&#xA;  { Date: 1696201200000, Close: 2.99},&#xD;&#xA;  { Date: 1711926000000, Close: 2.49},&#xD;&#xA;  { Date: 1711926000000, Close: 2.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618786800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>037/132 - Blaine&#39;s Magmar</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/037---blaines-magmar/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/037---blaines-magmar/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148858.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 6.99 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1591398000000, Close: 1.29},&#xD;&#xA;  { Date: 1593817200000, Close: 1.99},&#xD;&#xA;  { Date: 1600383600000, Close: 2.99},&#xD;&#xA;  { Date: 1601852400000, Close: 3.09},&#xD;&#xA;  { Date: 1603666800000, Close: 3.99},&#xD;&#xA;  { Date: 1604876400000, Close: 4.99},&#xD;&#xA;  { Date: 1606086000000, Close: 5.99},&#xD;&#xA;  { Date: 1607295600000, Close: 6.99},&#xD;&#xA;  { Date: 1609110000000, Close: 5.99},&#xD;&#xA;  { Date: 1610924400000, Close: 5.49},&#xD;&#xA;  { Date: 1612738800000, Close: 4.89},&#xD;&#xA;  { Date: 1615158000000, Close: 4.29},&#xD;&#xA;  { Date: 1622415600000, Close: 3.69},&#xD;&#xA;  { Date: 1623625200000, Close: 3.49},&#xD;&#xA;  { Date: 1625439600000, Close: 1.99},&#xD;&#xA;  { Date: 1626044400000, Close: 1.79},&#xD;&#xA;  { Date: 1627254000000, Close: 1.99},&#xD;&#xA;  { Date: 1629068400000, Close: 2.29},&#xD;&#xA;  { Date: 1633302000000, Close: 2.49},&#xD;&#xA;  { Date: 1635116400000, Close: 2.99},&#xD;&#xA;  { Date: 1637535600000, Close: 2.39},&#xD;&#xA;  { Date: 1639350000000, Close: 2.09},&#xD;&#xA;  { Date: 1639954800000, Close: 1.99},&#xD;&#xA;  { Date: 1643583600000, Close: 2.49},&#xD;&#xA;  { Date: 1662332400000, Close: 2.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.39},&#xD;&#xA;  { Date: 1665961200000, Close: 2.29},&#xD;&#xA;  { Date: 1667775600000, Close: 1.79},&#xD;&#xA;  { Date: 1668380400000, Close: 1.49},&#xD;&#xA;  { Date: 1671404400000, Close: 1.19},&#xD;&#xA;  { Date: 1672009200000, Close: 0.99},&#xD;&#xA;  { Date: 1680476400000, Close: 1.29},&#xD;&#xA;  { Date: 1696201200000, Close: 1.99},&#xD;&#xA;  { Date: 1707692400000, Close: 2.49},&#xD;&#xA;  { Date: 1708297200000, Close: 2.29},&#xD;&#xA;  { Date: 1713740400000, Close: 2.99},&#xD;&#xA;  { Date: 1713740400000, Close: 2.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>038/132 - Brock&#39;s Geodude</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/038---brocks-geodude/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/038---brocks-geodude/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148878.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 18-12-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.99},&#xD;&#xA;  { Date: 1601852400000, Close: 1.09},&#xD;&#xA;  { Date: 1607295600000, Close: 1.49},&#xD;&#xA;  { Date: 1609110000000, Close: 1.19},&#xD;&#xA;  { Date: 1614553200000, Close: 2.09},&#xD;&#xA;  { Date: 1615158000000, Close: 2.15},&#xD;&#xA;  { Date: 1618182000000, Close: 2.19},&#xD;&#xA;  { Date: 1618786800000, Close: 1.99},&#xD;&#xA;  { Date: 1620601200000, Close: 1.89},&#xD;&#xA;  { Date: 1621810800000, Close: 1.79},&#xD;&#xA;  { Date: 1623625200000, Close: 1.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.99},&#xD;&#xA;  { Date: 1646002800000, Close: 1.29},&#xD;&#xA;  { Date: 1648422000000, Close: 1.09},&#xD;&#xA;  { Date: 1655679600000, Close: 0.99},&#xD;&#xA;  { Date: 1662332400000, Close: 1.09},&#xD;&#xA;  { Date: 1667775600000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 0.89},&#xD;&#xA;  { Date: 1672009200000, Close: 0.79},&#xD;&#xA;  { Date: 1681686000000, Close: 1.19},&#xD;&#xA;  { Date: 1688338800000, Close: 1.49},&#xD;&#xA;  { Date: 1696201200000, Close: 1.99},&#xD;&#xA;  { Date: 1702854000000, Close: 2.49},&#xD;&#xA;  { Date: 1704063600000, Close: 2.29},&#xD;&#xA;  { Date: 1704063600000, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1702854000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>039/132 - Brock&#39;s Golbat</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/039---brocks-golbat/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/039---brocks-golbat/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148880.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 30-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1593817200000, Close: 1.09},&#xD;&#xA;  { Date: 1600383600000, Close: 2.29},&#xD;&#xA;  { Date: 1602457200000, Close: 1.99},&#xD;&#xA;  { Date: 1604876400000, Close: 1.79},&#xD;&#xA;  { Date: 1606690800000, Close: 2.99},&#xD;&#xA;  { Date: 1616972400000, Close: 2.39},&#xD;&#xA;  { Date: 1618182000000, Close: 2.49},&#xD;&#xA;  { Date: 1620601200000, Close: 2.29},&#xD;&#xA;  { Date: 1622415600000, Close: 1.99},&#xD;&#xA;  { Date: 1626649200000, Close: 1.79},&#xD;&#xA;  { Date: 1628463600000, Close: 1.49},&#xD;&#xA;  { Date: 1630278000000, Close: 1.19},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1649026800000, Close: 1.79},&#xD;&#xA;  { Date: 1653865200000, Close: 1.99},&#xD;&#xA;  { Date: 1665356400000, Close: 1.69},&#xD;&#xA;  { Date: 1665961200000, Close: 1.49},&#xD;&#xA;  { Date: 1667775600000, Close: 1.09},&#xD;&#xA;  { Date: 1677452400000, Close: 0.99},&#xD;&#xA;  { Date: 1691967600000, Close: 1.49},&#xD;&#xA;  { Date: 1704668400000, Close: 1.79},&#xD;&#xA;  { Date: 1711321200000, Close: 1.99},&#xD;&#xA;  { Date: 1711321200000, Close: 1.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606690800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>040/132 - Brock&#39;s Graveler</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/040---brocks-graveler/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/040---brocks-graveler/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148882.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.09 on 25-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 09-01-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.99},&#xD;&#xA;  { Date: 1593385200000, Close: 1.09},&#xD;&#xA;  { Date: 1600383600000, Close: 2.09},&#xD;&#xA;  { Date: 1602457200000, Close: 2.49},&#xD;&#xA;  { Date: 1603666800000, Close: 2.99},&#xD;&#xA;  { Date: 1605481200000, Close: 2.49},&#xD;&#xA;  { Date: 1606086000000, Close: 2.99},&#xD;&#xA;  { Date: 1609110000000, Close: 2.49},&#xD;&#xA;  { Date: 1610319600000, Close: 2.99},&#xD;&#xA;  { Date: 1611529200000, Close: 3.09},&#xD;&#xA;  { Date: 1613343600000, Close: 2.99},&#xD;&#xA;  { Date: 1615762800000, Close: 2.39},&#xD;&#xA;  { Date: 1616972400000, Close: 1.99},&#xD;&#xA;  { Date: 1621810800000, Close: 1.79},&#xD;&#xA;  { Date: 1623625200000, Close: 1.49},&#xD;&#xA;  { Date: 1624230000000, Close: 1.29},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1639350000000, Close: 0.89},&#xD;&#xA;  { Date: 1648422000000, Close: 0.79},&#xD;&#xA;  { Date: 1662332400000, Close: 0.89},&#xD;&#xA;  { Date: 1666566000000, Close: 0.79},&#xD;&#xA;  { Date: 1668380400000, Close: 0.69},&#xD;&#xA;  { Date: 1671404400000, Close: 0.59},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.59},&#xD;&#xA;  { Date: 1693177200000, Close: 1.49},&#xD;&#xA;  { Date: 1696201200000, Close: 1.79},&#xD;&#xA;  { Date: 1704668400000, Close: 1.99},&#xD;&#xA;  { Date: 1713135600000, Close: 2.29},&#xD;&#xA;  { Date: 1713135600000, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1611529200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1673218800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>041/132 - Brock&#39;s Lickitung</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/041---brocks-lickitung/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/041---brocks-lickitung/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148883.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 15-04-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 0.99},&#xD;&#xA;  { Date: 1603666800000, Close: 1.09},&#xD;&#xA;  { Date: 1606086000000, Close: 1.49},&#xD;&#xA;  { Date: 1625439600000, Close: 1.19},&#xD;&#xA;  { Date: 1626044400000, Close: 0.99},&#xD;&#xA;  { Date: 1646607600000, Close: 1.39},&#xD;&#xA;  { Date: 1648422000000, Close: 1.59},&#xD;&#xA;  { Date: 1653865200000, Close: 1.99},&#xD;&#xA;  { Date: 1665356400000, Close: 1.49},&#xD;&#xA;  { Date: 1665961200000, Close: 1.09},&#xD;&#xA;  { Date: 1682290800000, Close: 1.19},&#xD;&#xA;  { Date: 1684710000000, Close: 1.49},&#xD;&#xA;  { Date: 1685314800000, Close: 1.29},&#xD;&#xA;  { Date: 1691967600000, Close: 2.29},&#xD;&#xA;  { Date: 1702854000000, Close: 2.49},&#xD;&#xA;  { Date: 1713135600000, Close: 2.99},&#xD;&#xA;  { Date: 1713135600000, Close: 2.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1713135600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>042/132 - Erika&#39;s Dratini</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/042---erikas-dratini/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/042---erikas-dratini/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149015.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.99 on 01-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1591398000000, Close: 0.89},&#xD;&#xA;  { Date: 1593385200000, Close: 1.09},&#xD;&#xA;  { Date: 1600383600000, Close: 2.29},&#xD;&#xA;  { Date: 1602457200000, Close: 1.99},&#xD;&#xA;  { Date: 1603666800000, Close: 2.19},&#xD;&#xA;  { Date: 1604876400000, Close: 2.29},&#xD;&#xA;  { Date: 1605481200000, Close: 2.99},&#xD;&#xA;  { Date: 1606086000000, Close: 2.49},&#xD;&#xA;  { Date: 1607295600000, Close: 3.99},&#xD;&#xA;  { Date: 1610319600000, Close: 4.49},&#xD;&#xA;  { Date: 1612134000000, Close: 4.99},&#xD;&#xA;  { Date: 1615762800000, Close: 4.49},&#xD;&#xA;  { Date: 1622415600000, Close: 3.99},&#xD;&#xA;  { Date: 1624230000000, Close: 3.49},&#xD;&#xA;  { Date: 1626044400000, Close: 2.99},&#xD;&#xA;  { Date: 1627254000000, Close: 2.49},&#xD;&#xA;  { Date: 1631487600000, Close: 2.19},&#xD;&#xA;  { Date: 1633302000000, Close: 1.99},&#xD;&#xA;  { Date: 1641769200000, Close: 2.49},&#xD;&#xA;  { Date: 1643583600000, Close: 2.69},&#xD;&#xA;  { Date: 1647212400000, Close: 3.09},&#xD;&#xA;  { Date: 1647817200000, Close: 3.19},&#xD;&#xA;  { Date: 1648422000000, Close: 3.09},&#xD;&#xA;  { Date: 1650236400000, Close: 2.99},&#xD;&#xA;  { Date: 1651446000000, Close: 2.89},&#xD;&#xA;  { Date: 1654470000000, Close: 2.79},&#xD;&#xA;  { Date: 1662332400000, Close: 2.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.39},&#xD;&#xA;  { Date: 1665961200000, Close: 1.99},&#xD;&#xA;  { Date: 1672009200000, Close: 1.79},&#xD;&#xA;  { Date: 1678662000000, Close: 1.99},&#xD;&#xA;  { Date: 1688338800000, Close: 2.59},&#xD;&#xA;  { Date: 1702854000000, Close: 2.99},&#xD;&#xA;  { Date: 1708297200000, Close: 3.49},&#xD;&#xA;  { Date: 1713135600000, Close: 3.99},&#xD;&#xA;  { Date: 1713135600000, Close: 3.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1612134000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>043/132 - Erika&#39;s Exeggcute</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/043---erikas-exeggcute/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/043---erikas-exeggcute/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149017.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 08-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.89},&#xD;&#xA;  { Date: 1593385200000, Close: 0.99},&#xD;&#xA;  { Date: 1608505200000, Close: 1.59},&#xD;&#xA;  { Date: 1610319600000, Close: 2.29},&#xD;&#xA;  { Date: 1612134000000, Close: 2.39},&#xD;&#xA;  { Date: 1612738800000, Close: 2.99},&#xD;&#xA;  { Date: 1616972400000, Close: 2.49},&#xD;&#xA;  { Date: 1618182000000, Close: 2.79},&#xD;&#xA;  { Date: 1618786800000, Close: 2.49},&#xD;&#xA;  { Date: 1621206000000, Close: 2.29},&#xD;&#xA;  { Date: 1623020400000, Close: 1.99},&#xD;&#xA;  { Date: 1624834800000, Close: 1.79},&#xD;&#xA;  { Date: 1628463600000, Close: 1.49},&#xD;&#xA;  { Date: 1629673200000, Close: 1.79},&#xD;&#xA;  { Date: 1632697200000, Close: 1.49},&#xD;&#xA;  { Date: 1634511600000, Close: 1.19},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1656889200000, Close: 2.49},&#xD;&#xA;  { Date: 1665356400000, Close: 2.19},&#xD;&#xA;  { Date: 1667170800000, Close: 1.89},&#xD;&#xA;  { Date: 1668985200000, Close: 1.49},&#xD;&#xA;  { Date: 1670799600000, Close: 1.19},&#xD;&#xA;  { Date: 1672614000000, Close: 0.89},&#xD;&#xA;  { Date: 1691967600000, Close: 1.19},&#xD;&#xA;  { Date: 1704668400000, Close: 0.99},&#xD;&#xA;  { Date: 1717369200000, Close: 1.29},&#xD;&#xA;  { Date: 1717369200000, Close: 1.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1612738800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>044/132 - Erika&#39;s Exeggutor</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/044---erikas-exeggutor/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/044---erikas-exeggutor/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149018.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 12-10-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.99},&#xD;&#xA;  { Date: 1600383600000, Close: 2.49},&#xD;&#xA;  { Date: 1601247600000, Close: 2.89},&#xD;&#xA;  { Date: 1602457200000, Close: 2.99},&#xD;&#xA;  { Date: 1604271600000, Close: 2.39},&#xD;&#xA;  { Date: 1604876400000, Close: 2.29},&#xD;&#xA;  { Date: 1606086000000, Close: 2.49},&#xD;&#xA;  { Date: 1607295600000, Close: 2.99},&#xD;&#xA;  { Date: 1615762800000, Close: 2.39},&#xD;&#xA;  { Date: 1616367600000, Close: 1.99},&#xD;&#xA;  { Date: 1619391600000, Close: 1.79},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1623020400000, Close: 1.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.99},&#xD;&#xA;  { Date: 1629068400000, Close: 1.29},&#xD;&#xA;  { Date: 1629673200000, Close: 1.49},&#xD;&#xA;  { Date: 1632092400000, Close: 1.19},&#xD;&#xA;  { Date: 1635116400000, Close: 0.89},&#xD;&#xA;  { Date: 1649026800000, Close: 1.99},&#xD;&#xA;  { Date: 1653260400000, Close: 2.29},&#xD;&#xA;  { Date: 1655679600000, Close: 1.99},&#xD;&#xA;  { Date: 1656284400000, Close: 1.79},&#xD;&#xA;  { Date: 1658098800000, Close: 1.49},&#xD;&#xA;  { Date: 1680476400000, Close: 1.09},&#xD;&#xA;  { Date: 1684710000000, Close: 1.29},&#xD;&#xA;  { Date: 1688338800000, Close: 1.49},&#xD;&#xA;  { Date: 1693177200000, Close: 1.59},&#xD;&#xA;  { Date: 1694991600000, Close: 1.49},&#xD;&#xA;  { Date: 1722207600000, Close: 1.79},&#xD;&#xA;  { Date: 1722207600000, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1602457200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>045/132 - Erika&#39;s Gloom</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/045---erikas-gloom/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/045---erikas-gloom/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149019.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 11-03-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 0.99},&#xD;&#xA;  { Date: 1607295600000, Close: 1.09},&#xD;&#xA;  { Date: 1614553200000, Close: 1.19},&#xD;&#xA;  { Date: 1615158000000, Close: 0.89},&#xD;&#xA;  { Date: 1619391600000, Close: 0.99},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1635721200000, Close: 1.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.99},&#xD;&#xA;  { Date: 1650236400000, Close: 1.49},&#xD;&#xA;  { Date: 1665356400000, Close: 1.19},&#xD;&#xA;  { Date: 1666566000000, Close: 0.99},&#xD;&#xA;  { Date: 1668380400000, Close: 0.89},&#xD;&#xA;  { Date: 1671404400000, Close: 0.79},&#xD;&#xA;  { Date: 1678662000000, Close: 1.09},&#xD;&#xA;  { Date: 1686524400000, Close: 1.19},&#xD;&#xA;  { Date: 1696201200000, Close: 1.49},&#xD;&#xA;  { Date: 1699830000000, Close: 1.79},&#xD;&#xA;  { Date: 1702249200000, Close: 1.49},&#xD;&#xA;  { Date: 1710111600000, Close: 1.99},&#xD;&#xA;  { Date: 1715554800000, Close: 1.79},&#xD;&#xA;  { Date: 1715554800000, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1710111600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>046/132 - Erika&#39;s Gloom</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/046---erikas-gloom/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/046---erikas-gloom/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149020.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.99},&#xD;&#xA;  { Date: 1593817200000, Close: 1.59},&#xD;&#xA;  { Date: 1600383600000, Close: 2.29},&#xD;&#xA;  { Date: 1602457200000, Close: 1.99},&#xD;&#xA;  { Date: 1603666800000, Close: 2.49},&#xD;&#xA;  { Date: 1606086000000, Close: 2.89},&#xD;&#xA;  { Date: 1607295600000, Close: 2.99},&#xD;&#xA;  { Date: 1609714800000, Close: 2.39},&#xD;&#xA;  { Date: 1611529200000, Close: 2.49},&#xD;&#xA;  { Date: 1612738800000, Close: 2.99},&#xD;&#xA;  { Date: 1616972400000, Close: 2.49},&#xD;&#xA;  { Date: 1618182000000, Close: 2.99},&#xD;&#xA;  { Date: 1626044400000, Close: 2.49},&#xD;&#xA;  { Date: 1626649200000, Close: 2.69},&#xD;&#xA;  { Date: 1628463600000, Close: 2.39},&#xD;&#xA;  { Date: 1629068400000, Close: 2.29},&#xD;&#xA;  { Date: 1633302000000, Close: 2.49},&#xD;&#xA;  { Date: 1635116400000, Close: 2.19},&#xD;&#xA;  { Date: 1639954800000, Close: 2.49},&#xD;&#xA;  { Date: 1665961200000, Close: 2.19},&#xD;&#xA;  { Date: 1667775600000, Close: 1.69},&#xD;&#xA;  { Date: 1668985200000, Close: 1.59},&#xD;&#xA;  { Date: 1678662000000, Close: 1.49},&#xD;&#xA;  { Date: 1684710000000, Close: 1.59},&#xD;&#xA;  { Date: 1686524400000, Close: 1.69},&#xD;&#xA;  { Date: 1688338800000, Close: 1.79},&#xD;&#xA;  { Date: 1696201200000, Close: 1.99},&#xD;&#xA;  { Date: 1699830000000, Close: 2.29},&#xD;&#xA;  { Date: 1716159600000, Close: 1.99},&#xD;&#xA;  { Date: 1716159600000, Close: 1.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>047/132 - Erika&#39;s Oddish</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/047---erikas-oddish/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/047---erikas-oddish/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149027.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.79 on 23-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1621206000000, Close: 0.89},&#xD;&#xA;  { Date: 1648422000000, Close: 1.79},&#xD;&#xA;  { Date: 1653260400000, Close: 2.79},&#xD;&#xA;  { Date: 1665356400000, Close: 2.49},&#xD;&#xA;  { Date: 1665961200000, Close: 2.29},&#xD;&#xA;  { Date: 1667775600000, Close: 1.79},&#xD;&#xA;  { Date: 1670194800000, Close: 1.49},&#xD;&#xA;  { Date: 1671404400000, Close: 1.19},&#xD;&#xA;  { Date: 1673218800000, Close: 0.99},&#xD;&#xA;  { Date: 1687734000000, Close: 1.49},&#xD;&#xA;  { Date: 1688943600000, Close: 1.39},&#xD;&#xA;  { Date: 1691967600000, Close: 1.99},&#xD;&#xA;  { Date: 1702854000000, Close: 2.29},&#xD;&#xA;  { Date: 1703458800000, Close: 1.99},&#xD;&#xA;  { Date: 1716159600000, Close: 2.29},&#xD;&#xA;  { Date: 1716159600000, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1653260400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>048/132 - Erika&#39;s Weepinbell</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/048---erikas-weepinbell/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/048---erikas-weepinbell/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149034.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 8.99 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.89},&#xD;&#xA;  { Date: 1591398000000, Close: 1.49},&#xD;&#xA;  { Date: 1593817200000, Close: 1.99},&#xD;&#xA;  { Date: 1600383600000, Close: 4.99},&#xD;&#xA;  { Date: 1602457200000, Close: 4.69},&#xD;&#xA;  { Date: 1604876400000, Close: 4.49},&#xD;&#xA;  { Date: 1607295600000, Close: 4.99},&#xD;&#xA;  { Date: 1608505200000, Close: 5.99},&#xD;&#xA;  { Date: 1609714800000, Close: 6.99},&#xD;&#xA;  { Date: 1612134000000, Close: 6.59},&#xD;&#xA;  { Date: 1613948400000, Close: 5.99},&#xD;&#xA;  { Date: 1617577200000, Close: 7.99},&#xD;&#xA;  { Date: 1619391600000, Close: 8.99},&#xD;&#xA;  { Date: 1624834800000, Close: 8.39},&#xD;&#xA;  { Date: 1627254000000, Close: 8.99},&#xD;&#xA;  { Date: 1628463600000, Close: 8.39},&#xD;&#xA;  { Date: 1630278000000, Close: 7.79},&#xD;&#xA;  { Date: 1632092400000, Close: 7.39},&#xD;&#xA;  { Date: 1633906800000, Close: 6.79},&#xD;&#xA;  { Date: 1636326000000, Close: 5.49},&#xD;&#xA;  { Date: 1646607600000, Close: 4.89},&#xD;&#xA;  { Date: 1647817200000, Close: 4.49},&#xD;&#xA;  { Date: 1653865200000, Close: 3.99},&#xD;&#xA;  { Date: 1662332400000, Close: 3.89},&#xD;&#xA;  { Date: 1665356400000, Close: 3.99},&#xD;&#xA;  { Date: 1667170800000, Close: 3.39},&#xD;&#xA;  { Date: 1674428400000, Close: 3.49},&#xD;&#xA;  { Date: 1696201200000, Close: 4.49},&#xD;&#xA;  { Date: 1704668400000, Close: 4.99},&#xD;&#xA;  { Date: 1704668400000, Close: 4.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>049/132 - Erika&#39;s Weepinbell</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/049---erikas-weepinbell/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/049---erikas-weepinbell/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149035.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 0.89},&#xD;&#xA;  { Date: 1604271600000, Close: 0.99},&#xD;&#xA;  { Date: 1606086000000, Close: 1.99},&#xD;&#xA;  { Date: 1606690800000, Close: 2.49},&#xD;&#xA;  { Date: 1607295600000, Close: 2.99},&#xD;&#xA;  { Date: 1610924400000, Close: 2.49},&#xD;&#xA;  { Date: 1612738800000, Close: 2.29},&#xD;&#xA;  { Date: 1614553200000, Close: 1.99},&#xD;&#xA;  { Date: 1616367600000, Close: 1.79},&#xD;&#xA;  { Date: 1620601200000, Close: 1.49},&#xD;&#xA;  { Date: 1625439600000, Close: 1.29},&#xD;&#xA;  { Date: 1626044400000, Close: 1.19},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1646002800000, Close: 0.99},&#xD;&#xA;  { Date: 1652655600000, Close: 1.09},&#xD;&#xA;  { Date: 1653260400000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.79},&#xD;&#xA;  { Date: 1684710000000, Close: 0.89},&#xD;&#xA;  { Date: 1696201200000, Close: 0.99},&#xD;&#xA;  { Date: 1707692400000, Close: 1.49},&#xD;&#xA;  { Date: 1727046000000, Close: 1.99},&#xD;&#xA;  { Date: 1727046000000, Close: 1.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>050/132 - Lt. Surge&#39;s Magnemite</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/050---lt.-surges-magnemite/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/050---lt.-surges-magnemite/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149210.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 22-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.99},&#xD;&#xA;  { Date: 1600383600000, Close: 1.09},&#xD;&#xA;  { Date: 1607295600000, Close: 1.29},&#xD;&#xA;  { Date: 1610319600000, Close: 1.39},&#xD;&#xA;  { Date: 1613948400000, Close: 2.49},&#xD;&#xA;  { Date: 1615762800000, Close: 2.19},&#xD;&#xA;  { Date: 1616972400000, Close: 1.99},&#xD;&#xA;  { Date: 1618182000000, Close: 1.79},&#xD;&#xA;  { Date: 1620601200000, Close: 1.49},&#xD;&#xA;  { Date: 1621206000000, Close: 1.29},&#xD;&#xA;  { Date: 1622415600000, Close: 1.35},&#xD;&#xA;  { Date: 1625439600000, Close: 0.99},&#xD;&#xA;  { Date: 1632697200000, Close: 1.09},&#xD;&#xA;  { Date: 1643583600000, Close: 1.19},&#xD;&#xA;  { Date: 1645398000000, Close: 0.89},&#xD;&#xA;  { Date: 1647212400000, Close: 0.79},&#xD;&#xA;  { Date: 1653865200000, Close: 1.99},&#xD;&#xA;  { Date: 1657494000000, Close: 2.29},&#xD;&#xA;  { Date: 1665356400000, Close: 1.99},&#xD;&#xA;  { Date: 1667170800000, Close: 1.69},&#xD;&#xA;  { Date: 1667775600000, Close: 1.49},&#xD;&#xA;  { Date: 1670799600000, Close: 1.29},&#xD;&#xA;  { Date: 1671404400000, Close: 1.09},&#xD;&#xA;  { Date: 1676847600000, Close: 0.69},&#xD;&#xA;  { Date: 1684710000000, Close: 0.79},&#xD;&#xA;  { Date: 1684710000000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1613948400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>051/132 - Lt. Surge&#39;s Raticate</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/051---lt.-surges-raticate/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/051---lt.-surges-raticate/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149218.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 23-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.59},&#xD;&#xA;  { Date: 1601247600000, Close: 0.89},&#xD;&#xA;  { Date: 1603062000000, Close: 0.99},&#xD;&#xA;  { Date: 1606086000000, Close: 2.49},&#xD;&#xA;  { Date: 1608505200000, Close: 1.99},&#xD;&#xA;  { Date: 1610319600000, Close: 1.79},&#xD;&#xA;  { Date: 1610924400000, Close: 1.89},&#xD;&#xA;  { Date: 1615762800000, Close: 1.79},&#xD;&#xA;  { Date: 1617577200000, Close: 1.49},&#xD;&#xA;  { Date: 1620601200000, Close: 1.29},&#xD;&#xA;  { Date: 1622415600000, Close: 0.99},&#xD;&#xA;  { Date: 1623020400000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 0.99},&#xD;&#xA;  { Date: 1629673200000, Close: 0.89},&#xD;&#xA;  { Date: 1653865200000, Close: 1.99},&#xD;&#xA;  { Date: 1662332400000, Close: 2.49},&#xD;&#xA;  { Date: 1665356400000, Close: 2.19},&#xD;&#xA;  { Date: 1667170800000, Close: 1.89},&#xD;&#xA;  { Date: 1668985200000, Close: 1.49},&#xD;&#xA;  { Date: 1671404400000, Close: 1.19},&#xD;&#xA;  { Date: 1673218800000, Close: 0.69},&#xD;&#xA;  { Date: 1696201200000, Close: 0.89},&#xD;&#xA;  { Date: 1696201200000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606086000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>052/132 - Lt. Surge&#39;s Spearow</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/052---lt.-surges-spearow/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/052---lt.-surges-spearow/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149221.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 23-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.59},&#xD;&#xA;  { Date: 1603062000000, Close: 0.69},&#xD;&#xA;  { Date: 1603666800000, Close: 0.99},&#xD;&#xA;  { Date: 1606086000000, Close: 1.09},&#xD;&#xA;  { Date: 1608505200000, Close: 0.99},&#xD;&#xA;  { Date: 1612738800000, Close: 1.09},&#xD;&#xA;  { Date: 1614553200000, Close: 1.19},&#xD;&#xA;  { Date: 1615762800000, Close: 1.09},&#xD;&#xA;  { Date: 1621206000000, Close: 0.99},&#xD;&#xA;  { Date: 1628463600000, Close: 0.89},&#xD;&#xA;  { Date: 1633906800000, Close: 0.79},&#xD;&#xA;  { Date: 1639350000000, Close: 0.69},&#xD;&#xA;  { Date: 1653260400000, Close: 1.29},&#xD;&#xA;  { Date: 1655074800000, Close: 0.99},&#xD;&#xA;  { Date: 1672614000000, Close: 0.89},&#xD;&#xA;  { Date: 1684710000000, Close: 0.69},&#xD;&#xA;  { Date: 1702854000000, Close: 0.79},&#xD;&#xA;  { Date: 1704063600000, Close: 0.59},&#xD;&#xA;  { Date: 1708297200000, Close: 0.69},&#xD;&#xA;  { Date: 1708297200000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1653260400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>053/132 - Misty&#39;s Poliwhirl</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/053---mistys-poliwhirl/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/053---mistys-poliwhirl/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149277.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 18-04-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1601247600000, Close: 0.99},&#xD;&#xA;  { Date: 1601852400000, Close: 1.29},&#xD;&#xA;  { Date: 1603666800000, Close: 1.79},&#xD;&#xA;  { Date: 1606086000000, Close: 2.29},&#xD;&#xA;  { Date: 1608505200000, Close: 1.99},&#xD;&#xA;  { Date: 1610319600000, Close: 1.89},&#xD;&#xA;  { Date: 1610924400000, Close: 1.99},&#xD;&#xA;  { Date: 1616367600000, Close: 1.95},&#xD;&#xA;  { Date: 1619391600000, Close: 1.99},&#xD;&#xA;  { Date: 1624834800000, Close: 1.79},&#xD;&#xA;  { Date: 1625439600000, Close: 2.09},&#xD;&#xA;  { Date: 1627254000000, Close: 1.99},&#xD;&#xA;  { Date: 1629068400000, Close: 1.79},&#xD;&#xA;  { Date: 1632697200000, Close: 1.99},&#xD;&#xA;  { Date: 1635721200000, Close: 1.69},&#xD;&#xA;  { Date: 1644793200000, Close: 1.99},&#xD;&#xA;  { Date: 1650236400000, Close: 2.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.39},&#xD;&#xA;  { Date: 1665961200000, Close: 1.99},&#xD;&#xA;  { Date: 1667775600000, Close: 1.69},&#xD;&#xA;  { Date: 1670799600000, Close: 1.49},&#xD;&#xA;  { Date: 1671404400000, Close: 1.29},&#xD;&#xA;  { Date: 1673218800000, Close: 1.09},&#xD;&#xA;  { Date: 1674428400000, Close: 1.29},&#xD;&#xA;  { Date: 1685314800000, Close: 1.99},&#xD;&#xA;  { Date: 1704668400000, Close: 2.49},&#xD;&#xA;  { Date: 1708902000000, Close: 2.29},&#xD;&#xA;  { Date: 1719183600000, Close: 1.99},&#xD;&#xA;  { Date: 1719183600000, Close: 1.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1650236400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>054/132 - Misty&#39;s Psyduck</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/054---mistys-psyduck/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/054---mistys-psyduck/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149279.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.59 on 08-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.79},&#xD;&#xA;  { Date: 1610319600000, Close: 1.49},&#xD;&#xA;  { Date: 1612134000000, Close: 1.79},&#xD;&#xA;  { Date: 1612738800000, Close: 2.29},&#xD;&#xA;  { Date: 1615158000000, Close: 2.59},&#xD;&#xA;  { Date: 1617577200000, Close: 2.49},&#xD;&#xA;  { Date: 1618182000000, Close: 2.55},&#xD;&#xA;  { Date: 1618786800000, Close: 2.29},&#xD;&#xA;  { Date: 1621810800000, Close: 1.99},&#xD;&#xA;  { Date: 1623625200000, Close: 1.89},&#xD;&#xA;  { Date: 1624230000000, Close: 1.99},&#xD;&#xA;  { Date: 1625439600000, Close: 1.89},&#xD;&#xA;  { Date: 1627254000000, Close: 1.79},&#xD;&#xA;  { Date: 1629673200000, Close: 1.49},&#xD;&#xA;  { Date: 1632092400000, Close: 1.79},&#xD;&#xA;  { Date: 1635116400000, Close: 1.49},&#xD;&#xA;  { Date: 1635721200000, Close: 1.29},&#xD;&#xA;  { Date: 1646002800000, Close: 1.49},&#xD;&#xA;  { Date: 1649631600000, Close: 1.29},&#xD;&#xA;  { Date: 1653260400000, Close: 1.49},&#xD;&#xA;  { Date: 1665961200000, Close: 1.29},&#xD;&#xA;  { Date: 1678662000000, Close: 1.19},&#xD;&#xA;  { Date: 1685314800000, Close: 1.49},&#xD;&#xA;  { Date: 1686524400000, Close: 1.29},&#xD;&#xA;  { Date: 1688338800000, Close: 1.39},&#xD;&#xA;  { Date: 1696201200000, Close: 2.49},&#xD;&#xA;  { Date: 1702249200000, Close: 2.19},&#xD;&#xA;  { Date: 1708902000000, Close: 1.99},&#xD;&#xA;  { Date: 1716159600000, Close: 2.29},&#xD;&#xA;  { Date: 1716159600000, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615158000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>055/132 - Misty&#39;s Seaking</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/055---mistys-seaking/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/055---mistys-seaking/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149281.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.09 on 04-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1591398000000, Close: 0.89},&#xD;&#xA;  { Date: 1593385200000, Close: 1.19},&#xD;&#xA;  { Date: 1600383600000, Close: 1.49},&#xD;&#xA;  { Date: 1603062000000, Close: 1.59},&#xD;&#xA;  { Date: 1606690800000, Close: 1.99},&#xD;&#xA;  { Date: 1607295600000, Close: 2.49},&#xD;&#xA;  { Date: 1609714800000, Close: 3.09},&#xD;&#xA;  { Date: 1611529200000, Close: 2.49},&#xD;&#xA;  { Date: 1613343600000, Close: 2.59},&#xD;&#xA;  { Date: 1615158000000, Close: 1.99},&#xD;&#xA;  { Date: 1617577200000, Close: 2.29},&#xD;&#xA;  { Date: 1623625200000, Close: 1.99},&#xD;&#xA;  { Date: 1624230000000, Close: 1.79},&#xD;&#xA;  { Date: 1625439600000, Close: 1.49},&#xD;&#xA;  { Date: 1626044400000, Close: 1.59},&#xD;&#xA;  { Date: 1627254000000, Close: 1.49},&#xD;&#xA;  { Date: 1629068400000, Close: 1.79},&#xD;&#xA;  { Date: 1629673200000, Close: 1.99},&#xD;&#xA;  { Date: 1634511600000, Close: 2.29},&#xD;&#xA;  { Date: 1646002800000, Close: 1.79},&#xD;&#xA;  { Date: 1648422000000, Close: 1.69},&#xD;&#xA;  { Date: 1653260400000, Close: 1.99},&#xD;&#xA;  { Date: 1665356400000, Close: 1.59},&#xD;&#xA;  { Date: 1665961200000, Close: 1.49},&#xD;&#xA;  { Date: 1667775600000, Close: 1.09},&#xD;&#xA;  { Date: 1674428400000, Close: 0.99},&#xD;&#xA;  { Date: 1675638000000, Close: 0.89},&#xD;&#xA;  { Date: 1675638000000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1609714800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>056/132 - Misty&#39;s Starmie</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/056---mistys-starmie/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/056---mistys-starmie/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149287.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 23-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.79},&#xD;&#xA;  { Date: 1614553200000, Close: 0.99},&#xD;&#xA;  { Date: 1616367600000, Close: 1.09},&#xD;&#xA;  { Date: 1623625200000, Close: 1.19},&#xD;&#xA;  { Date: 1625439600000, Close: 0.89},&#xD;&#xA;  { Date: 1646607600000, Close: 1.49},&#xD;&#xA;  { Date: 1653260400000, Close: 2.99},&#xD;&#xA;  { Date: 1655074800000, Close: 2.39},&#xD;&#xA;  { Date: 1656889200000, Close: 2.09},&#xD;&#xA;  { Date: 1665356400000, Close: 1.79},&#xD;&#xA;  { Date: 1667170800000, Close: 1.29},&#xD;&#xA;  { Date: 1667775600000, Close: 0.99},&#xD;&#xA;  { Date: 1674428400000, Close: 0.79},&#xD;&#xA;  { Date: 1678662000000, Close: 1.09},&#xD;&#xA;  { Date: 1681686000000, Close: 1.49},&#xD;&#xA;  { Date: 1696201200000, Close: 1.69},&#xD;&#xA;  { Date: 1699830000000, Close: 1.99},&#xD;&#xA;  { Date: 1704063600000, Close: 2.29},&#xD;&#xA;  { Date: 1704668400000, Close: 2.99},&#xD;&#xA;  { Date: 1704668400000, Close: 2.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1653260400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>057/132 - Misty&#39;s Tentacool</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/057---mistys-tentacool/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/057---mistys-tentacool/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149291.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.29 on 08-01-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1606086000000, Close: 0.79},&#xD;&#xA;  { Date: 1607295600000, Close: 0.89},&#xD;&#xA;  { Date: 1614553200000, Close: 1.09},&#xD;&#xA;  { Date: 1618786800000, Close: 1.79},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1623625200000, Close: 1.39},&#xD;&#xA;  { Date: 1624834800000, Close: 1.45},&#xD;&#xA;  { Date: 1626044400000, Close: 1.39},&#xD;&#xA;  { Date: 1626649200000, Close: 1.45},&#xD;&#xA;  { Date: 1627254000000, Close: 1.39},&#xD;&#xA;  { Date: 1629068400000, Close: 1.29},&#xD;&#xA;  { Date: 1629673200000, Close: 1.49},&#xD;&#xA;  { Date: 1630882800000, Close: 1.79},&#xD;&#xA;  { Date: 1632697200000, Close: 1.49},&#xD;&#xA;  { Date: 1633302000000, Close: 1.29},&#xD;&#xA;  { Date: 1635116400000, Close: 1.09},&#xD;&#xA;  { Date: 1636930800000, Close: 0.99},&#xD;&#xA;  { Date: 1646002800000, Close: 0.89},&#xD;&#xA;  { Date: 1653260400000, Close: 1.19},&#xD;&#xA;  { Date: 1665356400000, Close: 1.29},&#xD;&#xA;  { Date: 1668985200000, Close: 1.19},&#xD;&#xA;  { Date: 1670799600000, Close: 0.89},&#xD;&#xA;  { Date: 1675638000000, Close: 0.99},&#xD;&#xA;  { Date: 1678662000000, Close: 1.09},&#xD;&#xA;  { Date: 1684710000000, Close: 0.99},&#xD;&#xA;  { Date: 1685314800000, Close: 1.49},&#xD;&#xA;  { Date: 1692572400000, Close: 1.99},&#xD;&#xA;  { Date: 1704668400000, Close: 2.29},&#xD;&#xA;  { Date: 1704668400000, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1704668400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>058/132 - Sabrina&#39;s Haunter</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/058---sabrinas-haunter/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/058---sabrinas-haunter/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149421.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.99 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.29 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 1.29},&#xD;&#xA;  { Date: 1591398000000, Close: 2.49},&#xD;&#xA;  { Date: 1600383600000, Close: 2.99},&#xD;&#xA;  { Date: 1603062000000, Close: 3.09},&#xD;&#xA;  { Date: 1606086000000, Close: 4.49},&#xD;&#xA;  { Date: 1607295600000, Close: 4.99},&#xD;&#xA;  { Date: 1613343600000, Close: 5.29},&#xD;&#xA;  { Date: 1616972400000, Close: 6.99},&#xD;&#xA;  { Date: 1619391600000, Close: 7.99},&#xD;&#xA;  { Date: 1621810800000, Close: 7.39},&#xD;&#xA;  { Date: 1623625200000, Close: 6.79},&#xD;&#xA;  { Date: 1624230000000, Close: 5.99},&#xD;&#xA;  { Date: 1626044400000, Close: 4.99},&#xD;&#xA;  { Date: 1627858800000, Close: 4.49},&#xD;&#xA;  { Date: 1632092400000, Close: 4.99},&#xD;&#xA;  { Date: 1633302000000, Close: 5.99},&#xD;&#xA;  { Date: 1636326000000, Close: 5.39},&#xD;&#xA;  { Date: 1637535600000, Close: 4.99},&#xD;&#xA;  { Date: 1646607600000, Close: 5.99},&#xD;&#xA;  { Date: 1649026800000, Close: 6.49},&#xD;&#xA;  { Date: 1652050800000, Close: 5.79},&#xD;&#xA;  { Date: 1654470000000, Close: 5.19},&#xD;&#xA;  { Date: 1656284400000, Close: 4.99},&#xD;&#xA;  { Date: 1665356400000, Close: 3.89},&#xD;&#xA;  { Date: 1666566000000, Close: 3.49},&#xD;&#xA;  { Date: 1668380400000, Close: 2.49},&#xD;&#xA;  { Date: 1670194800000, Close: 2.19},&#xD;&#xA;  { Date: 1670799600000, Close: 1.99},&#xD;&#xA;  { Date: 1672614000000, Close: 1.69},&#xD;&#xA;  { Date: 1682290800000, Close: 3.59},&#xD;&#xA;  { Date: 1688338800000, Close: 3.89},&#xD;&#xA;  { Date: 1688943600000, Close: 3.99},&#xD;&#xA;  { Date: 1690153200000, Close: 3.59},&#xD;&#xA;  { Date: 1691967600000, Close: 3.99},&#xD;&#xA;  { Date: 1694386800000, Close: 3.39},&#xD;&#xA;  { Date: 1694991600000, Close: 3.19},&#xD;&#xA;  { Date: 1695596400000, Close: 3.09},&#xD;&#xA;  { Date: 1702854000000, Close: 3.99},&#xD;&#xA;  { Date: 1716159600000, Close: 4.49},&#xD;&#xA;  { Date: 1716159600000, Close: 4.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>059/132 - Sabrina&#39;s Jynx</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/059---sabrinas-jynx/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/059---sabrinas-jynx/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149423.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.49 on 12-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1591398000000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 1.19},&#xD;&#xA;  { Date: 1604876400000, Close: 2.99},&#xD;&#xA;  { Date: 1607900400000, Close: 2.39},&#xD;&#xA;  { Date: 1608505200000, Close: 1.99},&#xD;&#xA;  { Date: 1609714800000, Close: 2.49},&#xD;&#xA;  { Date: 1610319600000, Close: 2.95},&#xD;&#xA;  { Date: 1615762800000, Close: 3.29},&#xD;&#xA;  { Date: 1616367600000, Close: 2.99},&#xD;&#xA;  { Date: 1618182000000, Close: 3.49},&#xD;&#xA;  { Date: 1618786800000, Close: 2.99},&#xD;&#xA;  { Date: 1621810800000, Close: 2.39},&#xD;&#xA;  { Date: 1623020400000, Close: 2.29},&#xD;&#xA;  { Date: 1624834800000, Close: 1.79},&#xD;&#xA;  { Date: 1625439600000, Close: 1.99},&#xD;&#xA;  { Date: 1626044400000, Close: 2.19},&#xD;&#xA;  { Date: 1627254000000, Close: 2.49},&#xD;&#xA;  { Date: 1635116400000, Close: 2.19},&#xD;&#xA;  { Date: 1645398000000, Close: 2.49},&#xD;&#xA;  { Date: 1650236400000, Close: 1.89},&#xD;&#xA;  { Date: 1653260400000, Close: 2.49},&#xD;&#xA;  { Date: 1655679600000, Close: 2.19},&#xD;&#xA;  { Date: 1665356400000, Close: 1.89},&#xD;&#xA;  { Date: 1665961200000, Close: 1.79},&#xD;&#xA;  { Date: 1667775600000, Close: 1.09},&#xD;&#xA;  { Date: 1672614000000, Close: 0.99},&#xD;&#xA;  { Date: 1694386800000, Close: 1.79},&#xD;&#xA;  { Date: 1702854000000, Close: 1.99},&#xD;&#xA;  { Date: 1704668400000, Close: 2.29},&#xD;&#xA;  { Date: 1707692400000, Close: 2.49},&#xD;&#xA;  { Date: 1714345200000, Close: 2.19},&#xD;&#xA;  { Date: 1716159600000, Close: 1.89},&#xD;&#xA;  { Date: 1716159600000, Close: 1.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618182000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>060/132 - Sabrina&#39;s Slowbro</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/060---sabrinas-slowbro/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/060---sabrinas-slowbro/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149431.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.99 on 18-12-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.79},&#xD;&#xA;  { Date: 1653865200000, Close: 3.49},&#xD;&#xA;  { Date: 1665961200000, Close: 2.49},&#xD;&#xA;  { Date: 1667170800000, Close: 2.39},&#xD;&#xA;  { Date: 1668985200000, Close: 2.29},&#xD;&#xA;  { Date: 1669590000000, Close: 2.19},&#xD;&#xA;  { Date: 1672009200000, Close: 1.99},&#xD;&#xA;  { Date: 1673823600000, Close: 1.69},&#xD;&#xA;  { Date: 1684710000000, Close: 1.99},&#xD;&#xA;  { Date: 1696201200000, Close: 2.99},&#xD;&#xA;  { Date: 1699830000000, Close: 3.49},&#xD;&#xA;  { Date: 1702854000000, Close: 3.99},&#xD;&#xA;  { Date: 1716159600000, Close: 3.39},&#xD;&#xA;  { Date: 1718578800000, Close: 2.79},&#xD;&#xA;  { Date: 1718578800000, Close: 2.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1702854000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>061/132 - Blaine&#39;s Charmander</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/061---blaines-charmander/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/061---blaines-charmander/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148848.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.99 on 30-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 0.79},&#xD;&#xA;  { Date: 1604271600000, Close: 3.99},&#xD;&#xA;  { Date: 1605481200000, Close: 3.49},&#xD;&#xA;  { Date: 1606086000000, Close: 3.99},&#xD;&#xA;  { Date: 1606690800000, Close: 4.99},&#xD;&#xA;  { Date: 1609110000000, Close: 4.49},&#xD;&#xA;  { Date: 1609714800000, Close: 4.59},&#xD;&#xA;  { Date: 1610924400000, Close: 4.99},&#xD;&#xA;  { Date: 1616972400000, Close: 4.49},&#xD;&#xA;  { Date: 1621206000000, Close: 3.99},&#xD;&#xA;  { Date: 1623020400000, Close: 3.49},&#xD;&#xA;  { Date: 1624834800000, Close: 2.99},&#xD;&#xA;  { Date: 1626044400000, Close: 2.49},&#xD;&#xA;  { Date: 1627254000000, Close: 2.29},&#xD;&#xA;  { Date: 1629068400000, Close: 2.79},&#xD;&#xA;  { Date: 1633302000000, Close: 2.49},&#xD;&#xA;  { Date: 1635116400000, Close: 1.99},&#xD;&#xA;  { Date: 1639350000000, Close: 2.29},&#xD;&#xA;  { Date: 1643583600000, Close: 2.99},&#xD;&#xA;  { Date: 1664751600000, Close: 2.49},&#xD;&#xA;  { Date: 1665961200000, Close: 2.79},&#xD;&#xA;  { Date: 1672009200000, Close: 2.99},&#xD;&#xA;  { Date: 1688338800000, Close: 2.39},&#xD;&#xA;  { Date: 1694991600000, Close: 2.29},&#xD;&#xA;  { Date: 1703458800000, Close: 1.99},&#xD;&#xA;  { Date: 1706482800000, Close: 1.79},&#xD;&#xA;  { Date: 1708297200000, Close: 1.49},&#xD;&#xA;  { Date: 1714345200000, Close: 2.49},&#xD;&#xA;  { Date: 1723417200000, Close: 2.99},&#xD;&#xA;  { Date: 1723417200000, Close: 2.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606690800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>062/132 - Blaine&#39;s Growlithe</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/062---blaines-growlithe/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/062---blaines-growlithe/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148853.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 05-09-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.89},&#xD;&#xA;  { Date: 1621206000000, Close: 1.49},&#xD;&#xA;  { Date: 1624834800000, Close: 1.29},&#xD;&#xA;  { Date: 1626044400000, Close: 1.49},&#xD;&#xA;  { Date: 1627254000000, Close: 1.29},&#xD;&#xA;  { Date: 1629068400000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1638140400000, Close: 0.89},&#xD;&#xA;  { Date: 1641769200000, Close: 0.99},&#xD;&#xA;  { Date: 1644793200000, Close: 1.29},&#xD;&#xA;  { Date: 1645398000000, Close: 1.49},&#xD;&#xA;  { Date: 1647212400000, Close: 1.19},&#xD;&#xA;  { Date: 1655679600000, Close: 1.29},&#xD;&#xA;  { Date: 1662332400000, Close: 1.99},&#xD;&#xA;  { Date: 1665356400000, Close: 1.69},&#xD;&#xA;  { Date: 1665961200000, Close: 1.49},&#xD;&#xA;  { Date: 1667775600000, Close: 1.19},&#xD;&#xA;  { Date: 1668380400000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 0.69},&#xD;&#xA;  { Date: 1670799600000, Close: 0.59},&#xD;&#xA;  { Date: 1673218800000, Close: 0.69},&#xD;&#xA;  { Date: 1673823600000, Close: 0.59},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.69},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1697410800000, Close: 0.59},&#xD;&#xA;  { Date: 1697410800000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1662332400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>063/132 - Blaine&#39;s Ponyta</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/063---blaines-ponyta/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/063---blaines-ponyta/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148862.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 02-01-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.59},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.69},&#xD;&#xA;  { Date: 1613343600000, Close: 0.79},&#xD;&#xA;  { Date: 1619391600000, Close: 1.29},&#xD;&#xA;  { Date: 1622415600000, Close: 0.99},&#xD;&#xA;  { Date: 1640559600000, Close: 0.89},&#xD;&#xA;  { Date: 1649026800000, Close: 0.99},&#xD;&#xA;  { Date: 1661122800000, Close: 1.29},&#xD;&#xA;  { Date: 1665356400000, Close: 0.99},&#xD;&#xA;  { Date: 1667170800000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.59},&#xD;&#xA;  { Date: 1693177200000, Close: 0.69},&#xD;&#xA;  { Date: 1726441200000, Close: 0.79},&#xD;&#xA;  { Date: 1726441200000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1672614000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>064/132 - Blaine&#39;s Tauros</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/064---blaines-tauros/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/064---blaines-tauros/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148868.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.19 on 14-06-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.59},&#xD;&#xA;  { Date: 1605481200000, Close: 0.69},&#xD;&#xA;  { Date: 1612738800000, Close: 0.79},&#xD;&#xA;  { Date: 1623625200000, Close: 1.19},&#xD;&#xA;  { Date: 1624834800000, Close: 0.99},&#xD;&#xA;  { Date: 1655074800000, Close: 0.89},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1688338800000, Close: 0.69},&#xD;&#xA;  { Date: 1696201200000, Close: 0.89},&#xD;&#xA;  { Date: 1708297200000, Close: 0.59},&#xD;&#xA;  { Date: 1708297200000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1623625200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>065/132 - Blaine&#39;s Vulpix</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/065---blaines-vulpix/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/065---blaines-vulpix/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148870.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 24-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1604876400000, Close: 0.79},&#xD;&#xA;  { Date: 1606690800000, Close: 0.99},&#xD;&#xA;  { Date: 1619391600000, Close: 1.29},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1623625200000, Close: 1.19},&#xD;&#xA;  { Date: 1624230000000, Close: 0.99},&#xD;&#xA;  { Date: 1633906800000, Close: 1.09},&#xD;&#xA;  { Date: 1638745200000, Close: 1.19},&#xD;&#xA;  { Date: 1642978800000, Close: 1.29},&#xD;&#xA;  { Date: 1647212400000, Close: 0.99},&#xD;&#xA;  { Date: 1653865200000, Close: 1.09},&#xD;&#xA;  { Date: 1657494000000, Close: 0.99},&#xD;&#xA;  { Date: 1668380400000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.79},&#xD;&#xA;  { Date: 1670799600000, Close: 0.69},&#xD;&#xA;  { Date: 1671404400000, Close: 0.79},&#xD;&#xA;  { Date: 1678662000000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.69},&#xD;&#xA;  { Date: 1688338800000, Close: 0.79},&#xD;&#xA;  { Date: 1690758000000, Close: 0.89},&#xD;&#xA;  { Date: 1696201200000, Close: 0.79},&#xD;&#xA;  { Date: 1702854000000, Close: 0.69},&#xD;&#xA;  { Date: 1703458800000, Close: 0.59},&#xD;&#xA;  { Date: 1717974000000, Close: 0.79},&#xD;&#xA;  { Date: 1717974000000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1621810800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>066/132 - Brock&#39;s Geodude</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/066---brocks-geodude/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/066---brocks-geodude/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148877.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 16-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.59},&#xD;&#xA;  { Date: 1607900400000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.39},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.39},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1685314800000, Close: 0.39},&#xD;&#xA;  { Date: 1687734000000, Close: 0.49},&#xD;&#xA;  { Date: 1705878000000, Close: 0.39},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605481200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>067/132 - Brock&#39;s Mankey</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/067---brocks-mankey/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/067---brocks-mankey/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148884.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 31-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.59},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1612738800000, Close: 0.69},&#xD;&#xA;  { Date: 1619996400000, Close: 0.99},&#xD;&#xA;  { Date: 1622415600000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 0.99},&#xD;&#xA;  { Date: 1630278000000, Close: 0.89},&#xD;&#xA;  { Date: 1634511600000, Close: 0.79},&#xD;&#xA;  { Date: 1637535600000, Close: 0.69},&#xD;&#xA;  { Date: 1639350000000, Close: 0.59},&#xD;&#xA;  { Date: 1653260400000, Close: 0.79},&#xD;&#xA;  { Date: 1655679600000, Close: 0.69},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.39},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1680476400000, Close: 0.39},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1622415600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>068/132 - Brock&#39;s Mankey</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/068---brocks-mankey/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/068---brocks-mankey/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148885.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.79 on 30-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 1.09},&#xD;&#xA;  { Date: 1603062000000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 1.19},&#xD;&#xA;  { Date: 1610319600000, Close: 0.89},&#xD;&#xA;  { Date: 1615158000000, Close: 0.99},&#xD;&#xA;  { Date: 1619391600000, Close: 1.09},&#xD;&#xA;  { Date: 1622415600000, Close: 1.19},&#xD;&#xA;  { Date: 1624230000000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 0.99},&#xD;&#xA;  { Date: 1646607600000, Close: 1.09},&#xD;&#xA;  { Date: 1653260400000, Close: 1.49},&#xD;&#xA;  { Date: 1665356400000, Close: 1.19},&#xD;&#xA;  { Date: 1666566000000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 0.79},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.79},&#xD;&#xA;  { Date: 1688338800000, Close: 0.89},&#xD;&#xA;  { Date: 1696201200000, Close: 1.49},&#xD;&#xA;  { Date: 1698620400000, Close: 1.79},&#xD;&#xA;  { Date: 1698620400000, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1698620400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>069/132 - Brock&#39;s Onix</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/069---brocks-onix/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/069---brocks-onix/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148887.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 24-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 22-01-2024.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.69},&#xD;&#xA;  { Date: 1606086000000, Close: 0.89},&#xD;&#xA;  { Date: 1621810800000, Close: 1.99},&#xD;&#xA;  { Date: 1624230000000, Close: 1.79},&#xD;&#xA;  { Date: 1625439600000, Close: 1.49},&#xD;&#xA;  { Date: 1626044400000, Close: 1.29},&#xD;&#xA;  { Date: 1629068400000, Close: 0.99},&#xD;&#xA;  { Date: 1635721200000, Close: 0.89},&#xD;&#xA;  { Date: 1639350000000, Close: 0.79},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.59},&#xD;&#xA;  { Date: 1705878000000, Close: 0.39},&#xD;&#xA;  { Date: 1713740400000, Close: 0.59},&#xD;&#xA;  { Date: 1713740400000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1621810800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1705878000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>070/132 - Brock&#39;s Rhyhorn</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/070---brocks-rhyhorn/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/070---brocks-rhyhorn/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148891.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 31-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.59},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1622415600000, Close: 0.99},&#xD;&#xA;  { Date: 1626044400000, Close: 0.89},&#xD;&#xA;  { Date: 1632697200000, Close: 0.79},&#xD;&#xA;  { Date: 1636930800000, Close: 0.69},&#xD;&#xA;  { Date: 1638745200000, Close: 0.59},&#xD;&#xA;  { Date: 1645398000000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.39},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.39},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.39},&#xD;&#xA;  { Date: 1715554800000, Close: 0.49},&#xD;&#xA;  { Date: 1717369200000, Close: 0.39},&#xD;&#xA;  { Date: 1717369200000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1622415600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>071/132 - Brock&#39;s Sandshrew</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/071---brocks-sandshrew/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/071---brocks-sandshrew/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148895.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.69},&#xD;&#xA;  { Date: 1619391600000, Close: 0.99},&#xD;&#xA;  { Date: 1630882800000, Close: 0.89},&#xD;&#xA;  { Date: 1635116400000, Close: 0.79},&#xD;&#xA;  { Date: 1639954800000, Close: 0.69},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1704063600000, Close: 0.49},&#xD;&#xA;  { Date: 1704063600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>072/132 - Brock&#39;s Sandshrew</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/072---brocks-sandshrew/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/072---brocks-sandshrew/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148896.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 1.19},&#xD;&#xA;  { Date: 1601247600000, Close: 0.89},&#xD;&#xA;  { Date: 1604876400000, Close: 0.99},&#xD;&#xA;  { Date: 1606086000000, Close: 2.49},&#xD;&#xA;  { Date: 1606690800000, Close: 2.39},&#xD;&#xA;  { Date: 1607295600000, Close: 2.99},&#xD;&#xA;  { Date: 1609110000000, Close: 2.49},&#xD;&#xA;  { Date: 1612738800000, Close: 2.19},&#xD;&#xA;  { Date: 1618182000000, Close: 2.09},&#xD;&#xA;  { Date: 1620601200000, Close: 1.79},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1624230000000, Close: 1.29},&#xD;&#xA;  { Date: 1629068400000, Close: 0.99},&#xD;&#xA;  { Date: 1636930800000, Close: 0.89},&#xD;&#xA;  { Date: 1646002800000, Close: 0.99},&#xD;&#xA;  { Date: 1649631600000, Close: 1.49},&#xD;&#xA;  { Date: 1654470000000, Close: 1.19},&#xD;&#xA;  { Date: 1662937200000, Close: 1.29},&#xD;&#xA;  { Date: 1665356400000, Close: 1.09},&#xD;&#xA;  { Date: 1674428400000, Close: 0.59},&#xD;&#xA;  { Date: 1678662000000, Close: 0.79},&#xD;&#xA;  { Date: 1694386800000, Close: 1.99},&#xD;&#xA;  { Date: 1701039600000, Close: 1.79},&#xD;&#xA;  { Date: 1713740400000, Close: 1.49},&#xD;&#xA;  { Date: 1716159600000, Close: 1.79},&#xD;&#xA;  { Date: 1716159600000, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>073/132 - Brock&#39;s Vulpix</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/073---brocks-vulpix/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/073---brocks-vulpix/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148900.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 05-09-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1607295600000, Close: 0.89},&#xD;&#xA;  { Date: 1619391600000, Close: 1.29},&#xD;&#xA;  { Date: 1621810800000, Close: 1.09},&#xD;&#xA;  { Date: 1624834800000, Close: 0.99},&#xD;&#xA;  { Date: 1636326000000, Close: 1.09},&#xD;&#xA;  { Date: 1638140400000, Close: 0.99},&#xD;&#xA;  { Date: 1644188400000, Close: 1.09},&#xD;&#xA;  { Date: 1647817200000, Close: 0.99},&#xD;&#xA;  { Date: 1653865200000, Close: 1.29},&#xD;&#xA;  { Date: 1662332400000, Close: 1.99},&#xD;&#xA;  { Date: 1664751600000, Close: 1.79},&#xD;&#xA;  { Date: 1666566000000, Close: 1.49},&#xD;&#xA;  { Date: 1667775600000, Close: 1.29},&#xD;&#xA;  { Date: 1670194800000, Close: 0.79},&#xD;&#xA;  { Date: 1670799600000, Close: 0.69},&#xD;&#xA;  { Date: 1672614000000, Close: 0.59},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.69},&#xD;&#xA;  { Date: 1688338800000, Close: 0.79},&#xD;&#xA;  { Date: 1693177200000, Close: 0.99},&#xD;&#xA;  { Date: 1702854000000, Close: 1.29},&#xD;&#xA;  { Date: 1708297200000, Close: 0.99},&#xD;&#xA;  { Date: 1709506800000, Close: 0.89},&#xD;&#xA;  { Date: 1712530800000, Close: 0.79},&#xD;&#xA;  { Date: 1712530800000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1662332400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>074/132 - Brock&#39;s Zubat</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/074---brocks-zubat/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/074---brocks-zubat/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148901.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 03-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.99},&#xD;&#xA;  { Date: 1624230000000, Close: 0.89},&#xD;&#xA;  { Date: 1634511600000, Close: 0.79},&#xD;&#xA;  { Date: 1636326000000, Close: 0.69},&#xD;&#xA;  { Date: 1643583600000, Close: 0.79},&#xD;&#xA;  { Date: 1646607600000, Close: 0.69},&#xD;&#xA;  { Date: 1666566000000, Close: 0.59},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.35},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.79},&#xD;&#xA;  { Date: 1705878000000, Close: 0.49},&#xD;&#xA;  { Date: 1728860400000, Close: 0.59},&#xD;&#xA;  { Date: 1728860400000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619996400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>075/132 - Erika&#39;s Bellsprout</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/075---erikas-bellsprout/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/075---erikas-bellsprout/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149008.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 18-03-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.59},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1621810800000, Close: 0.99},&#xD;&#xA;  { Date: 1633302000000, Close: 0.89},&#xD;&#xA;  { Date: 1635721200000, Close: 0.79},&#xD;&#xA;  { Date: 1637535600000, Close: 0.69},&#xD;&#xA;  { Date: 1648422000000, Close: 0.59},&#xD;&#xA;  { Date: 1662937200000, Close: 0.69},&#xD;&#xA;  { Date: 1666566000000, Close: 0.79},&#xD;&#xA;  { Date: 1668380400000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1688338800000, Close: 0.59},&#xD;&#xA;  { Date: 1691967600000, Close: 0.69},&#xD;&#xA;  { Date: 1696201200000, Close: 0.59},&#xD;&#xA;  { Date: 1705878000000, Close: 0.69},&#xD;&#xA;  { Date: 1710716400000, Close: 1.49},&#xD;&#xA;  { Date: 1716159600000, Close: 1.29},&#xD;&#xA;  { Date: 1728860400000, Close: 0.49},&#xD;&#xA;  { Date: 1728860400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1710716400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>076/132 - Erika&#39;s Bellsprout</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/076---erikas-bellsprout/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/076---erikas-bellsprout/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149009.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 14-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.59},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.39},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.39},&#xD;&#xA;  { Date: 1688943600000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1702854000000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.39},&#xD;&#xA;  { Date: 1708297200000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.39},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607900400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>077/132 - Erika&#39;s Exeggcute</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/077---erikas-exeggcute/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/077---erikas-exeggcute/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149016.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.29 on 24-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.99},&#xD;&#xA;  { Date: 1621810800000, Close: 2.29},&#xD;&#xA;  { Date: 1623625200000, Close: 1.99},&#xD;&#xA;  { Date: 1625439600000, Close: 1.49},&#xD;&#xA;  { Date: 1626044400000, Close: 1.29},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1632697200000, Close: 0.99},&#xD;&#xA;  { Date: 1634511600000, Close: 0.89},&#xD;&#xA;  { Date: 1637535600000, Close: 0.79},&#xD;&#xA;  { Date: 1639350000000, Close: 0.69},&#xD;&#xA;  { Date: 1645398000000, Close: 0.59},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1621810800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>078/132 - Erika&#39;s Oddish</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/078---erikas-oddish/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/078---erikas-oddish/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149026.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>079/132 - Erika&#39;s Tangela</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/079---erikas-tangela/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/079---erikas-tangela/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149030.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1610924400000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.79},&#xD;&#xA;  { Date: 1615762800000, Close: 0.99},&#xD;&#xA;  { Date: 1619391600000, Close: 1.29},&#xD;&#xA;  { Date: 1621206000000, Close: 1.09},&#xD;&#xA;  { Date: 1623625200000, Close: 0.99},&#xD;&#xA;  { Date: 1633906800000, Close: 0.89},&#xD;&#xA;  { Date: 1635721200000, Close: 0.79},&#xD;&#xA;  { Date: 1638140400000, Close: 0.69},&#xD;&#xA;  { Date: 1639954800000, Close: 0.59},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.39},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.35},&#xD;&#xA;  { Date: 1686524400000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1702854000000, Close: 0.39},&#xD;&#xA;  { Date: 1707087600000, Close: 0.49},&#xD;&#xA;  { Date: 1707087600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>080/132 - Lt. Surge&#39;s Magnemite</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/080---lt.-surges-magnemite/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/080---lt.-surges-magnemite/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149208.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.69},&#xD;&#xA;  { Date: 1619391600000, Close: 0.99},&#xD;&#xA;  { Date: 1630882800000, Close: 0.89},&#xD;&#xA;  { Date: 1633906800000, Close: 0.79},&#xD;&#xA;  { Date: 1637535600000, Close: 0.69},&#xD;&#xA;  { Date: 1639350000000, Close: 0.59},&#xD;&#xA;  { Date: 1648422000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.49},&#xD;&#xA;  { Date: 1685314800000, Close: 0.39},&#xD;&#xA;  { Date: 1691967600000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.39},&#xD;&#xA;  { Date: 1713740400000, Close: 0.49},&#xD;&#xA;  { Date: 1713740400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>081/132 - Lt. Surge&#39;s Pikachu</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/081---lt.-surges-pikachu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/081---lt.-surges-pikachu/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149212.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.99 on 02-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 1.49},&#xD;&#xA;  { Date: 1601247600000, Close: 1.79},&#xD;&#xA;  { Date: 1603062000000, Close: 1.89},&#xD;&#xA;  { Date: 1603666800000, Close: 2.19},&#xD;&#xA;  { Date: 1604876400000, Close: 2.99},&#xD;&#xA;  { Date: 1606086000000, Close: 3.09},&#xD;&#xA;  { Date: 1606690800000, Close: 3.49},&#xD;&#xA;  { Date: 1613948400000, Close: 3.59},&#xD;&#xA;  { Date: 1619391600000, Close: 2.99},&#xD;&#xA;  { Date: 1620601200000, Close: 3.29},&#xD;&#xA;  { Date: 1621810800000, Close: 2.99},&#xD;&#xA;  { Date: 1623020400000, Close: 3.49},&#xD;&#xA;  { Date: 1625439600000, Close: 2.99},&#xD;&#xA;  { Date: 1627254000000, Close: 2.49},&#xD;&#xA;  { Date: 1629673200000, Close: 2.99},&#xD;&#xA;  { Date: 1632697200000, Close: 2.39},&#xD;&#xA;  { Date: 1633302000000, Close: 2.79},&#xD;&#xA;  { Date: 1636326000000, Close: 2.99},&#xD;&#xA;  { Date: 1637535600000, Close: 2.79},&#xD;&#xA;  { Date: 1642978800000, Close: 2.39},&#xD;&#xA;  { Date: 1646002800000, Close: 2.99},&#xD;&#xA;  { Date: 1646607600000, Close: 2.79},&#xD;&#xA;  { Date: 1648422000000, Close: 2.59},&#xD;&#xA;  { Date: 1650841200000, Close: 3.29},&#xD;&#xA;  { Date: 1657494000000, Close: 2.99},&#xD;&#xA;  { Date: 1665961200000, Close: 2.39},&#xD;&#xA;  { Date: 1674428400000, Close: 2.49},&#xD;&#xA;  { Date: 1678662000000, Close: 2.69},&#xD;&#xA;  { Date: 1679266800000, Close: 2.19},&#xD;&#xA;  { Date: 1679871600000, Close: 2.09},&#xD;&#xA;  { Date: 1680476400000, Close: 1.99},&#xD;&#xA;  { Date: 1684710000000, Close: 2.99},&#xD;&#xA;  { Date: 1688338800000, Close: 3.49},&#xD;&#xA;  { Date: 1696201200000, Close: 3.99},&#xD;&#xA;  { Date: 1715554800000, Close: 3.49},&#xD;&#xA;  { Date: 1715554800000, Close: 3.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1696201200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>082/132 - Lt. Surge&#39;s Rattata</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/082---lt.-surges-rattata/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/082---lt.-surges-rattata/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149216.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 14-06-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1603062000000, Close: 0.39},&#xD;&#xA;  { Date: 1605481200000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.59},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1680476400000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.39},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1685919600000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1623625200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>083/132 - Lt. Surge&#39;s Spearow</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/083---lt.-surges-spearow/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/083---lt.-surges-spearow/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149220.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 24-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.59},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.69},&#xD;&#xA;  { Date: 1621810800000, Close: 0.99},&#xD;&#xA;  { Date: 1624230000000, Close: 0.89},&#xD;&#xA;  { Date: 1633906800000, Close: 0.79},&#xD;&#xA;  { Date: 1639350000000, Close: 0.69},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.39},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1685314800000, Close: 0.39},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.39},&#xD;&#xA;  { Date: 1706482800000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1621810800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>084/132 - Lt. Surge&#39;s Voltorb</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/084---lt.-surges-voltorb/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/084---lt.-surges-voltorb/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149224.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 16-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.39},&#xD;&#xA;  { Date: 1684105200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605481200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>085/132 - Misty&#39;s Goldeen</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/085---mistys-goldeen/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/085---mistys-goldeen/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149268.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 07-06-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.69},&#xD;&#xA;  { Date: 1619391600000, Close: 0.79},&#xD;&#xA;  { Date: 1623020400000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 0.99},&#xD;&#xA;  { Date: 1629673200000, Close: 0.89},&#xD;&#xA;  { Date: 1634511600000, Close: 0.79},&#xD;&#xA;  { Date: 1637535600000, Close: 0.69},&#xD;&#xA;  { Date: 1649631600000, Close: 0.59},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1691967600000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.69},&#xD;&#xA;  { Date: 1728860400000, Close: 0.59},&#xD;&#xA;  { Date: 1728860400000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1623020400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>086/132 - Misty&#39;s Horsea</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/086---mistys-horsea/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/086---mistys-horsea/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149272.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 15-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.59},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1615762800000, Close: 0.79},&#xD;&#xA;  { Date: 1623020400000, Close: 0.69},&#xD;&#xA;  { Date: 1630278000000, Close: 0.59},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.39},&#xD;&#xA;  { Date: 1653865200000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.39},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1715554800000, Close: 0.59},&#xD;&#xA;  { Date: 1726441200000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615762800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>087/132 - Misty&#39;s Poliwag</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/087---mistys-poliwag/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/087---mistys-poliwag/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149275.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.69},&#xD;&#xA;  { Date: 1619391600000, Close: 0.99},&#xD;&#xA;  { Date: 1623020400000, Close: 0.89},&#xD;&#xA;  { Date: 1626044400000, Close: 0.79},&#xD;&#xA;  { Date: 1629673200000, Close: 0.69},&#xD;&#xA;  { Date: 1634511600000, Close: 0.59},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.39},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.39},&#xD;&#xA;  { Date: 1679266800000, Close: 0.49},&#xD;&#xA;  { Date: 1697410800000, Close: 0.39},&#xD;&#xA;  { Date: 1705273200000, Close: 0.49},&#xD;&#xA;  { Date: 1705878000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>088/132 - Misty&#39;s Seel</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/088---mistys-seel/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/088---mistys-seel/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149283.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 24-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.69},&#xD;&#xA;  { Date: 1614553200000, Close: 0.79},&#xD;&#xA;  { Date: 1621810800000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 0.99},&#xD;&#xA;  { Date: 1632697200000, Close: 0.89},&#xD;&#xA;  { Date: 1634511600000, Close: 0.79},&#xD;&#xA;  { Date: 1639350000000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1621810800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>089/132 - Misty&#39;s Shellder</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/089---mistys-shellder/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/089---mistys-shellder/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149284.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.19 on 24-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.59},&#xD;&#xA;  { Date: 1606690800000, Close: 0.69},&#xD;&#xA;  { Date: 1613343600000, Close: 0.79},&#xD;&#xA;  { Date: 1621810800000, Close: 1.19},&#xD;&#xA;  { Date: 1623020400000, Close: 0.89},&#xD;&#xA;  { Date: 1630882800000, Close: 0.79},&#xD;&#xA;  { Date: 1635116400000, Close: 0.69},&#xD;&#xA;  { Date: 1636930800000, Close: 0.59},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1656889200000, Close: 0.39},&#xD;&#xA;  { Date: 1657494000000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.39},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.79},&#xD;&#xA;  { Date: 1705878000000, Close: 0.49},&#xD;&#xA;  { Date: 1705878000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1621810800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>090/132 - Misty&#39;s Staryu</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/090---mistys-staryu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/090---mistys-staryu/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149286.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.79},&#xD;&#xA;  { Date: 1623020400000, Close: 0.69},&#xD;&#xA;  { Date: 1639350000000, Close: 0.59},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1685314800000, Close: 0.39},&#xD;&#xA;  { Date: 1687734000000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.39},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>091/132 - Sabrina&#39;s Abra</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/091---sabrinas-abra/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/091---sabrinas-abra/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149408.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.19 on 19-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.59},&#xD;&#xA;  { Date: 1605481200000, Close: 0.69},&#xD;&#xA;  { Date: 1609110000000, Close: 0.99},&#xD;&#xA;  { Date: 1614553200000, Close: 1.09},&#xD;&#xA;  { Date: 1618786800000, Close: 1.19},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1645398000000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 0.59},&#xD;&#xA;  { Date: 1685919600000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.69},&#xD;&#xA;  { Date: 1706482800000, Close: 0.49},&#xD;&#xA;  { Date: 1713740400000, Close: 0.59},&#xD;&#xA;  { Date: 1713740400000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618786800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>092/132 - Sabrina&#39;s Drowzee</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/092---sabrinas-drowzee/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/092---sabrinas-drowzee/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149410.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 03-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.69},&#xD;&#xA;  { Date: 1619996400000, Close: 0.99},&#xD;&#xA;  { Date: 1623625200000, Close: 0.89},&#xD;&#xA;  { Date: 1632697200000, Close: 0.79},&#xD;&#xA;  { Date: 1638140400000, Close: 0.69},&#xD;&#xA;  { Date: 1644793200000, Close: 0.79},&#xD;&#xA;  { Date: 1648422000000, Close: 0.69},&#xD;&#xA;  { Date: 1650841200000, Close: 0.79},&#xD;&#xA;  { Date: 1653865200000, Close: 0.89},&#xD;&#xA;  { Date: 1657494000000, Close: 0.79},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.69},&#xD;&#xA;  { Date: 1702854000000, Close: 0.59},&#xD;&#xA;  { Date: 1728255600000, Close: 0.69},&#xD;&#xA;  { Date: 1728255600000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619996400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>093/132 - Sabrina&#39;s Gastly</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/093---sabrinas-gastly/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/093---sabrinas-gastly/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149416.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.79 on 11-10-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.59},&#xD;&#xA;  { Date: 1604876400000, Close: 0.69},&#xD;&#xA;  { Date: 1606690800000, Close: 0.79},&#xD;&#xA;  { Date: 1610319600000, Close: 0.89},&#xD;&#xA;  { Date: 1614553200000, Close: 0.99},&#xD;&#xA;  { Date: 1619996400000, Close: 1.29},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.79},&#xD;&#xA;  { Date: 1635721200000, Close: 1.49},&#xD;&#xA;  { Date: 1636930800000, Close: 1.29},&#xD;&#xA;  { Date: 1644188400000, Close: 1.39},&#xD;&#xA;  { Date: 1645398000000, Close: 1.49},&#xD;&#xA;  { Date: 1647212400000, Close: 1.19},&#xD;&#xA;  { Date: 1653865200000, Close: 1.29},&#xD;&#xA;  { Date: 1655679600000, Close: 0.99},&#xD;&#xA;  { Date: 1668985200000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.79},&#xD;&#xA;  { Date: 1685314800000, Close: 0.69},&#xD;&#xA;  { Date: 1686524400000, Close: 0.79},&#xD;&#xA;  { Date: 1727046000000, Close: 1.09},&#xD;&#xA;  { Date: 1727046000000, Close: 1.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1633906800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>094/132 - Sabrina&#39;s Mr. Mime</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/094---sabrinas-mr.-mime/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/094---sabrinas-mr.-mime/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149426.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.69},&#xD;&#xA;  { Date: 1619391600000, Close: 0.99},&#xD;&#xA;  { Date: 1627254000000, Close: 0.89},&#xD;&#xA;  { Date: 1638140400000, Close: 0.79},&#xD;&#xA;  { Date: 1657494000000, Close: 0.69},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1691967600000, Close: 0.69},&#xD;&#xA;  { Date: 1704668400000, Close: 0.79},&#xD;&#xA;  { Date: 1704668400000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>095/132 - Sabrina&#39;s Slowpoke</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/095---sabrinas-slowpoke/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/095---sabrinas-slowpoke/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149430.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 28-03-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 06-02-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.69},&#xD;&#xA;  { Date: 1619391600000, Close: 0.99},&#xD;&#xA;  { Date: 1624834800000, Close: 0.89},&#xD;&#xA;  { Date: 1648422000000, Close: 1.29},&#xD;&#xA;  { Date: 1651446000000, Close: 0.99},&#xD;&#xA;  { Date: 1657494000000, Close: 0.89},&#xD;&#xA;  { Date: 1675638000000, Close: 0.39},&#xD;&#xA;  { Date: 1678662000000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1688338800000, Close: 0.59},&#xD;&#xA;  { Date: 1691967600000, Close: 0.89},&#xD;&#xA;  { Date: 1696201200000, Close: 0.79},&#xD;&#xA;  { Date: 1706482800000, Close: 0.59},&#xD;&#xA;  { Date: 1713740400000, Close: 0.69},&#xD;&#xA;  { Date: 1713740400000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1648422000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1675638000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>096/132 - Sabrina&#39;s Venonat</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/096---sabrinas-venonat/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/096---sabrinas-venonat/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149432.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 28-08-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.69},&#xD;&#xA;  { Date: 1621206000000, Close: 0.79},&#xD;&#xA;  { Date: 1629673200000, Close: 0.69},&#xD;&#xA;  { Date: 1642978800000, Close: 0.79},&#xD;&#xA;  { Date: 1651446000000, Close: 0.69},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1688338800000, Close: 0.79},&#xD;&#xA;  { Date: 1693177200000, Close: 0.89},&#xD;&#xA;  { Date: 1714950000000, Close: 0.59},&#xD;&#xA;  { Date: 1714950000000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1693177200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>097/132 - Blaine&#39;s Quiz</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/097---blaines-quiz-%231/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/097---blaines-quiz-%231/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148865.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 10.99 on 25-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.29 on 28-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 2.49},&#xD;&#xA;  { Date: 1583881200000, Close: 2.99},&#xD;&#xA;  { Date: 1584745200000, Close: 2.49},&#xD;&#xA;  { Date: 1585350000000, Close: 2.29},&#xD;&#xA;  { Date: 1586732400000, Close: 2.39},&#xD;&#xA;  { Date: 1587164400000, Close: 2.29},&#xD;&#xA;  { Date: 1587682800000, Close: 2.39},&#xD;&#xA;  { Date: 1588201200000, Close: 2.49},&#xD;&#xA;  { Date: 1590015600000, Close: 2.99},&#xD;&#xA;  { Date: 1591311600000, Close: 3.49},&#xD;&#xA;  { Date: 1595026800000, Close: 4.49},&#xD;&#xA;  { Date: 1596495600000, Close: 4.99},&#xD;&#xA;  { Date: 1597273200000, Close: 5.49},&#xD;&#xA;  { Date: 1597705200000, Close: 5.99},&#xD;&#xA;  { Date: 1598569200000, Close: 5.59},&#xD;&#xA;  { Date: 1600383600000, Close: 5.99},&#xD;&#xA;  { Date: 1601247600000, Close: 5.59},&#xD;&#xA;  { Date: 1601938800000, Close: 5.99},&#xD;&#xA;  { Date: 1603234800000, Close: 6.99},&#xD;&#xA;  { Date: 1604530800000, Close: 7.49},&#xD;&#xA;  { Date: 1605654000000, Close: 7.99},&#xD;&#xA;  { Date: 1606863600000, Close: 8.99},&#xD;&#xA;  { Date: 1607468400000, Close: 9.49},&#xD;&#xA;  { Date: 1608764400000, Close: 8.99},&#xD;&#xA;  { Date: 1610146800000, Close: 9.39},&#xD;&#xA;  { Date: 1611097200000, Close: 9.99},&#xD;&#xA;  { Date: 1614207600000, Close: 10.99},&#xD;&#xA;  { Date: 1616108400000, Close: 9.99},&#xD;&#xA;  { Date: 1620169200000, Close: 10.49},&#xD;&#xA;  { Date: 1623366000000, Close: 10.89},&#xD;&#xA;  { Date: 1624057200000, Close: 9.99},&#xD;&#xA;  { Date: 1628204400000, Close: 9.39},&#xD;&#xA;  { Date: 1636153200000, Close: 9.99},&#xD;&#xA;  { Date: 1636844400000, Close: 9.39},&#xD;&#xA;  { Date: 1638572400000, Close: 8.79},&#xD;&#xA;  { Date: 1639522800000, Close: 7.99},&#xD;&#xA;  { Date: 1644620400000, Close: 7.39},&#xD;&#xA;  { Date: 1646434800000, Close: 6.79},&#xD;&#xA;  { Date: 1646521200000, Close: 6.09},&#xD;&#xA;  { Date: 1646953200000, Close: 5.99},&#xD;&#xA;  { Date: 1647298800000, Close: 6.19},&#xD;&#xA;  { Date: 1650668400000, Close: 6.49},&#xD;&#xA;  { Date: 1661900400000, Close: 6.99},&#xD;&#xA;  { Date: 1665615600000, Close: 6.39},&#xD;&#xA;  { Date: 1665702000000, Close: 5.79},&#xD;&#xA;  { Date: 1666220400000, Close: 5.69},&#xD;&#xA;  { Date: 1667948400000, Close: 4.99},&#xD;&#xA;  { Date: 1669676400000, Close: 4.39},&#xD;&#xA;  { Date: 1674169200000, Close: 4.19},&#xD;&#xA;  { Date: 1695942000000, Close: 5.99},&#xD;&#xA;  { Date: 1700953200000, Close: 5.59},&#xD;&#xA;  { Date: 1701298800000, Close: 5.69},&#xD;&#xA;  { Date: 1701644400000, Close: 5.59},&#xD;&#xA;  { Date: 1702335600000, Close: 5.49},&#xD;&#xA;  { Date: 1703804400000, Close: 5.69},&#xD;&#xA;  { Date: 1704495600000, Close: 4.99},&#xD;&#xA;  { Date: 1704927600000, Close: 5.49},&#xD;&#xA;  { Date: 1706396400000, Close: 5.99},&#xD;&#xA;  { Date: 1713394800000, Close: 6.99},&#xD;&#xA;  { Date: 1713394800000, Close: 6.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614207600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585350000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>098/132 - Brock</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/098---brock/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/098---brock/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148873.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.49 on 08-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.19 on 21-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577660400000, Close: 1.59},&#xD;&#xA;  { Date: 1579215600000, Close: 1.29},&#xD;&#xA;  { Date: 1579561200000, Close: 1.19},&#xD;&#xA;  { Date: 1591311600000, Close: 1.79},&#xD;&#xA;  { Date: 1593644400000, Close: 2.49},&#xD;&#xA;  { Date: 1595372400000, Close: 2.99},&#xD;&#xA;  { Date: 1596582000000, Close: 2.39},&#xD;&#xA;  { Date: 1597532400000, Close: 2.09},&#xD;&#xA;  { Date: 1598482800000, Close: 1.99},&#xD;&#xA;  { Date: 1598655600000, Close: 2.29},&#xD;&#xA;  { Date: 1599865200000, Close: 2.39},&#xD;&#xA;  { Date: 1600383600000, Close: 2.49},&#xD;&#xA;  { Date: 1600902000000, Close: 2.59},&#xD;&#xA;  { Date: 1602889200000, Close: 2.29},&#xD;&#xA;  { Date: 1603494000000, Close: 2.49},&#xD;&#xA;  { Date: 1605135600000, Close: 3.49},&#xD;&#xA;  { Date: 1606777200000, Close: 3.99},&#xD;&#xA;  { Date: 1607382000000, Close: 4.49},&#xD;&#xA;  { Date: 1609023600000, Close: 3.89},&#xD;&#xA;  { Date: 1609974000000, Close: 4.29},&#xD;&#xA;  { Date: 1611010800000, Close: 3.69},&#xD;&#xA;  { Date: 1612825200000, Close: 3.09},&#xD;&#xA;  { Date: 1615676400000, Close: 2.49},&#xD;&#xA;  { Date: 1616972400000, Close: 2.19},&#xD;&#xA;  { Date: 1617750000000, Close: 2.29},&#xD;&#xA;  { Date: 1620428400000, Close: 1.99},&#xD;&#xA;  { Date: 1623366000000, Close: 2.29},&#xD;&#xA;  { Date: 1626649200000, Close: 1.99},&#xD;&#xA;  { Date: 1627599600000, Close: 1.69},&#xD;&#xA;  { Date: 1628895600000, Close: 1.99},&#xD;&#xA;  { Date: 1633647600000, Close: 2.49},&#xD;&#xA;  { Date: 1648681200000, Close: 2.79},&#xD;&#xA;  { Date: 1664924400000, Close: 2.49},&#xD;&#xA;  { Date: 1665010800000, Close: 2.19},&#xD;&#xA;  { Date: 1668294000000, Close: 2.29},&#xD;&#xA;  { Date: 1671231600000, Close: 2.09},&#xD;&#xA;  { Date: 1684537200000, Close: 1.99},&#xD;&#xA;  { Date: 1695942000000, Close: 2.99},&#xD;&#xA;  { Date: 1709334000000, Close: 3.99},&#xD;&#xA;  { Date: 1714604400000, Close: 4.49},&#xD;&#xA;  { Date: 1714604400000, Close: 4.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607382000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579561200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>099/132 - Charity</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/099---charity/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/099---charity/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148916.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.99 on 05-10-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.09 on 17-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577660400000, Close: 2.49},&#xD;&#xA;  { Date: 1579215600000, Close: 2.19},&#xD;&#xA;  { Date: 1581980400000, Close: 2.29},&#xD;&#xA;  { Date: 1582671600000, Close: 2.39},&#xD;&#xA;  { Date: 1584399600000, Close: 2.09},&#xD;&#xA;  { Date: 1585004400000, Close: 2.29},&#xD;&#xA;  { Date: 1585782000000, Close: 2.09},&#xD;&#xA;  { Date: 1591311600000, Close: 3.49},&#xD;&#xA;  { Date: 1593558000000, Close: 4.49},&#xD;&#xA;  { Date: 1596495600000, Close: 4.99},&#xD;&#xA;  { Date: 1596668400000, Close: 5.39},&#xD;&#xA;  { Date: 1597705200000, Close: 4.79},&#xD;&#xA;  { Date: 1598482800000, Close: 3.99},&#xD;&#xA;  { Date: 1599606000000, Close: 3.49},&#xD;&#xA;  { Date: 1600383600000, Close: 3.99},&#xD;&#xA;  { Date: 1601334000000, Close: 4.49},&#xD;&#xA;  { Date: 1605740400000, Close: 4.99},&#xD;&#xA;  { Date: 1606777200000, Close: 5.29},&#xD;&#xA;  { Date: 1608764400000, Close: 4.69},&#xD;&#xA;  { Date: 1610751600000, Close: 4.99},&#xD;&#xA;  { Date: 1614121200000, Close: 5.99},&#xD;&#xA;  { Date: 1614380400000, Close: 6.99},&#xD;&#xA;  { Date: 1616281200000, Close: 6.59},&#xD;&#xA;  { Date: 1617318000000, Close: 5.99},&#xD;&#xA;  { Date: 1619391600000, Close: 5.39},&#xD;&#xA;  { Date: 1621292400000, Close: 5.89},&#xD;&#xA;  { Date: 1625871600000, Close: 5.99},&#xD;&#xA;  { Date: 1629932400000, Close: 6.99},&#xD;&#xA;  { Date: 1631660400000, Close: 6.39},&#xD;&#xA;  { Date: 1632697200000, Close: 5.79},&#xD;&#xA;  { Date: 1633734000000, Close: 5.19},&#xD;&#xA;  { Date: 1634770800000, Close: 4.59},&#xD;&#xA;  { Date: 1635462000000, Close: 4.49},&#xD;&#xA;  { Date: 1645830000000, Close: 4.69},&#xD;&#xA;  { Date: 1661900400000, Close: 4.79},&#xD;&#xA;  { Date: 1665183600000, Close: 4.69},&#xD;&#xA;  { Date: 1665788400000, Close: 5.99},&#xD;&#xA;  { Date: 1673910000000, Close: 6.49},&#xD;&#xA;  { Date: 1676847600000, Close: 5.79},&#xD;&#xA;  { Date: 1677279600000, Close: 5.49},&#xD;&#xA;  { Date: 1678316400000, Close: 4.89},&#xD;&#xA;  { Date: 1678575600000, Close: 4.39},&#xD;&#xA;  { Date: 1680044400000, Close: 4.49},&#xD;&#xA;  { Date: 1695942000000, Close: 5.99},&#xD;&#xA;  { Date: 1699398000000, Close: 6.99},&#xD;&#xA;  { Date: 1702681200000, Close: 6.39},&#xD;&#xA;  { Date: 1703804400000, Close: 5.79},&#xD;&#xA;  { Date: 1704409200000, Close: 4.99},&#xD;&#xA;  { Date: 1705359600000, Close: 5.49},&#xD;&#xA;  { Date: 1706050800000, Close: 4.99},&#xD;&#xA;  { Date: 1712790000000, Close: 5.99},&#xD;&#xA;  { Date: 1728082800000, Close: 7.99},&#xD;&#xA;  { Date: 1728082800000, Close: 7.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1728082800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584399600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>100/132 - Erika</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/100---erika/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/100---erika/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149006.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 6.99 on 27-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.99 on 01-04-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 2.99},&#xD;&#xA;  { Date: 1583794800000, Close: 2.39},&#xD;&#xA;  { Date: 1585004400000, Close: 2.29},&#xD;&#xA;  { Date: 1585695600000, Close: 1.99},&#xD;&#xA;  { Date: 1586646000000, Close: 2.29},&#xD;&#xA;  { Date: 1587423600000, Close: 2.39},&#xD;&#xA;  { Date: 1588892400000, Close: 2.29},&#xD;&#xA;  { Date: 1589929200000, Close: 2.99},&#xD;&#xA;  { Date: 1590015600000, Close: 3.29},&#xD;&#xA;  { Date: 1590534000000, Close: 3.39},&#xD;&#xA;  { Date: 1591052400000, Close: 3.29},&#xD;&#xA;  { Date: 1594076400000, Close: 2.69},&#xD;&#xA;  { Date: 1595372400000, Close: 2.99},&#xD;&#xA;  { Date: 1597186800000, Close: 2.39},&#xD;&#xA;  { Date: 1598396400000, Close: 2.49},&#xD;&#xA;  { Date: 1599692400000, Close: 2.99},&#xD;&#xA;  { Date: 1600988400000, Close: 3.09},&#xD;&#xA;  { Date: 1601506800000, Close: 3.29},&#xD;&#xA;  { Date: 1602543600000, Close: 3.45},&#xD;&#xA;  { Date: 1604012400000, Close: 3.59},&#xD;&#xA;  { Date: 1604617200000, Close: 3.69},&#xD;&#xA;  { Date: 1605913200000, Close: 3.99},&#xD;&#xA;  { Date: 1606518000000, Close: 4.39},&#xD;&#xA;  { Date: 1607036400000, Close: 4.99},&#xD;&#xA;  { Date: 1608073200000, Close: 5.99},&#xD;&#xA;  { Date: 1614380400000, Close: 6.99},&#xD;&#xA;  { Date: 1616194800000, Close: 6.59},&#xD;&#xA;  { Date: 1617058800000, Close: 5.99},&#xD;&#xA;  { Date: 1617922800000, Close: 6.45},&#xD;&#xA;  { Date: 1618527600000, Close: 6.99},&#xD;&#xA;  { Date: 1620860400000, Close: 6.39},&#xD;&#xA;  { Date: 1622156400000, Close: 5.49},&#xD;&#xA;  { Date: 1623970800000, Close: 6.99},&#xD;&#xA;  { Date: 1627599600000, Close: 6.59},&#xD;&#xA;  { Date: 1630537200000, Close: 5.99},&#xD;&#xA;  { Date: 1634252400000, Close: 5.39},&#xD;&#xA;  { Date: 1638658800000, Close: 4.79},&#xD;&#xA;  { Date: 1641337200000, Close: 4.99},&#xD;&#xA;  { Date: 1644706800000, Close: 4.39},&#xD;&#xA;  { Date: 1648681200000, Close: 4.99},&#xD;&#xA;  { Date: 1657062000000, Close: 5.29},&#xD;&#xA;  { Date: 1673305200000, Close: 4.69},&#xD;&#xA;  { Date: 1688166000000, Close: 5.99},&#xD;&#xA;  { Date: 1691103600000, Close: 6.49},&#xD;&#xA;  { Date: 1695942000000, Close: 6.99},&#xD;&#xA;  { Date: 1702681200000, Close: 6.39},&#xD;&#xA;  { Date: 1704582000000, Close: 5.79},&#xD;&#xA;  { Date: 1707778800000, Close: 5.49},&#xD;&#xA;  { Date: 1712790000000, Close: 5.99},&#xD;&#xA;  { Date: 1712790000000, Close: 5.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614380400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585695600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>101/132 - Lt. Surge</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/101---lt.-surge/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/101---lt.-surge/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149200.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.99 on 31-08-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 12-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.09},&#xD;&#xA;  { Date: 1582239600000, Close: 1.19},&#xD;&#xA;  { Date: 1583967600000, Close: 0.89},&#xD;&#xA;  { Date: 1591311600000, Close: 3.19},&#xD;&#xA;  { Date: 1592348400000, Close: 2.79},&#xD;&#xA;  { Date: 1593385200000, Close: 2.49},&#xD;&#xA;  { Date: 1594422000000, Close: 2.19},&#xD;&#xA;  { Date: 1595026800000, Close: 1.99},&#xD;&#xA;  { Date: 1595372400000, Close: 2.49},&#xD;&#xA;  { Date: 1596927600000, Close: 2.19},&#xD;&#xA;  { Date: 1598310000000, Close: 1.99},&#xD;&#xA;  { Date: 1598655600000, Close: 2.09},&#xD;&#xA;  { Date: 1599174000000, Close: 2.19},&#xD;&#xA;  { Date: 1599692400000, Close: 2.39},&#xD;&#xA;  { Date: 1600210800000, Close: 2.49},&#xD;&#xA;  { Date: 1601334000000, Close: 2.69},&#xD;&#xA;  { Date: 1602889200000, Close: 1.99},&#xD;&#xA;  { Date: 1604617200000, Close: 2.29},&#xD;&#xA;  { Date: 1606863600000, Close: 2.59},&#xD;&#xA;  { Date: 1607554800000, Close: 2.99},&#xD;&#xA;  { Date: 1609628400000, Close: 2.39},&#xD;&#xA;  { Date: 1610406000000, Close: 2.99},&#xD;&#xA;  { Date: 1612825200000, Close: 2.39},&#xD;&#xA;  { Date: 1614380400000, Close: 2.09},&#xD;&#xA;  { Date: 1618009200000, Close: 2.19},&#xD;&#xA;  { Date: 1620428400000, Close: 1.99},&#xD;&#xA;  { Date: 1624921200000, Close: 1.79},&#xD;&#xA;  { Date: 1626994800000, Close: 1.49},&#xD;&#xA;  { Date: 1628895600000, Close: 1.79},&#xD;&#xA;  { Date: 1632006000000, Close: 1.49},&#xD;&#xA;  { Date: 1634079600000, Close: 1.79},&#xD;&#xA;  { Date: 1635807600000, Close: 1.99},&#xD;&#xA;  { Date: 1646002800000, Close: 1.79},&#xD;&#xA;  { Date: 1653346800000, Close: 3.49},&#xD;&#xA;  { Date: 1693436400000, Close: 3.99},&#xD;&#xA;  { Date: 1700521200000, Close: 3.39},&#xD;&#xA;  { Date: 1708988400000, Close: 3.99},&#xD;&#xA;  { Date: 1708988400000, Close: 3.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1693436400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1583967600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>102/132 - Misty</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/102---misty/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/102---misty/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149263.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 5.39 on 05-03-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 13-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 2.09},&#xD;&#xA;  { Date: 1578697200000, Close: 1.79},&#xD;&#xA;  { Date: 1579734000000, Close: 1.49},&#xD;&#xA;  { Date: 1581030000000, Close: 1.59},&#xD;&#xA;  { Date: 1583103600000, Close: 1.29},&#xD;&#xA;  { Date: 1584054000000, Close: 0.99},&#xD;&#xA;  { Date: 1587164400000, Close: 1.29},&#xD;&#xA;  { Date: 1588892400000, Close: 1.59},&#xD;&#xA;  { Date: 1589410800000, Close: 1.79},&#xD;&#xA;  { Date: 1589929200000, Close: 1.95},&#xD;&#xA;  { Date: 1591311600000, Close: 2.09},&#xD;&#xA;  { Date: 1593644400000, Close: 3.39},&#xD;&#xA;  { Date: 1594854000000, Close: 3.49},&#xD;&#xA;  { Date: 1596582000000, Close: 2.89},&#xD;&#xA;  { Date: 1597532400000, Close: 2.59},&#xD;&#xA;  { Date: 1598050800000, Close: 2.99},&#xD;&#xA;  { Date: 1600210800000, Close: 3.49},&#xD;&#xA;  { Date: 1600815600000, Close: 3.99},&#xD;&#xA;  { Date: 1601593200000, Close: 4.49},&#xD;&#xA;  { Date: 1603321200000, Close: 4.59},&#xD;&#xA;  { Date: 1606172400000, Close: 3.99},&#xD;&#xA;  { Date: 1606863600000, Close: 4.49},&#xD;&#xA;  { Date: 1607468400000, Close: 4.89},&#xD;&#xA;  { Date: 1609542000000, Close: 4.29},&#xD;&#xA;  { Date: 1610578800000, Close: 3.69},&#xD;&#xA;  { Date: 1611702000000, Close: 3.09},&#xD;&#xA;  { Date: 1611961200000, Close: 3.49},&#xD;&#xA;  { Date: 1612998000000, Close: 2.89},&#xD;&#xA;  { Date: 1614380400000, Close: 2.99},&#xD;&#xA;  { Date: 1620082800000, Close: 2.39},&#xD;&#xA;  { Date: 1620946800000, Close: 2.79},&#xD;&#xA;  { Date: 1622242800000, Close: 2.49},&#xD;&#xA;  { Date: 1622761200000, Close: 2.79},&#xD;&#xA;  { Date: 1624575600000, Close: 2.99},&#xD;&#xA;  { Date: 1628895600000, Close: 3.49},&#xD;&#xA;  { Date: 1631314800000, Close: 3.99},&#xD;&#xA;  { Date: 1633647600000, Close: 3.39},&#xD;&#xA;  { Date: 1634770800000, Close: 2.79},&#xD;&#xA;  { Date: 1635721200000, Close: 2.49},&#xD;&#xA;  { Date: 1636758000000, Close: 2.19},&#xD;&#xA;  { Date: 1637103600000, Close: 2.49},&#xD;&#xA;  { Date: 1653346800000, Close: 3.79},&#xD;&#xA;  { Date: 1656716400000, Close: 3.49},&#xD;&#xA;  { Date: 1661900400000, Close: 3.99},&#xD;&#xA;  { Date: 1666738800000, Close: 4.19},&#xD;&#xA;  { Date: 1695942000000, Close: 4.99},&#xD;&#xA;  { Date: 1709593200000, Close: 5.39},&#xD;&#xA;  { Date: 1709766000000, Close: 4.99},&#xD;&#xA;  { Date: 1715036400000, Close: 4.49},&#xD;&#xA;  { Date: 1715036400000, Close: 4.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1709593200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584054000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>103/132 - No Removal Gym</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/103---no-removal-gym/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/103---no-removal-gym/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149322.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 10.99 on 19-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 3.49 on 10-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578610800000, Close: 3.49},&#xD;&#xA;  { Date: 1580166000000, Close: 3.69},&#xD;&#xA;  { Date: 1583881200000, Close: 3.99},&#xD;&#xA;  { Date: 1585868400000, Close: 4.09},&#xD;&#xA;  { Date: 1586818800000, Close: 3.99},&#xD;&#xA;  { Date: 1591138800000, Close: 6.49},&#xD;&#xA;  { Date: 1596495600000, Close: 5.79},&#xD;&#xA;  { Date: 1597532400000, Close: 5.19},&#xD;&#xA;  { Date: 1598396400000, Close: 5.49},&#xD;&#xA;  { Date: 1599260400000, Close: 6.99},&#xD;&#xA;  { Date: 1600729200000, Close: 7.99},&#xD;&#xA;  { Date: 1602284400000, Close: 7.49},&#xD;&#xA;  { Date: 1603234800000, Close: 7.99},&#xD;&#xA;  { Date: 1604444400000, Close: 7.49},&#xD;&#xA;  { Date: 1605740400000, Close: 6.79},&#xD;&#xA;  { Date: 1608073200000, Close: 7.89},&#xD;&#xA;  { Date: 1609887600000, Close: 7.99},&#xD;&#xA;  { Date: 1611788400000, Close: 8.99},&#xD;&#xA;  { Date: 1614380400000, Close: 9.99},&#xD;&#xA;  { Date: 1616108400000, Close: 10.99},&#xD;&#xA;  { Date: 1618527600000, Close: 9.99},&#xD;&#xA;  { Date: 1619650800000, Close: 8.79},&#xD;&#xA;  { Date: 1620601200000, Close: 8.19},&#xD;&#xA;  { Date: 1621638000000, Close: 7.59},&#xD;&#xA;  { Date: 1622329200000, Close: 7.99},&#xD;&#xA;  { Date: 1623970800000, Close: 7.39},&#xD;&#xA;  { Date: 1625094000000, Close: 6.99},&#xD;&#xA;  { Date: 1628031600000, Close: 7.99},&#xD;&#xA;  { Date: 1628982000000, Close: 7.39},&#xD;&#xA;  { Date: 1629932400000, Close: 6.79},&#xD;&#xA;  { Date: 1632870000000, Close: 6.99},&#xD;&#xA;  { Date: 1632956400000, Close: 7.99},&#xD;&#xA;  { Date: 1635807600000, Close: 7.39},&#xD;&#xA;  { Date: 1636930800000, Close: 6.99},&#xD;&#xA;  { Date: 1637967600000, Close: 6.39},&#xD;&#xA;  { Date: 1639436400000, Close: 5.79},&#xD;&#xA;  { Date: 1645484400000, Close: 5.19},&#xD;&#xA;  { Date: 1647471600000, Close: 6.49},&#xD;&#xA;  { Date: 1647558000000, Close: 7.09},&#xD;&#xA;  { Date: 1650409200000, Close: 7.19},&#xD;&#xA;  { Date: 1652223600000, Close: 7.09},&#xD;&#xA;  { Date: 1665183600000, Close: 6.29},&#xD;&#xA;  { Date: 1665529200000, Close: 6.19},&#xD;&#xA;  { Date: 1668121200000, Close: 5.59},&#xD;&#xA;  { Date: 1669849200000, Close: 5.49},&#xD;&#xA;  { Date: 1673737200000, Close: 5.39},&#xD;&#xA;  { Date: 1674255600000, Close: 4.99},&#xD;&#xA;  { Date: 1674946800000, Close: 4.69},&#xD;&#xA;  { Date: 1675724400000, Close: 5.29},&#xD;&#xA;  { Date: 1676070000000, Close: 4.69},&#xD;&#xA;  { Date: 1677538800000, Close: 4.99},&#xD;&#xA;  { Date: 1677884400000, Close: 5.69},&#xD;&#xA;  { Date: 1679180400000, Close: 5.79},&#xD;&#xA;  { Date: 1680649200000, Close: 5.89},&#xD;&#xA;  { Date: 1682204400000, Close: 5.99},&#xD;&#xA;  { Date: 1695942000000, Close: 6.99},&#xD;&#xA;  { Date: 1695942000000, Close: 6.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1616108400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578610800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>104/132 - The Rocket&#39;s Training Gym</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/104---the-rockets-training-gym/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/104---the-rockets-training-gym/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149488.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 17.99 on 12-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 3.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 4.99},&#xD;&#xA;  { Date: 1578697200000, Close: 4.39},&#xD;&#xA;  { Date: 1579906800000, Close: 3.79},&#xD;&#xA;  { Date: 1581030000000, Close: 3.99},&#xD;&#xA;  { Date: 1583967600000, Close: 3.79},&#xD;&#xA;  { Date: 1584486000000, Close: 3.49},&#xD;&#xA;  { Date: 1591743600000, Close: 5.99},&#xD;&#xA;  { Date: 1592002800000, Close: 6.49},&#xD;&#xA;  { Date: 1592348400000, Close: 7.49},&#xD;&#xA;  { Date: 1596495600000, Close: 7.99},&#xD;&#xA;  { Date: 1597273200000, Close: 8.99},&#xD;&#xA;  { Date: 1598396400000, Close: 9.99},&#xD;&#xA;  { Date: 1598655600000, Close: 10.99},&#xD;&#xA;  { Date: 1599778800000, Close: 9.99},&#xD;&#xA;  { Date: 1599865200000, Close: 8.99},&#xD;&#xA;  { Date: 1601161200000, Close: 8.39},&#xD;&#xA;  { Date: 1602025200000, Close: 7.99},&#xD;&#xA;  { Date: 1603148400000, Close: 8.99},&#xD;&#xA;  { Date: 1604530800000, Close: 8.39},&#xD;&#xA;  { Date: 1605740400000, Close: 8.99},&#xD;&#xA;  { Date: 1606777200000, Close: 9.99},&#xD;&#xA;  { Date: 1607122800000, Close: 10.99},&#xD;&#xA;  { Date: 1608764400000, Close: 9.79},&#xD;&#xA;  { Date: 1610578800000, Close: 10.49},&#xD;&#xA;  { Date: 1611270000000, Close: 11.99},&#xD;&#xA;  { Date: 1612306800000, Close: 14.99},&#xD;&#xA;  { Date: 1614380400000, Close: 16.99},&#xD;&#xA;  { Date: 1615503600000, Close: 17.99},&#xD;&#xA;  { Date: 1616022000000, Close: 16.99},&#xD;&#xA;  { Date: 1619737200000, Close: 15.49},&#xD;&#xA;  { Date: 1620428400000, Close: 13.99},&#xD;&#xA;  { Date: 1621638000000, Close: 12.99},&#xD;&#xA;  { Date: 1622847600000, Close: 11.49},&#xD;&#xA;  { Date: 1623970800000, Close: 10.99},&#xD;&#xA;  { Date: 1625266800000, Close: 9.79},&#xD;&#xA;  { Date: 1634857200000, Close: 9.19},&#xD;&#xA;  { Date: 1641337200000, Close: 9.99},&#xD;&#xA;  { Date: 1650582000000, Close: 10.99},&#xD;&#xA;  { Date: 1657062000000, Close: 11.99},&#xD;&#xA;  { Date: 1664924400000, Close: 10.49},&#xD;&#xA;  { Date: 1666134000000, Close: 9.39},&#xD;&#xA;  { Date: 1667343600000, Close: 8.79},&#xD;&#xA;  { Date: 1668553200000, Close: 8.19},&#xD;&#xA;  { Date: 1669071600000, Close: 7.99},&#xD;&#xA;  { Date: 1670281200000, Close: 7.39},&#xD;&#xA;  { Date: 1670367600000, Close: 6.29},&#xD;&#xA;  { Date: 1671750000000, Close: 6.19},&#xD;&#xA;  { Date: 1673391600000, Close: 6.39},&#xD;&#xA;  { Date: 1674169200000, Close: 5.79},&#xD;&#xA;  { Date: 1674514800000, Close: 5.99},&#xD;&#xA;  { Date: 1691535600000, Close: 6.99},&#xD;&#xA;  { Date: 1695942000000, Close: 7.49},&#xD;&#xA;  { Date: 1695942000000, Close: 7.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615503600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>105/132 - Blaine&#39;s Last Resort</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/105---blaines-last-resort/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/105---blaines-last-resort/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148856.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 14-02-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1630278000000, Close: 0.79},&#xD;&#xA;  { Date: 1644793200000, Close: 0.89},&#xD;&#xA;  { Date: 1649631600000, Close: 0.79},&#xD;&#xA;  { Date: 1667170800000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.89},&#xD;&#xA;  { Date: 1688338800000, Close: 0.79},&#xD;&#xA;  { Date: 1688338800000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1644793200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>106/132 - Brock&#39;s Training Method</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/106---brocks-training-method/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/106---brocks-training-method/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148898.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 09-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 0.99},&#xD;&#xA;  { Date: 1604876400000, Close: 1.09},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1609714800000, Close: 0.89},&#xD;&#xA;  { Date: 1615762800000, Close: 0.99},&#xD;&#xA;  { Date: 1620601200000, Close: 0.89},&#xD;&#xA;  { Date: 1638140400000, Close: 0.79},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1604876400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>107/132 - Celadon City Gym</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/107---celadon-city-gym/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/107---celadon-city-gym/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148910.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 26-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1682290800000, Close: 0.59},&#xD;&#xA;  { Date: 1688338800000, Close: 0.69},&#xD;&#xA;  { Date: 1704063600000, Close: 0.59},&#xD;&#xA;  { Date: 1706482800000, Close: 0.69},&#xD;&#xA;  { Date: 1706482800000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619391600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>108/132 - Cerulean City Gym</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/108---cerulean-city-gym/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/108---cerulean-city-gym/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148911.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 24-06-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.59},&#xD;&#xA;  { Date: 1606690800000, Close: 0.69},&#xD;&#xA;  { Date: 1621810800000, Close: 0.59},&#xD;&#xA;  { Date: 1625439600000, Close: 0.69},&#xD;&#xA;  { Date: 1632092400000, Close: 0.79},&#xD;&#xA;  { Date: 1635116400000, Close: 0.69},&#xD;&#xA;  { Date: 1636930800000, Close: 0.59},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.79},&#xD;&#xA;  { Date: 1719183600000, Close: 0.89},&#xD;&#xA;  { Date: 1719183600000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1719183600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>109/132 - Erika&#39;s Maids</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/109---erikas-maids/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/109---erikas-maids/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149024.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 27-11-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 1.09},&#xD;&#xA;  { Date: 1607900400000, Close: 1.19},&#xD;&#xA;  { Date: 1610319600000, Close: 1.49},&#xD;&#xA;  { Date: 1612134000000, Close: 1.19},&#xD;&#xA;  { Date: 1614553200000, Close: 0.89},&#xD;&#xA;  { Date: 1647212400000, Close: 1.39},&#xD;&#xA;  { Date: 1653865200000, Close: 1.79},&#xD;&#xA;  { Date: 1666566000000, Close: 1.49},&#xD;&#xA;  { Date: 1668380400000, Close: 1.19},&#xD;&#xA;  { Date: 1668985200000, Close: 1.29},&#xD;&#xA;  { Date: 1678662000000, Close: 1.19},&#xD;&#xA;  { Date: 1684710000000, Close: 1.29},&#xD;&#xA;  { Date: 1688338800000, Close: 1.49},&#xD;&#xA;  { Date: 1696201200000, Close: 2.29},&#xD;&#xA;  { Date: 1701039600000, Close: 2.49},&#xD;&#xA;  { Date: 1713135600000, Close: 2.29},&#xD;&#xA;  { Date: 1713740400000, Close: 1.99},&#xD;&#xA;  { Date: 1713740400000, Close: 1.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1701039600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>110/132 - Erika&#39;s Perfume</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/110---erikas-perfume/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/110---erikas-perfume/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149029.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1601852400000, Close: 0.89},&#xD;&#xA;  { Date: 1606086000000, Close: 1.99},&#xD;&#xA;  { Date: 1607295600000, Close: 2.49},&#xD;&#xA;  { Date: 1609110000000, Close: 2.19},&#xD;&#xA;  { Date: 1610319600000, Close: 1.99},&#xD;&#xA;  { Date: 1612134000000, Close: 1.79},&#xD;&#xA;  { Date: 1613343600000, Close: 1.95},&#xD;&#xA;  { Date: 1615762800000, Close: 1.79},&#xD;&#xA;  { Date: 1617577200000, Close: 1.49},&#xD;&#xA;  { Date: 1621810800000, Close: 1.29},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 0.99},&#xD;&#xA;  { Date: 1634511600000, Close: 0.89},&#xD;&#xA;  { Date: 1667170800000, Close: 0.99},&#xD;&#xA;  { Date: 1672009200000, Close: 0.69},&#xD;&#xA;  { Date: 1678662000000, Close: 0.79},&#xD;&#xA;  { Date: 1696201200000, Close: 0.69},&#xD;&#xA;  { Date: 1719183600000, Close: 0.79},&#xD;&#xA;  { Date: 1728255600000, Close: 0.69},&#xD;&#xA;  { Date: 1728255600000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>111/132 - Good Manners</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/111---good-manners/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/111---good-manners/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149095.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.99 on 12-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.19 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 1.19},&#xD;&#xA;  { Date: 1591398000000, Close: 2.99},&#xD;&#xA;  { Date: 1593817200000, Close: 3.99},&#xD;&#xA;  { Date: 1600383600000, Close: 4.99},&#xD;&#xA;  { Date: 1603666800000, Close: 5.29},&#xD;&#xA;  { Date: 1604876400000, Close: 5.99},&#xD;&#xA;  { Date: 1605481200000, Close: 6.99},&#xD;&#xA;  { Date: 1607900400000, Close: 5.99},&#xD;&#xA;  { Date: 1609110000000, Close: 6.09},&#xD;&#xA;  { Date: 1609714800000, Close: 6.29},&#xD;&#xA;  { Date: 1610319600000, Close: 6.49},&#xD;&#xA;  { Date: 1610924400000, Close: 6.99},&#xD;&#xA;  { Date: 1612134000000, Close: 6.59},&#xD;&#xA;  { Date: 1612738800000, Close: 6.49},&#xD;&#xA;  { Date: 1614553200000, Close: 5.99},&#xD;&#xA;  { Date: 1616367600000, Close: 6.99},&#xD;&#xA;  { Date: 1618182000000, Close: 7.99},&#xD;&#xA;  { Date: 1621206000000, Close: 7.39},&#xD;&#xA;  { Date: 1622415600000, Close: 7.29},&#xD;&#xA;  { Date: 1624834800000, Close: 6.59},&#xD;&#xA;  { Date: 1626044400000, Close: 5.99},&#xD;&#xA;  { Date: 1626649200000, Close: 4.99},&#xD;&#xA;  { Date: 1632092400000, Close: 5.99},&#xD;&#xA;  { Date: 1634511600000, Close: 5.39},&#xD;&#xA;  { Date: 1635116400000, Close: 4.49},&#xD;&#xA;  { Date: 1635721200000, Close: 3.99},&#xD;&#xA;  { Date: 1644793200000, Close: 4.19},&#xD;&#xA;  { Date: 1646607600000, Close: 3.89},&#xD;&#xA;  { Date: 1652655600000, Close: 4.49},&#xD;&#xA;  { Date: 1654470000000, Close: 3.69},&#xD;&#xA;  { Date: 1661727600000, Close: 4.29},&#xD;&#xA;  { Date: 1665961200000, Close: 3.69},&#xD;&#xA;  { Date: 1666566000000, Close: 3.29},&#xD;&#xA;  { Date: 1668380400000, Close: 2.69},&#xD;&#xA;  { Date: 1670194800000, Close: 2.39},&#xD;&#xA;  { Date: 1681686000000, Close: 2.79},&#xD;&#xA;  { Date: 1688338800000, Close: 3.09},&#xD;&#xA;  { Date: 1689548400000, Close: 3.29},&#xD;&#xA;  { Date: 1696201200000, Close: 3.99},&#xD;&#xA;  { Date: 1698015600000, Close: 4.49},&#xD;&#xA;  { Date: 1704063600000, Close: 3.89},&#xD;&#xA;  { Date: 1707692400000, Close: 3.99},&#xD;&#xA;  { Date: 1708297200000, Close: 3.49},&#xD;&#xA;  { Date: 1708902000000, Close: 2.99},&#xD;&#xA;  { Date: 1714950000000, Close: 3.49},&#xD;&#xA;  { Date: 1719183600000, Close: 2.89},&#xD;&#xA;  { Date: 1719183600000, Close: 2.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618182000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>112/132 - Lt. Surge&#39;s Treaty</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/112---lt.-surges-treaty/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/112---lt.-surges-treaty/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149222.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.29 on 12-02-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 1.09},&#xD;&#xA;  { Date: 1610924400000, Close: 1.19},&#xD;&#xA;  { Date: 1613343600000, Close: 0.89},&#xD;&#xA;  { Date: 1621206000000, Close: 0.99},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1638140400000, Close: 0.99},&#xD;&#xA;  { Date: 1646002800000, Close: 1.09},&#xD;&#xA;  { Date: 1662332400000, Close: 1.19},&#xD;&#xA;  { Date: 1667170800000, Close: 0.89},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.79},&#xD;&#xA;  { Date: 1684710000000, Close: 0.99},&#xD;&#xA;  { Date: 1691967600000, Close: 1.49},&#xD;&#xA;  { Date: 1696201200000, Close: 1.99},&#xD;&#xA;  { Date: 1707692400000, Close: 2.29},&#xD;&#xA;  { Date: 1707692400000, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1707692400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>113/132 - Minion of Team Rocket</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/113---minion-of-team-rocket/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/113---minion-of-team-rocket/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149260.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 8.99 on 12-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.19 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 1.19},&#xD;&#xA;  { Date: 1600383600000, Close: 4.49},&#xD;&#xA;  { Date: 1601852400000, Close: 4.99},&#xD;&#xA;  { Date: 1602457200000, Close: 4.49},&#xD;&#xA;  { Date: 1603666800000, Close: 4.95},&#xD;&#xA;  { Date: 1605481200000, Close: 4.99},&#xD;&#xA;  { Date: 1607900400000, Close: 4.39},&#xD;&#xA;  { Date: 1610319600000, Close: 4.99},&#xD;&#xA;  { Date: 1610924400000, Close: 5.99},&#xD;&#xA;  { Date: 1614553200000, Close: 6.99},&#xD;&#xA;  { Date: 1615762800000, Close: 7.99},&#xD;&#xA;  { Date: 1618182000000, Close: 8.99},&#xD;&#xA;  { Date: 1619391600000, Close: 8.39},&#xD;&#xA;  { Date: 1621206000000, Close: 7.79},&#xD;&#xA;  { Date: 1623020400000, Close: 7.19},&#xD;&#xA;  { Date: 1624230000000, Close: 6.99},&#xD;&#xA;  { Date: 1626044400000, Close: 6.39},&#xD;&#xA;  { Date: 1627858800000, Close: 5.49},&#xD;&#xA;  { Date: 1632092400000, Close: 4.89},&#xD;&#xA;  { Date: 1633302000000, Close: 4.49},&#xD;&#xA;  { Date: 1635116400000, Close: 3.99},&#xD;&#xA;  { Date: 1636930800000, Close: 3.49},&#xD;&#xA;  { Date: 1638745200000, Close: 2.99},&#xD;&#xA;  { Date: 1644793200000, Close: 3.49},&#xD;&#xA;  { Date: 1647212400000, Close: 3.99},&#xD;&#xA;  { Date: 1647817200000, Close: 3.89},&#xD;&#xA;  { Date: 1674428400000, Close: 4.09},&#xD;&#xA;  { Date: 1691967600000, Close: 3.99},&#xD;&#xA;  { Date: 1701039600000, Close: 3.39},&#xD;&#xA;  { Date: 1705273200000, Close: 2.79},&#xD;&#xA;  { Date: 1705273200000, Close: 2.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618182000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>114/132 - Misty&#39;s Wrath</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/114---mistys-wrath/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/114---mistys-wrath/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149293.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 5.99 on 30-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.99},&#xD;&#xA;  { Date: 1591398000000, Close: 1.29},&#xD;&#xA;  { Date: 1593817200000, Close: 2.49},&#xD;&#xA;  { Date: 1600383600000, Close: 2.39},&#xD;&#xA;  { Date: 1602457200000, Close: 2.59},&#xD;&#xA;  { Date: 1606086000000, Close: 4.99},&#xD;&#xA;  { Date: 1606690800000, Close: 5.99},&#xD;&#xA;  { Date: 1608505200000, Close: 4.99},&#xD;&#xA;  { Date: 1609714800000, Close: 5.49},&#xD;&#xA;  { Date: 1610924400000, Close: 4.99},&#xD;&#xA;  { Date: 1612738800000, Close: 4.39},&#xD;&#xA;  { Date: 1613343600000, Close: 4.49},&#xD;&#xA;  { Date: 1616972400000, Close: 3.99},&#xD;&#xA;  { Date: 1618786800000, Close: 4.29},&#xD;&#xA;  { Date: 1621206000000, Close: 3.99},&#xD;&#xA;  { Date: 1623020400000, Close: 3.49},&#xD;&#xA;  { Date: 1624834800000, Close: 2.99},&#xD;&#xA;  { Date: 1626649200000, Close: 2.49},&#xD;&#xA;  { Date: 1633906800000, Close: 2.19},&#xD;&#xA;  { Date: 1635116400000, Close: 1.99},&#xD;&#xA;  { Date: 1636930800000, Close: 1.49},&#xD;&#xA;  { Date: 1638745200000, Close: 1.29},&#xD;&#xA;  { Date: 1639954800000, Close: 1.49},&#xD;&#xA;  { Date: 1646607600000, Close: 1.19},&#xD;&#xA;  { Date: 1656889200000, Close: 3.49},&#xD;&#xA;  { Date: 1666566000000, Close: 2.89},&#xD;&#xA;  { Date: 1667775600000, Close: 2.49},&#xD;&#xA;  { Date: 1669590000000, Close: 2.19},&#xD;&#xA;  { Date: 1671404400000, Close: 1.69},&#xD;&#xA;  { Date: 1681686000000, Close: 1.89},&#xD;&#xA;  { Date: 1684710000000, Close: 1.99},&#xD;&#xA;  { Date: 1688338800000, Close: 2.99},&#xD;&#xA;  { Date: 1691362800000, Close: 3.99},&#xD;&#xA;  { Date: 1691967600000, Close: 3.49},&#xD;&#xA;  { Date: 1712530800000, Close: 4.49},&#xD;&#xA;  { Date: 1712530800000, Close: 4.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606690800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>115/132 - Pewter City Gym</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/115---pewter-city-gym/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/115---pewter-city-gym/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149333.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 18-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1604876400000, Close: 0.69},&#xD;&#xA;  { Date: 1607900400000, Close: 0.79},&#xD;&#xA;  { Date: 1610924400000, Close: 0.89},&#xD;&#xA;  { Date: 1621206000000, Close: 0.79},&#xD;&#xA;  { Date: 1632092400000, Close: 0.89},&#xD;&#xA;  { Date: 1696201200000, Close: 0.69},&#xD;&#xA;  { Date: 1696201200000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1610924400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>116/132 - Recall</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/116---recall/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/116---recall/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149387.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 6.99 on 12-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.79 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 1.79},&#xD;&#xA;  { Date: 1591398000000, Close: 3.49},&#xD;&#xA;  { Date: 1593385200000, Close: 4.99},&#xD;&#xA;  { Date: 1600383600000, Close: 4.49},&#xD;&#xA;  { Date: 1601852400000, Close: 4.99},&#xD;&#xA;  { Date: 1602457200000, Close: 5.29},&#xD;&#xA;  { Date: 1604876400000, Close: 4.99},&#xD;&#xA;  { Date: 1609110000000, Close: 4.39},&#xD;&#xA;  { Date: 1610319600000, Close: 4.99},&#xD;&#xA;  { Date: 1610924400000, Close: 5.99},&#xD;&#xA;  { Date: 1613343600000, Close: 6.49},&#xD;&#xA;  { Date: 1618182000000, Close: 6.99},&#xD;&#xA;  { Date: 1619996400000, Close: 5.99},&#xD;&#xA;  { Date: 1621810800000, Close: 5.59},&#xD;&#xA;  { Date: 1623020400000, Close: 5.49},&#xD;&#xA;  { Date: 1625439600000, Close: 4.89},&#xD;&#xA;  { Date: 1626649200000, Close: 4.49},&#xD;&#xA;  { Date: 1628463600000, Close: 3.49},&#xD;&#xA;  { Date: 1633302000000, Close: 2.89},&#xD;&#xA;  { Date: 1635116400000, Close: 2.59},&#xD;&#xA;  { Date: 1636326000000, Close: 2.29},&#xD;&#xA;  { Date: 1638140400000, Close: 1.99},&#xD;&#xA;  { Date: 1644793200000, Close: 2.09},&#xD;&#xA;  { Date: 1645398000000, Close: 2.29},&#xD;&#xA;  { Date: 1647817200000, Close: 3.19},&#xD;&#xA;  { Date: 1648422000000, Close: 3.29},&#xD;&#xA;  { Date: 1649026800000, Close: 3.19},&#xD;&#xA;  { Date: 1653865200000, Close: 3.99},&#xD;&#xA;  { Date: 1656284400000, Close: 4.29},&#xD;&#xA;  { Date: 1666566000000, Close: 3.59},&#xD;&#xA;  { Date: 1678662000000, Close: 3.69},&#xD;&#xA;  { Date: 1702854000000, Close: 4.49},&#xD;&#xA;  { Date: 1702854000000, Close: 4.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618182000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>117/132 - Sabrina&#39;s ESP</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/117---sabrinas-esp/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/117---sabrinas-esp/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149411.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 01-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 1.09},&#xD;&#xA;  { Date: 1600383600000, Close: 1.29},&#xD;&#xA;  { Date: 1601852400000, Close: 1.49},&#xD;&#xA;  { Date: 1604876400000, Close: 1.79},&#xD;&#xA;  { Date: 1606086000000, Close: 2.29},&#xD;&#xA;  { Date: 1608505200000, Close: 1.99},&#xD;&#xA;  { Date: 1612134000000, Close: 2.99},&#xD;&#xA;  { Date: 1618182000000, Close: 2.49},&#xD;&#xA;  { Date: 1618786800000, Close: 2.89},&#xD;&#xA;  { Date: 1620601200000, Close: 2.49},&#xD;&#xA;  { Date: 1622415600000, Close: 2.19},&#xD;&#xA;  { Date: 1623625200000, Close: 2.29},&#xD;&#xA;  { Date: 1626649200000, Close: 1.99},&#xD;&#xA;  { Date: 1627858800000, Close: 1.79},&#xD;&#xA;  { Date: 1635721200000, Close: 1.49},&#xD;&#xA;  { Date: 1637535600000, Close: 1.19},&#xD;&#xA;  { Date: 1639350000000, Close: 0.89},&#xD;&#xA;  { Date: 1644793200000, Close: 0.99},&#xD;&#xA;  { Date: 1646607600000, Close: 1.29},&#xD;&#xA;  { Date: 1650236400000, Close: 2.49},&#xD;&#xA;  { Date: 1655074800000, Close: 2.19},&#xD;&#xA;  { Date: 1656889200000, Close: 1.79},&#xD;&#xA;  { Date: 1658098800000, Close: 1.69},&#xD;&#xA;  { Date: 1674428400000, Close: 1.79},&#xD;&#xA;  { Date: 1676847600000, Close: 1.49},&#xD;&#xA;  { Date: 1678662000000, Close: 1.29},&#xD;&#xA;  { Date: 1679266800000, Close: 1.09},&#xD;&#xA;  { Date: 1683500400000, Close: 1.19},&#xD;&#xA;  { Date: 1684105200000, Close: 1.29},&#xD;&#xA;  { Date: 1696201200000, Close: 2.49},&#xD;&#xA;  { Date: 1713135600000, Close: 2.99},&#xD;&#xA;  { Date: 1713135600000, Close: 2.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1612134000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>118/132 - Secret Mission</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/118---secret-mission/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/118---secret-mission/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149447.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.29 on 26-10-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 1.49},&#xD;&#xA;  { Date: 1601247600000, Close: 1.79},&#xD;&#xA;  { Date: 1601852400000, Close: 1.99},&#xD;&#xA;  { Date: 1603666800000, Close: 2.29},&#xD;&#xA;  { Date: 1607295600000, Close: 1.99},&#xD;&#xA;  { Date: 1607900400000, Close: 1.79},&#xD;&#xA;  { Date: 1609714800000, Close: 1.49},&#xD;&#xA;  { Date: 1611529200000, Close: 1.29},&#xD;&#xA;  { Date: 1612738800000, Close: 1.39},&#xD;&#xA;  { Date: 1614553200000, Close: 1.29},&#xD;&#xA;  { Date: 1616367600000, Close: 1.09},&#xD;&#xA;  { Date: 1622415600000, Close: 1.19},&#xD;&#xA;  { Date: 1626044400000, Close: 0.89},&#xD;&#xA;  { Date: 1634511600000, Close: 0.79},&#xD;&#xA;  { Date: 1646607600000, Close: 0.89},&#xD;&#xA;  { Date: 1653260400000, Close: 1.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.99},&#xD;&#xA;  { Date: 1667170800000, Close: 0.89},&#xD;&#xA;  { Date: 1671404400000, Close: 0.69},&#xD;&#xA;  { Date: 1680476400000, Close: 0.79},&#xD;&#xA;  { Date: 1696201200000, Close: 1.09},&#xD;&#xA;  { Date: 1696201200000, Close: 1.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1603666800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>119/132 - Tickling Machine</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/119---tickling-machine/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/119---tickling-machine/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149490.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.99 on 14-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.99},&#xD;&#xA;  { Date: 1591398000000, Close: 1.99},&#xD;&#xA;  { Date: 1593385200000, Close: 2.49},&#xD;&#xA;  { Date: 1601852400000, Close: 3.49},&#xD;&#xA;  { Date: 1603666800000, Close: 3.99},&#xD;&#xA;  { Date: 1607900400000, Close: 4.99},&#xD;&#xA;  { Date: 1610924400000, Close: 4.39},&#xD;&#xA;  { Date: 1611529200000, Close: 3.99},&#xD;&#xA;  { Date: 1615762800000, Close: 3.39},&#xD;&#xA;  { Date: 1616367600000, Close: 2.99},&#xD;&#xA;  { Date: 1618182000000, Close: 3.49},&#xD;&#xA;  { Date: 1619391600000, Close: 3.99},&#xD;&#xA;  { Date: 1623020400000, Close: 3.39},&#xD;&#xA;  { Date: 1625439600000, Close: 3.49},&#xD;&#xA;  { Date: 1627254000000, Close: 2.89},&#xD;&#xA;  { Date: 1634511600000, Close: 2.59},&#xD;&#xA;  { Date: 1640559600000, Close: 2.29},&#xD;&#xA;  { Date: 1649026800000, Close: 3.29},&#xD;&#xA;  { Date: 1652050800000, Close: 3.49},&#xD;&#xA;  { Date: 1657494000000, Close: 3.79},&#xD;&#xA;  { Date: 1667170800000, Close: 3.19},&#xD;&#xA;  { Date: 1672009200000, Close: 2.99},&#xD;&#xA;  { Date: 1702854000000, Close: 3.19},&#xD;&#xA;  { Date: 1706482800000, Close: 3.49},&#xD;&#xA;  { Date: 1706482800000, Close: 3.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607900400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>120/132 - Vermilion City Gym</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/120---vermilion-city-gym/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/120---vermilion-city-gym/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149515.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 30-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.59},&#xD;&#xA;  { Date: 1606086000000, Close: 0.69},&#xD;&#xA;  { Date: 1610319600000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.69},&#xD;&#xA;  { Date: 1621206000000, Close: 0.59},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.59},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1653865200000, Close: 1.29},&#xD;&#xA;  { Date: 1658098800000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 0.89},&#xD;&#xA;  { Date: 1668985200000, Close: 0.79},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.69},&#xD;&#xA;  { Date: 1704668400000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1653865200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>121/132 - Blaine&#39;s Gamble</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/121---blaines-gamble/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/121---blaines-gamble/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148851.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 02-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1610319600000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.39},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.39},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.39},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.39},&#xD;&#xA;  { Date: 1684105200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1701644400000, Close: 0.39},&#xD;&#xA;  { Date: 1705878000000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.39},&#xD;&#xA;  { Date: 1711926000000, Close: 0.49},&#xD;&#xA;  { Date: 1712530800000, Close: 0.39},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1604271600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>122/132 - Energy Flow</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/122---energy-flow/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/122---energy-flow/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148999.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.40},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.59},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.39},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1706482800000, Close: 0.39},&#xD;&#xA;  { Date: 1713740400000, Close: 0.49},&#xD;&#xA;  { Date: 1713740400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>123/132 - Misty&#39;s Duel</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/123---mistys-duel/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/123---mistys-duel/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149266.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 29-04-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.69},&#xD;&#xA;  { Date: 1601247600000, Close: 0.79},&#xD;&#xA;  { Date: 1605481200000, Close: 0.99},&#xD;&#xA;  { Date: 1619996400000, Close: 0.89},&#xD;&#xA;  { Date: 1646002800000, Close: 0.79},&#xD;&#xA;  { Date: 1653260400000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 1.09},&#xD;&#xA;  { Date: 1672614000000, Close: 0.99},&#xD;&#xA;  { Date: 1678662000000, Close: 0.69},&#xD;&#xA;  { Date: 1688338800000, Close: 0.99},&#xD;&#xA;  { Date: 1694386800000, Close: 1.29},&#xD;&#xA;  { Date: 1697410800000, Close: 1.49},&#xD;&#xA;  { Date: 1706482800000, Close: 1.79},&#xD;&#xA;  { Date: 1709506800000, Close: 1.99},&#xD;&#xA;  { Date: 1713135600000, Close: 2.49},&#xD;&#xA;  { Date: 1714345200000, Close: 2.99},&#xD;&#xA;  { Date: 1714950000000, Close: 2.49},&#xD;&#xA;  { Date: 1719788400000, Close: 2.19},&#xD;&#xA;  { Date: 1721602800000, Close: 1.89},&#xD;&#xA;  { Date: 1721602800000, Close: 1.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1714345200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>124/132 - Narrow Gym</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/124---narrow-gym/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/124---narrow-gym/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149306.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.69},&#xD;&#xA;  { Date: 1605481200000, Close: 0.79},&#xD;&#xA;  { Date: 1607295600000, Close: 1.09},&#xD;&#xA;  { Date: 1611529200000, Close: 0.99},&#xD;&#xA;  { Date: 1613948400000, Close: 0.89},&#xD;&#xA;  { Date: 1619391600000, Close: 0.79},&#xD;&#xA;  { Date: 1629673200000, Close: 0.69},&#xD;&#xA;  { Date: 1661727600000, Close: 0.79},&#xD;&#xA;  { Date: 1666566000000, Close: 0.69},&#xD;&#xA;  { Date: 1668380400000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1713740400000, Close: 0.69},&#xD;&#xA;  { Date: 1713740400000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>125/132 - Sabrina&#39;s Gaze</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/125---sabrinas-gaze/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/125---sabrinas-gaze/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149417.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 12-09-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 29-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1610319600000, Close: 0.49},&#xD;&#xA;  { Date: 1653865200000, Close: 0.79},&#xD;&#xA;  { Date: 1662937200000, Close: 0.89},&#xD;&#xA;  { Date: 1688338800000, Close: 0.59},&#xD;&#xA;  { Date: 1688338800000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1662937200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1593385200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>126/132 - Trash Exchange</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/126---trash-exchange/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/126---trash-exchange/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149494.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 09-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 08-01-2024.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1604271600000, Close: 0.79},&#xD;&#xA;  { Date: 1612134000000, Close: 0.89},&#xD;&#xA;  { Date: 1618786800000, Close: 0.79},&#xD;&#xA;  { Date: 1623020400000, Close: 0.69},&#xD;&#xA;  { Date: 1652050800000, Close: 0.99},&#xD;&#xA;  { Date: 1667170800000, Close: 0.89},&#xD;&#xA;  { Date: 1668985200000, Close: 0.79},&#xD;&#xA;  { Date: 1670194800000, Close: 0.69},&#xD;&#xA;  { Date: 1704668400000, Close: 0.59},&#xD;&#xA;  { Date: 1704668400000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1652050800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1704668400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>127/132 - Fighting Energy</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/127---fighting-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/127---fighting-energy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149048.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 07-10-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 29-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1593385200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.39},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.39},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.39},&#xD;&#xA;  { Date: 1649631600000, Close: 0.49},&#xD;&#xA;  { Date: 1690758000000, Close: 0.39},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1728255600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1593385200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>128/132 - Fire Energy</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/128---fire-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/128---fire-energy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149051.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.29 on 15-04-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 29-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.89},&#xD;&#xA;  { Date: 1593385200000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 0.99},&#xD;&#xA;  { Date: 1604271600000, Close: 1.09},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1612738800000, Close: 1.29},&#xD;&#xA;  { Date: 1613343600000, Close: 1.19},&#xD;&#xA;  { Date: 1615762800000, Close: 0.89},&#xD;&#xA;  { Date: 1618786800000, Close: 0.79},&#xD;&#xA;  { Date: 1624834800000, Close: 0.89},&#xD;&#xA;  { Date: 1639350000000, Close: 1.09},&#xD;&#xA;  { Date: 1649631600000, Close: 0.99},&#xD;&#xA;  { Date: 1678662000000, Close: 1.09},&#xD;&#xA;  { Date: 1683500400000, Close: 0.99},&#xD;&#xA;  { Date: 1713135600000, Close: 2.29},&#xD;&#xA;  { Date: 1713135600000, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1713135600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1593385200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>129/132 - Grass Energy</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/129---grass-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/129---grass-energy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149098.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 18-09-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 24-04-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.39},&#xD;&#xA;  { Date: 1662937200000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.35},&#xD;&#xA;  { Date: 1692572400000, Close: 0.39},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1600383600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1682290800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>130/132 - Lightning Energy</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/130---lightning-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/130---lightning-energy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149191.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 25-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.39},&#xD;&#xA;  { Date: 1625439600000, Close: 0.49},&#xD;&#xA;  { Date: 1655074800000, Close: 0.39},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1678057200000, Close: 0.59},&#xD;&#xA;  { Date: 1728255600000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1611529200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>131/132 - Psychic Energy</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/131---psychic-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/131---psychic-energy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149373.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 01-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1606086000000, Close: 0.79},&#xD;&#xA;  { Date: 1614553200000, Close: 1.09},&#xD;&#xA;  { Date: 1619996400000, Close: 0.99},&#xD;&#xA;  { Date: 1623625200000, Close: 0.89},&#xD;&#xA;  { Date: 1632697200000, Close: 0.79},&#xD;&#xA;  { Date: 1635721200000, Close: 0.69},&#xD;&#xA;  { Date: 1649631600000, Close: 0.59},&#xD;&#xA;  { Date: 1696201200000, Close: 0.69},&#xD;&#xA;  { Date: 1696201200000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614553200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>132/132 - Water Energy</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/132---water-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/06-gym-heroes/132---water-energy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149530.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 29-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.39},&#xD;&#xA;  { Date: 1616367600000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.39},&#xD;&#xA;  { Date: 1620601200000, Close: 0.35},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1702249200000, Close: 0.39},&#xD;&#xA;  { Date: 1702854000000, Close: 0.49},&#xD;&#xA;  { Date: 1726441200000, Close: 0.39},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(966207600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1593385200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
