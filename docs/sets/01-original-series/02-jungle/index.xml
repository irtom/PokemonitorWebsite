<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jungle on Pokémonitor</title>
    <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/</link>
    <description>Recent content in Jungle on Pokémonitor</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>001/064 - Clefable</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/001---clefable/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/001---clefable/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148924.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 29.99 on 30-09-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 6.99 on 20-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576796400000, Close: 6.99},&#xD;&#xA;  { Date: 1577142000000, Close: 7.99},&#xD;&#xA;  { Date: 1578524400000, Close: 8.49},&#xD;&#xA;  { Date: 1581634800000, Close: 10.99},&#xD;&#xA;  { Date: 1584054000000, Close: 12.99},&#xD;&#xA;  { Date: 1584486000000, Close: 11.99},&#xD;&#xA;  { Date: 1585004400000, Close: 10.99},&#xD;&#xA;  { Date: 1585868400000, Close: 11.99},&#xD;&#xA;  { Date: 1588460400000, Close: 13.99},&#xD;&#xA;  { Date: 1588719600000, Close: 14.49},&#xD;&#xA;  { Date: 1589410800000, Close: 14.89},&#xD;&#xA;  { Date: 1591052400000, Close: 14.99},&#xD;&#xA;  { Date: 1593126000000, Close: 13.99},&#xD;&#xA;  { Date: 1593730800000, Close: 14.49},&#xD;&#xA;  { Date: 1594854000000, Close: 14.89},&#xD;&#xA;  { Date: 1595372400000, Close: 14.99},&#xD;&#xA;  { Date: 1602716400000, Close: 17.99},&#xD;&#xA;  { Date: 1603926000000, Close: 24.99},&#xD;&#xA;  { Date: 1605049200000, Close: 23.49},&#xD;&#xA;  { Date: 1605740400000, Close: 22.99},&#xD;&#xA;  { Date: 1606604400000, Close: 23.99},&#xD;&#xA;  { Date: 1607122800000, Close: 24.99},&#xD;&#xA;  { Date: 1611788400000, Close: 24.49},&#xD;&#xA;  { Date: 1613602800000, Close: 24.89},&#xD;&#xA;  { Date: 1614207600000, Close: 22.99},&#xD;&#xA;  { Date: 1616713200000, Close: 19.99},&#xD;&#xA;  { Date: 1620428400000, Close: 18.99},&#xD;&#xA;  { Date: 1620946800000, Close: 19.99},&#xD;&#xA;  { Date: 1621465200000, Close: 18.99},&#xD;&#xA;  { Date: 1623452400000, Close: 17.49},&#xD;&#xA;  { Date: 1623711600000, Close: 15.99},&#xD;&#xA;  { Date: 1624316400000, Close: 17.99},&#xD;&#xA;  { Date: 1625266800000, Close: 16.99},&#xD;&#xA;  { Date: 1626994800000, Close: 15.99},&#xD;&#xA;  { Date: 1631055600000, Close: 21.99},&#xD;&#xA;  { Date: 1632438000000, Close: 27.99},&#xD;&#xA;  { Date: 1632956400000, Close: 29.99},&#xD;&#xA;  { Date: 1635030000000, Close: 27.99},&#xD;&#xA;  { Date: 1639782000000, Close: 29.99},&#xD;&#xA;  { Date: 1644620400000, Close: 27.99},&#xD;&#xA;  { Date: 1645225200000, Close: 24.99},&#xD;&#xA;  { Date: 1646866800000, Close: 22.99},&#xD;&#xA;  { Date: 1648940400000, Close: 21.49},&#xD;&#xA;  { Date: 1652396400000, Close: 23.99},&#xD;&#xA;  { Date: 1655506800000, Close: 24.99},&#xD;&#xA;  { Date: 1657839600000, Close: 22.99},&#xD;&#xA;  { Date: 1660345200000, Close: 21.99},&#xD;&#xA;  { Date: 1665010800000, Close: 20.49},&#xD;&#xA;  { Date: 1665788400000, Close: 18.99},&#xD;&#xA;  { Date: 1669590000000, Close: 16.29},&#xD;&#xA;  { Date: 1671058800000, Close: 17.39},&#xD;&#xA;  { Date: 1675206000000, Close: 15.29},&#xD;&#xA;  { Date: 1684450800000, Close: 21.49},&#xD;&#xA;  { Date: 1695942000000, Close: 23.99},&#xD;&#xA;  { Date: 1706396400000, Close: 29.99},&#xD;&#xA;  { Date: 1708642800000, Close: 24.99},&#xD;&#xA;  { Date: 1718319600000, Close: 29.99},&#xD;&#xA;  { Date: 1718319600000, Close: 29.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1632956400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576796400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>002/064 - Electrode</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/002---electrode/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/002---electrode/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148995.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 30.99 on 22-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 7.99 on 20-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576796400000, Close: 7.99},&#xD;&#xA;  { Date: 1577142000000, Close: 8.99},&#xD;&#xA;  { Date: 1578524400000, Close: 9.99},&#xD;&#xA;  { Date: 1582671600000, Close: 10.89},&#xD;&#xA;  { Date: 1584486000000, Close: 11.49},&#xD;&#xA;  { Date: 1585695600000, Close: 10.99},&#xD;&#xA;  { Date: 1588460400000, Close: 11.99},&#xD;&#xA;  { Date: 1590706800000, Close: 12.99},&#xD;&#xA;  { Date: 1592434800000, Close: 11.99},&#xD;&#xA;  { Date: 1593558000000, Close: 12.49},&#xD;&#xA;  { Date: 1594767600000, Close: 12.79},&#xD;&#xA;  { Date: 1596841200000, Close: 12.89},&#xD;&#xA;  { Date: 1597359600000, Close: 11.99},&#xD;&#xA;  { Date: 1597878000000, Close: 12.49},&#xD;&#xA;  { Date: 1599346800000, Close: 12.99},&#xD;&#xA;  { Date: 1601334000000, Close: 11.99},&#xD;&#xA;  { Date: 1603321200000, Close: 14.99},&#xD;&#xA;  { Date: 1604012400000, Close: 21.99},&#xD;&#xA;  { Date: 1604962800000, Close: 22.99},&#xD;&#xA;  { Date: 1606518000000, Close: 23.99},&#xD;&#xA;  { Date: 1608073200000, Close: 27.99},&#xD;&#xA;  { Date: 1608850800000, Close: 28.99},&#xD;&#xA;  { Date: 1609282800000, Close: 29.99},&#xD;&#xA;  { Date: 1611270000000, Close: 30.99},&#xD;&#xA;  { Date: 1615590000000, Close: 28.99},&#xD;&#xA;  { Date: 1615849200000, Close: 25.99},&#xD;&#xA;  { Date: 1617577200000, Close: 24.49},&#xD;&#xA;  { Date: 1618614000000, Close: 24.99},&#xD;&#xA;  { Date: 1619478000000, Close: 23.49},&#xD;&#xA;  { Date: 1620687600000, Close: 21.99},&#xD;&#xA;  { Date: 1621292400000, Close: 22.99},&#xD;&#xA;  { Date: 1624921200000, Close: 24.99},&#xD;&#xA;  { Date: 1627081200000, Close: 23.49},&#xD;&#xA;  { Date: 1628895600000, Close: 21.99},&#xD;&#xA;  { Date: 1642028400000, Close: 23.49},&#xD;&#xA;  { Date: 1644361200000, Close: 21.99},&#xD;&#xA;  { Date: 1645225200000, Close: 19.99},&#xD;&#xA;  { Date: 1647126000000, Close: 18.49},&#xD;&#xA;  { Date: 1657839600000, Close: 17.99},&#xD;&#xA;  { Date: 1665615600000, Close: 16.49},&#xD;&#xA;  { Date: 1667343600000, Close: 15.49},&#xD;&#xA;  { Date: 1667602800000, Close: 13.39},&#xD;&#xA;  { Date: 1668121200000, Close: 13.59},&#xD;&#xA;  { Date: 1668639600000, Close: 13.69},&#xD;&#xA;  { Date: 1669071600000, Close: 13.99},&#xD;&#xA;  { Date: 1669762800000, Close: 14.19},&#xD;&#xA;  { Date: 1670108400000, Close: 14.69},&#xD;&#xA;  { Date: 1670540400000, Close: 14.79},&#xD;&#xA;  { Date: 1671490800000, Close: 13.99},&#xD;&#xA;  { Date: 1671922800000, Close: 15.29},&#xD;&#xA;  { Date: 1675119600000, Close: 14.99},&#xD;&#xA;  { Date: 1675983600000, Close: 16.59},&#xD;&#xA;  { Date: 1676156400000, Close: 16.99},&#xD;&#xA;  { Date: 1679785200000, Close: 19.99},&#xD;&#xA;  { Date: 1682204400000, Close: 24.99},&#xD;&#xA;  { Date: 1682722800000, Close: 25.99},&#xD;&#xA;  { Date: 1718751600000, Close: 27.99},&#xD;&#xA;  { Date: 1718751600000, Close: 27.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1611270000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576796400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>003/064 - Flareon</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/003---flareon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/003---flareon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149054.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 99.99 on 07-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 18.49 on 25-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578351600000, Close: 19.99},&#xD;&#xA;  { Date: 1579906800000, Close: 18.49},&#xD;&#xA;  { Date: 1582066800000, Close: 18.99},&#xD;&#xA;  { Date: 1582844400000, Close: 19.99},&#xD;&#xA;  { Date: 1583881200000, Close: 20.99},&#xD;&#xA;  { Date: 1584399600000, Close: 22.49},&#xD;&#xA;  { Date: 1584745200000, Close: 22.99},&#xD;&#xA;  { Date: 1585177200000, Close: 24.99},&#xD;&#xA;  { Date: 1585609200000, Close: 29.99},&#xD;&#xA;  { Date: 1586646000000, Close: 27.99},&#xD;&#xA;  { Date: 1587078000000, Close: 26.99},&#xD;&#xA;  { Date: 1587596400000, Close: 27.99},&#xD;&#xA;  { Date: 1588114800000, Close: 29.99},&#xD;&#xA;  { Date: 1588460400000, Close: 31.99},&#xD;&#xA;  { Date: 1590706800000, Close: 37.99},&#xD;&#xA;  { Date: 1591398000000, Close: 38.99},&#xD;&#xA;  { Date: 1591830000000, Close: 39.99},&#xD;&#xA;  { Date: 1596927600000, Close: 36.99},&#xD;&#xA;  { Date: 1597878000000, Close: 39.99},&#xD;&#xA;  { Date: 1598396400000, Close: 37.99},&#xD;&#xA;  { Date: 1599087600000, Close: 38.99},&#xD;&#xA;  { Date: 1600729200000, Close: 39.99},&#xD;&#xA;  { Date: 1604098800000, Close: 54.99},&#xD;&#xA;  { Date: 1605049200000, Close: 59.99},&#xD;&#xA;  { Date: 1607382000000, Close: 61.99},&#xD;&#xA;  { Date: 1607986800000, Close: 64.99},&#xD;&#xA;  { Date: 1608159600000, Close: 62.99},&#xD;&#xA;  { Date: 1608678000000, Close: 64.99},&#xD;&#xA;  { Date: 1609887600000, Close: 69.99},&#xD;&#xA;  { Date: 1611183600000, Close: 79.99},&#xD;&#xA;  { Date: 1612220400000, Close: 84.99},&#xD;&#xA;  { Date: 1615330800000, Close: 79.99},&#xD;&#xA;  { Date: 1616713200000, Close: 89.99},&#xD;&#xA;  { Date: 1617750000000, Close: 99.99},&#xD;&#xA;  { Date: 1620428400000, Close: 89.99},&#xD;&#xA;  { Date: 1623366000000, Close: 84.99},&#xD;&#xA;  { Date: 1624316400000, Close: 79.99},&#xD;&#xA;  { Date: 1625180400000, Close: 74.99},&#xD;&#xA;  { Date: 1626130800000, Close: 70.99},&#xD;&#xA;  { Date: 1626303600000, Close: 69.99},&#xD;&#xA;  { Date: 1627254000000, Close: 65.99},&#xD;&#xA;  { Date: 1627945200000, Close: 59.99},&#xD;&#xA;  { Date: 1629759600000, Close: 55.99},&#xD;&#xA;  { Date: 1633042800000, Close: 59.99},&#xD;&#xA;  { Date: 1654815600000, Close: 61.99},&#xD;&#xA;  { Date: 1660086000000, Close: 64.99},&#xD;&#xA;  { Date: 1662764400000, Close: 69.99},&#xD;&#xA;  { Date: 1666652400000, Close: 65.99},&#xD;&#xA;  { Date: 1696287600000, Close: 69.99},&#xD;&#xA;  { Date: 1725663600000, Close: 74.99},&#xD;&#xA;  { Date: 1725663600000, Close: 74.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1617750000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579906800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>004/064 - Jolteon</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/004---jolteon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/004---jolteon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149134.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 89.99 on 24-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 15.99 on 02-02-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575673200000, Close: 17.99},&#xD;&#xA;  { Date: 1578524400000, Close: 18.99},&#xD;&#xA;  { Date: 1579647600000, Close: 17.49},&#xD;&#xA;  { Date: 1580598000000, Close: 15.99},&#xD;&#xA;  { Date: 1582671600000, Close: 16.99},&#xD;&#xA;  { Date: 1584486000000, Close: 17.99},&#xD;&#xA;  { Date: 1585004400000, Close: 16.99},&#xD;&#xA;  { Date: 1588892400000, Close: 20.99},&#xD;&#xA;  { Date: 1591052400000, Close: 21.99},&#xD;&#xA;  { Date: 1594767600000, Close: 29.99},&#xD;&#xA;  { Date: 1595890800000, Close: 39.99},&#xD;&#xA;  { Date: 1596063600000, Close: 41.99},&#xD;&#xA;  { Date: 1596582000000, Close: 42.99},&#xD;&#xA;  { Date: 1597100400000, Close: 41.99},&#xD;&#xA;  { Date: 1597791600000, Close: 42.99},&#xD;&#xA;  { Date: 1598569200000, Close: 39.99},&#xD;&#xA;  { Date: 1599087600000, Close: 40.99},&#xD;&#xA;  { Date: 1601938800000, Close: 39.99},&#xD;&#xA;  { Date: 1602975600000, Close: 41.99},&#xD;&#xA;  { Date: 1603321200000, Close: 59.99},&#xD;&#xA;  { Date: 1604012400000, Close: 79.99},&#xD;&#xA;  { Date: 1604617200000, Close: 84.99},&#xD;&#xA;  { Date: 1606777200000, Close: 79.99},&#xD;&#xA;  { Date: 1606863600000, Close: 74.99},&#xD;&#xA;  { Date: 1607382000000, Close: 79.99},&#xD;&#xA;  { Date: 1608073200000, Close: 74.99},&#xD;&#xA;  { Date: 1608159600000, Close: 69.99},&#xD;&#xA;  { Date: 1608678000000, Close: 67.99},&#xD;&#xA;  { Date: 1609714800000, Close: 63.99},&#xD;&#xA;  { Date: 1609801200000, Close: 59.99},&#xD;&#xA;  { Date: 1610751600000, Close: 54.99},&#xD;&#xA;  { Date: 1611702000000, Close: 51.99},&#xD;&#xA;  { Date: 1616626800000, Close: 79.49},&#xD;&#xA;  { Date: 1617231600000, Close: 79.89},&#xD;&#xA;  { Date: 1617750000000, Close: 84.99},&#xD;&#xA;  { Date: 1619218800000, Close: 89.99},&#xD;&#xA;  { Date: 1620774000000, Close: 84.99},&#xD;&#xA;  { Date: 1623366000000, Close: 79.99},&#xD;&#xA;  { Date: 1625007600000, Close: 74.99},&#xD;&#xA;  { Date: 1645570800000, Close: 70.99},&#xD;&#xA;  { Date: 1646866800000, Close: 67.99},&#xD;&#xA;  { Date: 1647817200000, Close: 63.99},&#xD;&#xA;  { Date: 1648854000000, Close: 59.99},&#xD;&#xA;  { Date: 1649977200000, Close: 55.99},&#xD;&#xA;  { Date: 1655334000000, Close: 57.99},&#xD;&#xA;  { Date: 1657148400000, Close: 64.99},&#xD;&#xA;  { Date: 1665010800000, Close: 60.99},&#xD;&#xA;  { Date: 1665961200000, Close: 56.99},&#xD;&#xA;  { Date: 1666911600000, Close: 53.99},&#xD;&#xA;  { Date: 1671750000000, Close: 50.99},&#xD;&#xA;  { Date: 1672700400000, Close: 43.69},&#xD;&#xA;  { Date: 1674082800000, Close: 43.59},&#xD;&#xA;  { Date: 1674514800000, Close: 39.99},&#xD;&#xA;  { Date: 1676588400000, Close: 40.49},&#xD;&#xA;  { Date: 1679785200000, Close: 42.99},&#xD;&#xA;  { Date: 1695769200000, Close: 41.69},&#xD;&#xA;  { Date: 1699398000000, Close: 44.99},&#xD;&#xA;  { Date: 1700694000000, Close: 39.99},&#xD;&#xA;  { Date: 1711666800000, Close: 46.99},&#xD;&#xA;  { Date: 1715209200000, Close: 47.99},&#xD;&#xA;  { Date: 1725404400000, Close: 46.99},&#xD;&#xA;  { Date: 1725577200000, Close: 47.09},&#xD;&#xA;  { Date: 1726786800000, Close: 47.39},&#xD;&#xA;  { Date: 1727478000000, Close: 47.69},&#xD;&#xA;  { Date: 1727910000000, Close: 48.89},&#xD;&#xA;  { Date: 1727910000000, Close: 48.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619218800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1580598000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>005/064 - Kangaskhan</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/005---kangaskhan/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/005---kangaskhan/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149148.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 24.99 on 04-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 3.09 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575673200000, Close: 3.09},&#xD;&#xA;  { Date: 1578524400000, Close: 3.49},&#xD;&#xA;  { Date: 1579561200000, Close: 3.99},&#xD;&#xA;  { Date: 1580943600000, Close: 4.19},&#xD;&#xA;  { Date: 1582758000000, Close: 4.49},&#xD;&#xA;  { Date: 1583967600000, Close: 4.79},&#xD;&#xA;  { Date: 1584486000000, Close: 4.49},&#xD;&#xA;  { Date: 1585004400000, Close: 4.29},&#xD;&#xA;  { Date: 1585609200000, Close: 4.79},&#xD;&#xA;  { Date: 1585868400000, Close: 4.99},&#xD;&#xA;  { Date: 1588028400000, Close: 6.99},&#xD;&#xA;  { Date: 1588633200000, Close: 7.99},&#xD;&#xA;  { Date: 1589929200000, Close: 8.99},&#xD;&#xA;  { Date: 1591138800000, Close: 9.99},&#xD;&#xA;  { Date: 1594767600000, Close: 9.69},&#xD;&#xA;  { Date: 1595372400000, Close: 9.99},&#xD;&#xA;  { Date: 1599606000000, Close: 8.79},&#xD;&#xA;  { Date: 1600124400000, Close: 7.99},&#xD;&#xA;  { Date: 1601334000000, Close: 8.49},&#xD;&#xA;  { Date: 1601506800000, Close: 7.99},&#xD;&#xA;  { Date: 1602025200000, Close: 8.49},&#xD;&#xA;  { Date: 1603407600000, Close: 14.99},&#xD;&#xA;  { Date: 1604098800000, Close: 16.99},&#xD;&#xA;  { Date: 1604962800000, Close: 17.99},&#xD;&#xA;  { Date: 1605654000000, Close: 16.99},&#xD;&#xA;  { Date: 1606518000000, Close: 17.99},&#xD;&#xA;  { Date: 1607036400000, Close: 18.99},&#xD;&#xA;  { Date: 1607554800000, Close: 19.99},&#xD;&#xA;  { Date: 1608159600000, Close: 18.99},&#xD;&#xA;  { Date: 1610578800000, Close: 19.99},&#xD;&#xA;  { Date: 1611788400000, Close: 20.99},&#xD;&#xA;  { Date: 1614639600000, Close: 24.89},&#xD;&#xA;  { Date: 1614812400000, Close: 24.99},&#xD;&#xA;  { Date: 1615417200000, Close: 23.49},&#xD;&#xA;  { Date: 1615849200000, Close: 21.99},&#xD;&#xA;  { Date: 1616799600000, Close: 19.99},&#xD;&#xA;  { Date: 1617750000000, Close: 17.99},&#xD;&#xA;  { Date: 1618786800000, Close: 16.49},&#xD;&#xA;  { Date: 1618873200000, Close: 15.99},&#xD;&#xA;  { Date: 1619910000000, Close: 14.49},&#xD;&#xA;  { Date: 1620082800000, Close: 13.99},&#xD;&#xA;  { Date: 1621033200000, Close: 11.99},&#xD;&#xA;  { Date: 1622588400000, Close: 10.99},&#xD;&#xA;  { Date: 1623538800000, Close: 9.79},&#xD;&#xA;  { Date: 1624662000000, Close: 9.49},&#xD;&#xA;  { Date: 1625266800000, Close: 9.99},&#xD;&#xA;  { Date: 1626908400000, Close: 9.49},&#xD;&#xA;  { Date: 1629500400000, Close: 8.99},&#xD;&#xA;  { Date: 1632956400000, Close: 8.49},&#xD;&#xA;  { Date: 1635289200000, Close: 9.99},&#xD;&#xA;  { Date: 1635375600000, Close: 10.99},&#xD;&#xA;  { Date: 1638572400000, Close: 12.99},&#xD;&#xA;  { Date: 1641682800000, Close: 11.49},&#xD;&#xA;  { Date: 1642978800000, Close: 9.99},&#xD;&#xA;  { Date: 1647471600000, Close: 10.99},&#xD;&#xA;  { Date: 1647558000000, Close: 10.49},&#xD;&#xA;  { Date: 1648076400000, Close: 10.39},&#xD;&#xA;  { Date: 1649977200000, Close: 11.99},&#xD;&#xA;  { Date: 1652137200000, Close: 12.99},&#xD;&#xA;  { Date: 1653001200000, Close: 13.99},&#xD;&#xA;  { Date: 1655506800000, Close: 12.49},&#xD;&#xA;  { Date: 1656543600000, Close: 10.99},&#xD;&#xA;  { Date: 1657321200000, Close: 8.99},&#xD;&#xA;  { Date: 1657839600000, Close: 7.99},&#xD;&#xA;  { Date: 1658358000000, Close: 8.49},&#xD;&#xA;  { Date: 1659999600000, Close: 9.99},&#xD;&#xA;  { Date: 1665010800000, Close: 8.89},&#xD;&#xA;  { Date: 1665529200000, Close: 9.29},&#xD;&#xA;  { Date: 1666738800000, Close: 9.49},&#xD;&#xA;  { Date: 1666998000000, Close: 9.89},&#xD;&#xA;  { Date: 1667516400000, Close: 9.69},&#xD;&#xA;  { Date: 1668466800000, Close: 9.59},&#xD;&#xA;  { Date: 1669676400000, Close: 9.99},&#xD;&#xA;  { Date: 1675119600000, Close: 11.99},&#xD;&#xA;  { Date: 1675206000000, Close: 11.69},&#xD;&#xA;  { Date: 1677193200000, Close: 17.99},&#xD;&#xA;  { Date: 1681945200000, Close: 19.99},&#xD;&#xA;  { Date: 1697238000000, Close: 11.99},&#xD;&#xA;  { Date: 1697583600000, Close: 10.99},&#xD;&#xA;  { Date: 1714604400000, Close: 11.99},&#xD;&#xA;  { Date: 1727391600000, Close: 10.49},&#xD;&#xA;  { Date: 1727391600000, Close: 10.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614812400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575673200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>006/064 - Mr. Mime</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/006---mr.-mime/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/006---mr.-mime/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149300.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 36.99 on 16-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 10.99 on 24-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575673200000, Close: 11.99},&#xD;&#xA;  { Date: 1576623600000, Close: 13.99},&#xD;&#xA;  { Date: 1579215600000, Close: 12.99},&#xD;&#xA;  { Date: 1580338800000, Close: 13.99},&#xD;&#xA;  { Date: 1581030000000, Close: 14.99},&#xD;&#xA;  { Date: 1581462000000, Close: 13.99},&#xD;&#xA;  { Date: 1583967600000, Close: 12.99},&#xD;&#xA;  { Date: 1584486000000, Close: 11.99},&#xD;&#xA;  { Date: 1585004400000, Close: 10.99},&#xD;&#xA;  { Date: 1585782000000, Close: 11.99},&#xD;&#xA;  { Date: 1586646000000, Close: 12.49},&#xD;&#xA;  { Date: 1591052400000, Close: 13.99},&#xD;&#xA;  { Date: 1591311600000, Close: 14.99},&#xD;&#xA;  { Date: 1591743600000, Close: 15.29},&#xD;&#xA;  { Date: 1593385200000, Close: 14.99},&#xD;&#xA;  { Date: 1594767600000, Close: 15.49},&#xD;&#xA;  { Date: 1595890800000, Close: 15.99},&#xD;&#xA;  { Date: 1596841200000, Close: 16.99},&#xD;&#xA;  { Date: 1597273200000, Close: 15.99},&#xD;&#xA;  { Date: 1598310000000, Close: 14.99},&#xD;&#xA;  { Date: 1599087600000, Close: 15.49},&#xD;&#xA;  { Date: 1599951600000, Close: 14.49},&#xD;&#xA;  { Date: 1600815600000, Close: 12.99},&#xD;&#xA;  { Date: 1602198000000, Close: 11.99},&#xD;&#xA;  { Date: 1602716400000, Close: 13.99},&#xD;&#xA;  { Date: 1604098800000, Close: 19.99},&#xD;&#xA;  { Date: 1605135600000, Close: 34.99},&#xD;&#xA;  { Date: 1605740400000, Close: 31.99},&#xD;&#xA;  { Date: 1606863600000, Close: 27.99},&#xD;&#xA;  { Date: 1607382000000, Close: 31.99},&#xD;&#xA;  { Date: 1607468400000, Close: 29.99},&#xD;&#xA;  { Date: 1608246000000, Close: 24.99},&#xD;&#xA;  { Date: 1610578800000, Close: 25.99},&#xD;&#xA;  { Date: 1611961200000, Close: 31.99},&#xD;&#xA;  { Date: 1612911600000, Close: 34.99},&#xD;&#xA;  { Date: 1619218800000, Close: 29.99},&#xD;&#xA;  { Date: 1620082800000, Close: 25.99},&#xD;&#xA;  { Date: 1621897200000, Close: 21.99},&#xD;&#xA;  { Date: 1623711600000, Close: 19.99},&#xD;&#xA;  { Date: 1624662000000, Close: 21.99},&#xD;&#xA;  { Date: 1625266800000, Close: 23.99},&#xD;&#xA;  { Date: 1628290800000, Close: 22.49},&#xD;&#xA;  { Date: 1628895600000, Close: 22.99},&#xD;&#xA;  { Date: 1632438000000, Close: 24.99},&#xD;&#xA;  { Date: 1639090800000, Close: 29.99},&#xD;&#xA;  { Date: 1641942000000, Close: 31.99},&#xD;&#xA;  { Date: 1650927600000, Close: 32.99},&#xD;&#xA;  { Date: 1654902000000, Close: 34.99},&#xD;&#xA;  { Date: 1655334000000, Close: 36.99},&#xD;&#xA;  { Date: 1656025200000, Close: 34.99},&#xD;&#xA;  { Date: 1657753200000, Close: 32.99},&#xD;&#xA;  { Date: 1657839600000, Close: 29.99},&#xD;&#xA;  { Date: 1660345200000, Close: 27.99},&#xD;&#xA;  { Date: 1664924400000, Close: 26.49},&#xD;&#xA;  { Date: 1665010800000, Close: 24.99},&#xD;&#xA;  { Date: 1666738800000, Close: 23.49},&#xD;&#xA;  { Date: 1666825200000, Close: 20.19},&#xD;&#xA;  { Date: 1667516400000, Close: 17.99},&#xD;&#xA;  { Date: 1669330800000, Close: 16.49},&#xD;&#xA;  { Date: 1669417200000, Close: 14.99},&#xD;&#xA;  { Date: 1673478000000, Close: 13.49},&#xD;&#xA;  { Date: 1682722800000, Close: 27.99},&#xD;&#xA;  { Date: 1683068400000, Close: 29.99},&#xD;&#xA;  { Date: 1700694000000, Close: 24.99},&#xD;&#xA;  { Date: 1700866800000, Close: 21.99},&#xD;&#xA;  { Date: 1701212400000, Close: 29.99},&#xD;&#xA;  { Date: 1701212400000, Close: 29.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1655334000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585004400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>007/064 - Nidoqueen</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/007---nidoqueen/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/007---nidoqueen/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149309.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 38.99 on 28-08-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 7.99 on 24-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576796400000, Close: 8.99},&#xD;&#xA;  { Date: 1577142000000, Close: 9.99},&#xD;&#xA;  { Date: 1578092400000, Close: 10.99},&#xD;&#xA;  { Date: 1580079600000, Close: 9.99},&#xD;&#xA;  { Date: 1582066800000, Close: 10.49},&#xD;&#xA;  { Date: 1582585200000, Close: 10.99},&#xD;&#xA;  { Date: 1583967600000, Close: 9.99},&#xD;&#xA;  { Date: 1584486000000, Close: 8.99},&#xD;&#xA;  { Date: 1585004400000, Close: 7.99},&#xD;&#xA;  { Date: 1585350000000, Close: 8.99},&#xD;&#xA;  { Date: 1585782000000, Close: 9.99},&#xD;&#xA;  { Date: 1589410800000, Close: 12.99},&#xD;&#xA;  { Date: 1591052400000, Close: 19.99},&#xD;&#xA;  { Date: 1591743600000, Close: 21.99},&#xD;&#xA;  { Date: 1594076400000, Close: 24.99},&#xD;&#xA;  { Date: 1594854000000, Close: 25.99},&#xD;&#xA;  { Date: 1595890800000, Close: 26.99},&#xD;&#xA;  { Date: 1597100400000, Close: 27.99},&#xD;&#xA;  { Date: 1598569200000, Close: 38.99},&#xD;&#xA;  { Date: 1600210800000, Close: 36.99},&#xD;&#xA;  { Date: 1601679600000, Close: 34.99},&#xD;&#xA;  { Date: 1603321200000, Close: 31.99},&#xD;&#xA;  { Date: 1604358000000, Close: 33.99},&#xD;&#xA;  { Date: 1604962800000, Close: 31.99},&#xD;&#xA;  { Date: 1605740400000, Close: 32.99},&#xD;&#xA;  { Date: 1606345200000, Close: 30.99},&#xD;&#xA;  { Date: 1606431600000, Close: 29.99},&#xD;&#xA;  { Date: 1606518000000, Close: 24.99},&#xD;&#xA;  { Date: 1606690800000, Close: 29.99},&#xD;&#xA;  { Date: 1606777200000, Close: 30.99},&#xD;&#xA;  { Date: 1606863600000, Close: 24.99},&#xD;&#xA;  { Date: 1606950000000, Close: 22.99},&#xD;&#xA;  { Date: 1607382000000, Close: 30.99},&#xD;&#xA;  { Date: 1608073200000, Close: 27.99},&#xD;&#xA;  { Date: 1609282800000, Close: 24.99},&#xD;&#xA;  { Date: 1610060400000, Close: 25.99},&#xD;&#xA;  { Date: 1611183600000, Close: 30.95},&#xD;&#xA;  { Date: 1620255600000, Close: 31.99},&#xD;&#xA;  { Date: 1623970800000, Close: 29.99},&#xD;&#xA;  { Date: 1625266800000, Close: 24.99},&#xD;&#xA;  { Date: 1627686000000, Close: 27.99},&#xD;&#xA;  { Date: 1641942000000, Close: 29.99},&#xD;&#xA;  { Date: 1642633200000, Close: 31.99},&#xD;&#xA;  { Date: 1642806000000, Close: 29.99},&#xD;&#xA;  { Date: 1648681200000, Close: 27.99},&#xD;&#xA;  { Date: 1651791600000, Close: 23.99},&#xD;&#xA;  { Date: 1651878000000, Close: 23.79},&#xD;&#xA;  { Date: 1652482800000, Close: 22.69},&#xD;&#xA;  { Date: 1653260400000, Close: 22.49},&#xD;&#xA;  { Date: 1653606000000, Close: 22.39},&#xD;&#xA;  { Date: 1653951600000, Close: 21.29},&#xD;&#xA;  { Date: 1654297200000, Close: 20.19},&#xD;&#xA;  { Date: 1655161200000, Close: 20.69},&#xD;&#xA;  { Date: 1655247600000, Close: 21.49},&#xD;&#xA;  { Date: 1655593200000, Close: 21.59},&#xD;&#xA;  { Date: 1656630000000, Close: 21.49},&#xD;&#xA;  { Date: 1657234800000, Close: 20.39},&#xD;&#xA;  { Date: 1657580400000, Close: 18.99},&#xD;&#xA;  { Date: 1657839600000, Close: 17.99},&#xD;&#xA;  { Date: 1661900400000, Close: 21.99},&#xD;&#xA;  { Date: 1674169200000, Close: 24.99},&#xD;&#xA;  { Date: 1689375600000, Close: 27.99},&#xD;&#xA;  { Date: 1689894000000, Close: 29.99},&#xD;&#xA;  { Date: 1690585200000, Close: 27.39},&#xD;&#xA;  { Date: 1692054000000, Close: 29.99},&#xD;&#xA;  { Date: 1694732400000, Close: 27.99},&#xD;&#xA;  { Date: 1695164400000, Close: 28.89},&#xD;&#xA;  { Date: 1696374000000, Close: 24.99},&#xD;&#xA;  { Date: 1697583600000, Close: 25.99},&#xD;&#xA;  { Date: 1701817200000, Close: 22.19},&#xD;&#xA;  { Date: 1702162800000, Close: 21.99},&#xD;&#xA;  { Date: 1702594800000, Close: 21.69},&#xD;&#xA;  { Date: 1703286000000, Close: 21.49},&#xD;&#xA;  { Date: 1705014000000, Close: 24.99},&#xD;&#xA;  { Date: 1710889200000, Close: 27.99},&#xD;&#xA;  { Date: 1710889200000, Close: 27.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1598569200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585004400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>008/064 - Pidgeot</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/008---pidgeot/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/008---pidgeot/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149335.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 41.99 on 04-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 9.99 on 10-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575932400000, Close: 9.99},&#xD;&#xA;  { Date: 1579042800000, Close: 10.99},&#xD;&#xA;  { Date: 1581634800000, Close: 12.99},&#xD;&#xA;  { Date: 1587250800000, Close: 15.99},&#xD;&#xA;  { Date: 1588892400000, Close: 17.99},&#xD;&#xA;  { Date: 1590706800000, Close: 18.99},&#xD;&#xA;  { Date: 1591052400000, Close: 21.99},&#xD;&#xA;  { Date: 1593471600000, Close: 22.99},&#xD;&#xA;  { Date: 1594249200000, Close: 23.49},&#xD;&#xA;  { Date: 1594767600000, Close: 23.99},&#xD;&#xA;  { Date: 1595372400000, Close: 22.99},&#xD;&#xA;  { Date: 1596495600000, Close: 23.49},&#xD;&#xA;  { Date: 1597100400000, Close: 22.99},&#xD;&#xA;  { Date: 1599606000000, Close: 23.99},&#xD;&#xA;  { Date: 1599692400000, Close: 22.49},&#xD;&#xA;  { Date: 1604012400000, Close: 29.99},&#xD;&#xA;  { Date: 1605740400000, Close: 34.99},&#xD;&#xA;  { Date: 1606518000000, Close: 39.99},&#xD;&#xA;  { Date: 1607036400000, Close: 41.99},&#xD;&#xA;  { Date: 1608073200000, Close: 39.99},&#xD;&#xA;  { Date: 1608678000000, Close: 34.99},&#xD;&#xA;  { Date: 1611788400000, Close: 32.99},&#xD;&#xA;  { Date: 1612393200000, Close: 33.99},&#xD;&#xA;  { Date: 1613602800000, Close: 35.99},&#xD;&#xA;  { Date: 1615417200000, Close: 39.99},&#xD;&#xA;  { Date: 1619910000000, Close: 36.99},&#xD;&#xA;  { Date: 1620082800000, Close: 34.99},&#xD;&#xA;  { Date: 1621465200000, Close: 31.99},&#xD;&#xA;  { Date: 1623106800000, Close: 32.99},&#xD;&#xA;  { Date: 1624143600000, Close: 30.99},&#xD;&#xA;  { Date: 1625698800000, Close: 27.99},&#xD;&#xA;  { Date: 1628290800000, Close: 25.99},&#xD;&#xA;  { Date: 1632524400000, Close: 27.99},&#xD;&#xA;  { Date: 1632956400000, Close: 29.99},&#xD;&#xA;  { Date: 1638054000000, Close: 27.99},&#xD;&#xA;  { Date: 1639090800000, Close: 29.99},&#xD;&#xA;  { Date: 1643842800000, Close: 31.99},&#xD;&#xA;  { Date: 1646866800000, Close: 34.99},&#xD;&#xA;  { Date: 1648854000000, Close: 32.99},&#xD;&#xA;  { Date: 1657062000000, Close: 39.99},&#xD;&#xA;  { Date: 1657839600000, Close: 37.99},&#xD;&#xA;  { Date: 1694214000000, Close: 32.99},&#xD;&#xA;  { Date: 1694818800000, Close: 29.09},&#xD;&#xA;  { Date: 1695337200000, Close: 28.79},&#xD;&#xA;  { Date: 1715209200000, Close: 27.39},&#xD;&#xA;  { Date: 1715209200000, Close: 27.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607036400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575932400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>009/064 - Pinsir</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/009---pinsir/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/009---pinsir/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149346.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 31.99 on 28-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 9.99 on 24-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 10.99},&#xD;&#xA;  { Date: 1578092400000, Close: 11.99},&#xD;&#xA;  { Date: 1580770800000, Close: 10.49},&#xD;&#xA;  { Date: 1582066800000, Close: 10.99},&#xD;&#xA;  { Date: 1585004400000, Close: 9.99},&#xD;&#xA;  { Date: 1585350000000, Close: 10.99},&#xD;&#xA;  { Date: 1586818800000, Close: 10.49},&#xD;&#xA;  { Date: 1589410800000, Close: 11.99},&#xD;&#xA;  { Date: 1592089200000, Close: 14.99},&#xD;&#xA;  { Date: 1594940400000, Close: 18.99},&#xD;&#xA;  { Date: 1595545200000, Close: 19.99},&#xD;&#xA;  { Date: 1596495600000, Close: 21.99},&#xD;&#xA;  { Date: 1597100400000, Close: 19.99},&#xD;&#xA;  { Date: 1598050800000, Close: 17.99},&#xD;&#xA;  { Date: 1600297200000, Close: 16.99},&#xD;&#xA;  { Date: 1602025200000, Close: 15.99},&#xD;&#xA;  { Date: 1603148400000, Close: 16.99},&#xD;&#xA;  { Date: 1603321200000, Close: 19.99},&#xD;&#xA;  { Date: 1604962800000, Close: 24.99},&#xD;&#xA;  { Date: 1605826800000, Close: 29.99},&#xD;&#xA;  { Date: 1606518000000, Close: 31.99},&#xD;&#xA;  { Date: 1607036400000, Close: 29.99},&#xD;&#xA;  { Date: 1608159600000, Close: 27.99},&#xD;&#xA;  { Date: 1611961200000, Close: 29.99},&#xD;&#xA;  { Date: 1613170800000, Close: 27.99},&#xD;&#xA;  { Date: 1614985200000, Close: 26.49},&#xD;&#xA;  { Date: 1615417200000, Close: 24.99},&#xD;&#xA;  { Date: 1615935600000, Close: 25.99},&#xD;&#xA;  { Date: 1616540400000, Close: 26.99},&#xD;&#xA;  { Date: 1619046000000, Close: 25.49},&#xD;&#xA;  { Date: 1619823600000, Close: 22.99},&#xD;&#xA;  { Date: 1621724400000, Close: 21.49},&#xD;&#xA;  { Date: 1622674800000, Close: 20.99},&#xD;&#xA;  { Date: 1623452400000, Close: 21.49},&#xD;&#xA;  { Date: 1624316400000, Close: 22.49},&#xD;&#xA;  { Date: 1624921200000, Close: 23.49},&#xD;&#xA;  { Date: 1625698800000, Close: 22.99},&#xD;&#xA;  { Date: 1629932400000, Close: 22.49},&#xD;&#xA;  { Date: 1632438000000, Close: 22.99},&#xD;&#xA;  { Date: 1633042800000, Close: 21.99},&#xD;&#xA;  { Date: 1635289200000, Close: 23.49},&#xD;&#xA;  { Date: 1638399600000, Close: 24.99},&#xD;&#xA;  { Date: 1640041200000, Close: 26.49},&#xD;&#xA;  { Date: 1642633200000, Close: 24.99},&#xD;&#xA;  { Date: 1644793200000, Close: 23.49},&#xD;&#xA;  { Date: 1646348400000, Close: 19.99},&#xD;&#xA;  { Date: 1646866800000, Close: 16.99},&#xD;&#xA;  { Date: 1646953200000, Close: 16.79},&#xD;&#xA;  { Date: 1647903600000, Close: 16.89},&#xD;&#xA;  { Date: 1648422000000, Close: 16.99},&#xD;&#xA;  { Date: 1649977200000, Close: 17.09},&#xD;&#xA;  { Date: 1654210800000, Close: 19.99},&#xD;&#xA;  { Date: 1657839600000, Close: 17.99},&#xD;&#xA;  { Date: 1664492400000, Close: 19.99},&#xD;&#xA;  { Date: 1671577200000, Close: 19.59},&#xD;&#xA;  { Date: 1672441200000, Close: 19.99},&#xD;&#xA;  { Date: 1672959600000, Close: 19.59},&#xD;&#xA;  { Date: 1684278000000, Close: 19.99},&#xD;&#xA;  { Date: 1692054000000, Close: 23.99},&#xD;&#xA;  { Date: 1693609200000, Close: 23.49},&#xD;&#xA;  { Date: 1693954800000, Close: 23.29},&#xD;&#xA;  { Date: 1694300400000, Close: 22.89},&#xD;&#xA;  { Date: 1709247600000, Close: 24.99},&#xD;&#xA;  { Date: 1712962800000, Close: 25.99},&#xD;&#xA;  { Date: 1712962800000, Close: 25.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606518000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585004400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>010/064 - Scyther</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/010---scyther/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/010---scyther/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149441.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 51.99 on 19-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 13.99 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575673200000, Close: 13.99},&#xD;&#xA;  { Date: 1578524400000, Close: 14.99},&#xD;&#xA;  { Date: 1580857200000, Close: 15.99},&#xD;&#xA;  { Date: 1582585200000, Close: 16.99},&#xD;&#xA;  { Date: 1583535600000, Close: 17.99},&#xD;&#xA;  { Date: 1588114800000, Close: 19.99},&#xD;&#xA;  { Date: 1588892400000, Close: 20.99},&#xD;&#xA;  { Date: 1590706800000, Close: 21.99},&#xD;&#xA;  { Date: 1591743600000, Close: 23.99},&#xD;&#xA;  { Date: 1591830000000, Close: 24.99},&#xD;&#xA;  { Date: 1593558000000, Close: 27.99},&#xD;&#xA;  { Date: 1594422000000, Close: 29.99},&#xD;&#xA;  { Date: 1594854000000, Close: 34.99},&#xD;&#xA;  { Date: 1596236400000, Close: 35.99},&#xD;&#xA;  { Date: 1597878000000, Close: 37.99},&#xD;&#xA;  { Date: 1598569200000, Close: 35.99},&#xD;&#xA;  { Date: 1599087600000, Close: 36.99},&#xD;&#xA;  { Date: 1599260400000, Close: 34.99},&#xD;&#xA;  { Date: 1600815600000, Close: 29.99},&#xD;&#xA;  { Date: 1603321200000, Close: 35.99},&#xD;&#xA;  { Date: 1604098800000, Close: 36.99},&#xD;&#xA;  { Date: 1605135600000, Close: 37.99},&#xD;&#xA;  { Date: 1605740400000, Close: 38.99},&#xD;&#xA;  { Date: 1606345200000, Close: 39.99},&#xD;&#xA;  { Date: 1607382000000, Close: 41.99},&#xD;&#xA;  { Date: 1610492400000, Close: 38.99},&#xD;&#xA;  { Date: 1614985200000, Close: 49.99},&#xD;&#xA;  { Date: 1616108400000, Close: 51.99},&#xD;&#xA;  { Date: 1616799600000, Close: 50.99},&#xD;&#xA;  { Date: 1618527600000, Close: 44.99},&#xD;&#xA;  { Date: 1620428400000, Close: 39.99},&#xD;&#xA;  { Date: 1620946800000, Close: 41.99},&#xD;&#xA;  { Date: 1621465200000, Close: 39.99},&#xD;&#xA;  { Date: 1622242800000, Close: 41.99},&#xD;&#xA;  { Date: 1623366000000, Close: 43.99},&#xD;&#xA;  { Date: 1623625200000, Close: 40.99},&#xD;&#xA;  { Date: 1625353200000, Close: 37.99},&#xD;&#xA;  { Date: 1627167600000, Close: 35.99},&#xD;&#xA;  { Date: 1632438000000, Close: 37.99},&#xD;&#xA;  { Date: 1639090800000, Close: 39.99},&#xD;&#xA;  { Date: 1639782000000, Close: 34.99},&#xD;&#xA;  { Date: 1643929200000, Close: 32.99},&#xD;&#xA;  { Date: 1645052400000, Close: 29.99},&#xD;&#xA;  { Date: 1646866800000, Close: 27.99},&#xD;&#xA;  { Date: 1646953200000, Close: 24.19},&#xD;&#xA;  { Date: 1647298800000, Close: 24.39},&#xD;&#xA;  { Date: 1647730800000, Close: 24.59},&#xD;&#xA;  { Date: 1650322800000, Close: 27.99},&#xD;&#xA;  { Date: 1652742000000, Close: 29.99},&#xD;&#xA;  { Date: 1657839600000, Close: 34.99},&#xD;&#xA;  { Date: 1680217200000, Close: 36.99},&#xD;&#xA;  { Date: 1704495600000, Close: 39.99},&#xD;&#xA;  { Date: 1704495600000, Close: 39.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1616108400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575673200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>011/064 - Snorlax</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/011---snorlax/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/011---snorlax/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149464.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 64.99 on 20-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 14.99 on 28-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577487600000, Close: 14.99},&#xD;&#xA;  { Date: 1581030000000, Close: 19.99},&#xD;&#xA;  { Date: 1582153200000, Close: 20.99},&#xD;&#xA;  { Date: 1584486000000, Close: 20.49},&#xD;&#xA;  { Date: 1585004400000, Close: 19.99},&#xD;&#xA;  { Date: 1585868400000, Close: 18.99},&#xD;&#xA;  { Date: 1586818800000, Close: 17.99},&#xD;&#xA;  { Date: 1587423600000, Close: 15.99},&#xD;&#xA;  { Date: 1588114800000, Close: 17.99},&#xD;&#xA;  { Date: 1588633200000, Close: 18.99},&#xD;&#xA;  { Date: 1588892400000, Close: 24.99},&#xD;&#xA;  { Date: 1590706800000, Close: 34.99},&#xD;&#xA;  { Date: 1591052400000, Close: 39.99},&#xD;&#xA;  { Date: 1591830000000, Close: 40.99},&#xD;&#xA;  { Date: 1593298800000, Close: 37.99},&#xD;&#xA;  { Date: 1593730800000, Close: 39.99},&#xD;&#xA;  { Date: 1594940400000, Close: 41.99},&#xD;&#xA;  { Date: 1598569200000, Close: 39.99},&#xD;&#xA;  { Date: 1599865200000, Close: 36.99},&#xD;&#xA;  { Date: 1601161200000, Close: 34.99},&#xD;&#xA;  { Date: 1601679600000, Close: 29.99},&#xD;&#xA;  { Date: 1602889200000, Close: 27.99},&#xD;&#xA;  { Date: 1604012400000, Close: 32.99},&#xD;&#xA;  { Date: 1604962800000, Close: 47.99},&#xD;&#xA;  { Date: 1605826800000, Close: 49.99},&#xD;&#xA;  { Date: 1606518000000, Close: 51.99},&#xD;&#xA;  { Date: 1606863600000, Close: 52.99},&#xD;&#xA;  { Date: 1611270000000, Close: 49.99},&#xD;&#xA;  { Date: 1612393200000, Close: 51.99},&#xD;&#xA;  { Date: 1614985200000, Close: 55.99},&#xD;&#xA;  { Date: 1616108400000, Close: 54.99},&#xD;&#xA;  { Date: 1617231600000, Close: 52.99},&#xD;&#xA;  { Date: 1620342000000, Close: 49.99},&#xD;&#xA;  { Date: 1626994800000, Close: 46.99},&#xD;&#xA;  { Date: 1628809200000, Close: 43.99},&#xD;&#xA;  { Date: 1634598000000, Close: 44.99},&#xD;&#xA;  { Date: 1634943600000, Close: 39.99},&#xD;&#xA;  { Date: 1639090800000, Close: 44.99},&#xD;&#xA;  { Date: 1642028400000, Close: 47.99},&#xD;&#xA;  { Date: 1645052400000, Close: 44.99},&#xD;&#xA;  { Date: 1645830000000, Close: 38.99},&#xD;&#xA;  { Date: 1647730800000, Close: 41.49},&#xD;&#xA;  { Date: 1649199600000, Close: 41.19},&#xD;&#xA;  { Date: 1652396400000, Close: 42.99},&#xD;&#xA;  { Date: 1654210800000, Close: 45.99},&#xD;&#xA;  { Date: 1657062000000, Close: 59.99},&#xD;&#xA;  { Date: 1660950000000, Close: 64.99},&#xD;&#xA;  { Date: 1665788400000, Close: 59.99},&#xD;&#xA;  { Date: 1679353200000, Close: 51.99},&#xD;&#xA;  { Date: 1679612400000, Close: 52.59},&#xD;&#xA;  { Date: 1699398000000, Close: 59.99},&#xD;&#xA;  { Date: 1700694000000, Close: 44.99},&#xD;&#xA;  { Date: 1725404400000, Close: 53.39},&#xD;&#xA;  { Date: 1725836400000, Close: 52.99},&#xD;&#xA;  { Date: 1726700400000, Close: 53.19},&#xD;&#xA;  { Date: 1727305200000, Close: 53.09},&#xD;&#xA;  { Date: 1727305200000, Close: 53.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1660950000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577487600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>012/064 - Vaporeon</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/012---vaporeon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/012---vaporeon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149507.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 35.99 on 10-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 5.79 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575673200000, Close: 5.79},&#xD;&#xA;  { Date: 1578697200000, Close: 6.49},&#xD;&#xA;  { Date: 1581634800000, Close: 7.49},&#xD;&#xA;  { Date: 1582239600000, Close: 7.99},&#xD;&#xA;  { Date: 1583967600000, Close: 7.49},&#xD;&#xA;  { Date: 1584486000000, Close: 6.99},&#xD;&#xA;  { Date: 1585004400000, Close: 5.99},&#xD;&#xA;  { Date: 1585350000000, Close: 6.49},&#xD;&#xA;  { Date: 1589324400000, Close: 9.99},&#xD;&#xA;  { Date: 1590706800000, Close: 10.99},&#xD;&#xA;  { Date: 1591052400000, Close: 11.99},&#xD;&#xA;  { Date: 1591743600000, Close: 12.49},&#xD;&#xA;  { Date: 1592866800000, Close: 12.99},&#xD;&#xA;  { Date: 1595890800000, Close: 13.09},&#xD;&#xA;  { Date: 1596495600000, Close: 12.99},&#xD;&#xA;  { Date: 1597100400000, Close: 11.99},&#xD;&#xA;  { Date: 1598569200000, Close: 12.29},&#xD;&#xA;  { Date: 1599606000000, Close: 12.49},&#xD;&#xA;  { Date: 1599865200000, Close: 11.49},&#xD;&#xA;  { Date: 1600902000000, Close: 10.99},&#xD;&#xA;  { Date: 1602025200000, Close: 11.49},&#xD;&#xA;  { Date: 1602543600000, Close: 11.89},&#xD;&#xA;  { Date: 1604962800000, Close: 35.99},&#xD;&#xA;  { Date: 1606345200000, Close: 34.99},&#xD;&#xA;  { Date: 1606863600000, Close: 29.99},&#xD;&#xA;  { Date: 1607382000000, Close: 34.99},&#xD;&#xA;  { Date: 1608591600000, Close: 31.99},&#xD;&#xA;  { Date: 1609282800000, Close: 29.99},&#xD;&#xA;  { Date: 1609887600000, Close: 30.99},&#xD;&#xA;  { Date: 1610492400000, Close: 28.99},&#xD;&#xA;  { Date: 1611788400000, Close: 29.49},&#xD;&#xA;  { Date: 1614812400000, Close: 27.99},&#xD;&#xA;  { Date: 1614985200000, Close: 26.99},&#xD;&#xA;  { Date: 1615503600000, Close: 25.99},&#xD;&#xA;  { Date: 1617058800000, Close: 24.99},&#xD;&#xA;  { Date: 1617922800000, Close: 25.49},&#xD;&#xA;  { Date: 1619046000000, Close: 25.99},&#xD;&#xA;  { Date: 1620255600000, Close: 24.99},&#xD;&#xA;  { Date: 1621465200000, Close: 21.99},&#xD;&#xA;  { Date: 1624489200000, Close: 20.99},&#xD;&#xA;  { Date: 1625266800000, Close: 19.99},&#xD;&#xA;  { Date: 1626908400000, Close: 18.99},&#xD;&#xA;  { Date: 1628809200000, Close: 17.49},&#xD;&#xA;  { Date: 1631314800000, Close: 21.99},&#xD;&#xA;  { Date: 1632956400000, Close: 19.99},&#xD;&#xA;  { Date: 1635462000000, Close: 18.99},&#xD;&#xA;  { Date: 1639090800000, Close: 24.99},&#xD;&#xA;  { Date: 1641855600000, Close: 26.49},&#xD;&#xA;  { Date: 1644534000000, Close: 24.99},&#xD;&#xA;  { Date: 1645052400000, Close: 23.99},&#xD;&#xA;  { Date: 1647471600000, Close: 22.99},&#xD;&#xA;  { Date: 1651878000000, Close: 19.99},&#xD;&#xA;  { Date: 1653346800000, Close: 19.69},&#xD;&#xA;  { Date: 1654297200000, Close: 17.59},&#xD;&#xA;  { Date: 1655334000000, Close: 17.79},&#xD;&#xA;  { Date: 1655938800000, Close: 18.99},&#xD;&#xA;  { Date: 1657839600000, Close: 17.99},&#xD;&#xA;  { Date: 1661900400000, Close: 24.99},&#xD;&#xA;  { Date: 1665788400000, Close: 19.99},&#xD;&#xA;  { Date: 1673650800000, Close: 17.69},&#xD;&#xA;  { Date: 1679353200000, Close: 18.69},&#xD;&#xA;  { Date: 1682722800000, Close: 19.99},&#xD;&#xA;  { Date: 1684364400000, Close: 19.79},&#xD;&#xA;  { Date: 1686783600000, Close: 19.49},&#xD;&#xA;  { Date: 1695769200000, Close: 28.09},&#xD;&#xA;  { Date: 1697065200000, Close: 29.99},&#xD;&#xA;  { Date: 1697583600000, Close: 27.99},&#xD;&#xA;  { Date: 1698102000000, Close: 24.99},&#xD;&#xA;  { Date: 1700694000000, Close: 19.99},&#xD;&#xA;  { Date: 1700866800000, Close: 17.99},&#xD;&#xA;  { Date: 1701212400000, Close: 24.99},&#xD;&#xA;  { Date: 1701212400000, Close: 24.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1604962800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575673200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>013/064 - Venomoth</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/013---venomoth/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/013---venomoth/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149509.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 24.99 on 20-06-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 8.89 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575673200000, Close: 8.89},&#xD;&#xA;  { Date: 1577142000000, Close: 9.99},&#xD;&#xA;  { Date: 1579042800000, Close: 11.99},&#xD;&#xA;  { Date: 1580166000000, Close: 10.99},&#xD;&#xA;  { Date: 1581030000000, Close: 9.99},&#xD;&#xA;  { Date: 1582239600000, Close: 10.99},&#xD;&#xA;  { Date: 1585004400000, Close: 9.99},&#xD;&#xA;  { Date: 1585609200000, Close: 10.99},&#xD;&#xA;  { Date: 1588892400000, Close: 11.99},&#xD;&#xA;  { Date: 1591052400000, Close: 12.99},&#xD;&#xA;  { Date: 1591398000000, Close: 13.99},&#xD;&#xA;  { Date: 1593298800000, Close: 14.99},&#xD;&#xA;  { Date: 1594249200000, Close: 15.49},&#xD;&#xA;  { Date: 1595372400000, Close: 14.99},&#xD;&#xA;  { Date: 1596668400000, Close: 15.49},&#xD;&#xA;  { Date: 1597186800000, Close: 14.99},&#xD;&#xA;  { Date: 1598137200000, Close: 13.49},&#xD;&#xA;  { Date: 1599174000000, Close: 14.49},&#xD;&#xA;  { Date: 1599951600000, Close: 13.49},&#xD;&#xA;  { Date: 1600470000000, Close: 11.99},&#xD;&#xA;  { Date: 1601420400000, Close: 11.49},&#xD;&#xA;  { Date: 1602370800000, Close: 9.99},&#xD;&#xA;  { Date: 1602889200000, Close: 10.99},&#xD;&#xA;  { Date: 1604012400000, Close: 19.99},&#xD;&#xA;  { Date: 1604962800000, Close: 21.99},&#xD;&#xA;  { Date: 1606345200000, Close: 20.49},&#xD;&#xA;  { Date: 1606518000000, Close: 20.99},&#xD;&#xA;  { Date: 1607036400000, Close: 21.99},&#xD;&#xA;  { Date: 1607554800000, Close: 22.99},&#xD;&#xA;  { Date: 1608073200000, Close: 21.99},&#xD;&#xA;  { Date: 1608591600000, Close: 20.99},&#xD;&#xA;  { Date: 1609282800000, Close: 21.49},&#xD;&#xA;  { Date: 1609887600000, Close: 21.79},&#xD;&#xA;  { Date: 1612479600000, Close: 21.85},&#xD;&#xA;  { Date: 1615849200000, Close: 22.99},&#xD;&#xA;  { Date: 1620255600000, Close: 20.49},&#xD;&#xA;  { Date: 1620342000000, Close: 17.99},&#xD;&#xA;  { Date: 1621292400000, Close: 18.49},&#xD;&#xA;  { Date: 1621897200000, Close: 17.49},&#xD;&#xA;  { Date: 1622242800000, Close: 15.99},&#xD;&#xA;  { Date: 1623193200000, Close: 14.99},&#xD;&#xA;  { Date: 1624316400000, Close: 11.99},&#xD;&#xA;  { Date: 1625266800000, Close: 13.99},&#xD;&#xA;  { Date: 1626390000000, Close: 12.99},&#xD;&#xA;  { Date: 1626908400000, Close: 11.99},&#xD;&#xA;  { Date: 1631314800000, Close: 14.99},&#xD;&#xA;  { Date: 1632870000000, Close: 15.99},&#xD;&#xA;  { Date: 1634166000000, Close: 14.99},&#xD;&#xA;  { Date: 1635548400000, Close: 13.99},&#xD;&#xA;  { Date: 1637017200000, Close: 14.99},&#xD;&#xA;  { Date: 1639090800000, Close: 15.99},&#xD;&#xA;  { Date: 1641942000000, Close: 17.99},&#xD;&#xA;  { Date: 1642633200000, Close: 19.99},&#xD;&#xA;  { Date: 1646348400000, Close: 21.99},&#xD;&#xA;  { Date: 1648335600000, Close: 20.49},&#xD;&#xA;  { Date: 1649286000000, Close: 18.99},&#xD;&#xA;  { Date: 1649458800000, Close: 17.99},&#xD;&#xA;  { Date: 1649890800000, Close: 19.99},&#xD;&#xA;  { Date: 1650322800000, Close: 17.99},&#xD;&#xA;  { Date: 1650409200000, Close: 16.49},&#xD;&#xA;  { Date: 1651791600000, Close: 17.29},&#xD;&#xA;  { Date: 1651878000000, Close: 17.39},&#xD;&#xA;  { Date: 1652914800000, Close: 17.49},&#xD;&#xA;  { Date: 1653778800000, Close: 17.69},&#xD;&#xA;  { Date: 1655334000000, Close: 18.39},&#xD;&#xA;  { Date: 1656543600000, Close: 18.99},&#xD;&#xA;  { Date: 1657234800000, Close: 17.99},&#xD;&#xA;  { Date: 1657580400000, Close: 16.99},&#xD;&#xA;  { Date: 1657839600000, Close: 15.99},&#xD;&#xA;  { Date: 1659999600000, Close: 16.99},&#xD;&#xA;  { Date: 1664838000000, Close: 16.69},&#xD;&#xA;  { Date: 1665183600000, Close: 16.59},&#xD;&#xA;  { Date: 1666393200000, Close: 17.39},&#xD;&#xA;  { Date: 1666738800000, Close: 17.29},&#xD;&#xA;  { Date: 1667602800000, Close: 18.09},&#xD;&#xA;  { Date: 1669071600000, Close: 17.99},&#xD;&#xA;  { Date: 1675983600000, Close: 19.39},&#xD;&#xA;  { Date: 1676242800000, Close: 19.79},&#xD;&#xA;  { Date: 1678748400000, Close: 19.99},&#xD;&#xA;  { Date: 1684450800000, Close: 21.99},&#xD;&#xA;  { Date: 1687215600000, Close: 24.99},&#xD;&#xA;  { Date: 1689894000000, Close: 22.89},&#xD;&#xA;  { Date: 1698102000000, Close: 22.99},&#xD;&#xA;  { Date: 1700607600000, Close: 22.09},&#xD;&#xA;  { Date: 1700694000000, Close: 17.90},&#xD;&#xA;  { Date: 1709679600000, Close: 20.09},&#xD;&#xA;  { Date: 1711234800000, Close: 20.99},&#xD;&#xA;  { Date: 1718233200000, Close: 18.29},&#xD;&#xA;  { Date: 1718665200000, Close: 18.09},&#xD;&#xA;  { Date: 1725663600000, Close: 18.29},&#xD;&#xA;  { Date: 1725663600000, Close: 18.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1687215600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575673200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>014/064 - Victreebel</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/014---victreebel/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/014---victreebel/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149516.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 37.99 on 19-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 10.99 on 21-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576882800000, Close: 10.99},&#xD;&#xA;  { Date: 1581462000000, Close: 11.99},&#xD;&#xA;  { Date: 1582671600000, Close: 12.99},&#xD;&#xA;  { Date: 1584745200000, Close: 13.99},&#xD;&#xA;  { Date: 1588892400000, Close: 15.99},&#xD;&#xA;  { Date: 1590706800000, Close: 17.99},&#xD;&#xA;  { Date: 1591830000000, Close: 18.49},&#xD;&#xA;  { Date: 1594249200000, Close: 17.99},&#xD;&#xA;  { Date: 1595372400000, Close: 16.99},&#xD;&#xA;  { Date: 1595890800000, Close: 17.99},&#xD;&#xA;  { Date: 1596841200000, Close: 18.49},&#xD;&#xA;  { Date: 1597100400000, Close: 17.49},&#xD;&#xA;  { Date: 1597791600000, Close: 16.99},&#xD;&#xA;  { Date: 1598569200000, Close: 17.29},&#xD;&#xA;  { Date: 1598655600000, Close: 15.99},&#xD;&#xA;  { Date: 1600297200000, Close: 14.99},&#xD;&#xA;  { Date: 1600815600000, Close: 15.99},&#xD;&#xA;  { Date: 1602889200000, Close: 16.29},&#xD;&#xA;  { Date: 1603321200000, Close: 17.99},&#xD;&#xA;  { Date: 1604012400000, Close: 25.99},&#xD;&#xA;  { Date: 1604962800000, Close: 34.99},&#xD;&#xA;  { Date: 1605740400000, Close: 37.99},&#xD;&#xA;  { Date: 1610406000000, Close: 29.99},&#xD;&#xA;  { Date: 1611788400000, Close: 31.99},&#xD;&#xA;  { Date: 1614985200000, Close: 34.99},&#xD;&#xA;  { Date: 1616108400000, Close: 35.99},&#xD;&#xA;  { Date: 1616972400000, Close: 33.99},&#xD;&#xA;  { Date: 1619046000000, Close: 31.99},&#xD;&#xA;  { Date: 1619737200000, Close: 29.99},&#xD;&#xA;  { Date: 1621465200000, Close: 27.99},&#xD;&#xA;  { Date: 1624489200000, Close: 24.99},&#xD;&#xA;  { Date: 1625266800000, Close: 25.99},&#xD;&#xA;  { Date: 1628290800000, Close: 24.49},&#xD;&#xA;  { Date: 1632438000000, Close: 25.99},&#xD;&#xA;  { Date: 1633042800000, Close: 24.99},&#xD;&#xA;  { Date: 1642633200000, Close: 31.99},&#xD;&#xA;  { Date: 1642806000000, Close: 29.99},&#xD;&#xA;  { Date: 1646866800000, Close: 24.99},&#xD;&#xA;  { Date: 1649631600000, Close: 23.49},&#xD;&#xA;  { Date: 1651791600000, Close: 24.99},&#xD;&#xA;  { Date: 1653346800000, Close: 25.99},&#xD;&#xA;  { Date: 1656543600000, Close: 24.49},&#xD;&#xA;  { Date: 1657839600000, Close: 24.99},&#xD;&#xA;  { Date: 1671750000000, Close: 23.49},&#xD;&#xA;  { Date: 1671836400000, Close: 19.99},&#xD;&#xA;  { Date: 1672182000000, Close: 18.89},&#xD;&#xA;  { Date: 1674255600000, Close: 18.59},&#xD;&#xA;  { Date: 1674342000000, Close: 18.49},&#xD;&#xA;  { Date: 1674774000000, Close: 18.99},&#xD;&#xA;  { Date: 1675292400000, Close: 19.09},&#xD;&#xA;  { Date: 1677970800000, Close: 19.59},&#xD;&#xA;  { Date: 1679353200000, Close: 27.99},&#xD;&#xA;  { Date: 1689807600000, Close: 24.99},&#xD;&#xA;  { Date: 1695942000000, Close: 27.39},&#xD;&#xA;  { Date: 1697583600000, Close: 26.99},&#xD;&#xA;  { Date: 1700607600000, Close: 23.59},&#xD;&#xA;  { Date: 1700694000000, Close: 19.99},&#xD;&#xA;  { Date: 1709074800000, Close: 19.89},&#xD;&#xA;  { Date: 1725922800000, Close: 21.59},&#xD;&#xA;  { Date: 1727391600000, Close: 21.09},&#xD;&#xA;  { Date: 1727391600000, Close: 21.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605740400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576882800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>015/064 - Vileplume</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/015---vileplume/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/015---vileplume/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149518.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 33.99 on 12-01-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 9.49 on 21-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576882800000, Close: 9.49},&#xD;&#xA;  { Date: 1577142000000, Close: 9.99},&#xD;&#xA;  { Date: 1578524400000, Close: 10.99},&#xD;&#xA;  { Date: 1581030000000, Close: 9.99},&#xD;&#xA;  { Date: 1582153200000, Close: 10.49},&#xD;&#xA;  { Date: 1583967600000, Close: 10.99},&#xD;&#xA;  { Date: 1584486000000, Close: 10.49},&#xD;&#xA;  { Date: 1585004400000, Close: 9.99},&#xD;&#xA;  { Date: 1585350000000, Close: 10.99},&#xD;&#xA;  { Date: 1585782000000, Close: 11.99},&#xD;&#xA;  { Date: 1588633200000, Close: 12.99},&#xD;&#xA;  { Date: 1588892400000, Close: 14.99},&#xD;&#xA;  { Date: 1589842800000, Close: 15.99},&#xD;&#xA;  { Date: 1591052400000, Close: 17.99},&#xD;&#xA;  { Date: 1591743600000, Close: 18.99},&#xD;&#xA;  { Date: 1595890800000, Close: 24.99},&#xD;&#xA;  { Date: 1597100400000, Close: 22.99},&#xD;&#xA;  { Date: 1598569200000, Close: 21.99},&#xD;&#xA;  { Date: 1600297200000, Close: 19.99},&#xD;&#xA;  { Date: 1602025200000, Close: 18.49},&#xD;&#xA;  { Date: 1602630000000, Close: 18.99},&#xD;&#xA;  { Date: 1604012400000, Close: 24.99},&#xD;&#xA;  { Date: 1605049200000, Close: 21.99},&#xD;&#xA;  { Date: 1605740400000, Close: 22.99},&#xD;&#xA;  { Date: 1606604400000, Close: 23.99},&#xD;&#xA;  { Date: 1608591600000, Close: 22.99},&#xD;&#xA;  { Date: 1610751600000, Close: 23.49},&#xD;&#xA;  { Date: 1611788400000, Close: 24.99},&#xD;&#xA;  { Date: 1612566000000, Close: 25.99},&#xD;&#xA;  { Date: 1615590000000, Close: 27.99},&#xD;&#xA;  { Date: 1619046000000, Close: 29.99},&#xD;&#xA;  { Date: 1621983600000, Close: 31.99},&#xD;&#xA;  { Date: 1624662000000, Close: 29.99},&#xD;&#xA;  { Date: 1632265200000, Close: 30.99},&#xD;&#xA;  { Date: 1633042800000, Close: 29.99},&#xD;&#xA;  { Date: 1640905200000, Close: 31.99},&#xD;&#xA;  { Date: 1641942000000, Close: 33.99},&#xD;&#xA;  { Date: 1643670000000, Close: 31.99},&#xD;&#xA;  { Date: 1645398000000, Close: 29.99},&#xD;&#xA;  { Date: 1647212400000, Close: 27.99},&#xD;&#xA;  { Date: 1649026800000, Close: 26.49},&#xD;&#xA;  { Date: 1652396400000, Close: 27.99},&#xD;&#xA;  { Date: 1656370800000, Close: 26.49},&#xD;&#xA;  { Date: 1657839600000, Close: 24.99},&#xD;&#xA;  { Date: 1660345200000, Close: 22.99},&#xD;&#xA;  { Date: 1669849200000, Close: 21.49},&#xD;&#xA;  { Date: 1669935600000, Close: 19.59},&#xD;&#xA;  { Date: 1670540400000, Close: 19.49},&#xD;&#xA;  { Date: 1671490800000, Close: 19.69},&#xD;&#xA;  { Date: 1671836400000, Close: 19.79},&#xD;&#xA;  { Date: 1674774000000, Close: 21.39},&#xD;&#xA;  { Date: 1675724400000, Close: 21.99},&#xD;&#xA;  { Date: 1676934000000, Close: 22.19},&#xD;&#xA;  { Date: 1687215600000, Close: 21.39},&#xD;&#xA;  { Date: 1707951600000, Close: 20.99},&#xD;&#xA;  { Date: 1708556400000, Close: 21.09},&#xD;&#xA;  { Date: 1711062000000, Close: 20.79},&#xD;&#xA;  { Date: 1711148400000, Close: 20.89},&#xD;&#xA;  { Date: 1725404400000, Close: 22.09},&#xD;&#xA;  { Date: 1725836400000, Close: 20.39},&#xD;&#xA;  { Date: 1725836400000, Close: 20.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1641942000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576882800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>016/064 - Wigglytuff</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/016---wigglytuff/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/016---wigglytuff/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149535.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 34.99 on 13-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 10.99 on 28-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577487600000, Close: 10.99},&#xD;&#xA;  { Date: 1578351600000, Close: 11.99},&#xD;&#xA;  { Date: 1579129200000, Close: 12.99},&#xD;&#xA;  { Date: 1581634800000, Close: 13.99},&#xD;&#xA;  { Date: 1582326000000, Close: 14.99},&#xD;&#xA;  { Date: 1585004400000, Close: 15.99},&#xD;&#xA;  { Date: 1587423600000, Close: 14.99},&#xD;&#xA;  { Date: 1588114800000, Close: 15.99},&#xD;&#xA;  { Date: 1588633200000, Close: 16.99},&#xD;&#xA;  { Date: 1590706800000, Close: 19.99},&#xD;&#xA;  { Date: 1591398000000, Close: 20.99},&#xD;&#xA;  { Date: 1591830000000, Close: 21.99},&#xD;&#xA;  { Date: 1594854000000, Close: 19.99},&#xD;&#xA;  { Date: 1595890800000, Close: 20.99},&#xD;&#xA;  { Date: 1598569200000, Close: 19.99},&#xD;&#xA;  { Date: 1601161200000, Close: 18.49},&#xD;&#xA;  { Date: 1602025200000, Close: 16.99},&#xD;&#xA;  { Date: 1603839600000, Close: 28.99},&#xD;&#xA;  { Date: 1604012400000, Close: 29.99},&#xD;&#xA;  { Date: 1605049200000, Close: 28.99},&#xD;&#xA;  { Date: 1605826800000, Close: 29.99},&#xD;&#xA;  { Date: 1608591600000, Close: 27.99},&#xD;&#xA;  { Date: 1611183600000, Close: 24.99},&#xD;&#xA;  { Date: 1614121200000, Close: 23.49},&#xD;&#xA;  { Date: 1615935600000, Close: 22.99},&#xD;&#xA;  { Date: 1620428400000, Close: 19.99},&#xD;&#xA;  { Date: 1620946800000, Close: 21.99},&#xD;&#xA;  { Date: 1623366000000, Close: 22.99},&#xD;&#xA;  { Date: 1625871600000, Close: 23.99},&#xD;&#xA;  { Date: 1626390000000, Close: 22.99},&#xD;&#xA;  { Date: 1631919600000, Close: 24.99},&#xD;&#xA;  { Date: 1641942000000, Close: 26.49},&#xD;&#xA;  { Date: 1642633200000, Close: 27.99},&#xD;&#xA;  { Date: 1645052400000, Close: 25.99},&#xD;&#xA;  { Date: 1652396400000, Close: 34.99},&#xD;&#xA;  { Date: 1666911600000, Close: 32.99},&#xD;&#xA;  { Date: 1670972400000, Close: 30.99},&#xD;&#xA;  { Date: 1675033200000, Close: 28.99},&#xD;&#xA;  { Date: 1681254000000, Close: 31.99},&#xD;&#xA;  { Date: 1693782000000, Close: 29.99},&#xD;&#xA;  { Date: 1694991600000, Close: 26.49},&#xD;&#xA;  { Date: 1695682800000, Close: 26.39},&#xD;&#xA;  { Date: 1727737200000, Close: 24.99},&#xD;&#xA;  { Date: 1727737200000, Close: 24.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1652396400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577487600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>017/064 - Clefable</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/017---clefable/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/017---clefable/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148925.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 8.99 on 28-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 09-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578524400000, Close: 0.99},&#xD;&#xA;  { Date: 1584140400000, Close: 1.09},&#xD;&#xA;  { Date: 1584658800000, Close: 1.19},&#xD;&#xA;  { Date: 1588892400000, Close: 1.39},&#xD;&#xA;  { Date: 1589929200000, Close: 1.99},&#xD;&#xA;  { Date: 1591225200000, Close: 2.49},&#xD;&#xA;  { Date: 1591830000000, Close: 2.39},&#xD;&#xA;  { Date: 1593730800000, Close: 2.59},&#xD;&#xA;  { Date: 1594767600000, Close: 3.49},&#xD;&#xA;  { Date: 1594854000000, Close: 3.89},&#xD;&#xA;  { Date: 1596841200000, Close: 3.99},&#xD;&#xA;  { Date: 1598310000000, Close: 4.49},&#xD;&#xA;  { Date: 1598569200000, Close: 4.99},&#xD;&#xA;  { Date: 1600297200000, Close: 4.39},&#xD;&#xA;  { Date: 1601420400000, Close: 4.99},&#xD;&#xA;  { Date: 1602457200000, Close: 4.39},&#xD;&#xA;  { Date: 1604098800000, Close: 5.49},&#xD;&#xA;  { Date: 1604617200000, Close: 5.99},&#xD;&#xA;  { Date: 1605049200000, Close: 7.99},&#xD;&#xA;  { Date: 1605740400000, Close: 8.49},&#xD;&#xA;  { Date: 1606518000000, Close: 8.99},&#xD;&#xA;  { Date: 1608159600000, Close: 8.39},&#xD;&#xA;  { Date: 1608678000000, Close: 7.99},&#xD;&#xA;  { Date: 1611702000000, Close: 7.49},&#xD;&#xA;  { Date: 1612393200000, Close: 6.99},&#xD;&#xA;  { Date: 1613775600000, Close: 6.39},&#xD;&#xA;  { Date: 1617404400000, Close: 6.49},&#xD;&#xA;  { Date: 1617922800000, Close: 6.89},&#xD;&#xA;  { Date: 1618700400000, Close: 6.99},&#xD;&#xA;  { Date: 1619478000000, Close: 7.99},&#xD;&#xA;  { Date: 1620428400000, Close: 6.99},&#xD;&#xA;  { Date: 1621465200000, Close: 6.49},&#xD;&#xA;  { Date: 1623193200000, Close: 5.79},&#xD;&#xA;  { Date: 1623452400000, Close: 5.49},&#xD;&#xA;  { Date: 1624489200000, Close: 4.99},&#xD;&#xA;  { Date: 1625439600000, Close: 4.39},&#xD;&#xA;  { Date: 1625612400000, Close: 3.99},&#xD;&#xA;  { Date: 1626130800000, Close: 3.49},&#xD;&#xA;  { Date: 1628290800000, Close: 2.89},&#xD;&#xA;  { Date: 1628550000000, Close: 3.19},&#xD;&#xA;  { Date: 1629241200000, Close: 3.49},&#xD;&#xA;  { Date: 1631314800000, Close: 4.49},&#xD;&#xA;  { Date: 1631660400000, Close: 3.89},&#xD;&#xA;  { Date: 1633993200000, Close: 3.29},&#xD;&#xA;  { Date: 1636498800000, Close: 3.99},&#xD;&#xA;  { Date: 1637449200000, Close: 3.39},&#xD;&#xA;  { Date: 1638658800000, Close: 3.19},&#xD;&#xA;  { Date: 1639782000000, Close: 2.99},&#xD;&#xA;  { Date: 1642633200000, Close: 3.39},&#xD;&#xA;  { Date: 1642806000000, Close: 2.99},&#xD;&#xA;  { Date: 1649286000000, Close: 3.19},&#xD;&#xA;  { Date: 1649977200000, Close: 3.09},&#xD;&#xA;  { Date: 1650063600000, Close: 2.89},&#xD;&#xA;  { Date: 1651186800000, Close: 2.99},&#xD;&#xA;  { Date: 1651618800000, Close: 2.89},&#xD;&#xA;  { Date: 1652914800000, Close: 2.99},&#xD;&#xA;  { Date: 1653001200000, Close: 2.89},&#xD;&#xA;  { Date: 1653692400000, Close: 2.79},&#xD;&#xA;  { Date: 1654124400000, Close: 2.69},&#xD;&#xA;  { Date: 1654815600000, Close: 2.59},&#xD;&#xA;  { Date: 1655420400000, Close: 3.99},&#xD;&#xA;  { Date: 1665788400000, Close: 4.19},&#xD;&#xA;  { Date: 1677970800000, Close: 4.39},&#xD;&#xA;  { Date: 1681167600000, Close: 4.99},&#xD;&#xA;  { Date: 1692918000000, Close: 4.49},&#xD;&#xA;  { Date: 1711753200000, Close: 4.99},&#xD;&#xA;  { Date: 1726786800000, Close: 4.39},&#xD;&#xA;  { Date: 1727996400000, Close: 4.49},&#xD;&#xA;  { Date: 1727996400000, Close: 4.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606518000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578524400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>018/064 - Electrode</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/018---electrode/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/018---electrode/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148996.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 6.59 on 06-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.19 on 28-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577487600000, Close: 1.19},&#xD;&#xA;  { Date: 1579561200000, Close: 1.29},&#xD;&#xA;  { Date: 1582239600000, Close: 2.49},&#xD;&#xA;  { Date: 1584486000000, Close: 2.29},&#xD;&#xA;  { Date: 1585004400000, Close: 1.99},&#xD;&#xA;  { Date: 1585695600000, Close: 1.79},&#xD;&#xA;  { Date: 1586732400000, Close: 1.89},&#xD;&#xA;  { Date: 1588892400000, Close: 2.49},&#xD;&#xA;  { Date: 1589410800000, Close: 2.39},&#xD;&#xA;  { Date: 1590102000000, Close: 2.99},&#xD;&#xA;  { Date: 1592866800000, Close: 3.29},&#xD;&#xA;  { Date: 1593730800000, Close: 3.39},&#xD;&#xA;  { Date: 1594767600000, Close: 3.59},&#xD;&#xA;  { Date: 1594940400000, Close: 3.69},&#xD;&#xA;  { Date: 1596495600000, Close: 3.99},&#xD;&#xA;  { Date: 1600815600000, Close: 3.49},&#xD;&#xA;  { Date: 1601852400000, Close: 2.89},&#xD;&#xA;  { Date: 1602111600000, Close: 2.49},&#xD;&#xA;  { Date: 1602630000000, Close: 2.79},&#xD;&#xA;  { Date: 1604098800000, Close: 3.99},&#xD;&#xA;  { Date: 1604617200000, Close: 4.99},&#xD;&#xA;  { Date: 1605654000000, Close: 5.99},&#xD;&#xA;  { Date: 1606518000000, Close: 6.49},&#xD;&#xA;  { Date: 1608591600000, Close: 6.39},&#xD;&#xA;  { Date: 1609282800000, Close: 5.99},&#xD;&#xA;  { Date: 1609887600000, Close: 6.59},&#xD;&#xA;  { Date: 1611961200000, Close: 6.49},&#xD;&#xA;  { Date: 1614034800000, Close: 5.79},&#xD;&#xA;  { Date: 1614898800000, Close: 5.99},&#xD;&#xA;  { Date: 1617922800000, Close: 5.49},&#xD;&#xA;  { Date: 1618959600000, Close: 4.99},&#xD;&#xA;  { Date: 1619910000000, Close: 4.39},&#xD;&#xA;  { Date: 1620082800000, Close: 3.99},&#xD;&#xA;  { Date: 1620860400000, Close: 3.49},&#xD;&#xA;  { Date: 1622761200000, Close: 2.99},&#xD;&#xA;  { Date: 1623366000000, Close: 3.39},&#xD;&#xA;  { Date: 1623970800000, Close: 3.59},&#xD;&#xA;  { Date: 1624057200000, Close: 3.39},&#xD;&#xA;  { Date: 1624489200000, Close: 2.99},&#xD;&#xA;  { Date: 1625266800000, Close: 3.29},&#xD;&#xA;  { Date: 1631314800000, Close: 3.49},&#xD;&#xA;  { Date: 1631574000000, Close: 3.69},&#xD;&#xA;  { Date: 1632438000000, Close: 3.09},&#xD;&#xA;  { Date: 1632956400000, Close: 3.29},&#xD;&#xA;  { Date: 1637017200000, Close: 3.99},&#xD;&#xA;  { Date: 1638486000000, Close: 3.39},&#xD;&#xA;  { Date: 1639782000000, Close: 2.79},&#xD;&#xA;  { Date: 1640646000000, Close: 2.49},&#xD;&#xA;  { Date: 1640732400000, Close: 2.29},&#xD;&#xA;  { Date: 1642633200000, Close: 2.49},&#xD;&#xA;  { Date: 1648162800000, Close: 2.69},&#xD;&#xA;  { Date: 1648594800000, Close: 2.79},&#xD;&#xA;  { Date: 1649977200000, Close: 2.99},&#xD;&#xA;  { Date: 1651878000000, Close: 2.79},&#xD;&#xA;  { Date: 1653346800000, Close: 2.69},&#xD;&#xA;  { Date: 1655420400000, Close: 4.49},&#xD;&#xA;  { Date: 1661900400000, Close: 5.49},&#xD;&#xA;  { Date: 1669849200000, Close: 4.89},&#xD;&#xA;  { Date: 1670799600000, Close: 4.29},&#xD;&#xA;  { Date: 1671750000000, Close: 3.69},&#xD;&#xA;  { Date: 1682550000000, Close: 4.99},&#xD;&#xA;  { Date: 1703631600000, Close: 5.99},&#xD;&#xA;  { Date: 1709334000000, Close: 5.49},&#xD;&#xA;  { Date: 1713394800000, Close: 5.99},&#xD;&#xA;  { Date: 1713394800000, Close: 5.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1609887600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577487600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>019/064 - Flareon</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/019---flareon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/019---flareon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149053.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 12-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.99 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 2.99},&#xD;&#xA;  { Date: 1578956400000, Close: 3.49},&#xD;&#xA;  { Date: 1579734000000, Close: 3.99},&#xD;&#xA;  { Date: 1581030000000, Close: 4.49},&#xD;&#xA;  { Date: 1581980400000, Close: 4.99},&#xD;&#xA;  { Date: 1582066800000, Close: 5.49},&#xD;&#xA;  { Date: 1583967600000, Close: 5.29},&#xD;&#xA;  { Date: 1584486000000, Close: 4.99},&#xD;&#xA;  { Date: 1585004400000, Close: 4.49},&#xD;&#xA;  { Date: 1587164400000, Close: 4.99},&#xD;&#xA;  { Date: 1588633200000, Close: 5.99},&#xD;&#xA;  { Date: 1588892400000, Close: 6.49},&#xD;&#xA;  { Date: 1589583600000, Close: 6.99},&#xD;&#xA;  { Date: 1589929200000, Close: 7.99},&#xD;&#xA;  { Date: 1591225200000, Close: 8.99},&#xD;&#xA;  { Date: 1591830000000, Close: 8.49},&#xD;&#xA;  { Date: 1592866800000, Close: 7.79},&#xD;&#xA;  { Date: 1594767600000, Close: 7.89},&#xD;&#xA;  { Date: 1595890800000, Close: 7.99},&#xD;&#xA;  { Date: 1596582000000, Close: 8.39},&#xD;&#xA;  { Date: 1597705200000, Close: 8.99},&#xD;&#xA;  { Date: 1602284400000, Close: 9.29},&#xD;&#xA;  { Date: 1602802800000, Close: 8.99},&#xD;&#xA;  { Date: 1603407600000, Close: 10.99},&#xD;&#xA;  { Date: 1605135600000, Close: 14.99},&#xD;&#xA;  { Date: 1605826800000, Close: 13.99},&#xD;&#xA;  { Date: 1606518000000, Close: 14.29},&#xD;&#xA;  { Date: 1607036400000, Close: 13.99},&#xD;&#xA;  { Date: 1608591600000, Close: 13.49},&#xD;&#xA;  { Date: 1609282800000, Close: 12.99},&#xD;&#xA;  { Date: 1618786800000, Close: 11.49},&#xD;&#xA;  { Date: 1619650800000, Close: 11.99},&#xD;&#xA;  { Date: 1620342000000, Close: 10.99},&#xD;&#xA;  { Date: 1620687600000, Close: 9.99},&#xD;&#xA;  { Date: 1626994800000, Close: 8.99},&#xD;&#xA;  { Date: 1629500400000, Close: 9.99},&#xD;&#xA;  { Date: 1632438000000, Close: 10.99},&#xD;&#xA;  { Date: 1644620400000, Close: 14.99},&#xD;&#xA;  { Date: 1647990000000, Close: 13.49},&#xD;&#xA;  { Date: 1649026800000, Close: 12.49},&#xD;&#xA;  { Date: 1649977200000, Close: 10.99},&#xD;&#xA;  { Date: 1653519600000, Close: 11.99},&#xD;&#xA;  { Date: 1655852400000, Close: 13.49},&#xD;&#xA;  { Date: 1656716400000, Close: 11.99},&#xD;&#xA;  { Date: 1660690800000, Close: 10.99},&#xD;&#xA;  { Date: 1670367600000, Close: 9.79},&#xD;&#xA;  { Date: 1680735600000, Close: 10.99},&#xD;&#xA;  { Date: 1682550000000, Close: 11.99},&#xD;&#xA;  { Date: 1690498800000, Close: 12.99},&#xD;&#xA;  { Date: 1698966000000, Close: 14.99},&#xD;&#xA;  { Date: 1698966000000, Close: 14.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605135600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>020/064 - Jolteon</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/020---jolteon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/020---jolteon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149135.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 06-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.49 on 24-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 4.99},&#xD;&#xA;  { Date: 1579042800000, Close: 5.99},&#xD;&#xA;  { Date: 1581030000000, Close: 5.49},&#xD;&#xA;  { Date: 1582758000000, Close: 5.59},&#xD;&#xA;  { Date: 1583967600000, Close: 5.49},&#xD;&#xA;  { Date: 1584486000000, Close: 4.99},&#xD;&#xA;  { Date: 1585004400000, Close: 4.49},&#xD;&#xA;  { Date: 1586646000000, Close: 4.99},&#xD;&#xA;  { Date: 1588892400000, Close: 6.49},&#xD;&#xA;  { Date: 1591657200000, Close: 7.49},&#xD;&#xA;  { Date: 1593471600000, Close: 7.59},&#xD;&#xA;  { Date: 1593644400000, Close: 7.19},&#xD;&#xA;  { Date: 1594767600000, Close: 7.99},&#xD;&#xA;  { Date: 1596150000000, Close: 8.49},&#xD;&#xA;  { Date: 1596668400000, Close: 8.99},&#xD;&#xA;  { Date: 1598050800000, Close: 9.99},&#xD;&#xA;  { Date: 1598310000000, Close: 10.49},&#xD;&#xA;  { Date: 1600556400000, Close: 9.39},&#xD;&#xA;  { Date: 1602198000000, Close: 8.99},&#xD;&#xA;  { Date: 1603321200000, Close: 9.99},&#xD;&#xA;  { Date: 1605049200000, Close: 11.99},&#xD;&#xA;  { Date: 1605826800000, Close: 12.99},&#xD;&#xA;  { Date: 1606863600000, Close: 13.99},&#xD;&#xA;  { Date: 1609887600000, Close: 14.99},&#xD;&#xA;  { Date: 1611097200000, Close: 13.99},&#xD;&#xA;  { Date: 1612393200000, Close: 14.99},&#xD;&#xA;  { Date: 1616108400000, Close: 13.49},&#xD;&#xA;  { Date: 1617318000000, Close: 13.99},&#xD;&#xA;  { Date: 1619650800000, Close: 14.99},&#xD;&#xA;  { Date: 1620342000000, Close: 13.99},&#xD;&#xA;  { Date: 1620946800000, Close: 14.49},&#xD;&#xA;  { Date: 1621465200000, Close: 14.99},&#xD;&#xA;  { Date: 1622242800000, Close: 13.99},&#xD;&#xA;  { Date: 1622761200000, Close: 12.99},&#xD;&#xA;  { Date: 1624489200000, Close: 11.99},&#xD;&#xA;  { Date: 1628636400000, Close: 10.49},&#xD;&#xA;  { Date: 1629500400000, Close: 9.99},&#xD;&#xA;  { Date: 1630796400000, Close: 8.79},&#xD;&#xA;  { Date: 1632351600000, Close: 8.99},&#xD;&#xA;  { Date: 1634857200000, Close: 10.99},&#xD;&#xA;  { Date: 1637967600000, Close: 11.99},&#xD;&#xA;  { Date: 1643151600000, Close: 10.49},&#xD;&#xA;  { Date: 1645052400000, Close: 10.99},&#xD;&#xA;  { Date: 1656630000000, Close: 9.79},&#xD;&#xA;  { Date: 1657926000000, Close: 9.49},&#xD;&#xA;  { Date: 1661554800000, Close: 9.99},&#xD;&#xA;  { Date: 1666220400000, Close: 8.79},&#xD;&#xA;  { Date: 1666652400000, Close: 7.09},&#xD;&#xA;  { Date: 1678143600000, Close: 7.49},&#xD;&#xA;  { Date: 1678402800000, Close: 8.29},&#xD;&#xA;  { Date: 1679007600000, Close: 8.19},&#xD;&#xA;  { Date: 1680735600000, Close: 8.09},&#xD;&#xA;  { Date: 1681081200000, Close: 7.89},&#xD;&#xA;  { Date: 1681599600000, Close: 7.19},&#xD;&#xA;  { Date: 1682463600000, Close: 6.99},&#xD;&#xA;  { Date: 1684450800000, Close: 7.99},&#xD;&#xA;  { Date: 1686783600000, Close: 7.79},&#xD;&#xA;  { Date: 1691017200000, Close: 8.99},&#xD;&#xA;  { Date: 1696028400000, Close: 14.99},&#xD;&#xA;  { Date: 1696028400000, Close: 14.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1609887600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585004400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>021/064 - Kangaskhan</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/021---kangaskhan/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/021---kangaskhan/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149147.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 8.99 on 14-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 27-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 0.99},&#xD;&#xA;  { Date: 1582239600000, Close: 1.09},&#xD;&#xA;  { Date: 1583881200000, Close: 1.19},&#xD;&#xA;  { Date: 1585263600000, Close: 0.89},&#xD;&#xA;  { Date: 1586818800000, Close: 0.99},&#xD;&#xA;  { Date: 1588892400000, Close: 1.09},&#xD;&#xA;  { Date: 1590620400000, Close: 1.19},&#xD;&#xA;  { Date: 1591398000000, Close: 1.49},&#xD;&#xA;  { Date: 1592953200000, Close: 1.59},&#xD;&#xA;  { Date: 1593817200000, Close: 1.29},&#xD;&#xA;  { Date: 1594940400000, Close: 2.29},&#xD;&#xA;  { Date: 1595977200000, Close: 2.99},&#xD;&#xA;  { Date: 1597705200000, Close: 3.99},&#xD;&#xA;  { Date: 1599087600000, Close: 4.49},&#xD;&#xA;  { Date: 1599606000000, Close: 3.99},&#xD;&#xA;  { Date: 1601074800000, Close: 3.49},&#xD;&#xA;  { Date: 1601593200000, Close: 3.99},&#xD;&#xA;  { Date: 1602198000000, Close: 4.99},&#xD;&#xA;  { Date: 1602716400000, Close: 5.49},&#xD;&#xA;  { Date: 1603407600000, Close: 6.49},&#xD;&#xA;  { Date: 1605135600000, Close: 5.99},&#xD;&#xA;  { Date: 1605913200000, Close: 5.49},&#xD;&#xA;  { Date: 1606518000000, Close: 5.99},&#xD;&#xA;  { Date: 1607554800000, Close: 5.39},&#xD;&#xA;  { Date: 1608246000000, Close: 4.49},&#xD;&#xA;  { Date: 1609196400000, Close: 3.99},&#xD;&#xA;  { Date: 1611097200000, Close: 5.89},&#xD;&#xA;  { Date: 1611788400000, Close: 5.95},&#xD;&#xA;  { Date: 1612911600000, Close: 5.99},&#xD;&#xA;  { Date: 1614639600000, Close: 6.39},&#xD;&#xA;  { Date: 1614812400000, Close: 6.99},&#xD;&#xA;  { Date: 1617231600000, Close: 7.99},&#xD;&#xA;  { Date: 1618354800000, Close: 8.99},&#xD;&#xA;  { Date: 1624143600000, Close: 8.39},&#xD;&#xA;  { Date: 1625180400000, Close: 7.79},&#xD;&#xA;  { Date: 1625266800000, Close: 6.99},&#xD;&#xA;  { Date: 1626217200000, Close: 5.99},&#xD;&#xA;  { Date: 1627945200000, Close: 5.39},&#xD;&#xA;  { Date: 1629068400000, Close: 4.79},&#xD;&#xA;  { Date: 1629932400000, Close: 4.49},&#xD;&#xA;  { Date: 1632438000000, Close: 4.79},&#xD;&#xA;  { Date: 1633042800000, Close: 4.49},&#xD;&#xA;  { Date: 1635375600000, Close: 4.99},&#xD;&#xA;  { Date: 1638572400000, Close: 5.99},&#xD;&#xA;  { Date: 1642719600000, Close: 5.49},&#xD;&#xA;  { Date: 1646348400000, Close: 5.99},&#xD;&#xA;  { Date: 1648076400000, Close: 5.39},&#xD;&#xA;  { Date: 1649026800000, Close: 4.79},&#xD;&#xA;  { Date: 1650668400000, Close: 4.19},&#xD;&#xA;  { Date: 1655334000000, Close: 4.99},&#xD;&#xA;  { Date: 1656025200000, Close: 4.79},&#xD;&#xA;  { Date: 1657926000000, Close: 4.49},&#xD;&#xA;  { Date: 1671490800000, Close: 3.89},&#xD;&#xA;  { Date: 1673391600000, Close: 4.09},&#xD;&#xA;  { Date: 1678748400000, Close: 4.29},&#xD;&#xA;  { Date: 1682636400000, Close: 4.59},&#xD;&#xA;  { Date: 1696028400000, Close: 4.99},&#xD;&#xA;  { Date: 1696028400000, Close: 4.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618354800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585263600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>022/064 - Mr. Mime</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/022---mr.-mime/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/022---mr.-mime/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149299.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 28-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.69 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.69},&#xD;&#xA;  { Date: 1582758000000, Close: 2.99},&#xD;&#xA;  { Date: 1584486000000, Close: 2.79},&#xD;&#xA;  { Date: 1585004400000, Close: 2.49},&#xD;&#xA;  { Date: 1585695600000, Close: 2.29},&#xD;&#xA;  { Date: 1586818800000, Close: 2.99},&#xD;&#xA;  { Date: 1588892400000, Close: 3.49},&#xD;&#xA;  { Date: 1590015600000, Close: 3.99},&#xD;&#xA;  { Date: 1591398000000, Close: 4.99},&#xD;&#xA;  { Date: 1594767600000, Close: 5.49},&#xD;&#xA;  { Date: 1595372400000, Close: 4.99},&#xD;&#xA;  { Date: 1597878000000, Close: 5.99},&#xD;&#xA;  { Date: 1598569200000, Close: 6.49},&#xD;&#xA;  { Date: 1601074800000, Close: 5.79},&#xD;&#xA;  { Date: 1601938800000, Close: 6.49},&#xD;&#xA;  { Date: 1602543600000, Close: 6.99},&#xD;&#xA;  { Date: 1604962800000, Close: 8.39},&#xD;&#xA;  { Date: 1605049200000, Close: 9.99},&#xD;&#xA;  { Date: 1605913200000, Close: 12.99},&#xD;&#xA;  { Date: 1606518000000, Close: 14.99},&#xD;&#xA;  { Date: 1608159600000, Close: 13.49},&#xD;&#xA;  { Date: 1608246000000, Close: 11.99},&#xD;&#xA;  { Date: 1609196400000, Close: 10.49},&#xD;&#xA;  { Date: 1609282800000, Close: 8.99},&#xD;&#xA;  { Date: 1609887600000, Close: 9.99},&#xD;&#xA;  { Date: 1610751600000, Close: 11.99},&#xD;&#xA;  { Date: 1612393200000, Close: 12.99},&#xD;&#xA;  { Date: 1614466800000, Close: 11.49},&#xD;&#xA;  { Date: 1617058800000, Close: 10.99},&#xD;&#xA;  { Date: 1619046000000, Close: 9.99},&#xD;&#xA;  { Date: 1619650800000, Close: 10.99},&#xD;&#xA;  { Date: 1620082800000, Close: 9.99},&#xD;&#xA;  { Date: 1620860400000, Close: 9.49},&#xD;&#xA;  { Date: 1625007600000, Close: 8.79},&#xD;&#xA;  { Date: 1625958000000, Close: 8.19},&#xD;&#xA;  { Date: 1626908400000, Close: 7.59},&#xD;&#xA;  { Date: 1629586800000, Close: 6.99},&#xD;&#xA;  { Date: 1635375600000, Close: 8.99},&#xD;&#xA;  { Date: 1637103600000, Close: 8.39},&#xD;&#xA;  { Date: 1637794800000, Close: 7.99},&#xD;&#xA;  { Date: 1639782000000, Close: 7.49},&#xD;&#xA;  { Date: 1643065200000, Close: 7.99},&#xD;&#xA;  { Date: 1654124400000, Close: 7.49},&#xD;&#xA;  { Date: 1655420400000, Close: 7.99},&#xD;&#xA;  { Date: 1655938800000, Close: 8.99},&#xD;&#xA;  { Date: 1656716400000, Close: 8.49},&#xD;&#xA;  { Date: 1661900400000, Close: 8.99},&#xD;&#xA;  { Date: 1671318000000, Close: 8.39},&#xD;&#xA;  { Date: 1675378800000, Close: 7.79},&#xD;&#xA;  { Date: 1678748400000, Close: 7.99},&#xD;&#xA;  { Date: 1684450800000, Close: 8.39},&#xD;&#xA;  { Date: 1688338800000, Close: 7.79},&#xD;&#xA;  { Date: 1691190000000, Close: 7.99},&#xD;&#xA;  { Date: 1702594800000, Close: 8.99},&#xD;&#xA;  { Date: 1714431600000, Close: 9.99},&#xD;&#xA;  { Date: 1714431600000, Close: 9.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606518000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>023/064 - Nidoqueen</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/023---nidoqueen/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/023---nidoqueen/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149310.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.29 on 19-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.19 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.19},&#xD;&#xA;  { Date: 1578956400000, Close: 1.49},&#xD;&#xA;  { Date: 1581030000000, Close: 1.59},&#xD;&#xA;  { Date: 1582758000000, Close: 1.99},&#xD;&#xA;  { Date: 1583967600000, Close: 2.29},&#xD;&#xA;  { Date: 1586818800000, Close: 2.99},&#xD;&#xA;  { Date: 1588028400000, Close: 3.29},&#xD;&#xA;  { Date: 1589238000000, Close: 4.49},&#xD;&#xA;  { Date: 1590620400000, Close: 4.99},&#xD;&#xA;  { Date: 1592953200000, Close: 5.49},&#xD;&#xA;  { Date: 1593471600000, Close: 5.99},&#xD;&#xA;  { Date: 1594940400000, Close: 6.49},&#xD;&#xA;  { Date: 1596495600000, Close: 6.99},&#xD;&#xA;  { Date: 1597705200000, Close: 7.49},&#xD;&#xA;  { Date: 1600297200000, Close: 6.99},&#xD;&#xA;  { Date: 1600815600000, Close: 6.49},&#xD;&#xA;  { Date: 1601334000000, Close: 6.99},&#xD;&#xA;  { Date: 1602543600000, Close: 7.99},&#xD;&#xA;  { Date: 1603321200000, Close: 8.99},&#xD;&#xA;  { Date: 1605740400000, Close: 9.29},&#xD;&#xA;  { Date: 1607554800000, Close: 8.99},&#xD;&#xA;  { Date: 1608591600000, Close: 8.59},&#xD;&#xA;  { Date: 1609282800000, Close: 8.69},&#xD;&#xA;  { Date: 1609887600000, Close: 8.79},&#xD;&#xA;  { Date: 1610578800000, Close: 8.49},&#xD;&#xA;  { Date: 1612306800000, Close: 7.99},&#xD;&#xA;  { Date: 1613602800000, Close: 7.49},&#xD;&#xA;  { Date: 1615244400000, Close: 7.59},&#xD;&#xA;  { Date: 1615417200000, Close: 7.99},&#xD;&#xA;  { Date: 1619046000000, Close: 7.49},&#xD;&#xA;  { Date: 1620428400000, Close: 6.99},&#xD;&#xA;  { Date: 1620946800000, Close: 7.39},&#xD;&#xA;  { Date: 1622761200000, Close: 6.99},&#xD;&#xA;  { Date: 1623366000000, Close: 7.29},&#xD;&#xA;  { Date: 1623970800000, Close: 6.99},&#xD;&#xA;  { Date: 1624489200000, Close: 6.49},&#xD;&#xA;  { Date: 1626994800000, Close: 6.99},&#xD;&#xA;  { Date: 1631142000000, Close: 7.99},&#xD;&#xA;  { Date: 1635030000000, Close: 7.39},&#xD;&#xA;  { Date: 1635548400000, Close: 6.99},&#xD;&#xA;  { Date: 1637276400000, Close: 5.99},&#xD;&#xA;  { Date: 1639090800000, Close: 6.39},&#xD;&#xA;  { Date: 1639782000000, Close: 5.99},&#xD;&#xA;  { Date: 1643410800000, Close: 5.39},&#xD;&#xA;  { Date: 1645657200000, Close: 5.99},&#xD;&#xA;  { Date: 1653346800000, Close: 6.99},&#xD;&#xA;  { Date: 1671836400000, Close: 6.49},&#xD;&#xA;  { Date: 1675465200000, Close: 6.99},&#xD;&#xA;  { Date: 1676415600000, Close: 7.39},&#xD;&#xA;  { Date: 1681945200000, Close: 6.79},&#xD;&#xA;  { Date: 1687474800000, Close: 6.99},&#xD;&#xA;  { Date: 1687474800000, Close: 6.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605740400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>024/064 - Pidgeot</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/024---pidgeot/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/024---pidgeot/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149337.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 11.99 on 24-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.49 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.49},&#xD;&#xA;  { Date: 1582671600000, Close: 2.79},&#xD;&#xA;  { Date: 1584486000000, Close: 2.99},&#xD;&#xA;  { Date: 1585004400000, Close: 2.49},&#xD;&#xA;  { Date: 1588892400000, Close: 2.99},&#xD;&#xA;  { Date: 1591225200000, Close: 3.49},&#xD;&#xA;  { Date: 1591830000000, Close: 3.29},&#xD;&#xA;  { Date: 1593126000000, Close: 2.49},&#xD;&#xA;  { Date: 1593644400000, Close: 2.99},&#xD;&#xA;  { Date: 1594767600000, Close: 3.29},&#xD;&#xA;  { Date: 1595890800000, Close: 3.99},&#xD;&#xA;  { Date: 1596668400000, Close: 4.29},&#xD;&#xA;  { Date: 1597705200000, Close: 4.99},&#xD;&#xA;  { Date: 1599087600000, Close: 4.49},&#xD;&#xA;  { Date: 1600210800000, Close: 4.99},&#xD;&#xA;  { Date: 1601593200000, Close: 5.99},&#xD;&#xA;  { Date: 1605049200000, Close: 7.99},&#xD;&#xA;  { Date: 1605740400000, Close: 8.99},&#xD;&#xA;  { Date: 1611874800000, Close: 8.39},&#xD;&#xA;  { Date: 1612393200000, Close: 8.45},&#xD;&#xA;  { Date: 1614812400000, Close: 8.99},&#xD;&#xA;  { Date: 1616022000000, Close: 9.49},&#xD;&#xA;  { Date: 1616626800000, Close: 8.99},&#xD;&#xA;  { Date: 1617231600000, Close: 9.99},&#xD;&#xA;  { Date: 1619218800000, Close: 11.99},&#xD;&#xA;  { Date: 1620342000000, Close: 10.99},&#xD;&#xA;  { Date: 1622329200000, Close: 9.79},&#xD;&#xA;  { Date: 1623106800000, Close: 8.99},&#xD;&#xA;  { Date: 1624316400000, Close: 7.99},&#xD;&#xA;  { Date: 1625698800000, Close: 7.49},&#xD;&#xA;  { Date: 1626994800000, Close: 6.99},&#xD;&#xA;  { Date: 1628290800000, Close: 6.39},&#xD;&#xA;  { Date: 1628550000000, Close: 5.99},&#xD;&#xA;  { Date: 1629759600000, Close: 5.49},&#xD;&#xA;  { Date: 1633993200000, Close: 5.99},&#xD;&#xA;  { Date: 1634943600000, Close: 6.99},&#xD;&#xA;  { Date: 1635548400000, Close: 6.49},&#xD;&#xA;  { Date: 1637017200000, Close: 5.79},&#xD;&#xA;  { Date: 1637190000000, Close: 4.99},&#xD;&#xA;  { Date: 1637794800000, Close: 4.49},&#xD;&#xA;  { Date: 1639695600000, Close: 4.19},&#xD;&#xA;  { Date: 1643065200000, Close: 4.49},&#xD;&#xA;  { Date: 1646089200000, Close: 4.99},&#xD;&#xA;  { Date: 1648681200000, Close: 5.49},&#xD;&#xA;  { Date: 1653346800000, Close: 5.99},&#xD;&#xA;  { Date: 1657926000000, Close: 5.49},&#xD;&#xA;  { Date: 1658444400000, Close: 5.29},&#xD;&#xA;  { Date: 1661554800000, Close: 5.49},&#xD;&#xA;  { Date: 1668121200000, Close: 5.99},&#xD;&#xA;  { Date: 1670540400000, Close: 6.39},&#xD;&#xA;  { Date: 1675724400000, Close: 5.79},&#xD;&#xA;  { Date: 1692313200000, Close: 7.49},&#xD;&#xA;  { Date: 1699570800000, Close: 7.99},&#xD;&#xA;  { Date: 1707951600000, Close: 8.99},&#xD;&#xA;  { Date: 1718924400000, Close: 9.59},&#xD;&#xA;  { Date: 1718924400000, Close: 9.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619218800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>025/064 - Pinsir</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/025---pinsir/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/025---pinsir/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149347.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 10.99 on 04-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.29 on 30-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.59},&#xD;&#xA;  { Date: 1580338800000, Close: 1.29},&#xD;&#xA;  { Date: 1582585200000, Close: 1.59},&#xD;&#xA;  { Date: 1583967600000, Close: 1.79},&#xD;&#xA;  { Date: 1585004400000, Close: 1.49},&#xD;&#xA;  { Date: 1586646000000, Close: 1.69},&#xD;&#xA;  { Date: 1587164400000, Close: 1.79},&#xD;&#xA;  { Date: 1588892400000, Close: 2.99},&#xD;&#xA;  { Date: 1592348400000, Close: 3.09},&#xD;&#xA;  { Date: 1594767600000, Close: 3.19},&#xD;&#xA;  { Date: 1595372400000, Close: 2.99},&#xD;&#xA;  { Date: 1597705200000, Close: 3.29},&#xD;&#xA;  { Date: 1598310000000, Close: 3.39},&#xD;&#xA;  { Date: 1599001200000, Close: 3.49},&#xD;&#xA;  { Date: 1599087600000, Close: 3.59},&#xD;&#xA;  { Date: 1600815600000, Close: 3.49},&#xD;&#xA;  { Date: 1601334000000, Close: 3.79},&#xD;&#xA;  { Date: 1602630000000, Close: 3.99},&#xD;&#xA;  { Date: 1603407600000, Close: 4.29},&#xD;&#xA;  { Date: 1604098800000, Close: 5.99},&#xD;&#xA;  { Date: 1604617200000, Close: 6.99},&#xD;&#xA;  { Date: 1605049200000, Close: 7.99},&#xD;&#xA;  { Date: 1605740400000, Close: 8.99},&#xD;&#xA;  { Date: 1606518000000, Close: 9.99},&#xD;&#xA;  { Date: 1607036400000, Close: 10.99},&#xD;&#xA;  { Date: 1608591600000, Close: 9.99},&#xD;&#xA;  { Date: 1609542000000, Close: 8.79},&#xD;&#xA;  { Date: 1609801200000, Close: 7.99},&#xD;&#xA;  { Date: 1612134000000, Close: 7.39},&#xD;&#xA;  { Date: 1612220400000, Close: 6.49},&#xD;&#xA;  { Date: 1613170800000, Close: 5.99},&#xD;&#xA;  { Date: 1614121200000, Close: 4.99},&#xD;&#xA;  { Date: 1615244400000, Close: 5.49},&#xD;&#xA;  { Date: 1616022000000, Close: 4.99},&#xD;&#xA;  { Date: 1619737200000, Close: 3.99},&#xD;&#xA;  { Date: 1620428400000, Close: 3.49},&#xD;&#xA;  { Date: 1620946800000, Close: 3.89},&#xD;&#xA;  { Date: 1622761200000, Close: 3.49},&#xD;&#xA;  { Date: 1624402800000, Close: 2.89},&#xD;&#xA;  { Date: 1625266800000, Close: 3.29},&#xD;&#xA;  { Date: 1625785200000, Close: 3.39},&#xD;&#xA;  { Date: 1627426800000, Close: 3.99},&#xD;&#xA;  { Date: 1627945200000, Close: 3.39},&#xD;&#xA;  { Date: 1628895600000, Close: 3.49},&#xD;&#xA;  { Date: 1631574000000, Close: 3.99},&#xD;&#xA;  { Date: 1632438000000, Close: 4.19},&#xD;&#xA;  { Date: 1632783600000, Close: 3.59},&#xD;&#xA;  { Date: 1634943600000, Close: 4.99},&#xD;&#xA;  { Date: 1635462000000, Close: 5.99},&#xD;&#xA;  { Date: 1637622000000, Close: 6.99},&#xD;&#xA;  { Date: 1639782000000, Close: 6.39},&#xD;&#xA;  { Date: 1640818800000, Close: 5.79},&#xD;&#xA;  { Date: 1642806000000, Close: 5.99},&#xD;&#xA;  { Date: 1646866800000, Close: 4.99},&#xD;&#xA;  { Date: 1648335600000, Close: 4.39},&#xD;&#xA;  { Date: 1649286000000, Close: 3.79},&#xD;&#xA;  { Date: 1650927600000, Close: 3.19},&#xD;&#xA;  { Date: 1654815600000, Close: 3.39},&#xD;&#xA;  { Date: 1655852400000, Close: 3.59},&#xD;&#xA;  { Date: 1656716400000, Close: 3.49},&#xD;&#xA;  { Date: 1661814000000, Close: 6.99},&#xD;&#xA;  { Date: 1666220400000, Close: 6.39},&#xD;&#xA;  { Date: 1667170800000, Close: 5.79},&#xD;&#xA;  { Date: 1668207600000, Close: 5.19},&#xD;&#xA;  { Date: 1669935600000, Close: 4.59},&#xD;&#xA;  { Date: 1670540400000, Close: 3.99},&#xD;&#xA;  { Date: 1671490800000, Close: 3.39},&#xD;&#xA;  { Date: 1671577200000, Close: 2.99},&#xD;&#xA;  { Date: 1672441200000, Close: 2.89},&#xD;&#xA;  { Date: 1672786800000, Close: 2.79},&#xD;&#xA;  { Date: 1673391600000, Close: 2.69},&#xD;&#xA;  { Date: 1673737200000, Close: 2.59},&#xD;&#xA;  { Date: 1674169200000, Close: 2.49},&#xD;&#xA;  { Date: 1679353200000, Close: 2.79},&#xD;&#xA;  { Date: 1681340400000, Close: 3.99},&#xD;&#xA;  { Date: 1689894000000, Close: 4.19},&#xD;&#xA;  { Date: 1691190000000, Close: 4.49},&#xD;&#xA;  { Date: 1692140400000, Close: 3.99},&#xD;&#xA;  { Date: 1692918000000, Close: 3.49},&#xD;&#xA;  { Date: 1695682800000, Close: 3.99},&#xD;&#xA;  { Date: 1715209200000, Close: 4.49},&#xD;&#xA;  { Date: 1726786800000, Close: 3.89},&#xD;&#xA;  { Date: 1726786800000, Close: 3.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607036400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1580338800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>026/064 - Scyther</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/026---scyther/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/026---scyther/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149442.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 19.49 on 11-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.89 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 4.89},&#xD;&#xA;  { Date: 1579129200000, Close: 5.49},&#xD;&#xA;  { Date: 1580166000000, Close: 4.99},&#xD;&#xA;  { Date: 1581462000000, Close: 5.09},&#xD;&#xA;  { Date: 1584140400000, Close: 5.49},&#xD;&#xA;  { Date: 1584486000000, Close: 4.99},&#xD;&#xA;  { Date: 1586818800000, Close: 5.99},&#xD;&#xA;  { Date: 1588633200000, Close: 6.99},&#xD;&#xA;  { Date: 1588892400000, Close: 7.49},&#xD;&#xA;  { Date: 1589929200000, Close: 7.99},&#xD;&#xA;  { Date: 1591138800000, Close: 7.49},&#xD;&#xA;  { Date: 1591830000000, Close: 7.99},&#xD;&#xA;  { Date: 1592866800000, Close: 8.49},&#xD;&#xA;  { Date: 1593471600000, Close: 9.99},&#xD;&#xA;  { Date: 1594767600000, Close: 10.99},&#xD;&#xA;  { Date: 1595890800000, Close: 11.99},&#xD;&#xA;  { Date: 1596668400000, Close: 12.99},&#xD;&#xA;  { Date: 1597878000000, Close: 13.99},&#xD;&#xA;  { Date: 1598569200000, Close: 12.99},&#xD;&#xA;  { Date: 1600815600000, Close: 11.99},&#xD;&#xA;  { Date: 1602630000000, Close: 12.49},&#xD;&#xA;  { Date: 1605049200000, Close: 16.99},&#xD;&#xA;  { Date: 1605826800000, Close: 15.99},&#xD;&#xA;  { Date: 1607122800000, Close: 16.99},&#xD;&#xA;  { Date: 1609974000000, Close: 17.99},&#xD;&#xA;  { Date: 1612393200000, Close: 18.99},&#xD;&#xA;  { Date: 1615417200000, Close: 19.49},&#xD;&#xA;  { Date: 1617058800000, Close: 18.99},&#xD;&#xA;  { Date: 1618959600000, Close: 17.99},&#xD;&#xA;  { Date: 1620169200000, Close: 16.49},&#xD;&#xA;  { Date: 1620860400000, Close: 15.99},&#xD;&#xA;  { Date: 1622156400000, Close: 14.49},&#xD;&#xA;  { Date: 1622847600000, Close: 13.99},&#xD;&#xA;  { Date: 1624057200000, Close: 12.99},&#xD;&#xA;  { Date: 1624662000000, Close: 13.49},&#xD;&#xA;  { Date: 1625266800000, Close: 12.99},&#xD;&#xA;  { Date: 1628377200000, Close: 11.49},&#xD;&#xA;  { Date: 1628895600000, Close: 10.99},&#xD;&#xA;  { Date: 1630191600000, Close: 9.79},&#xD;&#xA;  { Date: 1631574000000, Close: 10.49},&#xD;&#xA;  { Date: 1632438000000, Close: 11.99},&#xD;&#xA;  { Date: 1633993200000, Close: 12.99},&#xD;&#xA;  { Date: 1634943600000, Close: 14.99},&#xD;&#xA;  { Date: 1635462000000, Close: 15.99},&#xD;&#xA;  { Date: 1642028400000, Close: 16.99},&#xD;&#xA;  { Date: 1642719600000, Close: 15.49},&#xD;&#xA;  { Date: 1644620400000, Close: 13.99},&#xD;&#xA;  { Date: 1647471600000, Close: 13.49},&#xD;&#xA;  { Date: 1648767600000, Close: 11.99},&#xD;&#xA;  { Date: 1661900400000, Close: 10.99},&#xD;&#xA;  { Date: 1675983600000, Close: 13.99},&#xD;&#xA;  { Date: 1685746800000, Close: 14.99},&#xD;&#xA;  { Date: 1689894000000, Close: 15.99},&#xD;&#xA;  { Date: 1690930800000, Close: 14.99},&#xD;&#xA;  { Date: 1694991600000, Close: 13.49},&#xD;&#xA;  { Date: 1698966000000, Close: 13.99},&#xD;&#xA;  { Date: 1703804400000, Close: 14.99},&#xD;&#xA;  { Date: 1726786800000, Close: 15.99},&#xD;&#xA;  { Date: 1726786800000, Close: 15.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615417200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>027/064 - Snorlax</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/027---snorlax/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/027---snorlax/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149465.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 12.99 on 18-06-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.29 on 01-04-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 3.69},&#xD;&#xA;  { Date: 1581462000000, Close: 3.49},&#xD;&#xA;  { Date: 1583535600000, Close: 2.89},&#xD;&#xA;  { Date: 1584486000000, Close: 2.49},&#xD;&#xA;  { Date: 1585695600000, Close: 2.29},&#xD;&#xA;  { Date: 1587164400000, Close: 2.39},&#xD;&#xA;  { Date: 1588028400000, Close: 2.49},&#xD;&#xA;  { Date: 1590620400000, Close: 2.69},&#xD;&#xA;  { Date: 1591398000000, Close: 2.79},&#xD;&#xA;  { Date: 1593558000000, Close: 3.49},&#xD;&#xA;  { Date: 1593644400000, Close: 3.99},&#xD;&#xA;  { Date: 1596150000000, Close: 4.49},&#xD;&#xA;  { Date: 1596668400000, Close: 4.89},&#xD;&#xA;  { Date: 1597705200000, Close: 4.99},&#xD;&#xA;  { Date: 1600124400000, Close: 5.99},&#xD;&#xA;  { Date: 1602025200000, Close: 6.49},&#xD;&#xA;  { Date: 1603148400000, Close: 6.99},&#xD;&#xA;  { Date: 1603321200000, Close: 7.49},&#xD;&#xA;  { Date: 1604098800000, Close: 7.99},&#xD;&#xA;  { Date: 1606518000000, Close: 9.99},&#xD;&#xA;  { Date: 1608159600000, Close: 8.79},&#xD;&#xA;  { Date: 1609887600000, Close: 8.99},&#xD;&#xA;  { Date: 1611788400000, Close: 8.49},&#xD;&#xA;  { Date: 1612393200000, Close: 8.69},&#xD;&#xA;  { Date: 1612998000000, Close: 8.49},&#xD;&#xA;  { Date: 1613775600000, Close: 8.59},&#xD;&#xA;  { Date: 1614380400000, Close: 7.99},&#xD;&#xA;  { Date: 1614898800000, Close: 8.49},&#xD;&#xA;  { Date: 1615503600000, Close: 8.59},&#xD;&#xA;  { Date: 1620255600000, Close: 7.99},&#xD;&#xA;  { Date: 1620342000000, Close: 6.99},&#xD;&#xA;  { Date: 1620946800000, Close: 7.99},&#xD;&#xA;  { Date: 1621724400000, Close: 7.39},&#xD;&#xA;  { Date: 1621897200000, Close: 6.99},&#xD;&#xA;  { Date: 1622674800000, Close: 6.49},&#xD;&#xA;  { Date: 1623366000000, Close: 6.39},&#xD;&#xA;  { Date: 1623970800000, Close: 6.45},&#xD;&#xA;  { Date: 1624057200000, Close: 5.99},&#xD;&#xA;  { Date: 1624489200000, Close: 5.49},&#xD;&#xA;  { Date: 1625266800000, Close: 5.99},&#xD;&#xA;  { Date: 1625785200000, Close: 6.39},&#xD;&#xA;  { Date: 1627426800000, Close: 6.99},&#xD;&#xA;  { Date: 1631919600000, Close: 7.49},&#xD;&#xA;  { Date: 1634943600000, Close: 7.99},&#xD;&#xA;  { Date: 1639695600000, Close: 8.39},&#xD;&#xA;  { Date: 1645052400000, Close: 8.49},&#xD;&#xA;  { Date: 1646866800000, Close: 7.99},&#xD;&#xA;  { Date: 1653001200000, Close: 8.99},&#xD;&#xA;  { Date: 1656716400000, Close: 8.39},&#xD;&#xA;  { Date: 1657753200000, Close: 7.79},&#xD;&#xA;  { Date: 1658444400000, Close: 6.99},&#xD;&#xA;  { Date: 1666738800000, Close: 7.99},&#xD;&#xA;  { Date: 1671836400000, Close: 8.99},&#xD;&#xA;  { Date: 1678230000000, Close: 9.99},&#xD;&#xA;  { Date: 1679353200000, Close: 8.79},&#xD;&#xA;  { Date: 1681254000000, Close: 8.99},&#xD;&#xA;  { Date: 1695682800000, Close: 10.49},&#xD;&#xA;  { Date: 1701385200000, Close: 10.99},&#xD;&#xA;  { Date: 1709247600000, Close: 11.99},&#xD;&#xA;  { Date: 1718665200000, Close: 12.99},&#xD;&#xA;  { Date: 1718665200000, Close: 12.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1718665200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585695600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>028/064 - Vaporeon</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/028---vaporeon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/028---vaporeon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149508.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 26-03-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 3.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 3.99},&#xD;&#xA;  { Date: 1583967600000, Close: 3.79},&#xD;&#xA;  { Date: 1584486000000, Close: 3.49},&#xD;&#xA;  { Date: 1586818800000, Close: 3.99},&#xD;&#xA;  { Date: 1588633200000, Close: 4.99},&#xD;&#xA;  { Date: 1588892400000, Close: 5.49},&#xD;&#xA;  { Date: 1590706800000, Close: 4.99},&#xD;&#xA;  { Date: 1591830000000, Close: 5.09},&#xD;&#xA;  { Date: 1594249200000, Close: 4.99},&#xD;&#xA;  { Date: 1595890800000, Close: 5.09},&#xD;&#xA;  { Date: 1597100400000, Close: 4.99},&#xD;&#xA;  { Date: 1598310000000, Close: 4.49},&#xD;&#xA;  { Date: 1598569200000, Close: 4.89},&#xD;&#xA;  { Date: 1599087600000, Close: 4.99},&#xD;&#xA;  { Date: 1601334000000, Close: 5.09},&#xD;&#xA;  { Date: 1602543600000, Close: 5.39},&#xD;&#xA;  { Date: 1603321200000, Close: 5.99},&#xD;&#xA;  { Date: 1604098800000, Close: 6.99},&#xD;&#xA;  { Date: 1604617200000, Close: 7.99},&#xD;&#xA;  { Date: 1605135600000, Close: 8.99},&#xD;&#xA;  { Date: 1605913200000, Close: 9.49},&#xD;&#xA;  { Date: 1606518000000, Close: 9.99},&#xD;&#xA;  { Date: 1611702000000, Close: 8.79},&#xD;&#xA;  { Date: 1612220400000, Close: 8.49},&#xD;&#xA;  { Date: 1612825200000, Close: 8.59},&#xD;&#xA;  { Date: 1614812400000, Close: 8.49},&#xD;&#xA;  { Date: 1615417200000, Close: 7.99},&#xD;&#xA;  { Date: 1619046000000, Close: 7.49},&#xD;&#xA;  { Date: 1620082800000, Close: 6.79},&#xD;&#xA;  { Date: 1621465200000, Close: 5.99},&#xD;&#xA;  { Date: 1623106800000, Close: 6.69},&#xD;&#xA;  { Date: 1624489200000, Close: 6.49},&#xD;&#xA;  { Date: 1625439600000, Close: 5.79},&#xD;&#xA;  { Date: 1625871600000, Close: 5.49},&#xD;&#xA;  { Date: 1628118000000, Close: 5.79},&#xD;&#xA;  { Date: 1630105200000, Close: 6.99},&#xD;&#xA;  { Date: 1631142000000, Close: 7.39},&#xD;&#xA;  { Date: 1633129200000, Close: 6.79},&#xD;&#xA;  { Date: 1635980400000, Close: 7.99},&#xD;&#xA;  { Date: 1639090800000, Close: 8.49},&#xD;&#xA;  { Date: 1642460400000, Close: 7.99},&#xD;&#xA;  { Date: 1642719600000, Close: 6.99},&#xD;&#xA;  { Date: 1643756400000, Close: 6.39},&#xD;&#xA;  { Date: 1644793200000, Close: 5.79},&#xD;&#xA;  { Date: 1646866800000, Close: 7.09},&#xD;&#xA;  { Date: 1647990000000, Close: 7.49},&#xD;&#xA;  { Date: 1651705200000, Close: 8.49},&#xD;&#xA;  { Date: 1655420400000, Close: 8.99},&#xD;&#xA;  { Date: 1656716400000, Close: 7.99},&#xD;&#xA;  { Date: 1657926000000, Close: 7.49},&#xD;&#xA;  { Date: 1661900400000, Close: 8.99},&#xD;&#xA;  { Date: 1681426800000, Close: 9.99},&#xD;&#xA;  { Date: 1691190000000, Close: 12.99},&#xD;&#xA;  { Date: 1691794800000, Close: 11.99},&#xD;&#xA;  { Date: 1698966000000, Close: 12.99},&#xD;&#xA;  { Date: 1711407600000, Close: 14.99},&#xD;&#xA;  { Date: 1711407600000, Close: 14.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1711407600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>029/064 - Venomoth</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/029---venomoth/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/029---venomoth/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149510.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 5.49 on 28-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 0.89},&#xD;&#xA;  { Date: 1588892400000, Close: 1.49},&#xD;&#xA;  { Date: 1590620400000, Close: 1.99},&#xD;&#xA;  { Date: 1592348400000, Close: 2.29},&#xD;&#xA;  { Date: 1592953200000, Close: 2.49},&#xD;&#xA;  { Date: 1593385200000, Close: 2.79},&#xD;&#xA;  { Date: 1595890800000, Close: 2.89},&#xD;&#xA;  { Date: 1596927600000, Close: 2.59},&#xD;&#xA;  { Date: 1597359600000, Close: 1.99},&#xD;&#xA;  { Date: 1597878000000, Close: 2.29},&#xD;&#xA;  { Date: 1598569200000, Close: 2.49},&#xD;&#xA;  { Date: 1599174000000, Close: 2.99},&#xD;&#xA;  { Date: 1599606000000, Close: 3.49},&#xD;&#xA;  { Date: 1601593200000, Close: 3.89},&#xD;&#xA;  { Date: 1603321200000, Close: 3.99},&#xD;&#xA;  { Date: 1603407600000, Close: 4.09},&#xD;&#xA;  { Date: 1604098800000, Close: 4.29},&#xD;&#xA;  { Date: 1605654000000, Close: 4.49},&#xD;&#xA;  { Date: 1606518000000, Close: 5.49},&#xD;&#xA;  { Date: 1607468400000, Close: 4.49},&#xD;&#xA;  { Date: 1608591600000, Close: 3.99},&#xD;&#xA;  { Date: 1609282800000, Close: 4.29},&#xD;&#xA;  { Date: 1609887600000, Close: 4.49},&#xD;&#xA;  { Date: 1611010800000, Close: 5.49},&#xD;&#xA;  { Date: 1612998000000, Close: 4.99},&#xD;&#xA;  { Date: 1613948400000, Close: 4.39},&#xD;&#xA;  { Date: 1617145200000, Close: 3.99},&#xD;&#xA;  { Date: 1617750000000, Close: 4.29},&#xD;&#xA;  { Date: 1619046000000, Close: 4.39},&#xD;&#xA;  { Date: 1620082800000, Close: 3.99},&#xD;&#xA;  { Date: 1621033200000, Close: 3.49},&#xD;&#xA;  { Date: 1623798000000, Close: 2.89},&#xD;&#xA;  { Date: 1624316400000, Close: 2.99},&#xD;&#xA;  { Date: 1624921200000, Close: 3.29},&#xD;&#xA;  { Date: 1626303600000, Close: 3.39},&#xD;&#xA;  { Date: 1626994800000, Close: 3.49},&#xD;&#xA;  { Date: 1631228400000, Close: 3.99},&#xD;&#xA;  { Date: 1631574000000, Close: 4.19},&#xD;&#xA;  { Date: 1632524400000, Close: 4.99},&#xD;&#xA;  { Date: 1632956400000, Close: 4.49},&#xD;&#xA;  { Date: 1634943600000, Close: 3.89},&#xD;&#xA;  { Date: 1635462000000, Close: 3.99},&#xD;&#xA;  { Date: 1639782000000, Close: 3.49},&#xD;&#xA;  { Date: 1646866800000, Close: 2.99},&#xD;&#xA;  { Date: 1647644400000, Close: 2.59},&#xD;&#xA;  { Date: 1648681200000, Close: 2.69},&#xD;&#xA;  { Date: 1649718000000, Close: 2.99},&#xD;&#xA;  { Date: 1652742000000, Close: 3.29},&#xD;&#xA;  { Date: 1655334000000, Close: 3.49},&#xD;&#xA;  { Date: 1657494000000, Close: 2.89},&#xD;&#xA;  { Date: 1658444400000, Close: 2.79},&#xD;&#xA;  { Date: 1658962800000, Close: 2.99},&#xD;&#xA;  { Date: 1661900400000, Close: 3.49},&#xD;&#xA;  { Date: 1671836400000, Close: 3.29},&#xD;&#xA;  { Date: 1676674800000, Close: 3.49},&#xD;&#xA;  { Date: 1680044400000, Close: 2.89},&#xD;&#xA;  { Date: 1681513200000, Close: 3.99},&#xD;&#xA;  { Date: 1681513200000, Close: 3.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606518000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>030/064 - Victreebel</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/030---victreebel/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/030---victreebel/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149517.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.99 on 09-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.79 on 01-04-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 2.19},&#xD;&#xA;  { Date: 1579215600000, Close: 2.99},&#xD;&#xA;  { Date: 1581030000000, Close: 2.49},&#xD;&#xA;  { Date: 1581462000000, Close: 2.39},&#xD;&#xA;  { Date: 1583967600000, Close: 2.09},&#xD;&#xA;  { Date: 1584486000000, Close: 2.29},&#xD;&#xA;  { Date: 1585004400000, Close: 1.99},&#xD;&#xA;  { Date: 1585695600000, Close: 1.79},&#xD;&#xA;  { Date: 1586646000000, Close: 1.99},&#xD;&#xA;  { Date: 1587164400000, Close: 2.09},&#xD;&#xA;  { Date: 1588892400000, Close: 3.49},&#xD;&#xA;  { Date: 1590015600000, Close: 3.89},&#xD;&#xA;  { Date: 1590706800000, Close: 3.49},&#xD;&#xA;  { Date: 1591225200000, Close: 3.59},&#xD;&#xA;  { Date: 1591830000000, Close: 3.49},&#xD;&#xA;  { Date: 1594162800000, Close: 2.89},&#xD;&#xA;  { Date: 1594767600000, Close: 3.19},&#xD;&#xA;  { Date: 1595372400000, Close: 3.49},&#xD;&#xA;  { Date: 1596495600000, Close: 3.89},&#xD;&#xA;  { Date: 1599087600000, Close: 3.99},&#xD;&#xA;  { Date: 1601506800000, Close: 4.09},&#xD;&#xA;  { Date: 1603148400000, Close: 4.19},&#xD;&#xA;  { Date: 1603321200000, Close: 4.99},&#xD;&#xA;  { Date: 1604098800000, Close: 5.99},&#xD;&#xA;  { Date: 1604617200000, Close: 6.99},&#xD;&#xA;  { Date: 1605740400000, Close: 7.49},&#xD;&#xA;  { Date: 1606518000000, Close: 7.99},&#xD;&#xA;  { Date: 1607036400000, Close: 8.99},&#xD;&#xA;  { Date: 1607468400000, Close: 9.99},&#xD;&#xA;  { Date: 1610578800000, Close: 8.99},&#xD;&#xA;  { Date: 1614207600000, Close: 7.99},&#xD;&#xA;  { Date: 1614898800000, Close: 8.49},&#xD;&#xA;  { Date: 1615935600000, Close: 7.99},&#xD;&#xA;  { Date: 1620946800000, Close: 6.99},&#xD;&#xA;  { Date: 1625094000000, Close: 6.59},&#xD;&#xA;  { Date: 1625266800000, Close: 4.99},&#xD;&#xA;  { Date: 1628809200000, Close: 4.39},&#xD;&#xA;  { Date: 1632438000000, Close: 4.49},&#xD;&#xA;  { Date: 1635030000000, Close: 3.89},&#xD;&#xA;  { Date: 1635548400000, Close: 3.99},&#xD;&#xA;  { Date: 1649977200000, Close: 4.19},&#xD;&#xA;  { Date: 1652050800000, Close: 3.59},&#xD;&#xA;  { Date: 1652223600000, Close: 3.29},&#xD;&#xA;  { Date: 1653174000000, Close: 3.19},&#xD;&#xA;  { Date: 1654038000000, Close: 3.09},&#xD;&#xA;  { Date: 1654383600000, Close: 2.89},&#xD;&#xA;  { Date: 1654729200000, Close: 2.69},&#xD;&#xA;  { Date: 1655506800000, Close: 3.49},&#xD;&#xA;  { Date: 1657926000000, Close: 3.79},&#xD;&#xA;  { Date: 1669762800000, Close: 3.69},&#xD;&#xA;  { Date: 1670022000000, Close: 3.79},&#xD;&#xA;  { Date: 1675292400000, Close: 3.89},&#xD;&#xA;  { Date: 1678748400000, Close: 3.79},&#xD;&#xA;  { Date: 1680044400000, Close: 3.69},&#xD;&#xA;  { Date: 1680649200000, Close: 3.99},&#xD;&#xA;  { Date: 1682204400000, Close: 4.99},&#xD;&#xA;  { Date: 1697670000000, Close: 5.99},&#xD;&#xA;  { Date: 1699570800000, Close: 6.99},&#xD;&#xA;  { Date: 1709334000000, Close: 6.49},&#xD;&#xA;  { Date: 1710198000000, Close: 6.99},&#xD;&#xA;  { Date: 1711753200000, Close: 7.99},&#xD;&#xA;  { Date: 1711753200000, Close: 7.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607468400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1585695600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>031/064 - Vileplume</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/031---vileplume/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/031---vileplume/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149519.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.99 on 09-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.49 on 20-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.79},&#xD;&#xA;  { Date: 1579474800000, Close: 1.49},&#xD;&#xA;  { Date: 1581030000000, Close: 1.59},&#xD;&#xA;  { Date: 1581462000000, Close: 1.79},&#xD;&#xA;  { Date: 1583535600000, Close: 1.89},&#xD;&#xA;  { Date: 1583967600000, Close: 1.79},&#xD;&#xA;  { Date: 1585004400000, Close: 1.49},&#xD;&#xA;  { Date: 1586646000000, Close: 1.79},&#xD;&#xA;  { Date: 1588892400000, Close: 2.99},&#xD;&#xA;  { Date: 1590015600000, Close: 3.39},&#xD;&#xA;  { Date: 1590534000000, Close: 3.45},&#xD;&#xA;  { Date: 1592434800000, Close: 2.99},&#xD;&#xA;  { Date: 1594508400000, Close: 2.39},&#xD;&#xA;  { Date: 1595890800000, Close: 2.09},&#xD;&#xA;  { Date: 1596582000000, Close: 2.39},&#xD;&#xA;  { Date: 1597100400000, Close: 2.29},&#xD;&#xA;  { Date: 1598050800000, Close: 2.49},&#xD;&#xA;  { Date: 1599606000000, Close: 2.99},&#xD;&#xA;  { Date: 1603926000000, Close: 3.99},&#xD;&#xA;  { Date: 1604617200000, Close: 4.49},&#xD;&#xA;  { Date: 1605740400000, Close: 4.99},&#xD;&#xA;  { Date: 1606518000000, Close: 5.49},&#xD;&#xA;  { Date: 1608073200000, Close: 5.29},&#xD;&#xA;  { Date: 1608591600000, Close: 4.99},&#xD;&#xA;  { Date: 1610406000000, Close: 5.99},&#xD;&#xA;  { Date: 1611270000000, Close: 6.99},&#xD;&#xA;  { Date: 1611702000000, Close: 7.99},&#xD;&#xA;  { Date: 1612825200000, Close: 8.99},&#xD;&#xA;  { Date: 1617922800000, Close: 9.99},&#xD;&#xA;  { Date: 1620169200000, Close: 8.79},&#xD;&#xA;  { Date: 1620342000000, Close: 7.99},&#xD;&#xA;  { Date: 1621292400000, Close: 7.49},&#xD;&#xA;  { Date: 1624921200000, Close: 6.99},&#xD;&#xA;  { Date: 1625871600000, Close: 6.49},&#xD;&#xA;  { Date: 1626390000000, Close: 5.99},&#xD;&#xA;  { Date: 1628290800000, Close: 5.39},&#xD;&#xA;  { Date: 1628895600000, Close: 4.99},&#xD;&#xA;  { Date: 1629846000000, Close: 4.39},&#xD;&#xA;  { Date: 1629932400000, Close: 4.29},&#xD;&#xA;  { Date: 1631142000000, Close: 3.99},&#xD;&#xA;  { Date: 1632524400000, Close: 4.99},&#xD;&#xA;  { Date: 1634943600000, Close: 5.39},&#xD;&#xA;  { Date: 1635375600000, Close: 5.99},&#xD;&#xA;  { Date: 1639436400000, Close: 6.39},&#xD;&#xA;  { Date: 1642633200000, Close: 6.79},&#xD;&#xA;  { Date: 1643238000000, Close: 6.19},&#xD;&#xA;  { Date: 1644706800000, Close: 5.59},&#xD;&#xA;  { Date: 1645225200000, Close: 5.49},&#xD;&#xA;  { Date: 1646175600000, Close: 4.99},&#xD;&#xA;  { Date: 1646866800000, Close: 3.99},&#xD;&#xA;  { Date: 1647817200000, Close: 3.39},&#xD;&#xA;  { Date: 1650582000000, Close: 3.19},&#xD;&#xA;  { Date: 1650668400000, Close: 3.29},&#xD;&#xA;  { Date: 1651705200000, Close: 3.39},&#xD;&#xA;  { Date: 1652396400000, Close: 3.29},&#xD;&#xA;  { Date: 1653346800000, Close: 3.19},&#xD;&#xA;  { Date: 1655852400000, Close: 3.99},&#xD;&#xA;  { Date: 1656543600000, Close: 3.39},&#xD;&#xA;  { Date: 1657926000000, Close: 3.29},&#xD;&#xA;  { Date: 1658444400000, Close: 3.49},&#xD;&#xA;  { Date: 1661900400000, Close: 4.99},&#xD;&#xA;  { Date: 1666738800000, Close: 5.39},&#xD;&#xA;  { Date: 1676588400000, Close: 5.79},&#xD;&#xA;  { Date: 1680217200000, Close: 5.99},&#xD;&#xA;  { Date: 1682204400000, Close: 6.99},&#xD;&#xA;  { Date: 1715209200000, Close: 7.49},&#xD;&#xA;  { Date: 1726786800000, Close: 6.79},&#xD;&#xA;  { Date: 1726786800000, Close: 6.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1617922800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579474800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>032/064 - Wigglytuff</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/032---wigglytuff/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/032---wigglytuff/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149536.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.99 on 01-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.09 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.09},&#xD;&#xA;  { Date: 1582758000000, Close: 1.19},&#xD;&#xA;  { Date: 1583967600000, Close: 1.49},&#xD;&#xA;  { Date: 1584658800000, Close: 1.79},&#xD;&#xA;  { Date: 1585695600000, Close: 1.49},&#xD;&#xA;  { Date: 1586818800000, Close: 1.79},&#xD;&#xA;  { Date: 1591225200000, Close: 4.49},&#xD;&#xA;  { Date: 1591398000000, Close: 3.99},&#xD;&#xA;  { Date: 1593471600000, Close: 4.09},&#xD;&#xA;  { Date: 1594249200000, Close: 4.49},&#xD;&#xA;  { Date: 1595372400000, Close: 4.45},&#xD;&#xA;  { Date: 1596495600000, Close: 4.69},&#xD;&#xA;  { Date: 1597100400000, Close: 4.49},&#xD;&#xA;  { Date: 1597705200000, Close: 4.99},&#xD;&#xA;  { Date: 1598482800000, Close: 5.29},&#xD;&#xA;  { Date: 1602025200000, Close: 5.49},&#xD;&#xA;  { Date: 1603148400000, Close: 5.59},&#xD;&#xA;  { Date: 1603321200000, Close: 5.69},&#xD;&#xA;  { Date: 1605135600000, Close: 6.99},&#xD;&#xA;  { Date: 1606345200000, Close: 7.99},&#xD;&#xA;  { Date: 1609282800000, Close: 8.29},&#xD;&#xA;  { Date: 1611961200000, Close: 7.99},&#xD;&#xA;  { Date: 1614380400000, Close: 8.29},&#xD;&#xA;  { Date: 1614812400000, Close: 8.99},&#xD;&#xA;  { Date: 1617231600000, Close: 9.99},&#xD;&#xA;  { Date: 1620428400000, Close: 8.99},&#xD;&#xA;  { Date: 1624057200000, Close: 8.89},&#xD;&#xA;  { Date: 1625698800000, Close: 7.99},&#xD;&#xA;  { Date: 1626908400000, Close: 7.49},&#xD;&#xA;  { Date: 1629500400000, Close: 6.99},&#xD;&#xA;  { Date: 1630710000000, Close: 6.49},&#xD;&#xA;  { Date: 1633474800000, Close: 5.99},&#xD;&#xA;  { Date: 1637362800000, Close: 5.49},&#xD;&#xA;  { Date: 1647471600000, Close: 4.99},&#xD;&#xA;  { Date: 1647903600000, Close: 4.79},&#xD;&#xA;  { Date: 1649890800000, Close: 4.89},&#xD;&#xA;  { Date: 1650236400000, Close: 4.79},&#xD;&#xA;  { Date: 1650582000000, Close: 4.89},&#xD;&#xA;  { Date: 1651791600000, Close: 4.79},&#xD;&#xA;  { Date: 1652569200000, Close: 4.69},&#xD;&#xA;  { Date: 1653001200000, Close: 4.49},&#xD;&#xA;  { Date: 1654038000000, Close: 4.39},&#xD;&#xA;  { Date: 1654383600000, Close: 4.19},&#xD;&#xA;  { Date: 1654729200000, Close: 4.09},&#xD;&#xA;  { Date: 1655852400000, Close: 3.99},&#xD;&#xA;  { Date: 1656543600000, Close: 4.19},&#xD;&#xA;  { Date: 1656802800000, Close: 4.09},&#xD;&#xA;  { Date: 1657926000000, Close: 4.29},&#xD;&#xA;  { Date: 1659135600000, Close: 4.49},&#xD;&#xA;  { Date: 1661554800000, Close: 4.99},&#xD;&#xA;  { Date: 1668207600000, Close: 4.29},&#xD;&#xA;  { Date: 1671231600000, Close: 4.69},&#xD;&#xA;  { Date: 1671836400000, Close: 4.49},&#xD;&#xA;  { Date: 1672959600000, Close: 4.09},&#xD;&#xA;  { Date: 1673737200000, Close: 4.29},&#xD;&#xA;  { Date: 1677625200000, Close: 4.99},&#xD;&#xA;  { Date: 1679007600000, Close: 4.79},&#xD;&#xA;  { Date: 1682204400000, Close: 4.59},&#xD;&#xA;  { Date: 1682290800000, Close: 4.69},&#xD;&#xA;  { Date: 1682636400000, Close: 4.59},&#xD;&#xA;  { Date: 1683068400000, Close: 4.39},&#xD;&#xA;  { Date: 1684450800000, Close: 4.49},&#xD;&#xA;  { Date: 1694818800000, Close: 3.99},&#xD;&#xA;  { Date: 1695337200000, Close: 4.09},&#xD;&#xA;  { Date: 1717714800000, Close: 5.49},&#xD;&#xA;  { Date: 1718751600000, Close: 5.79},&#xD;&#xA;  { Date: 1722898800000, Close: 5.49},&#xD;&#xA;  { Date: 1726873200000, Close: 4.89},&#xD;&#xA;  { Date: 1727046000000, Close: 4.59},&#xD;&#xA;  { Date: 1727046000000, Close: 4.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1617231600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>033/064 - Butterfree</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/033---butterfree/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/033---butterfree/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148906.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.59 on 04-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 19-12-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 0.89},&#xD;&#xA;  { Date: 1604271600000, Close: 1.09},&#xD;&#xA;  { Date: 1605481200000, Close: 1.99},&#xD;&#xA;  { Date: 1606690800000, Close: 2.29},&#xD;&#xA;  { Date: 1607295600000, Close: 2.49},&#xD;&#xA;  { Date: 1609714800000, Close: 2.59},&#xD;&#xA;  { Date: 1613948400000, Close: 2.49},&#xD;&#xA;  { Date: 1618786800000, Close: 2.39},&#xD;&#xA;  { Date: 1620601200000, Close: 1.99},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1623625200000, Close: 1.29},&#xD;&#xA;  { Date: 1624230000000, Close: 1.39},&#xD;&#xA;  { Date: 1624834800000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 0.79},&#xD;&#xA;  { Date: 1671404400000, Close: 0.69},&#xD;&#xA;  { Date: 1674428400000, Close: 0.89},&#xD;&#xA;  { Date: 1682895600000, Close: 0.99},&#xD;&#xA;  { Date: 1691967600000, Close: 0.89},&#xD;&#xA;  { Date: 1713740400000, Close: 0.69},&#xD;&#xA;  { Date: 1727046000000, Close: 0.89},&#xD;&#xA;  { Date: 1727046000000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1609714800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1671404400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>034/064 - Dodrio</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/034---dodrio/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/034---dodrio/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148977.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 06-12-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 06-03-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 0.79},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1603062000000, Close: 0.79},&#xD;&#xA;  { Date: 1605481200000, Close: 1.09},&#xD;&#xA;  { Date: 1618182000000, Close: 0.99},&#xD;&#xA;  { Date: 1621206000000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 0.99},&#xD;&#xA;  { Date: 1627254000000, Close: 0.89},&#xD;&#xA;  { Date: 1638745200000, Close: 1.29},&#xD;&#xA;  { Date: 1639350000000, Close: 0.99},&#xD;&#xA;  { Date: 1641769200000, Close: 0.89},&#xD;&#xA;  { Date: 1647212400000, Close: 0.79},&#xD;&#xA;  { Date: 1670799600000, Close: 0.69},&#xD;&#xA;  { Date: 1671404400000, Close: 0.59},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.59},&#xD;&#xA;  { Date: 1679266800000, Close: 0.69},&#xD;&#xA;  { Date: 1681686000000, Close: 0.79},&#xD;&#xA;  { Date: 1684710000000, Close: 0.69},&#xD;&#xA;  { Date: 1688338800000, Close: 0.79},&#xD;&#xA;  { Date: 1691362800000, Close: 0.89},&#xD;&#xA;  { Date: 1693177200000, Close: 0.79},&#xD;&#xA;  { Date: 1713740400000, Close: 0.69},&#xD;&#xA;  { Date: 1727046000000, Close: 0.89},&#xD;&#xA;  { Date: 1727046000000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1638745200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1678057200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>035/064 - Exeggutor</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/035---exeggutor/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/035---exeggutor/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149039.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 30-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.69},&#xD;&#xA;  { Date: 1603062000000, Close: 0.79},&#xD;&#xA;  { Date: 1606690800000, Close: 2.99},&#xD;&#xA;  { Date: 1612134000000, Close: 2.49},&#xD;&#xA;  { Date: 1612738800000, Close: 2.59},&#xD;&#xA;  { Date: 1613343600000, Close: 2.39},&#xD;&#xA;  { Date: 1613948400000, Close: 2.49},&#xD;&#xA;  { Date: 1617577200000, Close: 1.99},&#xD;&#xA;  { Date: 1620601200000, Close: 1.79},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1622415600000, Close: 1.29},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 0.99},&#xD;&#xA;  { Date: 1633906800000, Close: 0.89},&#xD;&#xA;  { Date: 1639350000000, Close: 0.79},&#xD;&#xA;  { Date: 1648422000000, Close: 0.69},&#xD;&#xA;  { Date: 1667775600000, Close: 0.59},&#xD;&#xA;  { Date: 1673823600000, Close: 0.69},&#xD;&#xA;  { Date: 1691362800000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.59},&#xD;&#xA;  { Date: 1699830000000, Close: 0.79},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606690800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>036/064 - Fearow</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/036---fearow/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/036---fearow/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149043.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 22-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 04-07-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.79},&#xD;&#xA;  { Date: 1610924400000, Close: 0.89},&#xD;&#xA;  { Date: 1612134000000, Close: 0.95},&#xD;&#xA;  { Date: 1616367600000, Close: 0.99},&#xD;&#xA;  { Date: 1626044400000, Close: 0.89},&#xD;&#xA;  { Date: 1627858800000, Close: 0.79},&#xD;&#xA;  { Date: 1632697200000, Close: 0.89},&#xD;&#xA;  { Date: 1648422000000, Close: 0.79},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1713740400000, Close: 0.49},&#xD;&#xA;  { Date: 1713740400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1616367600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1593817200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>037/064 - Gloom</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/037---gloom/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/037---gloom/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149088.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 14-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.99},&#xD;&#xA;  { Date: 1615762800000, Close: 0.89},&#xD;&#xA;  { Date: 1624230000000, Close: 0.79},&#xD;&#xA;  { Date: 1626044400000, Close: 0.69},&#xD;&#xA;  { Date: 1630882800000, Close: 0.79},&#xD;&#xA;  { Date: 1633906800000, Close: 0.99},&#xD;&#xA;  { Date: 1649026800000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1684105200000, Close: 0.39},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1689548400000, Close: 0.59},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1714345200000, Close: 0.39},&#xD;&#xA;  { Date: 1725836400000, Close: 0.49},&#xD;&#xA;  { Date: 1728860400000, Close: 0.39},&#xD;&#xA;  { Date: 1728860400000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607900400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>038/064 - Lickitung</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/038---lickitung/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/038---lickitung/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149199.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 16-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 12-12-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.99},&#xD;&#xA;  { Date: 1600383600000, Close: 0.89},&#xD;&#xA;  { Date: 1605481200000, Close: 1.29},&#xD;&#xA;  { Date: 1615762800000, Close: 1.19},&#xD;&#xA;  { Date: 1617577200000, Close: 0.99},&#xD;&#xA;  { Date: 1646607600000, Close: 1.09},&#xD;&#xA;  { Date: 1654470000000, Close: 0.99},&#xD;&#xA;  { Date: 1669590000000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.59},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1691362800000, Close: 0.59},&#xD;&#xA;  { Date: 1695596400000, Close: 0.69},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.79},&#xD;&#xA;  { Date: 1727046000000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605481200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1670799600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>039/064 - Marowak</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/039---marowak/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/039---marowak/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149250.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 02-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 23-01-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.69},&#xD;&#xA;  { Date: 1604271600000, Close: 2.99},&#xD;&#xA;  { Date: 1613948400000, Close: 2.49},&#xD;&#xA;  { Date: 1615158000000, Close: 2.59},&#xD;&#xA;  { Date: 1616367600000, Close: 2.49},&#xD;&#xA;  { Date: 1618182000000, Close: 2.29},&#xD;&#xA;  { Date: 1619996400000, Close: 1.99},&#xD;&#xA;  { Date: 1621206000000, Close: 1.89},&#xD;&#xA;  { Date: 1623020400000, Close: 1.79},&#xD;&#xA;  { Date: 1623625200000, Close: 1.59},&#xD;&#xA;  { Date: 1624834800000, Close: 1.29},&#xD;&#xA;  { Date: 1625439600000, Close: 1.35},&#xD;&#xA;  { Date: 1627254000000, Close: 1.19},&#xD;&#xA;  { Date: 1629068400000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1641164400000, Close: 0.89},&#xD;&#xA;  { Date: 1667170800000, Close: 0.79},&#xD;&#xA;  { Date: 1668985200000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.59},&#xD;&#xA;  { Date: 1672009200000, Close: 0.69},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1679871600000, Close: 0.69},&#xD;&#xA;  { Date: 1681686000000, Close: 0.79},&#xD;&#xA;  { Date: 1719183600000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.79},&#xD;&#xA;  { Date: 1727046000000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1604271600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1674428400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>040/064 - Nidorina</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/040---nidorina/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/040---nidorina/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149316.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 30-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.99},&#xD;&#xA;  { Date: 1617577200000, Close: 0.89},&#xD;&#xA;  { Date: 1619996400000, Close: 0.79},&#xD;&#xA;  { Date: 1621810800000, Close: 0.69},&#xD;&#xA;  { Date: 1624230000000, Close: 0.59},&#xD;&#xA;  { Date: 1635116400000, Close: 0.69},&#xD;&#xA;  { Date: 1638140400000, Close: 0.79},&#xD;&#xA;  { Date: 1647212400000, Close: 0.69},&#xD;&#xA;  { Date: 1654470000000, Close: 0.59},&#xD;&#xA;  { Date: 1656889200000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.59},&#xD;&#xA;  { Date: 1678057200000, Close: 0.69},&#xD;&#xA;  { Date: 1678662000000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.49},&#xD;&#xA;  { Date: 1687129200000, Close: 0.39},&#xD;&#xA;  { Date: 1690153200000, Close: 0.45},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1691362800000, Close: 0.39},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606690800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>041/064 - Parasect</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/041---parasect/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/041---parasect/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149331.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 18-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 05-12-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1604271600000, Close: 0.69},&#xD;&#xA;  { Date: 1605481200000, Close: 0.99},&#xD;&#xA;  { Date: 1610924400000, Close: 1.09},&#xD;&#xA;  { Date: 1615762800000, Close: 0.99},&#xD;&#xA;  { Date: 1623020400000, Close: 0.89},&#xD;&#xA;  { Date: 1655679600000, Close: 0.79},&#xD;&#xA;  { Date: 1668985200000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.49},&#xD;&#xA;  { Date: 1690153200000, Close: 0.59},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.39},&#xD;&#xA;  { Date: 1702249200000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1713740400000, Close: 0.39},&#xD;&#xA;  { Date: 1718578800000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1610924400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1670194800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>042/064 - Persian</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/042---persian/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/042---persian/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149332.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 23-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1606086000000, Close: 1.29},&#xD;&#xA;  { Date: 1607900400000, Close: 1.19},&#xD;&#xA;  { Date: 1609714800000, Close: 0.89},&#xD;&#xA;  { Date: 1610924400000, Close: 0.99},&#xD;&#xA;  { Date: 1617577200000, Close: 0.89},&#xD;&#xA;  { Date: 1619996400000, Close: 0.79},&#xD;&#xA;  { Date: 1621810800000, Close: 0.69},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1639350000000, Close: 0.89},&#xD;&#xA;  { Date: 1645398000000, Close: 0.99},&#xD;&#xA;  { Date: 1653865200000, Close: 0.89},&#xD;&#xA;  { Date: 1655679600000, Close: 0.79},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.39},&#xD;&#xA;  { Date: 1682895600000, Close: 0.49},&#xD;&#xA;  { Date: 1693177200000, Close: 0.59},&#xD;&#xA;  { Date: 1693782000000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.39},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606086000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>043/064 - Primeape</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/043---primeape/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/043---primeape/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149368.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 21-06-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 11-07-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1606086000000, Close: 0.99},&#xD;&#xA;  { Date: 1624230000000, Close: 2.49},&#xD;&#xA;  { Date: 1625439600000, Close: 2.39},&#xD;&#xA;  { Date: 1628463600000, Close: 1.79},&#xD;&#xA;  { Date: 1632697200000, Close: 1.49},&#xD;&#xA;  { Date: 1633302000000, Close: 1.29},&#xD;&#xA;  { Date: 1635116400000, Close: 1.09},&#xD;&#xA;  { Date: 1638745200000, Close: 0.99},&#xD;&#xA;  { Date: 1640559600000, Close: 0.89},&#xD;&#xA;  { Date: 1645398000000, Close: 0.79},&#xD;&#xA;  { Date: 1648422000000, Close: 0.69},&#xD;&#xA;  { Date: 1653865200000, Close: 0.59},&#xD;&#xA;  { Date: 1657494000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.59},&#xD;&#xA;  { Date: 1675638000000, Close: 0.69},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1624230000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1657494000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>044/064 - Rapidash</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/044---rapidash/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/044---rapidash/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149381.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.09 on 30-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 23-01-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 1.09},&#xD;&#xA;  { Date: 1593385200000, Close: 1.39},&#xD;&#xA;  { Date: 1600383600000, Close: 1.29},&#xD;&#xA;  { Date: 1601247600000, Close: 1.09},&#xD;&#xA;  { Date: 1603062000000, Close: 1.19},&#xD;&#xA;  { Date: 1604271600000, Close: 1.99},&#xD;&#xA;  { Date: 1606690800000, Close: 2.09},&#xD;&#xA;  { Date: 1609110000000, Close: 1.99},&#xD;&#xA;  { Date: 1615158000000, Close: 1.79},&#xD;&#xA;  { Date: 1616972400000, Close: 1.69},&#xD;&#xA;  { Date: 1617577200000, Close: 1.79},&#xD;&#xA;  { Date: 1618182000000, Close: 1.69},&#xD;&#xA;  { Date: 1618786800000, Close: 1.59},&#xD;&#xA;  { Date: 1620601200000, Close: 1.29},&#xD;&#xA;  { Date: 1622415600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 0.99},&#xD;&#xA;  { Date: 1649026800000, Close: 0.89},&#xD;&#xA;  { Date: 1669590000000, Close: 0.79},&#xD;&#xA;  { Date: 1670799600000, Close: 0.69},&#xD;&#xA;  { Date: 1671404400000, Close: 0.59},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.79},&#xD;&#xA;  { Date: 1693177200000, Close: 1.49},&#xD;&#xA;  { Date: 1695596400000, Close: 1.19},&#xD;&#xA;  { Date: 1708297200000, Close: 0.79},&#xD;&#xA;  { Date: 1708297200000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606690800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1674428400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>045/064 - Rhydon</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/045---rhydon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/045---rhydon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149392.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 11-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1604271600000, Close: 0.99},&#xD;&#xA;  { Date: 1605481200000, Close: 1.29},&#xD;&#xA;  { Date: 1610319600000, Close: 1.49},&#xD;&#xA;  { Date: 1610924400000, Close: 1.39},&#xD;&#xA;  { Date: 1611529200000, Close: 1.29},&#xD;&#xA;  { Date: 1613948400000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 0.99},&#xD;&#xA;  { Date: 1626649200000, Close: 0.89},&#xD;&#xA;  { Date: 1646002800000, Close: 1.09},&#xD;&#xA;  { Date: 1666566000000, Close: 0.99},&#xD;&#xA;  { Date: 1668380400000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1610319600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>046/064 - Seaking</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/046---seaking/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/046---seaking/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149446.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 16-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 20-03-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1605481200000, Close: 0.99},&#xD;&#xA;  { Date: 1611529200000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 0.99},&#xD;&#xA;  { Date: 1628463600000, Close: 0.89},&#xD;&#xA;  { Date: 1649026800000, Close: 0.79},&#xD;&#xA;  { Date: 1652655600000, Close: 1.29},&#xD;&#xA;  { Date: 1656284400000, Close: 0.99},&#xD;&#xA;  { Date: 1668380400000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.39},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1713740400000, Close: 0.39},&#xD;&#xA;  { Date: 1719183600000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1652655600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1679266800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>047/064 - Tauros</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/047---tauros/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/047---tauros/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149479.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 21-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 04-07-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.59},&#xD;&#xA;  { Date: 1605481200000, Close: 0.99},&#xD;&#xA;  { Date: 1608505200000, Close: 1.49},&#xD;&#xA;  { Date: 1613948400000, Close: 1.29},&#xD;&#xA;  { Date: 1614553200000, Close: 1.39},&#xD;&#xA;  { Date: 1615158000000, Close: 1.29},&#xD;&#xA;  { Date: 1620601200000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 0.99},&#xD;&#xA;  { Date: 1638745200000, Close: 0.89},&#xD;&#xA;  { Date: 1643583600000, Close: 1.49},&#xD;&#xA;  { Date: 1644793200000, Close: 1.19},&#xD;&#xA;  { Date: 1646002800000, Close: 1.09},&#xD;&#xA;  { Date: 1649631600000, Close: 0.99},&#xD;&#xA;  { Date: 1653865200000, Close: 0.89},&#xD;&#xA;  { Date: 1655679600000, Close: 0.79},&#xD;&#xA;  { Date: 1658098800000, Close: 0.69},&#xD;&#xA;  { Date: 1676847600000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1705878000000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1608505200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1593817200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>048/064 - Weepinbell</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/048---weepinbell/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/048---weepinbell/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149533.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 16-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.99},&#xD;&#xA;  { Date: 1618182000000, Close: 0.89},&#xD;&#xA;  { Date: 1622415600000, Close: 0.79},&#xD;&#xA;  { Date: 1649026800000, Close: 0.69},&#xD;&#xA;  { Date: 1656889200000, Close: 0.59},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1678057200000, Close: 0.69},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1713740400000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605481200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>049/064 - Bellsprout</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/049---bellsprout/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/049---bellsprout/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148839.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.59},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.39},&#xD;&#xA;  { Date: 1623625200000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.39},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.59},&#xD;&#xA;  { Date: 1693782000000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>050/064 - Cubone</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/050---cubone/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/050---cubone/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148932.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 15-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1607295600000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.99},&#xD;&#xA;  { Date: 1617577200000, Close: 0.89},&#xD;&#xA;  { Date: 1624230000000, Close: 0.79},&#xD;&#xA;  { Date: 1626044400000, Close: 0.69},&#xD;&#xA;  { Date: 1636326000000, Close: 0.59},&#xD;&#xA;  { Date: 1650236400000, Close: 0.49},&#xD;&#xA;  { Date: 1656889200000, Close: 0.39},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1690153200000, Close: 0.39},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1705878000000, Close: 0.39},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615762800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>051/064 - Eevee</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/051---eevee/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/051---eevee/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148990.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 30-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 2.49},&#xD;&#xA;  { Date: 1606690800000, Close: 2.99},&#xD;&#xA;  { Date: 1609110000000, Close: 2.89},&#xD;&#xA;  { Date: 1611529200000, Close: 2.49},&#xD;&#xA;  { Date: 1615158000000, Close: 2.29},&#xD;&#xA;  { Date: 1617577200000, Close: 2.19},&#xD;&#xA;  { Date: 1618786800000, Close: 2.29},&#xD;&#xA;  { Date: 1620601200000, Close: 1.79},&#xD;&#xA;  { Date: 1621206000000, Close: 1.69},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1622415600000, Close: 1.29},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1629068400000, Close: 1.29},&#xD;&#xA;  { Date: 1629673200000, Close: 1.79},&#xD;&#xA;  { Date: 1630882800000, Close: 1.49},&#xD;&#xA;  { Date: 1632092400000, Close: 1.29},&#xD;&#xA;  { Date: 1633302000000, Close: 1.19},&#xD;&#xA;  { Date: 1636326000000, Close: 1.09},&#xD;&#xA;  { Date: 1638140400000, Close: 0.99},&#xD;&#xA;  { Date: 1643583600000, Close: 1.99},&#xD;&#xA;  { Date: 1647212400000, Close: 1.69},&#xD;&#xA;  { Date: 1647817200000, Close: 1.49},&#xD;&#xA;  { Date: 1651446000000, Close: 1.19},&#xD;&#xA;  { Date: 1653260400000, Close: 0.89},&#xD;&#xA;  { Date: 1657494000000, Close: 0.79},&#xD;&#xA;  { Date: 1668380400000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.69},&#xD;&#xA;  { Date: 1680476400000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1690153200000, Close: 0.75},&#xD;&#xA;  { Date: 1690758000000, Close: 0.39},&#xD;&#xA;  { Date: 1706482800000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.39},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606690800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>052/064 - Exeggcute</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/052---exeggcute/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/052---exeggcute/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149036.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 18-03-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1618182000000, Close: 0.39},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.39},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1690153200000, Close: 0.45},&#xD;&#xA;  { Date: 1691967600000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.39},&#xD;&#xA;  { Date: 1702249200000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.59},&#xD;&#xA;  { Date: 1710716400000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1710716400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>053/064 - Goldeen</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/053---goldeen/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/053---goldeen/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149090.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 15-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1615762800000, Close: 0.69},&#xD;&#xA;  { Date: 1619996400000, Close: 0.59},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.39},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.39},&#xD;&#xA;  { Date: 1652655600000, Close: 0.49},&#xD;&#xA;  { Date: 1656284400000, Close: 0.39},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1678057200000, Close: 0.59},&#xD;&#xA;  { Date: 1690153200000, Close: 0.49},&#xD;&#xA;  { Date: 1694386800000, Close: 0.39},&#xD;&#xA;  { Date: 1702249200000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.39},&#xD;&#xA;  { Date: 1727650800000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615762800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>054/064 - Jigglypuff</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/054---jigglypuff/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/054---jigglypuff/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149131.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 08-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.40},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.39},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.79},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1649631600000, Close: 0.39},&#xD;&#xA;  { Date: 1650236400000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.59},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1685919600000, Close: 0.39},&#xD;&#xA;  { Date: 1690153200000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.39},&#xD;&#xA;  { Date: 1705273200000, Close: 0.49},&#xD;&#xA;  { Date: 1707692400000, Close: 0.39},&#xD;&#xA;  { Date: 1713740400000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615158000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>055/064 - Mankey</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/055---mankey/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/055---mankey/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149246.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 22-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1613948400000, Close: 0.89},&#xD;&#xA;  { Date: 1616972400000, Close: 0.79},&#xD;&#xA;  { Date: 1626044400000, Close: 0.69},&#xD;&#xA;  { Date: 1632697200000, Close: 0.59},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.39},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.59},&#xD;&#xA;  { Date: 1690153200000, Close: 0.39},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1613948400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>056/064 - Meowth</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/056---meowth/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/056---meowth/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149255.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 06-05-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.59},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.39},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.39},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1705273200000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.69},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1714950000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>057/064 - Nidoran(F)</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/057---nidoranf/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/057---nidoranf/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149312.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 24-07-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.39},&#xD;&#xA;  { Date: 1609714800000, Close: 0.35},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1618182000000, Close: 0.39},&#xD;&#xA;  { Date: 1623020400000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.39},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.59},&#xD;&#xA;  { Date: 1687734000000, Close: 0.49},&#xD;&#xA;  { Date: 1690153200000, Close: 0.79},&#xD;&#xA;  { Date: 1707692400000, Close: 0.69},&#xD;&#xA;  { Date: 1707692400000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1690153200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>058/064 - Oddish</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/058---oddish/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/058---oddish/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149323.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 22-05-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.39},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1705878000000, Close: 0.39},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1684710000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>059/064 - Paras</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/059---paras/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/059---paras/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149330.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 22-04-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.39},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.39},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.39},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1713740400000, Close: 0.59},&#xD;&#xA;  { Date: 1713740400000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1713740400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>060/064 - Pikachu</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/060---pikachu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/060---pikachu/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149343.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.49 on 16-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1601247600000, Close: 1.99},&#xD;&#xA;  { Date: 1604876400000, Close: 3.99},&#xD;&#xA;  { Date: 1605481200000, Close: 4.49},&#xD;&#xA;  { Date: 1608505200000, Close: 3.99},&#xD;&#xA;  { Date: 1611529200000, Close: 3.89},&#xD;&#xA;  { Date: 1612134000000, Close: 3.49},&#xD;&#xA;  { Date: 1613948400000, Close: 3.29},&#xD;&#xA;  { Date: 1614553200000, Close: 3.39},&#xD;&#xA;  { Date: 1615158000000, Close: 2.99},&#xD;&#xA;  { Date: 1618182000000, Close: 2.29},&#xD;&#xA;  { Date: 1619391600000, Close: 1.95},&#xD;&#xA;  { Date: 1621206000000, Close: 1.79},&#xD;&#xA;  { Date: 1622415600000, Close: 1.49},&#xD;&#xA;  { Date: 1623625200000, Close: 1.29},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 2.99},&#xD;&#xA;  { Date: 1631487600000, Close: 3.49},&#xD;&#xA;  { Date: 1635721200000, Close: 2.99},&#xD;&#xA;  { Date: 1642978800000, Close: 3.49},&#xD;&#xA;  { Date: 1645398000000, Close: 3.19},&#xD;&#xA;  { Date: 1647817200000, Close: 2.99},&#xD;&#xA;  { Date: 1649631600000, Close: 1.99},&#xD;&#xA;  { Date: 1652655600000, Close: 2.09},&#xD;&#xA;  { Date: 1653260400000, Close: 1.99},&#xD;&#xA;  { Date: 1656284400000, Close: 1.49},&#xD;&#xA;  { Date: 1656889200000, Close: 0.99},&#xD;&#xA;  { Date: 1673823600000, Close: 1.09},&#xD;&#xA;  { Date: 1675033200000, Close: 1.19},&#xD;&#xA;  { Date: 1679871600000, Close: 0.89},&#xD;&#xA;  { Date: 1684710000000, Close: 0.79},&#xD;&#xA;  { Date: 1690153200000, Close: 0.89},&#xD;&#xA;  { Date: 1692572400000, Close: 0.79},&#xD;&#xA;  { Date: 1693782000000, Close: 0.69},&#xD;&#xA;  { Date: 1727046000000, Close: 0.79},&#xD;&#xA;  { Date: 1727046000000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605481200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>061/064 - Rhyhorn</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/061---rhyhorn/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/061---rhyhorn/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149393.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 08-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.39},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.39},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1680476400000, Close: 0.49},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1717369200000, Close: 0.59},&#xD;&#xA;  { Date: 1717369200000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615158000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>062/064 - Spearow</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/062---spearow/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/062---spearow/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149467.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 24-07-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.39},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.39},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1690153200000, Close: 0.79},&#xD;&#xA;  { Date: 1693782000000, Close: 0.69},&#xD;&#xA;  { Date: 1705273200000, Close: 0.59},&#xD;&#xA;  { Date: 1707692400000, Close: 0.49},&#xD;&#xA;  { Date: 1707692400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1690153200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>063/064 - Venonat</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/063---venonat/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/063---venonat/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149511.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 13-05-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.39},&#xD;&#xA;  { Date: 1626649200000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.39},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1705273200000, Close: 0.59},&#xD;&#xA;  { Date: 1715554800000, Close: 0.79},&#xD;&#xA;  { Date: 1715554800000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1715554800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>064/064 - Poke Ball</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/064---poke-ball/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/02-jungle/064---poke-ball/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149349.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 23-09-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.25 on 24-07-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.40},&#xD;&#xA;  { Date: 1608505200000, Close: 0.35},&#xD;&#xA;  { Date: 1690153200000, Close: 0.25},&#xD;&#xA;  { Date: 1727046000000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(929487600000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1727046000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1690153200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
