<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fossil on Pokémonitor</title>
    <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/</link>
    <description>Recent content in Fossil on Pokémonitor</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>001/062 - Aerodactyl</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/001---aerodactyl/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/001---aerodactyl/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148827.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 29.99 on 04-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 7.99 on 25-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577228400000, Close: 7.99},&#xD;&#xA;  { Date: 1578524400000, Close: 9.99},&#xD;&#xA;  { Date: 1579820400000, Close: 9.39},&#xD;&#xA;  { Date: 1581030000000, Close: 8.99},&#xD;&#xA;  { Date: 1582153200000, Close: 9.29},&#xD;&#xA;  { Date: 1582585200000, Close: 9.99},&#xD;&#xA;  { Date: 1588892400000, Close: 12.99},&#xD;&#xA;  { Date: 1591052400000, Close: 17.99},&#xD;&#xA;  { Date: 1591830000000, Close: 19.99},&#xD;&#xA;  { Date: 1594854000000, Close: 23.99},&#xD;&#xA;  { Date: 1596841200000, Close: 24.99},&#xD;&#xA;  { Date: 1597359600000, Close: 23.99},&#xD;&#xA;  { Date: 1598310000000, Close: 22.99},&#xD;&#xA;  { Date: 1598569200000, Close: 20.99},&#xD;&#xA;  { Date: 1600297200000, Close: 19.49},&#xD;&#xA;  { Date: 1601074800000, Close: 17.99},&#xD;&#xA;  { Date: 1602543600000, Close: 18.99},&#xD;&#xA;  { Date: 1602889200000, Close: 18.49},&#xD;&#xA;  { Date: 1604444400000, Close: 29.99},&#xD;&#xA;  { Date: 1605654000000, Close: 28.99},&#xD;&#xA;  { Date: 1606345200000, Close: 29.49},&#xD;&#xA;  { Date: 1606950000000, Close: 29.99},&#xD;&#xA;  { Date: 1608332400000, Close: 24.99},&#xD;&#xA;  { Date: 1611788400000, Close: 25.99},&#xD;&#xA;  { Date: 1613602800000, Close: 26.99},&#xD;&#xA;  { Date: 1614812400000, Close: 29.99},&#xD;&#xA;  { Date: 1620774000000, Close: 27.99},&#xD;&#xA;  { Date: 1625180400000, Close: 26.49},&#xD;&#xA;  { Date: 1625266800000, Close: 24.99},&#xD;&#xA;  { Date: 1626994800000, Close: 19.99},&#xD;&#xA;  { Date: 1629846000000, Close: 20.99},&#xD;&#xA;  { Date: 1633734000000, Close: 24.99},&#xD;&#xA;  { Date: 1637622000000, Close: 27.99},&#xD;&#xA;  { Date: 1639436400000, Close: 26.49},&#xD;&#xA;  { Date: 1642633200000, Close: 27.99},&#xD;&#xA;  { Date: 1643842800000, Close: 29.49},&#xD;&#xA;  { Date: 1645052400000, Close: 28.99},&#xD;&#xA;  { Date: 1646089200000, Close: 28.49},&#xD;&#xA;  { Date: 1646866800000, Close: 27.89},&#xD;&#xA;  { Date: 1647644400000, Close: 26.89},&#xD;&#xA;  { Date: 1648422000000, Close: 26.19},&#xD;&#xA;  { Date: 1649113200000, Close: 26.09},&#xD;&#xA;  { Date: 1649545200000, Close: 26.29},&#xD;&#xA;  { Date: 1650322800000, Close: 27.09},&#xD;&#xA;  { Date: 1652482800000, Close: 27.99},&#xD;&#xA;  { Date: 1655161200000, Close: 22.69},&#xD;&#xA;  { Date: 1655420400000, Close: 27.99},&#xD;&#xA;  { Date: 1657062000000, Close: 29.99},&#xD;&#xA;  { Date: 1660345200000, Close: 27.99},&#xD;&#xA;  { Date: 1664924400000, Close: 26.49},&#xD;&#xA;  { Date: 1666306800000, Close: 20.39},&#xD;&#xA;  { Date: 1667516400000, Close: 20.09},&#xD;&#xA;  { Date: 1667948400000, Close: 19.89},&#xD;&#xA;  { Date: 1668207600000, Close: 17.99},&#xD;&#xA;  { Date: 1669244400000, Close: 15.99},&#xD;&#xA;  { Date: 1669590000000, Close: 17.99},&#xD;&#xA;  { Date: 1669762800000, Close: 20.19},&#xD;&#xA;  { Date: 1670626800000, Close: 20.99},&#xD;&#xA;  { Date: 1670886000000, Close: 19.99},&#xD;&#xA;  { Date: 1671231600000, Close: 20.69},&#xD;&#xA;  { Date: 1671577200000, Close: 20.89},&#xD;&#xA;  { Date: 1672182000000, Close: 21.19},&#xD;&#xA;  { Date: 1672700400000, Close: 20.79},&#xD;&#xA;  { Date: 1675983600000, Close: 22.59},&#xD;&#xA;  { Date: 1676070000000, Close: 22.39},&#xD;&#xA;  { Date: 1676415600000, Close: 22.19},&#xD;&#xA;  { Date: 1677884400000, Close: 22.29},&#xD;&#xA;  { Date: 1695164400000, Close: 26.89},&#xD;&#xA;  { Date: 1695769200000, Close: 25.89},&#xD;&#xA;  { Date: 1697583600000, Close: 24.99},&#xD;&#xA;  { Date: 1712790000000, Close: 25.99},&#xD;&#xA;  { Date: 1714604400000, Close: 27.99},&#xD;&#xA;  { Date: 1714604400000, Close: 27.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1604444400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577228400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>002/062 - Articuno</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/002---articuno/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/002---articuno/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148835.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 49.99 on 12-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 15.99 on 17-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576537200000, Close: 15.99},&#xD;&#xA;  { Date: 1578524400000, Close: 17.99},&#xD;&#xA;  { Date: 1579042800000, Close: 16.99},&#xD;&#xA;  { Date: 1580252400000, Close: 17.99},&#xD;&#xA;  { Date: 1581030000000, Close: 18.99},&#xD;&#xA;  { Date: 1582671600000, Close: 19.99},&#xD;&#xA;  { Date: 1583881200000, Close: 23.99},&#xD;&#xA;  { Date: 1585263600000, Close: 24.99},&#xD;&#xA;  { Date: 1585782000000, Close: 23.99},&#xD;&#xA;  { Date: 1586905200000, Close: 24.99},&#xD;&#xA;  { Date: 1588633200000, Close: 28.99},&#xD;&#xA;  { Date: 1588978800000, Close: 30.99},&#xD;&#xA;  { Date: 1590015600000, Close: 31.99},&#xD;&#xA;  { Date: 1591657200000, Close: 32.99},&#xD;&#xA;  { Date: 1593385200000, Close: 34.99},&#xD;&#xA;  { Date: 1594940400000, Close: 35.99},&#xD;&#xA;  { Date: 1596668400000, Close: 36.99},&#xD;&#xA;  { Date: 1597273200000, Close: 39.99},&#xD;&#xA;  { Date: 1597705200000, Close: 37.99},&#xD;&#xA;  { Date: 1598310000000, Close: 34.99},&#xD;&#xA;  { Date: 1598569200000, Close: 32.99},&#xD;&#xA;  { Date: 1599606000000, Close: 33.99},&#xD;&#xA;  { Date: 1602889200000, Close: 32.99},&#xD;&#xA;  { Date: 1603407600000, Close: 39.99},&#xD;&#xA;  { Date: 1605135600000, Close: 49.99},&#xD;&#xA;  { Date: 1606863600000, Close: 39.99},&#xD;&#xA;  { Date: 1607382000000, Close: 49.99},&#xD;&#xA;  { Date: 1608073200000, Close: 44.99},&#xD;&#xA;  { Date: 1608159600000, Close: 39.99},&#xD;&#xA;  { Date: 1608505200000, Close: 44.99},&#xD;&#xA;  { Date: 1609282800000, Close: 39.99},&#xD;&#xA;  { Date: 1610060400000, Close: 41.99},&#xD;&#xA;  { Date: 1610665200000, Close: 43.99},&#xD;&#xA;  { Date: 1611961200000, Close: 48.99},&#xD;&#xA;  { Date: 1614466800000, Close: 45.99},&#xD;&#xA;  { Date: 1615330800000, Close: 44.99},&#xD;&#xA;  { Date: 1617145200000, Close: 41.99},&#xD;&#xA;  { Date: 1619478000000, Close: 44.99},&#xD;&#xA;  { Date: 1624316400000, Close: 42.99},&#xD;&#xA;  { Date: 1626130800000, Close: 39.99},&#xD;&#xA;  { Date: 1627426800000, Close: 36.99},&#xD;&#xA;  { Date: 1631314800000, Close: 38.99},&#xD;&#xA;  { Date: 1632006000000, Close: 36.99},&#xD;&#xA;  { Date: 1633042800000, Close: 39.99},&#xD;&#xA;  { Date: 1634943600000, Close: 37.99},&#xD;&#xA;  { Date: 1639695600000, Close: 39.99},&#xD;&#xA;  { Date: 1643238000000, Close: 36.99},&#xD;&#xA;  { Date: 1645830000000, Close: 32.39},&#xD;&#xA;  { Date: 1646262000000, Close: 31.99},&#xD;&#xA;  { Date: 1646866800000, Close: 31.79},&#xD;&#xA;  { Date: 1647212400000, Close: 32.19},&#xD;&#xA;  { Date: 1649977200000, Close: 34.99},&#xD;&#xA;  { Date: 1652569200000, Close: 30.19},&#xD;&#xA;  { Date: 1653001200000, Close: 29.29},&#xD;&#xA;  { Date: 1657062000000, Close: 27.99},&#xD;&#xA;  { Date: 1660777200000, Close: 29.99},&#xD;&#xA;  { Date: 1666220400000, Close: 26.89},&#xD;&#xA;  { Date: 1676674800000, Close: 29.59},&#xD;&#xA;  { Date: 1678748400000, Close: 39.69},&#xD;&#xA;  { Date: 1685746800000, Close: 44.99},&#xD;&#xA;  { Date: 1709334000000, Close: 47.99},&#xD;&#xA;  { Date: 1709334000000, Close: 47.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605135600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576537200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>003/062 - Ditto</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/003---ditto/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/003---ditto/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148975.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 39.99 on 28-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 11.99 on 06-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 11.99},&#xD;&#xA;  { Date: 1579215600000, Close: 12.99},&#xD;&#xA;  { Date: 1580943600000, Close: 14.99},&#xD;&#xA;  { Date: 1582671600000, Close: 15.99},&#xD;&#xA;  { Date: 1585004400000, Close: 17.99},&#xD;&#xA;  { Date: 1586646000000, Close: 19.99},&#xD;&#xA;  { Date: 1587510000000, Close: 18.99},&#xD;&#xA;  { Date: 1588633200000, Close: 19.99},&#xD;&#xA;  { Date: 1588892400000, Close: 20.99},&#xD;&#xA;  { Date: 1591052400000, Close: 22.99},&#xD;&#xA;  { Date: 1591830000000, Close: 24.99},&#xD;&#xA;  { Date: 1592607600000, Close: 25.99},&#xD;&#xA;  { Date: 1596841200000, Close: 24.49},&#xD;&#xA;  { Date: 1598310000000, Close: 21.99},&#xD;&#xA;  { Date: 1598569200000, Close: 21.49},&#xD;&#xA;  { Date: 1599606000000, Close: 22.99},&#xD;&#xA;  { Date: 1602543600000, Close: 19.99},&#xD;&#xA;  { Date: 1603148400000, Close: 20.99},&#xD;&#xA;  { Date: 1605049200000, Close: 37.99},&#xD;&#xA;  { Date: 1605913200000, Close: 38.99},&#xD;&#xA;  { Date: 1606518000000, Close: 39.99},&#xD;&#xA;  { Date: 1608591600000, Close: 37.99},&#xD;&#xA;  { Date: 1611874800000, Close: 34.99},&#xD;&#xA;  { Date: 1613602800000, Close: 32.99},&#xD;&#xA;  { Date: 1614294000000, Close: 31.99},&#xD;&#xA;  { Date: 1615590000000, Close: 32.99},&#xD;&#xA;  { Date: 1618009200000, Close: 31.99},&#xD;&#xA;  { Date: 1619046000000, Close: 32.99},&#xD;&#xA;  { Date: 1621033200000, Close: 31.99},&#xD;&#xA;  { Date: 1625526000000, Close: 29.99},&#xD;&#xA;  { Date: 1625612400000, Close: 24.99},&#xD;&#xA;  { Date: 1627426800000, Close: 22.99},&#xD;&#xA;  { Date: 1631919600000, Close: 27.99},&#xD;&#xA;  { Date: 1634252400000, Close: 24.99},&#xD;&#xA;  { Date: 1635548400000, Close: 21.99},&#xD;&#xA;  { Date: 1639090800000, Close: 22.99},&#xD;&#xA;  { Date: 1642633200000, Close: 24.49},&#xD;&#xA;  { Date: 1645052400000, Close: 21.99},&#xD;&#xA;  { Date: 1646089200000, Close: 23.39},&#xD;&#xA;  { Date: 1646348400000, Close: 23.19},&#xD;&#xA;  { Date: 1648854000000, Close: 23.09},&#xD;&#xA;  { Date: 1653001200000, Close: 24.99},&#xD;&#xA;  { Date: 1657321200000, Close: 22.99},&#xD;&#xA;  { Date: 1657839600000, Close: 21.99},&#xD;&#xA;  { Date: 1660086000000, Close: 24.99},&#xD;&#xA;  { Date: 1665010800000, Close: 21.29},&#xD;&#xA;  { Date: 1665442800000, Close: 22.09},&#xD;&#xA;  { Date: 1665874800000, Close: 21.99},&#xD;&#xA;  { Date: 1666306800000, Close: 19.99},&#xD;&#xA;  { Date: 1666393200000, Close: 22.39},&#xD;&#xA;  { Date: 1666998000000, Close: 21.99},&#xD;&#xA;  { Date: 1674687600000, Close: 23.09},&#xD;&#xA;  { Date: 1675983600000, Close: 22.89},&#xD;&#xA;  { Date: 1677884400000, Close: 22.39},&#xD;&#xA;  { Date: 1678316400000, Close: 22.79},&#xD;&#xA;  { Date: 1678921200000, Close: 22.69},&#xD;&#xA;  { Date: 1680649200000, Close: 22.39},&#xD;&#xA;  { Date: 1685055600000, Close: 23.69},&#xD;&#xA;  { Date: 1685746800000, Close: 23.99},&#xD;&#xA;  { Date: 1686956400000, Close: 24.99},&#xD;&#xA;  { Date: 1688166000000, Close: 27.99},&#xD;&#xA;  { Date: 1689548400000, Close: 25.99},&#xD;&#xA;  { Date: 1689807600000, Close: 24.99},&#xD;&#xA;  { Date: 1690153200000, Close: 25.39},&#xD;&#xA;  { Date: 1691103600000, Close: 26.59},&#xD;&#xA;  { Date: 1691449200000, Close: 26.49},&#xD;&#xA;  { Date: 1691794800000, Close: 24.99},&#xD;&#xA;  { Date: 1695942000000, Close: 26.59},&#xD;&#xA;  { Date: 1727737200000, Close: 27.99},&#xD;&#xA;  { Date: 1727737200000, Close: 27.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606518000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575586800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>004/062 - Dragonite</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/004---dragonite/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/004---dragonite/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148982.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 119.99 on 28-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 27.99 on 15-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 28.99},&#xD;&#xA;  { Date: 1579042800000, Close: 27.99},&#xD;&#xA;  { Date: 1581030000000, Close: 28.49},&#xD;&#xA;  { Date: 1581548400000, Close: 28.89},&#xD;&#xA;  { Date: 1582671600000, Close: 29.99},&#xD;&#xA;  { Date: 1585263600000, Close: 39.99},&#xD;&#xA;  { Date: 1588892400000, Close: 58.99},&#xD;&#xA;  { Date: 1591052400000, Close: 73.99},&#xD;&#xA;  { Date: 1594767600000, Close: 75.99},&#xD;&#xA;  { Date: 1597273200000, Close: 89.99},&#xD;&#xA;  { Date: 1598137200000, Close: 84.99},&#xD;&#xA;  { Date: 1598569200000, Close: 79.99},&#xD;&#xA;  { Date: 1600470000000, Close: 83.99},&#xD;&#xA;  { Date: 1600729200000, Close: 79.99},&#xD;&#xA;  { Date: 1601766000000, Close: 74.99},&#xD;&#xA;  { Date: 1602716400000, Close: 70.99},&#xD;&#xA;  { Date: 1605913200000, Close: 109.99},&#xD;&#xA;  { Date: 1606518000000, Close: 119.99},&#xD;&#xA;  { Date: 1609542000000, Close: 112.99},&#xD;&#xA;  { Date: 1610492400000, Close: 106.99},&#xD;&#xA;  { Date: 1611961200000, Close: 109.99},&#xD;&#xA;  { Date: 1614812400000, Close: 115.99},&#xD;&#xA;  { Date: 1616713200000, Close: 109.99},&#xD;&#xA;  { Date: 1617663600000, Close: 99.99},&#xD;&#xA;  { Date: 1619823600000, Close: 94.99},&#xD;&#xA;  { Date: 1620687600000, Close: 89.99},&#xD;&#xA;  { Date: 1623193200000, Close: 84.99},&#xD;&#xA;  { Date: 1623970800000, Close: 88.99},&#xD;&#xA;  { Date: 1624489200000, Close: 84.99},&#xD;&#xA;  { Date: 1627426800000, Close: 79.99},&#xD;&#xA;  { Date: 1628290800000, Close: 74.99},&#xD;&#xA;  { Date: 1632438000000, Close: 79.99},&#xD;&#xA;  { Date: 1643929200000, Close: 89.99},&#xD;&#xA;  { Date: 1644793200000, Close: 84.99},&#xD;&#xA;  { Date: 1646348400000, Close: 79.99},&#xD;&#xA;  { Date: 1666825200000, Close: 69.99},&#xD;&#xA;  { Date: 1670022000000, Close: 73.09},&#xD;&#xA;  { Date: 1670108400000, Close: 73.99},&#xD;&#xA;  { Date: 1670540400000, Close: 74.99},&#xD;&#xA;  { Date: 1673046000000, Close: 73.09},&#xD;&#xA;  { Date: 1673823600000, Close: 72.69},&#xD;&#xA;  { Date: 1674255600000, Close: 72.59},&#xD;&#xA;  { Date: 1674601200000, Close: 71.69},&#xD;&#xA;  { Date: 1675292400000, Close: 69.79},&#xD;&#xA;  { Date: 1675551600000, Close: 69.69},&#xD;&#xA;  { Date: 1677193200000, Close: 74.99},&#xD;&#xA;  { Date: 1677625200000, Close: 66.99},&#xD;&#xA;  { Date: 1677625200000, Close: 66.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606518000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579042800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>005/062 - Gengar</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/005---gengar/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/005---gengar/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149065.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 69.99 on 22-05-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 17.49 on 11-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 17.49},&#xD;&#xA;  { Date: 1576105200000, Close: 17.99},&#xD;&#xA;  { Date: 1577142000000, Close: 19.99},&#xD;&#xA;  { Date: 1578524400000, Close: 21.99},&#xD;&#xA;  { Date: 1579302000000, Close: 24.99},&#xD;&#xA;  { Date: 1581030000000, Close: 25.99},&#xD;&#xA;  { Date: 1581462000000, Close: 26.99},&#xD;&#xA;  { Date: 1582671600000, Close: 25.99},&#xD;&#xA;  { Date: 1585004400000, Close: 24.99},&#xD;&#xA;  { Date: 1585695600000, Close: 23.99},&#xD;&#xA;  { Date: 1586818800000, Close: 24.99},&#xD;&#xA;  { Date: 1589842800000, Close: 29.99},&#xD;&#xA;  { Date: 1591830000000, Close: 31.99},&#xD;&#xA;  { Date: 1592607600000, Close: 33.99},&#xD;&#xA;  { Date: 1593212400000, Close: 31.99},&#xD;&#xA;  { Date: 1594681200000, Close: 33.99},&#xD;&#xA;  { Date: 1596841200000, Close: 34.99},&#xD;&#xA;  { Date: 1597186800000, Close: 37.99},&#xD;&#xA;  { Date: 1599692400000, Close: 39.99},&#xD;&#xA;  { Date: 1601506800000, Close: 36.99},&#xD;&#xA;  { Date: 1602198000000, Close: 32.99},&#xD;&#xA;  { Date: 1602802800000, Close: 34.99},&#xD;&#xA;  { Date: 1603321200000, Close: 39.99},&#xD;&#xA;  { Date: 1605135600000, Close: 44.99},&#xD;&#xA;  { Date: 1607036400000, Close: 49.99},&#xD;&#xA;  { Date: 1607382000000, Close: 54.99},&#xD;&#xA;  { Date: 1619132400000, Close: 49.99},&#xD;&#xA;  { Date: 1619823600000, Close: 44.99},&#xD;&#xA;  { Date: 1620428400000, Close: 41.99},&#xD;&#xA;  { Date: 1621465200000, Close: 39.99},&#xD;&#xA;  { Date: 1621551600000, Close: 37.99},&#xD;&#xA;  { Date: 1622761200000, Close: 34.99},&#xD;&#xA;  { Date: 1623970800000, Close: 35.99},&#xD;&#xA;  { Date: 1624489200000, Close: 34.99},&#xD;&#xA;  { Date: 1628031600000, Close: 29.99},&#xD;&#xA;  { Date: 1631919600000, Close: 34.99},&#xD;&#xA;  { Date: 1636066800000, Close: 44.99},&#xD;&#xA;  { Date: 1638399600000, Close: 49.99},&#xD;&#xA;  { Date: 1642633200000, Close: 52.99},&#xD;&#xA;  { Date: 1644793200000, Close: 49.99},&#xD;&#xA;  { Date: 1645916400000, Close: 47.89},&#xD;&#xA;  { Date: 1647558000000, Close: 48.19},&#xD;&#xA;  { Date: 1648854000000, Close: 48.49},&#xD;&#xA;  { Date: 1649286000000, Close: 47.89},&#xD;&#xA;  { Date: 1651878000000, Close: 44.09},&#xD;&#xA;  { Date: 1652137200000, Close: 43.79},&#xD;&#xA;  { Date: 1652569200000, Close: 43.49},&#xD;&#xA;  { Date: 1653346800000, Close: 41.29},&#xD;&#xA;  { Date: 1654210800000, Close: 41.49},&#xD;&#xA;  { Date: 1654383600000, Close: 40.89},&#xD;&#xA;  { Date: 1654729200000, Close: 40.79},&#xD;&#xA;  { Date: 1655420400000, Close: 41.49},&#xD;&#xA;  { Date: 1655852400000, Close: 41.59},&#xD;&#xA;  { Date: 1656284400000, Close: 40.89},&#xD;&#xA;  { Date: 1656630000000, Close: 39.69},&#xD;&#xA;  { Date: 1656975600000, Close: 38.39},&#xD;&#xA;  { Date: 1657580400000, Close: 35.99},&#xD;&#xA;  { Date: 1658962800000, Close: 37.99},&#xD;&#xA;  { Date: 1660950000000, Close: 39.99},&#xD;&#xA;  { Date: 1666220400000, Close: 44.59},&#xD;&#xA;  { Date: 1668466800000, Close: 45.99},&#xD;&#xA;  { Date: 1669676400000, Close: 46.29},&#xD;&#xA;  { Date: 1670281200000, Close: 45.49},&#xD;&#xA;  { Date: 1670540400000, Close: 42.99},&#xD;&#xA;  { Date: 1673391600000, Close: 42.79},&#xD;&#xA;  { Date: 1675983600000, Close: 44.59},&#xD;&#xA;  { Date: 1685746800000, Close: 59.99},&#xD;&#xA;  { Date: 1716332400000, Close: 69.99},&#xD;&#xA;  { Date: 1716332400000, Close: 69.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1716332400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576018800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>006/062 - Haunter</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/006---haunter/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/006---haunter/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149112.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 31.99 on 02-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 6.99 on 11-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 6.99},&#xD;&#xA;  { Date: 1581548400000, Close: 7.99},&#xD;&#xA;  { Date: 1583276400000, Close: 8.39},&#xD;&#xA;  { Date: 1583881200000, Close: 8.99},&#xD;&#xA;  { Date: 1585004400000, Close: 9.99},&#xD;&#xA;  { Date: 1585782000000, Close: 9.49},&#xD;&#xA;  { Date: 1586818800000, Close: 9.69},&#xD;&#xA;  { Date: 1587423600000, Close: 9.49},&#xD;&#xA;  { Date: 1588633200000, Close: 11.99},&#xD;&#xA;  { Date: 1588892400000, Close: 12.99},&#xD;&#xA;  { Date: 1591052400000, Close: 14.99},&#xD;&#xA;  { Date: 1591743600000, Close: 15.99},&#xD;&#xA;  { Date: 1591916400000, Close: 16.99},&#xD;&#xA;  { Date: 1593471600000, Close: 19.99},&#xD;&#xA;  { Date: 1595977200000, Close: 18.49},&#xD;&#xA;  { Date: 1597014000000, Close: 16.99},&#xD;&#xA;  { Date: 1598482800000, Close: 17.99},&#xD;&#xA;  { Date: 1598569200000, Close: 16.99},&#xD;&#xA;  { Date: 1599778800000, Close: 15.49},&#xD;&#xA;  { Date: 1601074800000, Close: 15.99},&#xD;&#xA;  { Date: 1601938800000, Close: 16.99},&#xD;&#xA;  { Date: 1605049200000, Close: 27.99},&#xD;&#xA;  { Date: 1606345200000, Close: 29.99},&#xD;&#xA;  { Date: 1606863600000, Close: 31.99},&#xD;&#xA;  { Date: 1608591600000, Close: 30.99},&#xD;&#xA;  { Date: 1609974000000, Close: 31.99},&#xD;&#xA;  { Date: 1612825200000, Close: 29.99},&#xD;&#xA;  { Date: 1613430000000, Close: 24.99},&#xD;&#xA;  { Date: 1614380400000, Close: 23.49},&#xD;&#xA;  { Date: 1614898800000, Close: 24.99},&#xD;&#xA;  { Date: 1620255600000, Close: 23.49},&#xD;&#xA;  { Date: 1620342000000, Close: 19.99},&#xD;&#xA;  { Date: 1621292400000, Close: 17.99},&#xD;&#xA;  { Date: 1622329200000, Close: 16.49},&#xD;&#xA;  { Date: 1622847600000, Close: 15.99},&#xD;&#xA;  { Date: 1623798000000, Close: 19.99},&#xD;&#xA;  { Date: 1624921200000, Close: 17.99},&#xD;&#xA;  { Date: 1626994800000, Close: 15.99},&#xD;&#xA;  { Date: 1628722800000, Close: 16.99},&#xD;&#xA;  { Date: 1631919600000, Close: 19.99},&#xD;&#xA;  { Date: 1633042800000, Close: 17.99},&#xD;&#xA;  { Date: 1634338800000, Close: 16.99},&#xD;&#xA;  { Date: 1634598000000, Close: 15.99},&#xD;&#xA;  { Date: 1636930800000, Close: 14.49},&#xD;&#xA;  { Date: 1637794800000, Close: 14.99},&#xD;&#xA;  { Date: 1642114800000, Close: 17.99},&#xD;&#xA;  { Date: 1642201200000, Close: 19.99},&#xD;&#xA;  { Date: 1642806000000, Close: 17.99},&#xD;&#xA;  { Date: 1645484400000, Close: 19.99},&#xD;&#xA;  { Date: 1648681200000, Close: 20.99},&#xD;&#xA;  { Date: 1655161200000, Close: 22.49},&#xD;&#xA;  { Date: 1656198000000, Close: 20.99},&#xD;&#xA;  { Date: 1657148400000, Close: 19.49},&#xD;&#xA;  { Date: 1657321200000, Close: 17.99},&#xD;&#xA;  { Date: 1657839600000, Close: 16.99},&#xD;&#xA;  { Date: 1667257200000, Close: 19.99},&#xD;&#xA;  { Date: 1667602800000, Close: 20.19},&#xD;&#xA;  { Date: 1668380400000, Close: 19.49},&#xD;&#xA;  { Date: 1669071600000, Close: 19.99},&#xD;&#xA;  { Date: 1669158000000, Close: 19.89},&#xD;&#xA;  { Date: 1669503600000, Close: 19.49},&#xD;&#xA;  { Date: 1671145200000, Close: 19.79},&#xD;&#xA;  { Date: 1671490800000, Close: 17.99},&#xD;&#xA;  { Date: 1671836400000, Close: 20.19},&#xD;&#xA;  { Date: 1675983600000, Close: 21.19},&#xD;&#xA;  { Date: 1694127600000, Close: 31.19},&#xD;&#xA;  { Date: 1694732400000, Close: 29.99},&#xD;&#xA;  { Date: 1695078000000, Close: 30.79},&#xD;&#xA;  { Date: 1696287600000, Close: 29.99},&#xD;&#xA;  { Date: 1697065200000, Close: 27.99},&#xD;&#xA;  { Date: 1697583600000, Close: 24.99},&#xD;&#xA;  { Date: 1702594800000, Close: 22.99},&#xD;&#xA;  { Date: 1703026800000, Close: 20.59},&#xD;&#xA;  { Date: 1703458800000, Close: 20.39},&#xD;&#xA;  { Date: 1718406000000, Close: 21.69},&#xD;&#xA;  { Date: 1721948400000, Close: 20.19},&#xD;&#xA;  { Date: 1724886000000, Close: 20.39},&#xD;&#xA;  { Date: 1729033200000, Close: 20.59},&#xD;&#xA;  { Date: 1729033200000, Close: 20.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606863600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576018800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>007/062 - Hitmonlee</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/007---hitmonlee/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/007---hitmonlee/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149117.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 38.99 on 12-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 8.99 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 9.99},&#xD;&#xA;  { Date: 1575673200000, Close: 8.99},&#xD;&#xA;  { Date: 1578524400000, Close: 9.99},&#xD;&#xA;  { Date: 1579042800000, Close: 10.99},&#xD;&#xA;  { Date: 1580252400000, Close: 11.99},&#xD;&#xA;  { Date: 1582239600000, Close: 13.99},&#xD;&#xA;  { Date: 1584399600000, Close: 14.99},&#xD;&#xA;  { Date: 1585609200000, Close: 15.99},&#xD;&#xA;  { Date: 1588633200000, Close: 17.99},&#xD;&#xA;  { Date: 1588978800000, Close: 19.99},&#xD;&#xA;  { Date: 1590706800000, Close: 20.99},&#xD;&#xA;  { Date: 1591225200000, Close: 22.49},&#xD;&#xA;  { Date: 1593644400000, Close: 21.99},&#xD;&#xA;  { Date: 1594854000000, Close: 23.99},&#xD;&#xA;  { Date: 1596495600000, Close: 24.99},&#xD;&#xA;  { Date: 1597705200000, Close: 23.99},&#xD;&#xA;  { Date: 1598569200000, Close: 22.99},&#xD;&#xA;  { Date: 1599778800000, Close: 23.99},&#xD;&#xA;  { Date: 1601766000000, Close: 22.49},&#xD;&#xA;  { Date: 1603321200000, Close: 27.99},&#xD;&#xA;  { Date: 1605135600000, Close: 38.99},&#xD;&#xA;  { Date: 1606345200000, Close: 37.99},&#xD;&#xA;  { Date: 1606863600000, Close: 29.99},&#xD;&#xA;  { Date: 1607382000000, Close: 37.99},&#xD;&#xA;  { Date: 1608159600000, Close: 34.99},&#xD;&#xA;  { Date: 1609282800000, Close: 31.99},&#xD;&#xA;  { Date: 1609887600000, Close: 29.99},&#xD;&#xA;  { Date: 1614207600000, Close: 27.99},&#xD;&#xA;  { Date: 1614898800000, Close: 29.99},&#xD;&#xA;  { Date: 1615503600000, Close: 27.99},&#xD;&#xA;  { Date: 1616108400000, Close: 24.99},&#xD;&#xA;  { Date: 1617318000000, Close: 21.99},&#xD;&#xA;  { Date: 1618527600000, Close: 19.99},&#xD;&#xA;  { Date: 1619218800000, Close: 20.99},&#xD;&#xA;  { Date: 1619650800000, Close: 22.99},&#xD;&#xA;  { Date: 1623798000000, Close: 26.99},&#xD;&#xA;  { Date: 1626217200000, Close: 25.49},&#xD;&#xA;  { Date: 1627426800000, Close: 21.99},&#xD;&#xA;  { Date: 1628636400000, Close: 19.99},&#xD;&#xA;  { Date: 1629932400000, Close: 21.99},&#xD;&#xA;  { Date: 1631919600000, Close: 24.99},&#xD;&#xA;  { Date: 1632956400000, Close: 25.99},&#xD;&#xA;  { Date: 1634943600000, Close: 24.49},&#xD;&#xA;  { Date: 1635548400000, Close: 22.99},&#xD;&#xA;  { Date: 1639090800000, Close: 24.99},&#xD;&#xA;  { Date: 1641942000000, Close: 27.99},&#xD;&#xA;  { Date: 1642806000000, Close: 25.99},&#xD;&#xA;  { Date: 1646866800000, Close: 23.49},&#xD;&#xA;  { Date: 1647644400000, Close: 23.39},&#xD;&#xA;  { Date: 1648076400000, Close: 23.49},&#xD;&#xA;  { Date: 1649026800000, Close: 22.09},&#xD;&#xA;  { Date: 1649458800000, Close: 21.49},&#xD;&#xA;  { Date: 1650495600000, Close: 20.39},&#xD;&#xA;  { Date: 1655161200000, Close: 20.09},&#xD;&#xA;  { Date: 1655247600000, Close: 19.69},&#xD;&#xA;  { Date: 1656457200000, Close: 18.49},&#xD;&#xA;  { Date: 1656975600000, Close: 18.29},&#xD;&#xA;  { Date: 1657494000000, Close: 18.19},&#xD;&#xA;  { Date: 1657839600000, Close: 15.99},&#xD;&#xA;  { Date: 1660086000000, Close: 19.99},&#xD;&#xA;  { Date: 1664924400000, Close: 21.19},&#xD;&#xA;  { Date: 1666220400000, Close: 21.59},&#xD;&#xA;  { Date: 1666566000000, Close: 21.09},&#xD;&#xA;  { Date: 1677279600000, Close: 21.59},&#xD;&#xA;  { Date: 1677538800000, Close: 21.89},&#xD;&#xA;  { Date: 1687474800000, Close: 24.99},&#xD;&#xA;  { Date: 1689375600000, Close: 25.09},&#xD;&#xA;  { Date: 1689721200000, Close: 26.29},&#xD;&#xA;  { Date: 1689807600000, Close: 24.99},&#xD;&#xA;  { Date: 1690153200000, Close: 26.69},&#xD;&#xA;  { Date: 1691103600000, Close: 26.99},&#xD;&#xA;  { Date: 1692399600000, Close: 25.89},&#xD;&#xA;  { Date: 1692918000000, Close: 25.69},&#xD;&#xA;  { Date: 1693263600000, Close: 25.09},&#xD;&#xA;  { Date: 1698361200000, Close: 24.99},&#xD;&#xA;  { Date: 1700607600000, Close: 22.99},&#xD;&#xA;  { Date: 1700694000000, Close: 19.99},&#xD;&#xA;  { Date: 1700866800000, Close: 21.99},&#xD;&#xA;  { Date: 1701212400000, Close: 22.99},&#xD;&#xA;  { Date: 1702594800000, Close: 22.79},&#xD;&#xA;  { Date: 1703890800000, Close: 22.59},&#xD;&#xA;  { Date: 1704495600000, Close: 23.99},&#xD;&#xA;  { Date: 1706137200000, Close: 22.69},&#xD;&#xA;  { Date: 1718233200000, Close: 19.99},&#xD;&#xA;  { Date: 1718319600000, Close: 20.19},&#xD;&#xA;  { Date: 1721862000000, Close: 20.29},&#xD;&#xA;  { Date: 1725922800000, Close: 18.69},&#xD;&#xA;  { Date: 1727996400000, Close: 19.09},&#xD;&#xA;  { Date: 1727996400000, Close: 19.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605135600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575673200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>008/062 - Hypno</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/008---hypno/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/008---hypno/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149125.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 29.99 on 21-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 7.99 on 11-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 7.99},&#xD;&#xA;  { Date: 1577833200000, Close: 8.99},&#xD;&#xA;  { Date: 1578524400000, Close: 9.99},&#xD;&#xA;  { Date: 1579820400000, Close: 9.49},&#xD;&#xA;  { Date: 1581462000000, Close: 9.99},&#xD;&#xA;  { Date: 1582671600000, Close: 11.99},&#xD;&#xA;  { Date: 1584745200000, Close: 12.99},&#xD;&#xA;  { Date: 1586732400000, Close: 13.99},&#xD;&#xA;  { Date: 1587164400000, Close: 14.99},&#xD;&#xA;  { Date: 1588633200000, Close: 15.99},&#xD;&#xA;  { Date: 1588892400000, Close: 16.99},&#xD;&#xA;  { Date: 1591052400000, Close: 21.99},&#xD;&#xA;  { Date: 1591830000000, Close: 24.99},&#xD;&#xA;  { Date: 1594162800000, Close: 23.49},&#xD;&#xA;  { Date: 1594854000000, Close: 22.99},&#xD;&#xA;  { Date: 1595026800000, Close: 19.99},&#xD;&#xA;  { Date: 1596582000000, Close: 20.99},&#xD;&#xA;  { Date: 1598569200000, Close: 19.99},&#xD;&#xA;  { Date: 1600297200000, Close: 18.49},&#xD;&#xA;  { Date: 1602543600000, Close: 18.59},&#xD;&#xA;  { Date: 1603148400000, Close: 17.49},&#xD;&#xA;  { Date: 1603321200000, Close: 17.99},&#xD;&#xA;  { Date: 1605135600000, Close: 26.99},&#xD;&#xA;  { Date: 1605913200000, Close: 29.99},&#xD;&#xA;  { Date: 1609196400000, Close: 24.99},&#xD;&#xA;  { Date: 1612393200000, Close: 25.49},&#xD;&#xA;  { Date: 1613516400000, Close: 24.99},&#xD;&#xA;  { Date: 1618354800000, Close: 23.99},&#xD;&#xA;  { Date: 1620428400000, Close: 21.99},&#xD;&#xA;  { Date: 1621551600000, Close: 22.99},&#xD;&#xA;  { Date: 1622242800000, Close: 23.49},&#xD;&#xA;  { Date: 1622588400000, Close: 21.99},&#xD;&#xA;  { Date: 1623106800000, Close: 19.99},&#xD;&#xA;  { Date: 1624834800000, Close: 18.49},&#xD;&#xA;  { Date: 1624921200000, Close: 17.99},&#xD;&#xA;  { Date: 1625698800000, Close: 16.99},&#xD;&#xA;  { Date: 1626994800000, Close: 14.99},&#xD;&#xA;  { Date: 1628809200000, Close: 13.49},&#xD;&#xA;  { Date: 1631142000000, Close: 13.99},&#xD;&#xA;  { Date: 1631919600000, Close: 14.99},&#xD;&#xA;  { Date: 1633042800000, Close: 13.99},&#xD;&#xA;  { Date: 1635462000000, Close: 14.99},&#xD;&#xA;  { Date: 1639782000000, Close: 19.99},&#xD;&#xA;  { Date: 1645052400000, Close: 21.99},&#xD;&#xA;  { Date: 1646521200000, Close: 20.59},&#xD;&#xA;  { Date: 1647471600000, Close: 20.69},&#xD;&#xA;  { Date: 1657321200000, Close: 18.49},&#xD;&#xA;  { Date: 1657839600000, Close: 17.99},&#xD;&#xA;  { Date: 1665010800000, Close: 16.49},&#xD;&#xA;  { Date: 1665097200000, Close: 14.19},&#xD;&#xA;  { Date: 1666825200000, Close: 12.99},&#xD;&#xA;  { Date: 1677625200000, Close: 13.99},&#xD;&#xA;  { Date: 1680217200000, Close: 14.99},&#xD;&#xA;  { Date: 1693609200000, Close: 24.99},&#xD;&#xA;  { Date: 1714604400000, Close: 29.99},&#xD;&#xA;  { Date: 1714604400000, Close: 29.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605913200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576018800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>009/062 - Kabutops</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/009---kabutops/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/009---kabutops/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149142.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 31.99 on 14-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 7.99 on 20-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 8.19},&#xD;&#xA;  { Date: 1576796400000, Close: 7.99},&#xD;&#xA;  { Date: 1580770800000, Close: 8.99},&#xD;&#xA;  { Date: 1582066800000, Close: 9.99},&#xD;&#xA;  { Date: 1582671600000, Close: 10.99},&#xD;&#xA;  { Date: 1585004400000, Close: 9.99},&#xD;&#xA;  { Date: 1585695600000, Close: 8.99},&#xD;&#xA;  { Date: 1586646000000, Close: 9.99},&#xD;&#xA;  { Date: 1588633200000, Close: 12.99},&#xD;&#xA;  { Date: 1588892400000, Close: 13.99},&#xD;&#xA;  { Date: 1591052400000, Close: 14.99},&#xD;&#xA;  { Date: 1593298800000, Close: 17.99},&#xD;&#xA;  { Date: 1594940400000, Close: 19.99},&#xD;&#xA;  { Date: 1597878000000, Close: 20.99},&#xD;&#xA;  { Date: 1598310000000, Close: 19.49},&#xD;&#xA;  { Date: 1600815600000, Close: 17.99},&#xD;&#xA;  { Date: 1603148400000, Close: 19.99},&#xD;&#xA;  { Date: 1603321200000, Close: 21.99},&#xD;&#xA;  { Date: 1603494000000, Close: 24.99},&#xD;&#xA;  { Date: 1605135600000, Close: 26.99},&#xD;&#xA;  { Date: 1606863600000, Close: 19.99},&#xD;&#xA;  { Date: 1607382000000, Close: 26.99},&#xD;&#xA;  { Date: 1608073200000, Close: 24.99},&#xD;&#xA;  { Date: 1609887600000, Close: 25.99},&#xD;&#xA;  { Date: 1614726000000, Close: 24.99},&#xD;&#xA;  { Date: 1615503600000, Close: 25.99},&#xD;&#xA;  { Date: 1616022000000, Close: 27.99},&#xD;&#xA;  { Date: 1616540400000, Close: 29.99},&#xD;&#xA;  { Date: 1618354800000, Close: 31.99},&#xD;&#xA;  { Date: 1620428400000, Close: 29.99},&#xD;&#xA;  { Date: 1625785200000, Close: 27.99},&#xD;&#xA;  { Date: 1628895600000, Close: 26.99},&#xD;&#xA;  { Date: 1631919600000, Close: 29.99},&#xD;&#xA;  { Date: 1632870000000, Close: 27.99},&#xD;&#xA;  { Date: 1635548400000, Close: 24.99},&#xD;&#xA;  { Date: 1640905200000, Close: 27.99},&#xD;&#xA;  { Date: 1642633200000, Close: 29.49},&#xD;&#xA;  { Date: 1645052400000, Close: 28.99},&#xD;&#xA;  { Date: 1646866800000, Close: 27.49},&#xD;&#xA;  { Date: 1651878000000, Close: 27.99},&#xD;&#xA;  { Date: 1657321200000, Close: 26.49},&#xD;&#xA;  { Date: 1657839600000, Close: 24.99},&#xD;&#xA;  { Date: 1664924400000, Close: 23.49},&#xD;&#xA;  { Date: 1665010800000, Close: 20.09},&#xD;&#xA;  { Date: 1666306800000, Close: 19.69},&#xD;&#xA;  { Date: 1669417200000, Close: 18.49},&#xD;&#xA;  { Date: 1670454000000, Close: 19.99},&#xD;&#xA;  { Date: 1671922800000, Close: 20.09},&#xD;&#xA;  { Date: 1672268400000, Close: 19.79},&#xD;&#xA;  { Date: 1676588400000, Close: 19.99},&#xD;&#xA;  { Date: 1680217200000, Close: 22.69},&#xD;&#xA;  { Date: 1681167600000, Close: 24.99},&#xD;&#xA;  { Date: 1682031600000, Close: 23.29},&#xD;&#xA;  { Date: 1683932400000, Close: 23.79},&#xD;&#xA;  { Date: 1685055600000, Close: 22.49},&#xD;&#xA;  { Date: 1685401200000, Close: 22.29},&#xD;&#xA;  { Date: 1688166000000, Close: 22.59},&#xD;&#xA;  { Date: 1694732400000, Close: 24.79},&#xD;&#xA;  { Date: 1709074800000, Close: 24.99},&#xD;&#xA;  { Date: 1714690800000, Close: 21.39},&#xD;&#xA;  { Date: 1715382000000, Close: 21.49},&#xD;&#xA;  { Date: 1715900400000, Close: 21.59},&#xD;&#xA;  { Date: 1718665200000, Close: 21.99},&#xD;&#xA;  { Date: 1719010800000, Close: 19.49},&#xD;&#xA;  { Date: 1719615600000, Close: 19.99},&#xD;&#xA;  { Date: 1719615600000, Close: 19.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618354800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576796400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>010/062 - Lapras</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/010---lapras/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/010---lapras/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149172.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 29.99 on 12-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.49 on 11-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576018800000, Close: 2.49},&#xD;&#xA;  { Date: 1576105200000, Close: 2.99},&#xD;&#xA;  { Date: 1577142000000, Close: 3.49},&#xD;&#xA;  { Date: 1578092400000, Close: 3.99},&#xD;&#xA;  { Date: 1578697200000, Close: 3.39},&#xD;&#xA;  { Date: 1579647600000, Close: 3.99},&#xD;&#xA;  { Date: 1579820400000, Close: 4.99},&#xD;&#xA;  { Date: 1580943600000, Close: 5.39},&#xD;&#xA;  { Date: 1582671600000, Close: 5.99},&#xD;&#xA;  { Date: 1583967600000, Close: 6.49},&#xD;&#xA;  { Date: 1587164400000, Close: 6.99},&#xD;&#xA;  { Date: 1588633200000, Close: 9.49},&#xD;&#xA;  { Date: 1591398000000, Close: 9.99},&#xD;&#xA;  { Date: 1591743600000, Close: 10.99},&#xD;&#xA;  { Date: 1592521200000, Close: 11.99},&#xD;&#xA;  { Date: 1594249200000, Close: 10.99},&#xD;&#xA;  { Date: 1595718000000, Close: 9.79},&#xD;&#xA;  { Date: 1595977200000, Close: 8.99},&#xD;&#xA;  { Date: 1596582000000, Close: 8.39},&#xD;&#xA;  { Date: 1597100400000, Close: 8.99},&#xD;&#xA;  { Date: 1597705200000, Close: 9.49},&#xD;&#xA;  { Date: 1597791600000, Close: 8.99},&#xD;&#xA;  { Date: 1598569200000, Close: 9.49},&#xD;&#xA;  { Date: 1600297200000, Close: 10.99},&#xD;&#xA;  { Date: 1601593200000, Close: 11.49},&#xD;&#xA;  { Date: 1603321200000, Close: 12.99},&#xD;&#xA;  { Date: 1605135600000, Close: 29.99},&#xD;&#xA;  { Date: 1605567600000, Close: 27.99},&#xD;&#xA;  { Date: 1605826800000, Close: 29.99},&#xD;&#xA;  { Date: 1608073200000, Close: 28.99},&#xD;&#xA;  { Date: 1608591600000, Close: 24.99},&#xD;&#xA;  { Date: 1609282800000, Close: 23.49},&#xD;&#xA;  { Date: 1610492400000, Close: 21.99},&#xD;&#xA;  { Date: 1611097200000, Close: 23.99},&#xD;&#xA;  { Date: 1614898800000, Close: 22.49},&#xD;&#xA;  { Date: 1615590000000, Close: 19.99},&#xD;&#xA;  { Date: 1616108400000, Close: 18.99},&#xD;&#xA;  { Date: 1616713200000, Close: 16.99},&#xD;&#xA;  { Date: 1617750000000, Close: 15.99},&#xD;&#xA;  { Date: 1618354800000, Close: 16.49},&#xD;&#xA;  { Date: 1619046000000, Close: 16.89},&#xD;&#xA;  { Date: 1619650800000, Close: 16.99},&#xD;&#xA;  { Date: 1620342000000, Close: 15.49},&#xD;&#xA;  { Date: 1620946800000, Close: 15.99},&#xD;&#xA;  { Date: 1621465200000, Close: 14.99},&#xD;&#xA;  { Date: 1622242800000, Close: 13.49},&#xD;&#xA;  { Date: 1623366000000, Close: 11.99},&#xD;&#xA;  { Date: 1623970800000, Close: 12.99},&#xD;&#xA;  { Date: 1624489200000, Close: 11.99},&#xD;&#xA;  { Date: 1625266800000, Close: 12.49},&#xD;&#xA;  { Date: 1625785200000, Close: 12.99},&#xD;&#xA;  { Date: 1626908400000, Close: 15.49},&#xD;&#xA;  { Date: 1628895600000, Close: 15.99},&#xD;&#xA;  { Date: 1629500400000, Close: 14.99},&#xD;&#xA;  { Date: 1633042800000, Close: 13.99},&#xD;&#xA;  { Date: 1634252400000, Close: 15.99},&#xD;&#xA;  { Date: 1634943600000, Close: 19.99},&#xD;&#xA;  { Date: 1637017200000, Close: 17.99},&#xD;&#xA;  { Date: 1639090800000, Close: 19.99},&#xD;&#xA;  { Date: 1642633200000, Close: 20.99},&#xD;&#xA;  { Date: 1651791600000, Close: 19.49},&#xD;&#xA;  { Date: 1655938800000, Close: 17.99},&#xD;&#xA;  { Date: 1656716400000, Close: 15.99},&#xD;&#xA;  { Date: 1657839600000, Close: 14.99},&#xD;&#xA;  { Date: 1665788400000, Close: 14.49},&#xD;&#xA;  { Date: 1669330800000, Close: 12.29},&#xD;&#xA;  { Date: 1672441200000, Close: 13.79},&#xD;&#xA;  { Date: 1677279600000, Close: 16.19},&#xD;&#xA;  { Date: 1677711600000, Close: 16.29},&#xD;&#xA;  { Date: 1680908400000, Close: 19.99},&#xD;&#xA;  { Date: 1682636400000, Close: 19.49},&#xD;&#xA;  { Date: 1684450800000, Close: 16.79},&#xD;&#xA;  { Date: 1685055600000, Close: 17.99},&#xD;&#xA;  { Date: 1685142000000, Close: 15.39},&#xD;&#xA;  { Date: 1685574000000, Close: 15.09},&#xD;&#xA;  { Date: 1686006000000, Close: 14.99},&#xD;&#xA;  { Date: 1695769200000, Close: 19.29},&#xD;&#xA;  { Date: 1698361200000, Close: 19.99},&#xD;&#xA;  { Date: 1701558000000, Close: 18.49},&#xD;&#xA;  { Date: 1705618800000, Close: 16.99},&#xD;&#xA;  { Date: 1708383600000, Close: 15.99},&#xD;&#xA;  { Date: 1714604400000, Close: 17.99},&#xD;&#xA;  { Date: 1714604400000, Close: 17.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605135600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576018800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>011/062 - Magneton</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/011---magneton/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/011---magneton/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149239.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 21.99 on 09-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 3.79 on 19-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 3.99},&#xD;&#xA;  { Date: 1576105200000, Close: 3.89},&#xD;&#xA;  { Date: 1576710000000, Close: 3.79},&#xD;&#xA;  { Date: 1579906800000, Close: 3.89},&#xD;&#xA;  { Date: 1582239600000, Close: 4.99},&#xD;&#xA;  { Date: 1582758000000, Close: 5.99},&#xD;&#xA;  { Date: 1583881200000, Close: 6.49},&#xD;&#xA;  { Date: 1585004400000, Close: 5.99},&#xD;&#xA;  { Date: 1585609200000, Close: 6.49},&#xD;&#xA;  { Date: 1586646000000, Close: 6.99},&#xD;&#xA;  { Date: 1587164400000, Close: 6.49},&#xD;&#xA;  { Date: 1589065200000, Close: 7.99},&#xD;&#xA;  { Date: 1591138800000, Close: 9.99},&#xD;&#xA;  { Date: 1591830000000, Close: 10.99},&#xD;&#xA;  { Date: 1594162800000, Close: 9.79},&#xD;&#xA;  { Date: 1594854000000, Close: 9.99},&#xD;&#xA;  { Date: 1595026800000, Close: 10.49},&#xD;&#xA;  { Date: 1596150000000, Close: 9.99},&#xD;&#xA;  { Date: 1597359600000, Close: 10.49},&#xD;&#xA;  { Date: 1598569200000, Close: 10.99},&#xD;&#xA;  { Date: 1603321200000, Close: 13.99},&#xD;&#xA;  { Date: 1605135600000, Close: 17.99},&#xD;&#xA;  { Date: 1605654000000, Close: 18.99},&#xD;&#xA;  { Date: 1606863600000, Close: 19.99},&#xD;&#xA;  { Date: 1607468400000, Close: 21.99},&#xD;&#xA;  { Date: 1608591600000, Close: 19.99},&#xD;&#xA;  { Date: 1611097200000, Close: 18.99},&#xD;&#xA;  { Date: 1612393200000, Close: 19.99},&#xD;&#xA;  { Date: 1615417200000, Close: 18.49},&#xD;&#xA;  { Date: 1616886000000, Close: 16.99},&#xD;&#xA;  { Date: 1618009200000, Close: 15.49},&#xD;&#xA;  { Date: 1618354800000, Close: 13.99},&#xD;&#xA;  { Date: 1619218800000, Close: 15.99},&#xD;&#xA;  { Date: 1621292400000, Close: 16.99},&#xD;&#xA;  { Date: 1623798000000, Close: 15.49},&#xD;&#xA;  { Date: 1623970800000, Close: 13.99},&#xD;&#xA;  { Date: 1626994800000, Close: 12.99},&#xD;&#xA;  { Date: 1628290800000, Close: 13.99},&#xD;&#xA;  { Date: 1632438000000, Close: 14.99},&#xD;&#xA;  { Date: 1633042800000, Close: 13.99},&#xD;&#xA;  { Date: 1634166000000, Close: 12.99},&#xD;&#xA;  { Date: 1635894000000, Close: 13.99},&#xD;&#xA;  { Date: 1640905200000, Close: 17.99},&#xD;&#xA;  { Date: 1642806000000, Close: 19.99},&#xD;&#xA;  { Date: 1643929200000, Close: 18.49},&#xD;&#xA;  { Date: 1646866800000, Close: 17.99},&#xD;&#xA;  { Date: 1654815600000, Close: 18.99},&#xD;&#xA;  { Date: 1655161200000, Close: 19.99},&#xD;&#xA;  { Date: 1656457200000, Close: 18.49},&#xD;&#xA;  { Date: 1657407600000, Close: 16.99},&#xD;&#xA;  { Date: 1657839600000, Close: 15.99},&#xD;&#xA;  { Date: 1658444400000, Close: 14.99},&#xD;&#xA;  { Date: 1660345200000, Close: 13.99},&#xD;&#xA;  { Date: 1664924400000, Close: 12.49},&#xD;&#xA;  { Date: 1665788400000, Close: 10.99},&#xD;&#xA;  { Date: 1665874800000, Close: 10.49},&#xD;&#xA;  { Date: 1666220400000, Close: 10.29},&#xD;&#xA;  { Date: 1666566000000, Close: 10.09},&#xD;&#xA;  { Date: 1666911600000, Close: 9.99},&#xD;&#xA;  { Date: 1667862000000, Close: 8.79},&#xD;&#xA;  { Date: 1668726000000, Close: 8.19},&#xD;&#xA;  { Date: 1669071600000, Close: 7.99},&#xD;&#xA;  { Date: 1680562800000, Close: 8.99},&#xD;&#xA;  { Date: 1688166000000, Close: 14.99},&#xD;&#xA;  { Date: 1695942000000, Close: 18.19},&#xD;&#xA;  { Date: 1704754800000, Close: 18.99},&#xD;&#xA;  { Date: 1725404400000, Close: 19.99},&#xD;&#xA;  { Date: 1727996400000, Close: 17.99},&#xD;&#xA;  { Date: 1727996400000, Close: 17.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607468400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576710000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>012/062 - Moltres</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/012---moltres/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/012---moltres/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149294.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 79.99 on 02-07-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 16.99 on 15-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576882800000, Close: 17.99},&#xD;&#xA;  { Date: 1577142000000, Close: 19.99},&#xD;&#xA;  { Date: 1578092400000, Close: 18.49},&#xD;&#xA;  { Date: 1579042800000, Close: 16.99},&#xD;&#xA;  { Date: 1580943600000, Close: 17.99},&#xD;&#xA;  { Date: 1582758000000, Close: 18.99},&#xD;&#xA;  { Date: 1584745200000, Close: 19.99},&#xD;&#xA;  { Date: 1585695600000, Close: 18.99},&#xD;&#xA;  { Date: 1588633200000, Close: 25.99},&#xD;&#xA;  { Date: 1589238000000, Close: 29.99},&#xD;&#xA;  { Date: 1591225200000, Close: 39.99},&#xD;&#xA;  { Date: 1593385200000, Close: 44.99},&#xD;&#xA;  { Date: 1594940400000, Close: 41.99},&#xD;&#xA;  { Date: 1595890800000, Close: 38.99},&#xD;&#xA;  { Date: 1596495600000, Close: 39.99},&#xD;&#xA;  { Date: 1597100400000, Close: 40.99},&#xD;&#xA;  { Date: 1597705200000, Close: 39.99},&#xD;&#xA;  { Date: 1598310000000, Close: 37.99},&#xD;&#xA;  { Date: 1598569200000, Close: 36.99},&#xD;&#xA;  { Date: 1599087600000, Close: 37.99},&#xD;&#xA;  { Date: 1602630000000, Close: 35.99},&#xD;&#xA;  { Date: 1604444400000, Close: 49.99},&#xD;&#xA;  { Date: 1604962800000, Close: 51.99},&#xD;&#xA;  { Date: 1607986800000, Close: 54.99},&#xD;&#xA;  { Date: 1608591600000, Close: 53.99},&#xD;&#xA;  { Date: 1611183600000, Close: 64.99},&#xD;&#xA;  { Date: 1614726000000, Close: 65.99},&#xD;&#xA;  { Date: 1615417200000, Close: 61.99},&#xD;&#xA;  { Date: 1623106800000, Close: 69.99},&#xD;&#xA;  { Date: 1623884400000, Close: 74.99},&#xD;&#xA;  { Date: 1625180400000, Close: 79.99},&#xD;&#xA;  { Date: 1647990000000, Close: 74.99},&#xD;&#xA;  { Date: 1665010800000, Close: 70.99},&#xD;&#xA;  { Date: 1665874800000, Close: 66.99},&#xD;&#xA;  { Date: 1666738800000, Close: 62.99},&#xD;&#xA;  { Date: 1692572400000, Close: 58.99},&#xD;&#xA;  { Date: 1714604400000, Close: 54.99},&#xD;&#xA;  { Date: 1727996400000, Close: 49.99},&#xD;&#xA;  { Date: 1727996400000, Close: 49.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1625180400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579042800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>013/062 - Muk</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/013---muk/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/013---muk/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149301.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 20.99 on 08-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.19 on 29-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576882800000, Close: 1.49},&#xD;&#xA;  { Date: 1577574000000, Close: 1.19},&#xD;&#xA;  { Date: 1579042800000, Close: 1.99},&#xD;&#xA;  { Date: 1579302000000, Close: 2.49},&#xD;&#xA;  { Date: 1580943600000, Close: 2.99},&#xD;&#xA;  { Date: 1581030000000, Close: 3.49},&#xD;&#xA;  { Date: 1582326000000, Close: 4.29},&#xD;&#xA;  { Date: 1583967600000, Close: 4.59},&#xD;&#xA;  { Date: 1584399600000, Close: 3.99},&#xD;&#xA;  { Date: 1585609200000, Close: 4.99},&#xD;&#xA;  { Date: 1585868400000, Close: 4.49},&#xD;&#xA;  { Date: 1586646000000, Close: 3.99},&#xD;&#xA;  { Date: 1587164400000, Close: 4.49},&#xD;&#xA;  { Date: 1587682800000, Close: 4.99},&#xD;&#xA;  { Date: 1588892400000, Close: 5.49},&#xD;&#xA;  { Date: 1591138800000, Close: 5.99},&#xD;&#xA;  { Date: 1591830000000, Close: 6.49},&#xD;&#xA;  { Date: 1593558000000, Close: 6.99},&#xD;&#xA;  { Date: 1594767600000, Close: 7.09},&#xD;&#xA;  { Date: 1597100400000, Close: 7.19},&#xD;&#xA;  { Date: 1597359600000, Close: 6.79},&#xD;&#xA;  { Date: 1598050800000, Close: 5.99},&#xD;&#xA;  { Date: 1600470000000, Close: 6.99},&#xD;&#xA;  { Date: 1601593200000, Close: 11.99},&#xD;&#xA;  { Date: 1602543600000, Close: 12.99},&#xD;&#xA;  { Date: 1603321200000, Close: 13.99},&#xD;&#xA;  { Date: 1605135600000, Close: 19.99},&#xD;&#xA;  { Date: 1607382000000, Close: 20.99},&#xD;&#xA;  { Date: 1607468400000, Close: 19.99},&#xD;&#xA;  { Date: 1608764400000, Close: 17.99},&#xD;&#xA;  { Date: 1610146800000, Close: 15.99},&#xD;&#xA;  { Date: 1612911600000, Close: 14.99},&#xD;&#xA;  { Date: 1614553200000, Close: 13.49},&#xD;&#xA;  { Date: 1614726000000, Close: 11.99},&#xD;&#xA;  { Date: 1617404400000, Close: 10.99},&#xD;&#xA;  { Date: 1618009200000, Close: 9.99},&#xD;&#xA;  { Date: 1618873200000, Close: 8.99},&#xD;&#xA;  { Date: 1620169200000, Close: 8.39},&#xD;&#xA;  { Date: 1620342000000, Close: 7.49},&#xD;&#xA;  { Date: 1620860400000, Close: 6.99},&#xD;&#xA;  { Date: 1621378800000, Close: 7.49},&#xD;&#xA;  { Date: 1622070000000, Close: 6.99},&#xD;&#xA;  { Date: 1622242800000, Close: 6.49},&#xD;&#xA;  { Date: 1622761200000, Close: 7.49},&#xD;&#xA;  { Date: 1623970800000, Close: 7.99},&#xD;&#xA;  { Date: 1624489200000, Close: 6.99},&#xD;&#xA;  { Date: 1625266800000, Close: 7.99},&#xD;&#xA;  { Date: 1626908400000, Close: 7.49},&#xD;&#xA;  { Date: 1628895600000, Close: 7.99},&#xD;&#xA;  { Date: 1631574000000, Close: 7.39},&#xD;&#xA;  { Date: 1632524400000, Close: 7.49},&#xD;&#xA;  { Date: 1635548400000, Close: 6.99},&#xD;&#xA;  { Date: 1637622000000, Close: 7.99},&#xD;&#xA;  { Date: 1638313200000, Close: 7.39},&#xD;&#xA;  { Date: 1639177200000, Close: 6.79},&#xD;&#xA;  { Date: 1640214000000, Close: 6.19},&#xD;&#xA;  { Date: 1640732400000, Close: 5.49},&#xD;&#xA;  { Date: 1646089200000, Close: 9.99},&#xD;&#xA;  { Date: 1649458800000, Close: 7.49},&#xD;&#xA;  { Date: 1651878000000, Close: 8.49},&#xD;&#xA;  { Date: 1656025200000, Close: 8.29},&#xD;&#xA;  { Date: 1656889200000, Close: 7.59},&#xD;&#xA;  { Date: 1657839600000, Close: 6.49},&#xD;&#xA;  { Date: 1661900400000, Close: 7.99},&#xD;&#xA;  { Date: 1665788400000, Close: 7.49},&#xD;&#xA;  { Date: 1669676400000, Close: 6.99},&#xD;&#xA;  { Date: 1677970800000, Close: 7.39},&#xD;&#xA;  { Date: 1680217200000, Close: 7.49},&#xD;&#xA;  { Date: 1681426800000, Close: 9.99},&#xD;&#xA;  { Date: 1687215600000, Close: 10.99},&#xD;&#xA;  { Date: 1698102000000, Close: 12.99},&#xD;&#xA;  { Date: 1700607600000, Close: 11.99},&#xD;&#xA;  { Date: 1713222000000, Close: 12.99},&#xD;&#xA;  { Date: 1718492400000, Close: 11.49},&#xD;&#xA;  { Date: 1727737200000, Close: 11.99},&#xD;&#xA;  { Date: 1727737200000, Close: 11.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607382000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577574000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>014/062 - Raichu</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/014---raichu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/014---raichu/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149379.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 39.99 on 10-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 10.99 on 15-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579042800000, Close: 10.99},&#xD;&#xA;  { Date: 1581375600000, Close: 11.49},&#xD;&#xA;  { Date: 1582239600000, Close: 11.99},&#xD;&#xA;  { Date: 1585004400000, Close: 10.99},&#xD;&#xA;  { Date: 1585782000000, Close: 11.99},&#xD;&#xA;  { Date: 1586646000000, Close: 12.99},&#xD;&#xA;  { Date: 1588892400000, Close: 15.49},&#xD;&#xA;  { Date: 1591052400000, Close: 15.99},&#xD;&#xA;  { Date: 1592089200000, Close: 17.99},&#xD;&#xA;  { Date: 1593558000000, Close: 19.99},&#xD;&#xA;  { Date: 1594854000000, Close: 20.99},&#xD;&#xA;  { Date: 1596495600000, Close: 22.99},&#xD;&#xA;  { Date: 1596668400000, Close: 23.99},&#xD;&#xA;  { Date: 1600210800000, Close: 27.99},&#xD;&#xA;  { Date: 1601593200000, Close: 26.49},&#xD;&#xA;  { Date: 1602284400000, Close: 24.99},&#xD;&#xA;  { Date: 1604962800000, Close: 39.99},&#xD;&#xA;  { Date: 1605740400000, Close: 34.99},&#xD;&#xA;  { Date: 1606518000000, Close: 35.99},&#xD;&#xA;  { Date: 1608246000000, Close: 32.99},&#xD;&#xA;  { Date: 1608764400000, Close: 29.99},&#xD;&#xA;  { Date: 1615503600000, Close: 27.99},&#xD;&#xA;  { Date: 1616799600000, Close: 24.99},&#xD;&#xA;  { Date: 1618009200000, Close: 19.99},&#xD;&#xA;  { Date: 1618527600000, Close: 21.99},&#xD;&#xA;  { Date: 1619046000000, Close: 23.99},&#xD;&#xA;  { Date: 1619132400000, Close: 22.49},&#xD;&#xA;  { Date: 1619650800000, Close: 23.99},&#xD;&#xA;  { Date: 1620687600000, Close: 24.99},&#xD;&#xA;  { Date: 1623366000000, Close: 23.49},&#xD;&#xA;  { Date: 1625698800000, Close: 21.99},&#xD;&#xA;  { Date: 1626303600000, Close: 22.99},&#xD;&#xA;  { Date: 1626822000000, Close: 23.39},&#xD;&#xA;  { Date: 1628895600000, Close: 22.99},&#xD;&#xA;  { Date: 1635462000000, Close: 23.99},&#xD;&#xA;  { Date: 1637622000000, Close: 25.99},&#xD;&#xA;  { Date: 1639090800000, Close: 29.99},&#xD;&#xA;  { Date: 1641423600000, Close: 31.99},&#xD;&#xA;  { Date: 1644274800000, Close: 29.99},&#xD;&#xA;  { Date: 1645570800000, Close: 27.99},&#xD;&#xA;  { Date: 1645830000000, Close: 24.49},&#xD;&#xA;  { Date: 1649977200000, Close: 25.99},&#xD;&#xA;  { Date: 1651878000000, Close: 27.99},&#xD;&#xA;  { Date: 1655420400000, Close: 26.49},&#xD;&#xA;  { Date: 1656630000000, Close: 24.99},&#xD;&#xA;  { Date: 1661900400000, Close: 25.99},&#xD;&#xA;  { Date: 1665788400000, Close: 24.99},&#xD;&#xA;  { Date: 1677193200000, Close: 25.59},&#xD;&#xA;  { Date: 1677538800000, Close: 25.29},&#xD;&#xA;  { Date: 1678143600000, Close: 25.49},&#xD;&#xA;  { Date: 1685055600000, Close: 27.09},&#xD;&#xA;  { Date: 1695942000000, Close: 26.99},&#xD;&#xA;  { Date: 1697324400000, Close: 29.99},&#xD;&#xA;  { Date: 1697324400000, Close: 29.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1604962800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579042800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>015/062 - Zapdos</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/015---zapdos/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/015---zapdos/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149538.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 27.99 on 26-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 6.79 on 06-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575586800000, Close: 6.79},&#xD;&#xA;  { Date: 1577228400000, Close: 7.99},&#xD;&#xA;  { Date: 1578524400000, Close: 8.99},&#xD;&#xA;  { Date: 1580338800000, Close: 9.99},&#xD;&#xA;  { Date: 1581030000000, Close: 10.99},&#xD;&#xA;  { Date: 1582671600000, Close: 12.99},&#xD;&#xA;  { Date: 1583967600000, Close: 11.49},&#xD;&#xA;  { Date: 1585004400000, Close: 10.99},&#xD;&#xA;  { Date: 1585782000000, Close: 9.99},&#xD;&#xA;  { Date: 1586732400000, Close: 8.79},&#xD;&#xA;  { Date: 1586905200000, Close: 7.99},&#xD;&#xA;  { Date: 1588028400000, Close: 8.99},&#xD;&#xA;  { Date: 1591138800000, Close: 10.49},&#xD;&#xA;  { Date: 1592521200000, Close: 12.99},&#xD;&#xA;  { Date: 1594940400000, Close: 17.99},&#xD;&#xA;  { Date: 1595890800000, Close: 19.99},&#xD;&#xA;  { Date: 1596841200000, Close: 20.99},&#xD;&#xA;  { Date: 1598310000000, Close: 19.99},&#xD;&#xA;  { Date: 1598569200000, Close: 18.99},&#xD;&#xA;  { Date: 1599519600000, Close: 17.49},&#xD;&#xA;  { Date: 1600124400000, Close: 15.99},&#xD;&#xA;  { Date: 1600988400000, Close: 14.99},&#xD;&#xA;  { Date: 1601938800000, Close: 11.99},&#xD;&#xA;  { Date: 1602543600000, Close: 13.99},&#xD;&#xA;  { Date: 1604962800000, Close: 24.99},&#xD;&#xA;  { Date: 1606345200000, Close: 23.99},&#xD;&#xA;  { Date: 1606863600000, Close: 19.99},&#xD;&#xA;  { Date: 1606950000000, Close: 17.99},&#xD;&#xA;  { Date: 1607382000000, Close: 23.99},&#xD;&#xA;  { Date: 1614294000000, Close: 27.99},&#xD;&#xA;  { Date: 1615158000000, Close: 26.49},&#xD;&#xA;  { Date: 1616799600000, Close: 26.99},&#xD;&#xA;  { Date: 1616972400000, Close: 25.49},&#xD;&#xA;  { Date: 1617922800000, Close: 23.99},&#xD;&#xA;  { Date: 1619046000000, Close: 24.99},&#xD;&#xA;  { Date: 1619478000000, Close: 23.49},&#xD;&#xA;  { Date: 1620428400000, Close: 21.99},&#xD;&#xA;  { Date: 1620946800000, Close: 22.99},&#xD;&#xA;  { Date: 1622242800000, Close: 21.99},&#xD;&#xA;  { Date: 1623538800000, Close: 20.49},&#xD;&#xA;  { Date: 1624316400000, Close: 19.99},&#xD;&#xA;  { Date: 1624921200000, Close: 21.99},&#xD;&#xA;  { Date: 1625871600000, Close: 20.49},&#xD;&#xA;  { Date: 1626303600000, Close: 19.99},&#xD;&#xA;  { Date: 1627254000000, Close: 18.49},&#xD;&#xA;  { Date: 1627686000000, Close: 15.99},&#xD;&#xA;  { Date: 1631919600000, Close: 19.99},&#xD;&#xA;  { Date: 1632870000000, Close: 20.99},&#xD;&#xA;  { Date: 1632956400000, Close: 21.99},&#xD;&#xA;  { Date: 1634943600000, Close: 24.99},&#xD;&#xA;  { Date: 1635548400000, Close: 21.99},&#xD;&#xA;  { Date: 1642028400000, Close: 23.49},&#xD;&#xA;  { Date: 1643756400000, Close: 24.99},&#xD;&#xA;  { Date: 1652396400000, Close: 25.99},&#xD;&#xA;  { Date: 1657062000000, Close: 24.49},&#xD;&#xA;  { Date: 1657839600000, Close: 22.99},&#xD;&#xA;  { Date: 1660345200000, Close: 24.99},&#xD;&#xA;  { Date: 1665010800000, Close: 23.49},&#xD;&#xA;  { Date: 1665874800000, Close: 21.99},&#xD;&#xA;  { Date: 1666738800000, Close: 20.49},&#xD;&#xA;  { Date: 1667602800000, Close: 18.99},&#xD;&#xA;  { Date: 1667775600000, Close: 16.79},&#xD;&#xA;  { Date: 1668294000000, Close: 16.59},&#xD;&#xA;  { Date: 1668639600000, Close: 16.49},&#xD;&#xA;  { Date: 1669071600000, Close: 15.99},&#xD;&#xA;  { Date: 1678316400000, Close: 11.99},&#xD;&#xA;  { Date: 1678402800000, Close: 13.49},&#xD;&#xA;  { Date: 1694214000000, Close: 17.99},&#xD;&#xA;  { Date: 1726095600000, Close: 15.39},&#xD;&#xA;  { Date: 1727737200000, Close: 15.59},&#xD;&#xA;  { Date: 1727737200000, Close: 15.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614294000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575586800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>016/062 - Aerodactyl</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/016---aerodactyl/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/016---aerodactyl/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148828.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.99 on 02-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.79 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.79},&#xD;&#xA;  { Date: 1578610800000, Close: 1.99},&#xD;&#xA;  { Date: 1581116400000, Close: 2.29},&#xD;&#xA;  { Date: 1582758000000, Close: 2.49},&#xD;&#xA;  { Date: 1583967600000, Close: 2.99},&#xD;&#xA;  { Date: 1586646000000, Close: 3.99},&#xD;&#xA;  { Date: 1588892400000, Close: 4.99},&#xD;&#xA;  { Date: 1591225200000, Close: 5.49},&#xD;&#xA;  { Date: 1593471600000, Close: 5.59},&#xD;&#xA;  { Date: 1595026800000, Close: 5.99},&#xD;&#xA;  { Date: 1597100400000, Close: 5.49},&#xD;&#xA;  { Date: 1597705200000, Close: 5.59},&#xD;&#xA;  { Date: 1598310000000, Close: 4.99},&#xD;&#xA;  { Date: 1598569200000, Close: 5.39},&#xD;&#xA;  { Date: 1599001200000, Close: 4.99},&#xD;&#xA;  { Date: 1600815600000, Close: 4.49},&#xD;&#xA;  { Date: 1601938800000, Close: 4.39},&#xD;&#xA;  { Date: 1602889200000, Close: 4.49},&#xD;&#xA;  { Date: 1603494000000, Close: 4.99},&#xD;&#xA;  { Date: 1604617200000, Close: 5.99},&#xD;&#xA;  { Date: 1605135600000, Close: 6.99},&#xD;&#xA;  { Date: 1605740400000, Close: 7.49},&#xD;&#xA;  { Date: 1606863600000, Close: 7.99},&#xD;&#xA;  { Date: 1608591600000, Close: 6.99},&#xD;&#xA;  { Date: 1609628400000, Close: 6.39},&#xD;&#xA;  { Date: 1609801200000, Close: 5.99},&#xD;&#xA;  { Date: 1611183600000, Close: 6.89},&#xD;&#xA;  { Date: 1612911600000, Close: 7.49},&#xD;&#xA;  { Date: 1614380400000, Close: 7.79},&#xD;&#xA;  { Date: 1617145200000, Close: 7.49},&#xD;&#xA;  { Date: 1619650800000, Close: 7.99},&#xD;&#xA;  { Date: 1620342000000, Close: 7.39},&#xD;&#xA;  { Date: 1620687600000, Close: 6.49},&#xD;&#xA;  { Date: 1625266800000, Close: 6.99},&#xD;&#xA;  { Date: 1626908400000, Close: 6.49},&#xD;&#xA;  { Date: 1628809200000, Close: 5.79},&#xD;&#xA;  { Date: 1631919600000, Close: 5.99},&#xD;&#xA;  { Date: 1634252400000, Close: 5.49},&#xD;&#xA;  { Date: 1635202800000, Close: 5.99},&#xD;&#xA;  { Date: 1635375600000, Close: 6.99},&#xD;&#xA;  { Date: 1644534000000, Close: 7.39},&#xD;&#xA;  { Date: 1645052400000, Close: 7.49},&#xD;&#xA;  { Date: 1646866800000, Close: 6.99},&#xD;&#xA;  { Date: 1650495600000, Close: 6.39},&#xD;&#xA;  { Date: 1652396400000, Close: 6.99},&#xD;&#xA;  { Date: 1655420400000, Close: 6.59},&#xD;&#xA;  { Date: 1656457200000, Close: 5.99},&#xD;&#xA;  { Date: 1657407600000, Close: 5.39},&#xD;&#xA;  { Date: 1657926000000, Close: 4.99},&#xD;&#xA;  { Date: 1661554800000, Close: 4.49},&#xD;&#xA;  { Date: 1675119600000, Close: 4.99},&#xD;&#xA;  { Date: 1687215600000, Close: 5.99},&#xD;&#xA;  { Date: 1695942000000, Close: 6.49},&#xD;&#xA;  { Date: 1707865200000, Close: 6.99},&#xD;&#xA;  { Date: 1716332400000, Close: 7.99},&#xD;&#xA;  { Date: 1719615600000, Close: 6.99},&#xD;&#xA;  { Date: 1728082800000, Close: 6.39},&#xD;&#xA;  { Date: 1728082800000, Close: 6.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606863600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>017/062 - Articuno</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/017---articuno/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/017---articuno/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148834.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 15.99 on 21-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.99 on 07-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578351600000, Close: 2.99},&#xD;&#xA;  { Date: 1579129200000, Close: 3.99},&#xD;&#xA;  { Date: 1580943600000, Close: 4.49},&#xD;&#xA;  { Date: 1581462000000, Close: 4.29},&#xD;&#xA;  { Date: 1582758000000, Close: 4.39},&#xD;&#xA;  { Date: 1583967600000, Close: 4.69},&#xD;&#xA;  { Date: 1584486000000, Close: 4.49},&#xD;&#xA;  { Date: 1585004400000, Close: 4.29},&#xD;&#xA;  { Date: 1585695600000, Close: 3.99},&#xD;&#xA;  { Date: 1595631600000, Close: 5.99},&#xD;&#xA;  { Date: 1596495600000, Close: 6.49},&#xD;&#xA;  { Date: 1597100400000, Close: 5.99},&#xD;&#xA;  { Date: 1597705200000, Close: 6.49},&#xD;&#xA;  { Date: 1598310000000, Close: 6.99},&#xD;&#xA;  { Date: 1600124400000, Close: 7.49},&#xD;&#xA;  { Date: 1600815600000, Close: 6.99},&#xD;&#xA;  { Date: 1602284400000, Close: 6.49},&#xD;&#xA;  { Date: 1602889200000, Close: 6.99},&#xD;&#xA;  { Date: 1604617200000, Close: 7.99},&#xD;&#xA;  { Date: 1605049200000, Close: 9.99},&#xD;&#xA;  { Date: 1614121200000, Close: 11.99},&#xD;&#xA;  { Date: 1615503600000, Close: 12.99},&#xD;&#xA;  { Date: 1616022000000, Close: 13.49},&#xD;&#xA;  { Date: 1617145200000, Close: 13.99},&#xD;&#xA;  { Date: 1618354800000, Close: 14.99},&#xD;&#xA;  { Date: 1618959600000, Close: 15.99},&#xD;&#xA;  { Date: 1619564400000, Close: 14.99},&#xD;&#xA;  { Date: 1620428400000, Close: 13.99},&#xD;&#xA;  { Date: 1624921200000, Close: 11.99},&#xD;&#xA;  { Date: 1625698800000, Close: 10.99},&#xD;&#xA;  { Date: 1626303600000, Close: 11.49},&#xD;&#xA;  { Date: 1626994800000, Close: 10.49},&#xD;&#xA;  { Date: 1627945200000, Close: 9.39},&#xD;&#xA;  { Date: 1628031600000, Close: 8.99},&#xD;&#xA;  { Date: 1629500400000, Close: 8.49},&#xD;&#xA;  { Date: 1632697200000, Close: 7.79},&#xD;&#xA;  { Date: 1633129200000, Close: 7.49},&#xD;&#xA;  { Date: 1634252400000, Close: 6.99},&#xD;&#xA;  { Date: 1634943600000, Close: 7.99},&#xD;&#xA;  { Date: 1642633200000, Close: 8.39},&#xD;&#xA;  { Date: 1642806000000, Close: 8.49},&#xD;&#xA;  { Date: 1644620400000, Close: 8.99},&#xD;&#xA;  { Date: 1645052400000, Close: 7.99},&#xD;&#xA;  { Date: 1649113200000, Close: 8.49},&#xD;&#xA;  { Date: 1652396400000, Close: 9.99},&#xD;&#xA;  { Date: 1656457200000, Close: 10.49},&#xD;&#xA;  { Date: 1660086000000, Close: 9.99},&#xD;&#xA;  { Date: 1715209200000, Close: 10.49},&#xD;&#xA;  { Date: 1716332400000, Close: 10.99},&#xD;&#xA;  { Date: 1716332400000, Close: 10.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618959600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578351600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>018/062 - Ditto</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/018---ditto/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/018---ditto/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148974.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 10.99 on 04-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.59 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 2.59},&#xD;&#xA;  { Date: 1578610800000, Close: 2.99},&#xD;&#xA;  { Date: 1579734000000, Close: 3.49},&#xD;&#xA;  { Date: 1580770800000, Close: 3.99},&#xD;&#xA;  { Date: 1582153200000, Close: 4.99},&#xD;&#xA;  { Date: 1582671600000, Close: 5.49},&#xD;&#xA;  { Date: 1583967600000, Close: 5.29},&#xD;&#xA;  { Date: 1584486000000, Close: 4.99},&#xD;&#xA;  { Date: 1585004400000, Close: 4.49},&#xD;&#xA;  { Date: 1585782000000, Close: 3.99},&#xD;&#xA;  { Date: 1586818800000, Close: 3.49},&#xD;&#xA;  { Date: 1587423600000, Close: 3.59},&#xD;&#xA;  { Date: 1588028400000, Close: 4.49},&#xD;&#xA;  { Date: 1588719600000, Close: 4.99},&#xD;&#xA;  { Date: 1588892400000, Close: 5.99},&#xD;&#xA;  { Date: 1589324400000, Close: 6.99},&#xD;&#xA;  { Date: 1591225200000, Close: 7.99},&#xD;&#xA;  { Date: 1591830000000, Close: 7.49},&#xD;&#xA;  { Date: 1592866800000, Close: 6.99},&#xD;&#xA;  { Date: 1594162800000, Close: 6.39},&#xD;&#xA;  { Date: 1594681200000, Close: 6.89},&#xD;&#xA;  { Date: 1595026800000, Close: 6.99},&#xD;&#xA;  { Date: 1595977200000, Close: 7.29},&#xD;&#xA;  { Date: 1597100400000, Close: 6.99},&#xD;&#xA;  { Date: 1599087600000, Close: 7.99},&#xD;&#xA;  { Date: 1600124400000, Close: 7.49},&#xD;&#xA;  { Date: 1603321200000, Close: 7.69},&#xD;&#xA;  { Date: 1604098800000, Close: 7.49},&#xD;&#xA;  { Date: 1604617200000, Close: 6.99},&#xD;&#xA;  { Date: 1606345200000, Close: 7.49},&#xD;&#xA;  { Date: 1607554800000, Close: 7.79},&#xD;&#xA;  { Date: 1608073200000, Close: 7.49},&#xD;&#xA;  { Date: 1609282800000, Close: 7.59},&#xD;&#xA;  { Date: 1609887600000, Close: 7.99},&#xD;&#xA;  { Date: 1611788400000, Close: 7.49},&#xD;&#xA;  { Date: 1612306800000, Close: 7.99},&#xD;&#xA;  { Date: 1614812400000, Close: 10.99},&#xD;&#xA;  { Date: 1617231600000, Close: 9.99},&#xD;&#xA;  { Date: 1618009200000, Close: 10.99},&#xD;&#xA;  { Date: 1620428400000, Close: 9.99},&#xD;&#xA;  { Date: 1620946800000, Close: 10.99},&#xD;&#xA;  { Date: 1621033200000, Close: 9.99},&#xD;&#xA;  { Date: 1623970800000, Close: 10.99},&#xD;&#xA;  { Date: 1624489200000, Close: 9.49},&#xD;&#xA;  { Date: 1625698800000, Close: 8.99},&#xD;&#xA;  { Date: 1627081200000, Close: 8.49},&#xD;&#xA;  { Date: 1628290800000, Close: 7.79},&#xD;&#xA;  { Date: 1628895600000, Close: 7.99},&#xD;&#xA;  { Date: 1632956400000, Close: 8.99},&#xD;&#xA;  { Date: 1634943600000, Close: 8.49},&#xD;&#xA;  { Date: 1637622000000, Close: 8.99},&#xD;&#xA;  { Date: 1639090800000, Close: 8.39},&#xD;&#xA;  { Date: 1639782000000, Close: 7.49},&#xD;&#xA;  { Date: 1643065200000, Close: 7.99},&#xD;&#xA;  { Date: 1644274800000, Close: 8.39},&#xD;&#xA;  { Date: 1645052400000, Close: 7.99},&#xD;&#xA;  { Date: 1646348400000, Close: 7.39},&#xD;&#xA;  { Date: 1646866800000, Close: 7.29},&#xD;&#xA;  { Date: 1649977200000, Close: 7.49},&#xD;&#xA;  { Date: 1656025200000, Close: 7.29},&#xD;&#xA;  { Date: 1656543600000, Close: 6.79},&#xD;&#xA;  { Date: 1658444400000, Close: 6.99},&#xD;&#xA;  { Date: 1661554800000, Close: 6.49},&#xD;&#xA;  { Date: 1667862000000, Close: 6.99},&#xD;&#xA;  { Date: 1678748400000, Close: 7.49},&#xD;&#xA;  { Date: 1686956400000, Close: 7.99},&#xD;&#xA;  { Date: 1727996400000, Close: 8.39},&#xD;&#xA;  { Date: 1727996400000, Close: 8.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614812400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>019/062 - Dragonite</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/019---dragonite/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/019---dragonite/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148983.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 21.99 on 19-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.99 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 4.99},&#xD;&#xA;  { Date: 1581030000000, Close: 7.99},&#xD;&#xA;  { Date: 1582585200000, Close: 8.99},&#xD;&#xA;  { Date: 1583967600000, Close: 7.99},&#xD;&#xA;  { Date: 1584486000000, Close: 7.49},&#xD;&#xA;  { Date: 1585004400000, Close: 6.99},&#xD;&#xA;  { Date: 1585609200000, Close: 7.49},&#xD;&#xA;  { Date: 1588633200000, Close: 9.99},&#xD;&#xA;  { Date: 1589238000000, Close: 10.89},&#xD;&#xA;  { Date: 1589929200000, Close: 11.99},&#xD;&#xA;  { Date: 1592866800000, Close: 10.99},&#xD;&#xA;  { Date: 1594162800000, Close: 9.79},&#xD;&#xA;  { Date: 1594422000000, Close: 10.49},&#xD;&#xA;  { Date: 1594940400000, Close: 9.99},&#xD;&#xA;  { Date: 1595545200000, Close: 10.49},&#xD;&#xA;  { Date: 1596063600000, Close: 9.99},&#xD;&#xA;  { Date: 1596754800000, Close: 10.49},&#xD;&#xA;  { Date: 1597705200000, Close: 10.99},&#xD;&#xA;  { Date: 1598310000000, Close: 11.99},&#xD;&#xA;  { Date: 1600902000000, Close: 12.99},&#xD;&#xA;  { Date: 1602198000000, Close: 13.49},&#xD;&#xA;  { Date: 1602716400000, Close: 13.99},&#xD;&#xA;  { Date: 1603321200000, Close: 14.99},&#xD;&#xA;  { Date: 1604962800000, Close: 17.99},&#xD;&#xA;  { Date: 1605049200000, Close: 19.99},&#xD;&#xA;  { Date: 1605740400000, Close: 21.99},&#xD;&#xA;  { Date: 1608764400000, Close: 20.49},&#xD;&#xA;  { Date: 1609974000000, Close: 19.99},&#xD;&#xA;  { Date: 1610578800000, Close: 20.45},&#xD;&#xA;  { Date: 1612998000000, Close: 20.99},&#xD;&#xA;  { Date: 1615503600000, Close: 19.99},&#xD;&#xA;  { Date: 1618441200000, Close: 17.99},&#xD;&#xA;  { Date: 1620342000000, Close: 14.99},&#xD;&#xA;  { Date: 1620946800000, Close: 15.99},&#xD;&#xA;  { Date: 1621465200000, Close: 14.99},&#xD;&#xA;  { Date: 1622242800000, Close: 13.99},&#xD;&#xA;  { Date: 1622761200000, Close: 12.99},&#xD;&#xA;  { Date: 1623366000000, Close: 13.99},&#xD;&#xA;  { Date: 1624489200000, Close: 12.99},&#xD;&#xA;  { Date: 1626908400000, Close: 11.99},&#xD;&#xA;  { Date: 1631919600000, Close: 13.99},&#xD;&#xA;  { Date: 1634252400000, Close: 15.99},&#xD;&#xA;  { Date: 1635548400000, Close: 14.99},&#xD;&#xA;  { Date: 1642806000000, Close: 19.99},&#xD;&#xA;  { Date: 1645052400000, Close: 17.99},&#xD;&#xA;  { Date: 1646348400000, Close: 14.99},&#xD;&#xA;  { Date: 1658444400000, Close: 13.99},&#xD;&#xA;  { Date: 1660604400000, Close: 12.99},&#xD;&#xA;  { Date: 1661554800000, Close: 14.99},&#xD;&#xA;  { Date: 1673910000000, Close: 15.99},&#xD;&#xA;  { Date: 1682204400000, Close: 14.99},&#xD;&#xA;  { Date: 1688252400000, Close: 13.39},&#xD;&#xA;  { Date: 1689894000000, Close: 14.19},&#xD;&#xA;  { Date: 1691017200000, Close: 13.59},&#xD;&#xA;  { Date: 1691535600000, Close: 14.09},&#xD;&#xA;  { Date: 1691708400000, Close: 12.99},&#xD;&#xA;  { Date: 1714172400000, Close: 10.99},&#xD;&#xA;  { Date: 1715209200000, Close: 9.59},&#xD;&#xA;  { Date: 1715554800000, Close: 9.99},&#xD;&#xA;  { Date: 1718233200000, Close: 10.99},&#xD;&#xA;  { Date: 1718233200000, Close: 10.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605740400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>020/062 - Gengar</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/020---gengar/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/020---gengar/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149064.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 12.99 on 17-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.99 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 2.99},&#xD;&#xA;  { Date: 1581030000000, Close: 3.49},&#xD;&#xA;  { Date: 1582758000000, Close: 4.99},&#xD;&#xA;  { Date: 1584054000000, Close: 5.39},&#xD;&#xA;  { Date: 1585350000000, Close: 5.99},&#xD;&#xA;  { Date: 1586646000000, Close: 6.49},&#xD;&#xA;  { Date: 1588460400000, Close: 6.99},&#xD;&#xA;  { Date: 1588633200000, Close: 7.49},&#xD;&#xA;  { Date: 1588892400000, Close: 7.99},&#xD;&#xA;  { Date: 1589410800000, Close: 7.49},&#xD;&#xA;  { Date: 1589929200000, Close: 7.99},&#xD;&#xA;  { Date: 1591138800000, Close: 9.99},&#xD;&#xA;  { Date: 1591830000000, Close: 9.49},&#xD;&#xA;  { Date: 1595026800000, Close: 9.99},&#xD;&#xA;  { Date: 1595113200000, Close: 9.39},&#xD;&#xA;  { Date: 1596668400000, Close: 8.79},&#xD;&#xA;  { Date: 1597878000000, Close: 9.29},&#xD;&#xA;  { Date: 1598310000000, Close: 8.99},&#xD;&#xA;  { Date: 1598569200000, Close: 9.29},&#xD;&#xA;  { Date: 1601161200000, Close: 8.59},&#xD;&#xA;  { Date: 1601593200000, Close: 8.99},&#xD;&#xA;  { Date: 1602198000000, Close: 9.19},&#xD;&#xA;  { Date: 1602716400000, Close: 8.99},&#xD;&#xA;  { Date: 1603234800000, Close: 9.19},&#xD;&#xA;  { Date: 1605740400000, Close: 9.99},&#xD;&#xA;  { Date: 1606863600000, Close: 9.49},&#xD;&#xA;  { Date: 1607468400000, Close: 9.99},&#xD;&#xA;  { Date: 1608591600000, Close: 9.49},&#xD;&#xA;  { Date: 1611788400000, Close: 8.99},&#xD;&#xA;  { Date: 1617750000000, Close: 8.49},&#xD;&#xA;  { Date: 1620860400000, Close: 7.99},&#xD;&#xA;  { Date: 1622242800000, Close: 7.49},&#xD;&#xA;  { Date: 1624489200000, Close: 6.99},&#xD;&#xA;  { Date: 1625266800000, Close: 6.49},&#xD;&#xA;  { Date: 1625785200000, Close: 6.69},&#xD;&#xA;  { Date: 1626908400000, Close: 6.49},&#xD;&#xA;  { Date: 1628290800000, Close: 5.79},&#xD;&#xA;  { Date: 1629500400000, Close: 7.99},&#xD;&#xA;  { Date: 1631746800000, Close: 7.39},&#xD;&#xA;  { Date: 1632438000000, Close: 7.99},&#xD;&#xA;  { Date: 1633042800000, Close: 7.49},&#xD;&#xA;  { Date: 1634943600000, Close: 7.99},&#xD;&#xA;  { Date: 1636412400000, Close: 8.99},&#xD;&#xA;  { Date: 1644620400000, Close: 9.59},&#xD;&#xA;  { Date: 1645052400000, Close: 9.49},&#xD;&#xA;  { Date: 1653606000000, Close: 10.99},&#xD;&#xA;  { Date: 1655420400000, Close: 12.99},&#xD;&#xA;  { Date: 1656716400000, Close: 10.99},&#xD;&#xA;  { Date: 1657926000000, Close: 9.49},&#xD;&#xA;  { Date: 1664924400000, Close: 8.79},&#xD;&#xA;  { Date: 1666134000000, Close: 8.19},&#xD;&#xA;  { Date: 1667343600000, Close: 7.59},&#xD;&#xA;  { Date: 1667430000000, Close: 6.99},&#xD;&#xA;  { Date: 1671404400000, Close: 7.09},&#xD;&#xA;  { Date: 1676934000000, Close: 6.29},&#xD;&#xA;  { Date: 1677970800000, Close: 6.69},&#xD;&#xA;  { Date: 1679612400000, Close: 6.59},&#xD;&#xA;  { Date: 1685055600000, Close: 6.99},&#xD;&#xA;  { Date: 1695682800000, Close: 8.99},&#xD;&#xA;  { Date: 1717455600000, Close: 9.99},&#xD;&#xA;  { Date: 1717455600000, Close: 9.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1655420400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>021/062 - Haunter</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/021---haunter/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/021---haunter/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149109.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.49 on 01-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 0.89},&#xD;&#xA;  { Date: 1582758000000, Close: 0.99},&#xD;&#xA;  { Date: 1586646000000, Close: 1.79},&#xD;&#xA;  { Date: 1589238000000, Close: 2.99},&#xD;&#xA;  { Date: 1592434800000, Close: 2.49},&#xD;&#xA;  { Date: 1593298800000, Close: 2.59},&#xD;&#xA;  { Date: 1594249200000, Close: 2.49},&#xD;&#xA;  { Date: 1595977200000, Close: 2.29},&#xD;&#xA;  { Date: 1597100400000, Close: 2.39},&#xD;&#xA;  { Date: 1598655600000, Close: 2.99},&#xD;&#xA;  { Date: 1601334000000, Close: 3.09},&#xD;&#xA;  { Date: 1601938800000, Close: 2.99},&#xD;&#xA;  { Date: 1602543600000, Close: 3.09},&#xD;&#xA;  { Date: 1604962800000, Close: 4.49},&#xD;&#xA;  { Date: 1605049200000, Close: 4.99},&#xD;&#xA;  { Date: 1605740400000, Close: 5.49},&#xD;&#xA;  { Date: 1606518000000, Close: 5.29},&#xD;&#xA;  { Date: 1608073200000, Close: 4.99},&#xD;&#xA;  { Date: 1608678000000, Close: 3.99},&#xD;&#xA;  { Date: 1609887600000, Close: 4.49},&#xD;&#xA;  { Date: 1611183600000, Close: 5.49},&#xD;&#xA;  { Date: 1611702000000, Close: 5.99},&#xD;&#xA;  { Date: 1614812400000, Close: 6.99},&#xD;&#xA;  { Date: 1617231600000, Close: 7.49},&#xD;&#xA;  { Date: 1617750000000, Close: 6.99},&#xD;&#xA;  { Date: 1619391600000, Close: 6.39},&#xD;&#xA;  { Date: 1619478000000, Close: 5.99},&#xD;&#xA;  { Date: 1620428400000, Close: 4.99},&#xD;&#xA;  { Date: 1622761200000, Close: 4.79},&#xD;&#xA;  { Date: 1623970800000, Close: 4.99},&#xD;&#xA;  { Date: 1624489200000, Close: 4.49},&#xD;&#xA;  { Date: 1625266800000, Close: 3.99},&#xD;&#xA;  { Date: 1625785200000, Close: 4.39},&#xD;&#xA;  { Date: 1626994800000, Close: 3.99},&#xD;&#xA;  { Date: 1629500400000, Close: 4.99},&#xD;&#xA;  { Date: 1632438000000, Close: 5.99},&#xD;&#xA;  { Date: 1633042800000, Close: 6.99},&#xD;&#xA;  { Date: 1634511600000, Close: 6.39},&#xD;&#xA;  { Date: 1635548400000, Close: 6.99},&#xD;&#xA;  { Date: 1638745200000, Close: 6.39},&#xD;&#xA;  { Date: 1639782000000, Close: 6.99},&#xD;&#xA;  { Date: 1646262000000, Close: 6.59},&#xD;&#xA;  { Date: 1647212400000, Close: 5.99},&#xD;&#xA;  { Date: 1647644400000, Close: 5.49},&#xD;&#xA;  { Date: 1648594800000, Close: 4.89},&#xD;&#xA;  { Date: 1650495600000, Close: 4.29},&#xD;&#xA;  { Date: 1651446000000, Close: 3.69},&#xD;&#xA;  { Date: 1654210800000, Close: 3.99},&#xD;&#xA;  { Date: 1655420400000, Close: 4.49},&#xD;&#xA;  { Date: 1665874800000, Close: 3.89},&#xD;&#xA;  { Date: 1671318000000, Close: 3.29},&#xD;&#xA;  { Date: 1674514800000, Close: 3.49},&#xD;&#xA;  { Date: 1676588400000, Close: 2.99},&#xD;&#xA;  { Date: 1677193200000, Close: 2.69},&#xD;&#xA;  { Date: 1681426800000, Close: 2.89},&#xD;&#xA;  { Date: 1684450800000, Close: 3.99},&#xD;&#xA;  { Date: 1697151600000, Close: 4.49},&#xD;&#xA;  { Date: 1710284400000, Close: 4.99},&#xD;&#xA;  { Date: 1715986800000, Close: 5.49},&#xD;&#xA;  { Date: 1715986800000, Close: 5.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1617231600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>022/062 - Hitmonlee</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/022---hitmonlee/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/022---hitmonlee/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149118.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.99 on 06-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.29 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.29},&#xD;&#xA;  { Date: 1578006000000, Close: 1.39},&#xD;&#xA;  { Date: 1578697200000, Close: 1.49},&#xD;&#xA;  { Date: 1580770800000, Close: 1.59},&#xD;&#xA;  { Date: 1581462000000, Close: 1.69},&#xD;&#xA;  { Date: 1583535600000, Close: 1.99},&#xD;&#xA;  { Date: 1583881200000, Close: 2.09},&#xD;&#xA;  { Date: 1584486000000, Close: 1.99},&#xD;&#xA;  { Date: 1585004400000, Close: 2.29},&#xD;&#xA;  { Date: 1586646000000, Close: 2.49},&#xD;&#xA;  { Date: 1589238000000, Close: 3.29},&#xD;&#xA;  { Date: 1590620400000, Close: 3.49},&#xD;&#xA;  { Date: 1591830000000, Close: 3.99},&#xD;&#xA;  { Date: 1592434800000, Close: 3.69},&#xD;&#xA;  { Date: 1593212400000, Close: 3.79},&#xD;&#xA;  { Date: 1594767600000, Close: 3.99},&#xD;&#xA;  { Date: 1595026800000, Close: 4.49},&#xD;&#xA;  { Date: 1595545200000, Close: 4.99},&#xD;&#xA;  { Date: 1596841200000, Close: 5.99},&#xD;&#xA;  { Date: 1598310000000, Close: 6.99},&#xD;&#xA;  { Date: 1599174000000, Close: 7.49},&#xD;&#xA;  { Date: 1600297200000, Close: 6.79},&#xD;&#xA;  { Date: 1601334000000, Close: 6.19},&#xD;&#xA;  { Date: 1602370800000, Close: 5.59},&#xD;&#xA;  { Date: 1602716400000, Close: 4.99},&#xD;&#xA;  { Date: 1603234800000, Close: 5.99},&#xD;&#xA;  { Date: 1604617200000, Close: 6.99},&#xD;&#xA;  { Date: 1605135600000, Close: 7.29},&#xD;&#xA;  { Date: 1606518000000, Close: 8.39},&#xD;&#xA;  { Date: 1607036400000, Close: 8.49},&#xD;&#xA;  { Date: 1607468400000, Close: 8.99},&#xD;&#xA;  { Date: 1609887600000, Close: 9.99},&#xD;&#xA;  { Date: 1610578800000, Close: 9.49},&#xD;&#xA;  { Date: 1611615600000, Close: 8.79},&#xD;&#xA;  { Date: 1612566000000, Close: 8.19},&#xD;&#xA;  { Date: 1613602800000, Close: 7.59},&#xD;&#xA;  { Date: 1618009200000, Close: 8.49},&#xD;&#xA;  { Date: 1620428400000, Close: 7.99},&#xD;&#xA;  { Date: 1620946800000, Close: 8.39},&#xD;&#xA;  { Date: 1621724400000, Close: 7.79},&#xD;&#xA;  { Date: 1622070000000, Close: 6.99},&#xD;&#xA;  { Date: 1623106800000, Close: 7.49},&#xD;&#xA;  { Date: 1625871600000, Close: 6.99},&#xD;&#xA;  { Date: 1626390000000, Close: 6.49},&#xD;&#xA;  { Date: 1628204400000, Close: 5.79},&#xD;&#xA;  { Date: 1628895600000, Close: 5.99},&#xD;&#xA;  { Date: 1630450800000, Close: 5.39},&#xD;&#xA;  { Date: 1632438000000, Close: 5.99},&#xD;&#xA;  { Date: 1634511600000, Close: 5.39},&#xD;&#xA;  { Date: 1635548400000, Close: 5.49},&#xD;&#xA;  { Date: 1643065200000, Close: 5.99},&#xD;&#xA;  { Date: 1644706800000, Close: 5.39},&#xD;&#xA;  { Date: 1646866800000, Close: 4.99},&#xD;&#xA;  { Date: 1649890800000, Close: 4.39},&#xD;&#xA;  { Date: 1652396400000, Close: 4.49},&#xD;&#xA;  { Date: 1655420400000, Close: 4.99},&#xD;&#xA;  { Date: 1656716400000, Close: 4.49},&#xD;&#xA;  { Date: 1657926000000, Close: 3.99},&#xD;&#xA;  { Date: 1665788400000, Close: 4.49},&#xD;&#xA;  { Date: 1673650800000, Close: 4.99},&#xD;&#xA;  { Date: 1685574000000, Close: 4.59},&#xD;&#xA;  { Date: 1694473200000, Close: 4.49},&#xD;&#xA;  { Date: 1694646000000, Close: 4.39},&#xD;&#xA;  { Date: 1695942000000, Close: 4.29},&#xD;&#xA;  { Date: 1696633200000, Close: 3.99},&#xD;&#xA;  { Date: 1718665200000, Close: 4.99},&#xD;&#xA;  { Date: 1727996400000, Close: 5.09},&#xD;&#xA;  { Date: 1727996400000, Close: 5.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1609887600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>023/062 - Hypno</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/023---hypno/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/023---hypno/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149123.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.49 on 04-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.19 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.19},&#xD;&#xA;  { Date: 1578697200000, Close: 1.99},&#xD;&#xA;  { Date: 1580770800000, Close: 2.99},&#xD;&#xA;  { Date: 1582758000000, Close: 3.99},&#xD;&#xA;  { Date: 1584486000000, Close: 3.49},&#xD;&#xA;  { Date: 1585004400000, Close: 3.29},&#xD;&#xA;  { Date: 1585782000000, Close: 2.99},&#xD;&#xA;  { Date: 1586732400000, Close: 2.39},&#xD;&#xA;  { Date: 1587423600000, Close: 2.49},&#xD;&#xA;  { Date: 1589238000000, Close: 3.45},&#xD;&#xA;  { Date: 1591830000000, Close: 3.49},&#xD;&#xA;  { Date: 1592866800000, Close: 3.29},&#xD;&#xA;  { Date: 1593817200000, Close: 2.69},&#xD;&#xA;  { Date: 1595545200000, Close: 2.79},&#xD;&#xA;  { Date: 1596582000000, Close: 2.99},&#xD;&#xA;  { Date: 1597100400000, Close: 3.49},&#xD;&#xA;  { Date: 1597705200000, Close: 3.99},&#xD;&#xA;  { Date: 1599087600000, Close: 3.79},&#xD;&#xA;  { Date: 1600210800000, Close: 3.99},&#xD;&#xA;  { Date: 1600815600000, Close: 4.09},&#xD;&#xA;  { Date: 1601938800000, Close: 4.19},&#xD;&#xA;  { Date: 1603148400000, Close: 4.49},&#xD;&#xA;  { Date: 1604962800000, Close: 5.99},&#xD;&#xA;  { Date: 1605049200000, Close: 6.99},&#xD;&#xA;  { Date: 1606431600000, Close: 7.99},&#xD;&#xA;  { Date: 1607036400000, Close: 9.49},&#xD;&#xA;  { Date: 1608073200000, Close: 8.99},&#xD;&#xA;  { Date: 1612134000000, Close: 8.39},&#xD;&#xA;  { Date: 1612220400000, Close: 7.99},&#xD;&#xA;  { Date: 1614898800000, Close: 7.39},&#xD;&#xA;  { Date: 1616022000000, Close: 7.49},&#xD;&#xA;  { Date: 1619478000000, Close: 6.99},&#xD;&#xA;  { Date: 1620428400000, Close: 5.99},&#xD;&#xA;  { Date: 1621033200000, Close: 6.49},&#xD;&#xA;  { Date: 1621983600000, Close: 5.79},&#xD;&#xA;  { Date: 1622070000000, Close: 5.49},&#xD;&#xA;  { Date: 1624921200000, Close: 4.49},&#xD;&#xA;  { Date: 1625698800000, Close: 3.99},&#xD;&#xA;  { Date: 1631314800000, Close: 4.99},&#xD;&#xA;  { Date: 1631660400000, Close: 4.39},&#xD;&#xA;  { Date: 1632438000000, Close: 4.99},&#xD;&#xA;  { Date: 1632956400000, Close: 4.49},&#xD;&#xA;  { Date: 1635548400000, Close: 4.99},&#xD;&#xA;  { Date: 1637362800000, Close: 5.49},&#xD;&#xA;  { Date: 1643065200000, Close: 5.99},&#xD;&#xA;  { Date: 1644620400000, Close: 6.39},&#xD;&#xA;  { Date: 1645052400000, Close: 6.99},&#xD;&#xA;  { Date: 1646175600000, Close: 6.39},&#xD;&#xA;  { Date: 1647644400000, Close: 5.99},&#xD;&#xA;  { Date: 1649804400000, Close: 6.39},&#xD;&#xA;  { Date: 1651186800000, Close: 5.79},&#xD;&#xA;  { Date: 1652223600000, Close: 5.19},&#xD;&#xA;  { Date: 1655161200000, Close: 5.59},&#xD;&#xA;  { Date: 1656111600000, Close: 4.99},&#xD;&#xA;  { Date: 1656716400000, Close: 3.99},&#xD;&#xA;  { Date: 1661900400000, Close: 6.49},&#xD;&#xA;  { Date: 1664924400000, Close: 5.79},&#xD;&#xA;  { Date: 1665010800000, Close: 4.99},&#xD;&#xA;  { Date: 1665788400000, Close: 4.49},&#xD;&#xA;  { Date: 1666998000000, Close: 3.89},&#xD;&#xA;  { Date: 1667516400000, Close: 2.89},&#xD;&#xA;  { Date: 1667948400000, Close: 2.69},&#xD;&#xA;  { Date: 1669417200000, Close: 2.99},&#xD;&#xA;  { Date: 1669503600000, Close: 2.79},&#xD;&#xA;  { Date: 1669849200000, Close: 2.69},&#xD;&#xA;  { Date: 1670799600000, Close: 2.39},&#xD;&#xA;  { Date: 1670886000000, Close: 1.99},&#xD;&#xA;  { Date: 1674514800000, Close: 2.59},&#xD;&#xA;  { Date: 1675465200000, Close: 2.79},&#xD;&#xA;  { Date: 1676588400000, Close: 2.89},&#xD;&#xA;  { Date: 1679958000000, Close: 2.99},&#xD;&#xA;  { Date: 1680994800000, Close: 2.69},&#xD;&#xA;  { Date: 1682636400000, Close: 2.99},&#xD;&#xA;  { Date: 1686092400000, Close: 2.69},&#xD;&#xA;  { Date: 1691017200000, Close: 2.89},&#xD;&#xA;  { Date: 1691276400000, Close: 3.09},&#xD;&#xA;  { Date: 1691708400000, Close: 2.99},&#xD;&#xA;  { Date: 1695682800000, Close: 3.39},&#xD;&#xA;  { Date: 1706310000000, Close: 2.99},&#xD;&#xA;  { Date: 1709334000000, Close: 3.49},&#xD;&#xA;  { Date: 1714172400000, Close: 3.99},&#xD;&#xA;  { Date: 1714690800000, Close: 4.19},&#xD;&#xA;  { Date: 1718665200000, Close: 4.49},&#xD;&#xA;  { Date: 1728687600000, Close: 3.89},&#xD;&#xA;  { Date: 1728860400000, Close: 3.59},&#xD;&#xA;  { Date: 1728860400000, Close: 3.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607036400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>024/062 - Kabutops</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/024---kabutops/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/024---kabutops/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149140.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 11.99 on 11-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.49 on 11-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 1.89},&#xD;&#xA;  { Date: 1578697200000, Close: 1.49},&#xD;&#xA;  { Date: 1582758000000, Close: 2.29},&#xD;&#xA;  { Date: 1583967600000, Close: 2.49},&#xD;&#xA;  { Date: 1584745200000, Close: 2.99},&#xD;&#xA;  { Date: 1589238000000, Close: 3.39},&#xD;&#xA;  { Date: 1590620400000, Close: 2.99},&#xD;&#xA;  { Date: 1591657200000, Close: 3.09},&#xD;&#xA;  { Date: 1591830000000, Close: 2.99},&#xD;&#xA;  { Date: 1596668400000, Close: 3.49},&#xD;&#xA;  { Date: 1597705200000, Close: 3.99},&#xD;&#xA;  { Date: 1598310000000, Close: 3.79},&#xD;&#xA;  { Date: 1599087600000, Close: 3.89},&#xD;&#xA;  { Date: 1599778800000, Close: 3.99},&#xD;&#xA;  { Date: 1600210800000, Close: 4.49},&#xD;&#xA;  { Date: 1604617200000, Close: 5.99},&#xD;&#xA;  { Date: 1605049200000, Close: 11.99},&#xD;&#xA;  { Date: 1609282800000, Close: 10.49},&#xD;&#xA;  { Date: 1609801200000, Close: 8.99},&#xD;&#xA;  { Date: 1612393200000, Close: 9.49},&#xD;&#xA;  { Date: 1612998000000, Close: 9.99},&#xD;&#xA;  { Date: 1614294000000, Close: 11.79},&#xD;&#xA;  { Date: 1615762800000, Close: 10.49},&#xD;&#xA;  { Date: 1616194800000, Close: 8.99},&#xD;&#xA;  { Date: 1618268400000, Close: 10.99},&#xD;&#xA;  { Date: 1620774000000, Close: 9.79},&#xD;&#xA;  { Date: 1621810800000, Close: 9.19},&#xD;&#xA;  { Date: 1623798000000, Close: 9.49},&#xD;&#xA;  { Date: 1624316400000, Close: 9.75},&#xD;&#xA;  { Date: 1626908400000, Close: 9.49},&#xD;&#xA;  { Date: 1627945200000, Close: 8.79},&#xD;&#xA;  { Date: 1628031600000, Close: 7.99},&#xD;&#xA;  { Date: 1629500400000, Close: 7.49},&#xD;&#xA;  { Date: 1631314800000, Close: 8.99},&#xD;&#xA;  { Date: 1633906800000, Close: 8.39},&#xD;&#xA;  { Date: 1634943600000, Close: 8.99},&#xD;&#xA;  { Date: 1637622000000, Close: 9.99},&#xD;&#xA;  { Date: 1639522800000, Close: 8.79},&#xD;&#xA;  { Date: 1643756400000, Close: 8.99},&#xD;&#xA;  { Date: 1644620400000, Close: 9.59},&#xD;&#xA;  { Date: 1645052400000, Close: 9.49},&#xD;&#xA;  { Date: 1651100400000, Close: 8.79},&#xD;&#xA;  { Date: 1655852400000, Close: 9.39},&#xD;&#xA;  { Date: 1655938800000, Close: 8.99},&#xD;&#xA;  { Date: 1656716400000, Close: 7.99},&#xD;&#xA;  { Date: 1661554800000, Close: 7.75},&#xD;&#xA;  { Date: 1665183600000, Close: 7.19},&#xD;&#xA;  { Date: 1666134000000, Close: 6.59},&#xD;&#xA;  { Date: 1666306800000, Close: 5.99},&#xD;&#xA;  { Date: 1667343600000, Close: 5.39},&#xD;&#xA;  { Date: 1673910000000, Close: 5.79},&#xD;&#xA;  { Date: 1674774000000, Close: 6.19},&#xD;&#xA;  { Date: 1676934000000, Close: 6.59},&#xD;&#xA;  { Date: 1679526000000, Close: 6.99},&#xD;&#xA;  { Date: 1683154800000, Close: 7.99},&#xD;&#xA;  { Date: 1707433200000, Close: 7.39},&#xD;&#xA;  { Date: 1708556400000, Close: 6.79},&#xD;&#xA;  { Date: 1715209200000, Close: 6.99},&#xD;&#xA;  { Date: 1715209200000, Close: 6.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605049200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578697200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>025/062 - Lapras</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/025---lapras/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/025---lapras/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149173.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.99 on 24-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.09 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577746800000, Close: 1.59},&#xD;&#xA;  { Date: 1578610800000, Close: 1.79},&#xD;&#xA;  { Date: 1579474800000, Close: 1.49},&#xD;&#xA;  { Date: 1581030000000, Close: 1.59},&#xD;&#xA;  { Date: 1582066800000, Close: 1.49},&#xD;&#xA;  { Date: 1582585200000, Close: 1.59},&#xD;&#xA;  { Date: 1583535600000, Close: 1.29},&#xD;&#xA;  { Date: 1584486000000, Close: 1.09},&#xD;&#xA;  { Date: 1589238000000, Close: 1.49},&#xD;&#xA;  { Date: 1591225200000, Close: 2.29},&#xD;&#xA;  { Date: 1591743600000, Close: 2.99},&#xD;&#xA;  { Date: 1591830000000, Close: 3.49},&#xD;&#xA;  { Date: 1592348400000, Close: 3.39},&#xD;&#xA;  { Date: 1594767600000, Close: 3.99},&#xD;&#xA;  { Date: 1596668400000, Close: 4.99},&#xD;&#xA;  { Date: 1597100400000, Close: 4.49},&#xD;&#xA;  { Date: 1598137200000, Close: 4.99},&#xD;&#xA;  { Date: 1598655600000, Close: 5.99},&#xD;&#xA;  { Date: 1599606000000, Close: 5.49},&#xD;&#xA;  { Date: 1601506800000, Close: 5.59},&#xD;&#xA;  { Date: 1602543600000, Close: 4.99},&#xD;&#xA;  { Date: 1603321200000, Close: 5.49},&#xD;&#xA;  { Date: 1604530800000, Close: 6.99},&#xD;&#xA;  { Date: 1606604400000, Close: 8.99},&#xD;&#xA;  { Date: 1607122800000, Close: 7.49},&#xD;&#xA;  { Date: 1608073200000, Close: 6.99},&#xD;&#xA;  { Date: 1608591600000, Close: 7.29},&#xD;&#xA;  { Date: 1608678000000, Close: 6.79},&#xD;&#xA;  { Date: 1609714800000, Close: 6.19},&#xD;&#xA;  { Date: 1609801200000, Close: 4.99},&#xD;&#xA;  { Date: 1614294000000, Close: 6.99},&#xD;&#xA;  { Date: 1618441200000, Close: 6.49},&#xD;&#xA;  { Date: 1620082800000, Close: 5.99},&#xD;&#xA;  { Date: 1621033200000, Close: 6.29},&#xD;&#xA;  { Date: 1622242800000, Close: 6.49},&#xD;&#xA;  { Date: 1623366000000, Close: 6.79},&#xD;&#xA;  { Date: 1623970800000, Close: 6.49},&#xD;&#xA;  { Date: 1625007600000, Close: 5.79},&#xD;&#xA;  { Date: 1625698800000, Close: 5.49},&#xD;&#xA;  { Date: 1626908400000, Close: 4.99},&#xD;&#xA;  { Date: 1628290800000, Close: 4.39},&#xD;&#xA;  { Date: 1628895600000, Close: 4.49},&#xD;&#xA;  { Date: 1630105200000, Close: 4.99},&#xD;&#xA;  { Date: 1632438000000, Close: 5.39},&#xD;&#xA;  { Date: 1632956400000, Close: 5.99},&#xD;&#xA;  { Date: 1635116400000, Close: 5.39},&#xD;&#xA;  { Date: 1637622000000, Close: 5.99},&#xD;&#xA;  { Date: 1638831600000, Close: 5.39},&#xD;&#xA;  { Date: 1639782000000, Close: 4.79},&#xD;&#xA;  { Date: 1640991600000, Close: 4.19},&#xD;&#xA;  { Date: 1643238000000, Close: 4.39},&#xD;&#xA;  { Date: 1644620400000, Close: 4.69},&#xD;&#xA;  { Date: 1646694000000, Close: 4.59},&#xD;&#xA;  { Date: 1647471600000, Close: 4.49},&#xD;&#xA;  { Date: 1648162800000, Close: 4.19},&#xD;&#xA;  { Date: 1648594800000, Close: 4.09},&#xD;&#xA;  { Date: 1649631600000, Close: 3.99},&#xD;&#xA;  { Date: 1652396400000, Close: 4.49},&#xD;&#xA;  { Date: 1652655600000, Close: 4.29},&#xD;&#xA;  { Date: 1653606000000, Close: 3.99},&#xD;&#xA;  { Date: 1653778800000, Close: 3.89},&#xD;&#xA;  { Date: 1654815600000, Close: 3.79},&#xD;&#xA;  { Date: 1655420400000, Close: 4.49},&#xD;&#xA;  { Date: 1657926000000, Close: 3.99},&#xD;&#xA;  { Date: 1670367600000, Close: 4.19},&#xD;&#xA;  { Date: 1673910000000, Close: 4.49},&#xD;&#xA;  { Date: 1678748400000, Close: 4.79},&#xD;&#xA;  { Date: 1682204400000, Close: 5.99},&#xD;&#xA;  { Date: 1685746800000, Close: 6.39},&#xD;&#xA;  { Date: 1695682800000, Close: 8.99},&#xD;&#xA;  { Date: 1698102000000, Close: 9.99},&#xD;&#xA;  { Date: 1700607600000, Close: 8.99},&#xD;&#xA;  { Date: 1701126000000, Close: 7.99},&#xD;&#xA;  { Date: 1705186800000, Close: 7.39},&#xD;&#xA;  { Date: 1714172400000, Close: 7.99},&#xD;&#xA;  { Date: 1714172400000, Close: 7.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1698102000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>026/062 - Magneton</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/026---magneton/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/026---magneton/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149240.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.99 on 04-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 14-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578956400000, Close: 0.89},&#xD;&#xA;  { Date: 1588892400000, Close: 1.29},&#xD;&#xA;  { Date: 1589410800000, Close: 1.59},&#xD;&#xA;  { Date: 1589929200000, Close: 1.89},&#xD;&#xA;  { Date: 1590620400000, Close: 1.99},&#xD;&#xA;  { Date: 1591225200000, Close: 2.29},&#xD;&#xA;  { Date: 1591657200000, Close: 2.19},&#xD;&#xA;  { Date: 1591830000000, Close: 2.09},&#xD;&#xA;  { Date: 1592866800000, Close: 2.29},&#xD;&#xA;  { Date: 1594422000000, Close: 2.49},&#xD;&#xA;  { Date: 1594940400000, Close: 1.99},&#xD;&#xA;  { Date: 1595545200000, Close: 2.29},&#xD;&#xA;  { Date: 1597100400000, Close: 2.49},&#xD;&#xA;  { Date: 1597705200000, Close: 2.69},&#xD;&#xA;  { Date: 1597964400000, Close: 2.49},&#xD;&#xA;  { Date: 1602630000000, Close: 2.99},&#xD;&#xA;  { Date: 1604530800000, Close: 3.99},&#xD;&#xA;  { Date: 1605135600000, Close: 4.99},&#xD;&#xA;  { Date: 1605740400000, Close: 5.99},&#xD;&#xA;  { Date: 1607036400000, Close: 7.99},&#xD;&#xA;  { Date: 1609196400000, Close: 7.39},&#xD;&#xA;  { Date: 1611097200000, Close: 7.29},&#xD;&#xA;  { Date: 1612825200000, Close: 6.59},&#xD;&#xA;  { Date: 1613862000000, Close: 5.99},&#xD;&#xA;  { Date: 1620428400000, Close: 5.49},&#xD;&#xA;  { Date: 1620946800000, Close: 5.89},&#xD;&#xA;  { Date: 1621465200000, Close: 5.79},&#xD;&#xA;  { Date: 1622242800000, Close: 5.95},&#xD;&#xA;  { Date: 1624489200000, Close: 5.49},&#xD;&#xA;  { Date: 1626217200000, Close: 4.89},&#xD;&#xA;  { Date: 1626303600000, Close: 4.49},&#xD;&#xA;  { Date: 1626994800000, Close: 3.99},&#xD;&#xA;  { Date: 1628636400000, Close: 4.49},&#xD;&#xA;  { Date: 1630105200000, Close: 6.49},&#xD;&#xA;  { Date: 1631314800000, Close: 6.99},&#xD;&#xA;  { Date: 1634425200000, Close: 6.39},&#xD;&#xA;  { Date: 1635548400000, Close: 5.99},&#xD;&#xA;  { Date: 1636930800000, Close: 5.39},&#xD;&#xA;  { Date: 1639090800000, Close: 5.49},&#xD;&#xA;  { Date: 1641164400000, Close: 4.89},&#xD;&#xA;  { Date: 1642633200000, Close: 5.19},&#xD;&#xA;  { Date: 1642806000000, Close: 4.99},&#xD;&#xA;  { Date: 1645052400000, Close: 5.99},&#xD;&#xA;  { Date: 1650495600000, Close: 5.39},&#xD;&#xA;  { Date: 1653433200000, Close: 4.79},&#xD;&#xA;  { Date: 1654470000000, Close: 4.19},&#xD;&#xA;  { Date: 1655938800000, Close: 3.59},&#xD;&#xA;  { Date: 1659481200000, Close: 3.29},&#xD;&#xA;  { Date: 1661900400000, Close: 3.99},&#xD;&#xA;  { Date: 1665615600000, Close: 3.39},&#xD;&#xA;  { Date: 1666566000000, Close: 2.79},&#xD;&#xA;  { Date: 1670540400000, Close: 3.49},&#xD;&#xA;  { Date: 1673910000000, Close: 3.79},&#xD;&#xA;  { Date: 1691017200000, Close: 3.99},&#xD;&#xA;  { Date: 1714172400000, Close: 4.99},&#xD;&#xA;  { Date: 1714604400000, Close: 4.39},&#xD;&#xA;  { Date: 1726786800000, Close: 3.79},&#xD;&#xA;  { Date: 1728514800000, Close: 3.19},&#xD;&#xA;  { Date: 1728514800000, Close: 3.19},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607036400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578956400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>027/062 - Moltres</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/027---moltres/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/027---moltres/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149295.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 12.99 on 11-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.99 on 28-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577487600000, Close: 2.99},&#xD;&#xA;  { Date: 1579215600000, Close: 3.99},&#xD;&#xA;  { Date: 1582671600000, Close: 4.99},&#xD;&#xA;  { Date: 1587855600000, Close: 5.49},&#xD;&#xA;  { Date: 1588892400000, Close: 5.99},&#xD;&#xA;  { Date: 1589929200000, Close: 6.99},&#xD;&#xA;  { Date: 1591657200000, Close: 6.49},&#xD;&#xA;  { Date: 1592866800000, Close: 6.59},&#xD;&#xA;  { Date: 1593644400000, Close: 6.99},&#xD;&#xA;  { Date: 1594681200000, Close: 7.99},&#xD;&#xA;  { Date: 1595026800000, Close: 7.49},&#xD;&#xA;  { Date: 1595545200000, Close: 7.99},&#xD;&#xA;  { Date: 1596495600000, Close: 8.99},&#xD;&#xA;  { Date: 1597273200000, Close: 8.49},&#xD;&#xA;  { Date: 1598310000000, Close: 9.99},&#xD;&#xA;  { Date: 1598569200000, Close: 10.99},&#xD;&#xA;  { Date: 1599778800000, Close: 11.99},&#xD;&#xA;  { Date: 1601766000000, Close: 10.99},&#xD;&#xA;  { Date: 1602025200000, Close: 9.99},&#xD;&#xA;  { Date: 1603234800000, Close: 10.99},&#xD;&#xA;  { Date: 1604098800000, Close: 11.99},&#xD;&#xA;  { Date: 1605049200000, Close: 12.99},&#xD;&#xA;  { Date: 1605740400000, Close: 12.49},&#xD;&#xA;  { Date: 1606345200000, Close: 11.99},&#xD;&#xA;  { Date: 1609801200000, Close: 10.99},&#xD;&#xA;  { Date: 1610578800000, Close: 11.49},&#xD;&#xA;  { Date: 1614812400000, Close: 11.99},&#xD;&#xA;  { Date: 1615503600000, Close: 11.49},&#xD;&#xA;  { Date: 1617145200000, Close: 10.99},&#xD;&#xA;  { Date: 1620169200000, Close: 8.99},&#xD;&#xA;  { Date: 1621465200000, Close: 7.99},&#xD;&#xA;  { Date: 1622242800000, Close: 7.49},&#xD;&#xA;  { Date: 1623366000000, Close: 7.29},&#xD;&#xA;  { Date: 1626908400000, Close: 6.99},&#xD;&#xA;  { Date: 1628636400000, Close: 6.39},&#xD;&#xA;  { Date: 1629500400000, Close: 5.99},&#xD;&#xA;  { Date: 1631919600000, Close: 6.99},&#xD;&#xA;  { Date: 1632438000000, Close: 7.49},&#xD;&#xA;  { Date: 1633042800000, Close: 6.99},&#xD;&#xA;  { Date: 1634857200000, Close: 6.39},&#xD;&#xA;  { Date: 1634943600000, Close: 5.99},&#xD;&#xA;  { Date: 1635548400000, Close: 5.49},&#xD;&#xA;  { Date: 1637794800000, Close: 5.99},&#xD;&#xA;  { Date: 1641942000000, Close: 6.39},&#xD;&#xA;  { Date: 1642806000000, Close: 6.49},&#xD;&#xA;  { Date: 1646089200000, Close: 7.99},&#xD;&#xA;  { Date: 1649977200000, Close: 8.49},&#xD;&#xA;  { Date: 1655420400000, Close: 8.99},&#xD;&#xA;  { Date: 1657062000000, Close: 8.49},&#xD;&#xA;  { Date: 1659481200000, Close: 8.99},&#xD;&#xA;  { Date: 1664578800000, Close: 8.49},&#xD;&#xA;  { Date: 1666306800000, Close: 7.79},&#xD;&#xA;  { Date: 1667516400000, Close: 6.99},&#xD;&#xA;  { Date: 1668812400000, Close: 5.99},&#xD;&#xA;  { Date: 1677884400000, Close: 6.39},&#xD;&#xA;  { Date: 1678489200000, Close: 6.29},&#xD;&#xA;  { Date: 1678834800000, Close: 6.09},&#xD;&#xA;  { Date: 1679353200000, Close: 7.99},&#xD;&#xA;  { Date: 1680217200000, Close: 8.99},&#xD;&#xA;  { Date: 1681426800000, Close: 10.99},&#xD;&#xA;  { Date: 1715382000000, Close: 9.99},&#xD;&#xA;  { Date: 1728255600000, Close: 9.39},&#xD;&#xA;  { Date: 1728255600000, Close: 9.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605049200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577487600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>028/062 - Muk</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/028---muk/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/028---muk/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149303.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 8.99 on 21-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.59 on 14-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578956400000, Close: 1.59},&#xD;&#xA;  { Date: 1581030000000, Close: 1.99},&#xD;&#xA;  { Date: 1582326000000, Close: 3.49},&#xD;&#xA;  { Date: 1584486000000, Close: 3.29},&#xD;&#xA;  { Date: 1585004400000, Close: 2.99},&#xD;&#xA;  { Date: 1586646000000, Close: 3.19},&#xD;&#xA;  { Date: 1588892400000, Close: 3.39},&#xD;&#xA;  { Date: 1590015600000, Close: 2.79},&#xD;&#xA;  { Date: 1591225200000, Close: 2.99},&#xD;&#xA;  { Date: 1592348400000, Close: 3.09},&#xD;&#xA;  { Date: 1593644400000, Close: 3.49},&#xD;&#xA;  { Date: 1594508400000, Close: 3.99},&#xD;&#xA;  { Date: 1594767600000, Close: 4.49},&#xD;&#xA;  { Date: 1595026800000, Close: 4.59},&#xD;&#xA;  { Date: 1595545200000, Close: 4.49},&#xD;&#xA;  { Date: 1596063600000, Close: 4.59},&#xD;&#xA;  { Date: 1596582000000, Close: 4.79},&#xD;&#xA;  { Date: 1597705200000, Close: 4.99},&#xD;&#xA;  { Date: 1598310000000, Close: 4.49},&#xD;&#xA;  { Date: 1598569200000, Close: 4.59},&#xD;&#xA;  { Date: 1599087600000, Close: 4.99},&#xD;&#xA;  { Date: 1600815600000, Close: 4.49},&#xD;&#xA;  { Date: 1602284400000, Close: 3.99},&#xD;&#xA;  { Date: 1602802800000, Close: 4.29},&#xD;&#xA;  { Date: 1603321200000, Close: 4.39},&#xD;&#xA;  { Date: 1604444400000, Close: 4.99},&#xD;&#xA;  { Date: 1605740400000, Close: 5.89},&#xD;&#xA;  { Date: 1606518000000, Close: 6.99},&#xD;&#xA;  { Date: 1609110000000, Close: 6.39},&#xD;&#xA;  { Date: 1609196400000, Close: 5.49},&#xD;&#xA;  { Date: 1614812400000, Close: 5.99},&#xD;&#xA;  { Date: 1615417200000, Close: 5.59},&#xD;&#xA;  { Date: 1615935600000, Close: 5.69},&#xD;&#xA;  { Date: 1617145200000, Close: 5.99},&#xD;&#xA;  { Date: 1617750000000, Close: 6.99},&#xD;&#xA;  { Date: 1618527600000, Close: 7.99},&#xD;&#xA;  { Date: 1618959600000, Close: 8.99},&#xD;&#xA;  { Date: 1621033200000, Close: 8.39},&#xD;&#xA;  { Date: 1621983600000, Close: 7.79},&#xD;&#xA;  { Date: 1622070000000, Close: 6.99},&#xD;&#xA;  { Date: 1623106800000, Close: 6.59},&#xD;&#xA;  { Date: 1623279600000, Close: 5.99},&#xD;&#xA;  { Date: 1624748400000, Close: 5.39},&#xD;&#xA;  { Date: 1624921200000, Close: 4.49},&#xD;&#xA;  { Date: 1625698800000, Close: 3.99},&#xD;&#xA;  { Date: 1626303600000, Close: 3.89},&#xD;&#xA;  { Date: 1626994800000, Close: 3.49},&#xD;&#xA;  { Date: 1629500400000, Close: 3.99},&#xD;&#xA;  { Date: 1632351600000, Close: 4.49},&#xD;&#xA;  { Date: 1632956400000, Close: 3.99},&#xD;&#xA;  { Date: 1634425200000, Close: 3.39},&#xD;&#xA;  { Date: 1637190000000, Close: 4.99},&#xD;&#xA;  { Date: 1640300400000, Close: 5.99},&#xD;&#xA;  { Date: 1641078000000, Close: 5.39},&#xD;&#xA;  { Date: 1642460400000, Close: 4.79},&#xD;&#xA;  { Date: 1643842800000, Close: 5.19},&#xD;&#xA;  { Date: 1645484400000, Close: 5.99},&#xD;&#xA;  { Date: 1648508400000, Close: 6.39},&#xD;&#xA;  { Date: 1648594800000, Close: 6.49},&#xD;&#xA;  { Date: 1649890800000, Close: 5.79},&#xD;&#xA;  { Date: 1655420400000, Close: 5.99},&#xD;&#xA;  { Date: 1656716400000, Close: 5.49},&#xD;&#xA;  { Date: 1660950000000, Close: 5.99},&#xD;&#xA;  { Date: 1661554800000, Close: 5.75},&#xD;&#xA;  { Date: 1665010800000, Close: 5.19},&#xD;&#xA;  { Date: 1665788400000, Close: 4.99},&#xD;&#xA;  { Date: 1667602800000, Close: 4.39},&#xD;&#xA;  { Date: 1672441200000, Close: 3.79},&#xD;&#xA;  { Date: 1675465200000, Close: 3.29},&#xD;&#xA;  { Date: 1677279600000, Close: 3.79},&#xD;&#xA;  { Date: 1677884400000, Close: 3.59},&#xD;&#xA;  { Date: 1678057200000, Close: 3.49},&#xD;&#xA;  { Date: 1681167600000, Close: 3.59},&#xD;&#xA;  { Date: 1702594800000, Close: 4.39},&#xD;&#xA;  { Date: 1703631600000, Close: 3.99},&#xD;&#xA;  { Date: 1715209200000, Close: 4.39},&#xD;&#xA;  { Date: 1718406000000, Close: 4.79},&#xD;&#xA;  { Date: 1718406000000, Close: 4.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618959600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578956400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>029/062 - Raichu</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/029---raichu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/029---raichu/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149380.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.59 on 17-07-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 27-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577401200000, Close: 0.99},&#xD;&#xA;  { Date: 1579561200000, Close: 1.09},&#xD;&#xA;  { Date: 1581030000000, Close: 1.19},&#xD;&#xA;  { Date: 1581116400000, Close: 1.99},&#xD;&#xA;  { Date: 1582239600000, Close: 2.29},&#xD;&#xA;  { Date: 1582758000000, Close: 2.99},&#xD;&#xA;  { Date: 1584140400000, Close: 2.39},&#xD;&#xA;  { Date: 1584658800000, Close: 2.49},&#xD;&#xA;  { Date: 1585177200000, Close: 2.29},&#xD;&#xA;  { Date: 1585695600000, Close: 1.99},&#xD;&#xA;  { Date: 1586646000000, Close: 2.29},&#xD;&#xA;  { Date: 1588460400000, Close: 2.49},&#xD;&#xA;  { Date: 1588892400000, Close: 2.99},&#xD;&#xA;  { Date: 1589410800000, Close: 2.79},&#xD;&#xA;  { Date: 1589929200000, Close: 2.89},&#xD;&#xA;  { Date: 1591830000000, Close: 2.49},&#xD;&#xA;  { Date: 1592953200000, Close: 2.59},&#xD;&#xA;  { Date: 1593385200000, Close: 2.99},&#xD;&#xA;  { Date: 1594767600000, Close: 3.09},&#xD;&#xA;  { Date: 1595545200000, Close: 3.19},&#xD;&#xA;  { Date: 1596582000000, Close: 3.29},&#xD;&#xA;  { Date: 1597705200000, Close: 3.49},&#xD;&#xA;  { Date: 1598310000000, Close: 2.99},&#xD;&#xA;  { Date: 1598569200000, Close: 3.29},&#xD;&#xA;  { Date: 1599087600000, Close: 3.39},&#xD;&#xA;  { Date: 1600815600000, Close: 2.99},&#xD;&#xA;  { Date: 1601852400000, Close: 2.39},&#xD;&#xA;  { Date: 1602543600000, Close: 2.99},&#xD;&#xA;  { Date: 1604444400000, Close: 3.99},&#xD;&#xA;  { Date: 1605135600000, Close: 4.99},&#xD;&#xA;  { Date: 1605740400000, Close: 5.99},&#xD;&#xA;  { Date: 1606518000000, Close: 6.99},&#xD;&#xA;  { Date: 1608764400000, Close: 6.79},&#xD;&#xA;  { Date: 1610319600000, Close: 6.19},&#xD;&#xA;  { Date: 1610406000000, Close: 5.99},&#xD;&#xA;  { Date: 1611097200000, Close: 6.49},&#xD;&#xA;  { Date: 1611788400000, Close: 5.99},&#xD;&#xA;  { Date: 1617145200000, Close: 5.49},&#xD;&#xA;  { Date: 1617750000000, Close: 4.99},&#xD;&#xA;  { Date: 1618354800000, Close: 5.29},&#xD;&#xA;  { Date: 1618959600000, Close: 4.99},&#xD;&#xA;  { Date: 1620428400000, Close: 3.99},&#xD;&#xA;  { Date: 1620946800000, Close: 4.49},&#xD;&#xA;  { Date: 1621465200000, Close: 3.99},&#xD;&#xA;  { Date: 1623970800000, Close: 4.49},&#xD;&#xA;  { Date: 1624057200000, Close: 4.19},&#xD;&#xA;  { Date: 1624921200000, Close: 3.49},&#xD;&#xA;  { Date: 1625698800000, Close: 2.99},&#xD;&#xA;  { Date: 1626303600000, Close: 3.29},&#xD;&#xA;  { Date: 1628031600000, Close: 3.69},&#xD;&#xA;  { Date: 1629500400000, Close: 4.99},&#xD;&#xA;  { Date: 1631314800000, Close: 5.49},&#xD;&#xA;  { Date: 1631919600000, Close: 5.99},&#xD;&#xA;  { Date: 1632524400000, Close: 6.49},&#xD;&#xA;  { Date: 1633042800000, Close: 5.99},&#xD;&#xA;  { Date: 1634252400000, Close: 5.49},&#xD;&#xA;  { Date: 1635462000000, Close: 4.89},&#xD;&#xA;  { Date: 1636498800000, Close: 4.29},&#xD;&#xA;  { Date: 1637362800000, Close: 4.49},&#xD;&#xA;  { Date: 1637967600000, Close: 4.19},&#xD;&#xA;  { Date: 1639004400000, Close: 3.59},&#xD;&#xA;  { Date: 1639782000000, Close: 3.99},&#xD;&#xA;  { Date: 1643065200000, Close: 4.99},&#xD;&#xA;  { Date: 1644966000000, Close: 4.39},&#xD;&#xA;  { Date: 1645830000000, Close: 3.79},&#xD;&#xA;  { Date: 1646953200000, Close: 3.69},&#xD;&#xA;  { Date: 1647990000000, Close: 3.49},&#xD;&#xA;  { Date: 1649718000000, Close: 3.29},&#xD;&#xA;  { Date: 1650754800000, Close: 3.39},&#xD;&#xA;  { Date: 1652396400000, Close: 3.49},&#xD;&#xA;  { Date: 1652742000000, Close: 3.29},&#xD;&#xA;  { Date: 1653346800000, Close: 3.19},&#xD;&#xA;  { Date: 1653519600000, Close: 3.09},&#xD;&#xA;  { Date: 1654210800000, Close: 2.59},&#xD;&#xA;  { Date: 1654556400000, Close: 2.39},&#xD;&#xA;  { Date: 1656457200000, Close: 3.49},&#xD;&#xA;  { Date: 1657321200000, Close: 3.29},&#xD;&#xA;  { Date: 1660604400000, Close: 4.49},&#xD;&#xA;  { Date: 1664838000000, Close: 3.89},&#xD;&#xA;  { Date: 1665788400000, Close: 4.49},&#xD;&#xA;  { Date: 1666911600000, Close: 4.29},&#xD;&#xA;  { Date: 1674774000000, Close: 4.49},&#xD;&#xA;  { Date: 1675983600000, Close: 4.79},&#xD;&#xA;  { Date: 1679958000000, Close: 5.19},&#xD;&#xA;  { Date: 1682204400000, Close: 5.59},&#xD;&#xA;  { Date: 1686956400000, Close: 5.79},&#xD;&#xA;  { Date: 1689980400000, Close: 7.39},&#xD;&#xA;  { Date: 1695942000000, Close: 8.99},&#xD;&#xA;  { Date: 1702854000000, Close: 8.39},&#xD;&#xA;  { Date: 1714172400000, Close: 8.99},&#xD;&#xA;  { Date: 1721170800000, Close: 9.59},&#xD;&#xA;  { Date: 1728169200000, Close: 8.99},&#xD;&#xA;  { Date: 1728169200000, Close: 8.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1721170800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577401200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>030/062 - Zapdos</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/030---zapdos/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/030---zapdos/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149541.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 11.99 on 22-01-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.89 on 14-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578956400000, Close: 1.89},&#xD;&#xA;  { Date: 1580943600000, Close: 1.99},&#xD;&#xA;  { Date: 1581462000000, Close: 2.29},&#xD;&#xA;  { Date: 1582326000000, Close: 2.99},&#xD;&#xA;  { Date: 1582585200000, Close: 3.49},&#xD;&#xA;  { Date: 1584572400000, Close: 3.29},&#xD;&#xA;  { Date: 1585090800000, Close: 2.99},&#xD;&#xA;  { Date: 1585782000000, Close: 2.49},&#xD;&#xA;  { Date: 1586646000000, Close: 2.69},&#xD;&#xA;  { Date: 1588892400000, Close: 4.49},&#xD;&#xA;  { Date: 1589410800000, Close: 4.29},&#xD;&#xA;  { Date: 1589929200000, Close: 4.99},&#xD;&#xA;  { Date: 1590620400000, Close: 5.49},&#xD;&#xA;  { Date: 1591052400000, Close: 5.99},&#xD;&#xA;  { Date: 1591830000000, Close: 4.99},&#xD;&#xA;  { Date: 1594681200000, Close: 4.39},&#xD;&#xA;  { Date: 1595026800000, Close: 3.99},&#xD;&#xA;  { Date: 1596063600000, Close: 4.09},&#xD;&#xA;  { Date: 1597100400000, Close: 3.99},&#xD;&#xA;  { Date: 1597705200000, Close: 4.29},&#xD;&#xA;  { Date: 1598310000000, Close: 3.99},&#xD;&#xA;  { Date: 1598569200000, Close: 4.29},&#xD;&#xA;  { Date: 1599087600000, Close: 4.39},&#xD;&#xA;  { Date: 1600124400000, Close: 4.49},&#xD;&#xA;  { Date: 1600815600000, Close: 4.59},&#xD;&#xA;  { Date: 1601334000000, Close: 4.49},&#xD;&#xA;  { Date: 1602630000000, Close: 4.95},&#xD;&#xA;  { Date: 1603148400000, Close: 5.29},&#xD;&#xA;  { Date: 1604530800000, Close: 7.99},&#xD;&#xA;  { Date: 1605740400000, Close: 8.99},&#xD;&#xA;  { Date: 1606518000000, Close: 9.49},&#xD;&#xA;  { Date: 1609628400000, Close: 8.79},&#xD;&#xA;  { Date: 1610146800000, Close: 7.99},&#xD;&#xA;  { Date: 1611183600000, Close: 8.49},&#xD;&#xA;  { Date: 1613602800000, Close: 8.99},&#xD;&#xA;  { Date: 1614207600000, Close: 9.29},&#xD;&#xA;  { Date: 1614812400000, Close: 9.99},&#xD;&#xA;  { Date: 1616540400000, Close: 9.49},&#xD;&#xA;  { Date: 1618009200000, Close: 8.99},&#xD;&#xA;  { Date: 1618527600000, Close: 8.49},&#xD;&#xA;  { Date: 1619046000000, Close: 7.99},&#xD;&#xA;  { Date: 1620428400000, Close: 6.99},&#xD;&#xA;  { Date: 1622242800000, Close: 7.49},&#xD;&#xA;  { Date: 1622761200000, Close: 7.99},&#xD;&#xA;  { Date: 1625698800000, Close: 6.99},&#xD;&#xA;  { Date: 1626303600000, Close: 7.49},&#xD;&#xA;  { Date: 1628895600000, Close: 6.99},&#xD;&#xA;  { Date: 1632956400000, Close: 7.99},&#xD;&#xA;  { Date: 1634943600000, Close: 8.99},&#xD;&#xA;  { Date: 1635375600000, Close: 9.99},&#xD;&#xA;  { Date: 1642806000000, Close: 11.99},&#xD;&#xA;  { Date: 1644534000000, Close: 10.99},&#xD;&#xA;  { Date: 1646866800000, Close: 9.99},&#xD;&#xA;  { Date: 1649631600000, Close: 8.79},&#xD;&#xA;  { Date: 1652914800000, Close: 8.49},&#xD;&#xA;  { Date: 1655506800000, Close: 7.79},&#xD;&#xA;  { Date: 1656025200000, Close: 7.29},&#xD;&#xA;  { Date: 1656716400000, Close: 6.99},&#xD;&#xA;  { Date: 1657926000000, Close: 6.49},&#xD;&#xA;  { Date: 1661554800000, Close: 5.99},&#xD;&#xA;  { Date: 1668294000000, Close: 5.39},&#xD;&#xA;  { Date: 1675465200000, Close: 5.79},&#xD;&#xA;  { Date: 1681426800000, Close: 6.19},&#xD;&#xA;  { Date: 1688166000000, Close: 6.99},&#xD;&#xA;  { Date: 1695942000000, Close: 7.99},&#xD;&#xA;  { Date: 1699570800000, Close: 7.49},&#xD;&#xA;  { Date: 1703804400000, Close: 7.99},&#xD;&#xA;  { Date: 1703804400000, Close: 7.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1642806000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578956400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>031/062 - Arbok</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/031---arbok/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/031---arbok/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148831.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.59},&#xD;&#xA;  { Date: 1605481200000, Close: 1.09},&#xD;&#xA;  { Date: 1607295600000, Close: 1.49},&#xD;&#xA;  { Date: 1608505200000, Close: 1.29},&#xD;&#xA;  { Date: 1617577200000, Close: 1.09},&#xD;&#xA;  { Date: 1634511600000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.59},&#xD;&#xA;  { Date: 1696806000000, Close: 0.69},&#xD;&#xA;  { Date: 1714345200000, Close: 0.79},&#xD;&#xA;  { Date: 1714345200000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>032/062 - Cloyster</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/032---cloyster/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/032---cloyster/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148928.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 05-12-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1605481200000, Close: 0.89},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1617577200000, Close: 0.89},&#xD;&#xA;  { Date: 1621810800000, Close: 0.99},&#xD;&#xA;  { Date: 1624230000000, Close: 0.89},&#xD;&#xA;  { Date: 1636326000000, Close: 0.99},&#xD;&#xA;  { Date: 1652655600000, Close: 0.89},&#xD;&#xA;  { Date: 1667775600000, Close: 0.79},&#xD;&#xA;  { Date: 1669590000000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1679871600000, Close: 0.59},&#xD;&#xA;  { Date: 1682290800000, Close: 0.69},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1685919600000, Close: 0.49},&#xD;&#xA;  { Date: 1687734000000, Close: 0.59},&#xD;&#xA;  { Date: 1722207600000, Close: 0.69},&#xD;&#xA;  { Date: 1722207600000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1670194800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>033/062 - Gastly</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/033---gastly/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/033---gastly/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149059.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 01-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 0.79},&#xD;&#xA;  { Date: 1606690800000, Close: 0.99},&#xD;&#xA;  { Date: 1614553200000, Close: 1.09},&#xD;&#xA;  { Date: 1623020400000, Close: 0.99},&#xD;&#xA;  { Date: 1632697200000, Close: 0.89},&#xD;&#xA;  { Date: 1644793200000, Close: 0.99},&#xD;&#xA;  { Date: 1657494000000, Close: 0.89},&#xD;&#xA;  { Date: 1679871600000, Close: 0.59},&#xD;&#xA;  { Date: 1681686000000, Close: 0.69},&#xD;&#xA;  { Date: 1719788400000, Close: 0.59},&#xD;&#xA;  { Date: 1727650800000, Close: 0.79},&#xD;&#xA;  { Date: 1727650800000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614553200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>034/062 - Golbat</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/034---golbat/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/034---golbat/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149089.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 17-01-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.29 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.29},&#xD;&#xA;  { Date: 1606086000000, Close: 0.89},&#xD;&#xA;  { Date: 1620601200000, Close: 0.79},&#xD;&#xA;  { Date: 1623625200000, Close: 0.69},&#xD;&#xA;  { Date: 1630278000000, Close: 0.79},&#xD;&#xA;  { Date: 1633302000000, Close: 0.69},&#xD;&#xA;  { Date: 1635116400000, Close: 0.79},&#xD;&#xA;  { Date: 1641164400000, Close: 0.89},&#xD;&#xA;  { Date: 1642374000000, Close: 0.99},&#xD;&#xA;  { Date: 1645398000000, Close: 0.89},&#xD;&#xA;  { Date: 1648422000000, Close: 0.79},&#xD;&#xA;  { Date: 1658098800000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1686524400000, Close: 0.39},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;  { Date: 1703458800000, Close: 0.39},&#xD;&#xA;  { Date: 1719183600000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;  { Date: 1728860400000, Close: 0.39},&#xD;&#xA;  { Date: 1728860400000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1642374000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>035/062 - Golduck</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/035---golduck/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/035---golduck/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149091.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 04-07-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.89},&#xD;&#xA;  { Date: 1606086000000, Close: 1.19},&#xD;&#xA;  { Date: 1607295600000, Close: 1.49},&#xD;&#xA;  { Date: 1613948400000, Close: 1.45},&#xD;&#xA;  { Date: 1618182000000, Close: 1.39},&#xD;&#xA;  { Date: 1620601200000, Close: 1.29},&#xD;&#xA;  { Date: 1621206000000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1646607600000, Close: 1.09},&#xD;&#xA;  { Date: 1652655600000, Close: 0.99},&#xD;&#xA;  { Date: 1668380400000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.59},&#xD;&#xA;  { Date: 1682290800000, Close: 0.69},&#xD;&#xA;  { Date: 1685919600000, Close: 0.59},&#xD;&#xA;  { Date: 1688338800000, Close: 0.69},&#xD;&#xA;  { Date: 1696201200000, Close: 0.79},&#xD;&#xA;  { Date: 1696201200000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1593817200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>036/062 - Golem</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/036---golem/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/036---golem/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149094.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.99 on 21-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1593817200000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 1.09},&#xD;&#xA;  { Date: 1605481200000, Close: 2.99},&#xD;&#xA;  { Date: 1606086000000, Close: 3.09},&#xD;&#xA;  { Date: 1608505200000, Close: 3.99},&#xD;&#xA;  { Date: 1618182000000, Close: 3.49},&#xD;&#xA;  { Date: 1619391600000, Close: 3.79},&#xD;&#xA;  { Date: 1620601200000, Close: 3.49},&#xD;&#xA;  { Date: 1624834800000, Close: 2.99},&#xD;&#xA;  { Date: 1625439600000, Close: 3.09},&#xD;&#xA;  { Date: 1626649200000, Close: 2.99},&#xD;&#xA;  { Date: 1627254000000, Close: 2.49},&#xD;&#xA;  { Date: 1629673200000, Close: 2.29},&#xD;&#xA;  { Date: 1635116400000, Close: 2.49},&#xD;&#xA;  { Date: 1635721200000, Close: 2.29},&#xD;&#xA;  { Date: 1637535600000, Close: 1.99},&#xD;&#xA;  { Date: 1639350000000, Close: 1.79},&#xD;&#xA;  { Date: 1639954800000, Close: 1.99},&#xD;&#xA;  { Date: 1644793200000, Close: 1.69},&#xD;&#xA;  { Date: 1645398000000, Close: 1.49},&#xD;&#xA;  { Date: 1646002800000, Close: 1.29},&#xD;&#xA;  { Date: 1648422000000, Close: 1.09},&#xD;&#xA;  { Date: 1649631600000, Close: 0.99},&#xD;&#xA;  { Date: 1652655600000, Close: 1.09},&#xD;&#xA;  { Date: 1655074800000, Close: 0.99},&#xD;&#xA;  { Date: 1668985200000, Close: 0.89},&#xD;&#xA;  { Date: 1670799600000, Close: 0.99},&#xD;&#xA;  { Date: 1671404400000, Close: 0.89},&#xD;&#xA;  { Date: 1681081200000, Close: 1.09},&#xD;&#xA;  { Date: 1695596400000, Close: 1.29},&#xD;&#xA;  { Date: 1705878000000, Close: 1.79},&#xD;&#xA;  { Date: 1706482800000, Close: 1.49},&#xD;&#xA;  { Date: 1715554800000, Close: 2.09},&#xD;&#xA;  { Date: 1715554800000, Close: 2.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1608505200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>037/062 - Graveler</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/037---graveler/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/037---graveler/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149099.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 06-12-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.59},&#xD;&#xA;  { Date: 1606690800000, Close: 0.79},&#xD;&#xA;  { Date: 1607900400000, Close: 0.89},&#xD;&#xA;  { Date: 1616972400000, Close: 0.79},&#xD;&#xA;  { Date: 1620601200000, Close: 0.69},&#xD;&#xA;  { Date: 1625439600000, Close: 0.59},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.59},&#xD;&#xA;  { Date: 1633906800000, Close: 0.79},&#xD;&#xA;  { Date: 1638745200000, Close: 0.99},&#xD;&#xA;  { Date: 1641769200000, Close: 0.89},&#xD;&#xA;  { Date: 1653865200000, Close: 0.79},&#xD;&#xA;  { Date: 1670194800000, Close: 0.69},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.39},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1685919600000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.59},&#xD;&#xA;  { Date: 1719183600000, Close: 0.49},&#xD;&#xA;  { Date: 1720393200000, Close: 0.39},&#xD;&#xA;  { Date: 1722207600000, Close: 0.49},&#xD;&#xA;  { Date: 1722207600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1638745200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>038/062 - Kingler</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/038---kingler/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/038---kingler/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149149.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 05-12-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.69},&#xD;&#xA;  { Date: 1605481200000, Close: 0.99},&#xD;&#xA;  { Date: 1606086000000, Close: 1.39},&#xD;&#xA;  { Date: 1607295600000, Close: 1.49},&#xD;&#xA;  { Date: 1609110000000, Close: 1.39},&#xD;&#xA;  { Date: 1610924400000, Close: 1.49},&#xD;&#xA;  { Date: 1613343600000, Close: 1.29},&#xD;&#xA;  { Date: 1613948400000, Close: 1.09},&#xD;&#xA;  { Date: 1616367600000, Close: 0.99},&#xD;&#xA;  { Date: 1639954800000, Close: 0.89},&#xD;&#xA;  { Date: 1650841200000, Close: 0.79},&#xD;&#xA;  { Date: 1653865200000, Close: 0.69},&#xD;&#xA;  { Date: 1658098800000, Close: 0.59},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1714345200000, Close: 0.59},&#xD;&#xA;  { Date: 1714345200000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1670194800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>039/062 - Magmar</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/039---magmar/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/039---magmar/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149236.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 20-12-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.40},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1609714800000, Close: 0.89},&#xD;&#xA;  { Date: 1616972400000, Close: 0.79},&#xD;&#xA;  { Date: 1621810800000, Close: 0.69},&#xD;&#xA;  { Date: 1627858800000, Close: 0.59},&#xD;&#xA;  { Date: 1637535600000, Close: 0.99},&#xD;&#xA;  { Date: 1639954800000, Close: 1.09},&#xD;&#xA;  { Date: 1645398000000, Close: 0.99},&#xD;&#xA;  { Date: 1669590000000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1706482800000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1639954800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>040/062 - Omastar</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/040---omastar/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/040---omastar/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149326.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.09 on 21-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1606086000000, Close: 1.59},&#xD;&#xA;  { Date: 1607295600000, Close: 1.99},&#xD;&#xA;  { Date: 1608505200000, Close: 2.09},&#xD;&#xA;  { Date: 1612134000000, Close: 1.99},&#xD;&#xA;  { Date: 1617577200000, Close: 1.79},&#xD;&#xA;  { Date: 1621206000000, Close: 1.69},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1622415600000, Close: 1.29},&#xD;&#xA;  { Date: 1623625200000, Close: 1.35},&#xD;&#xA;  { Date: 1624230000000, Close: 1.29},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1639350000000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 0.89},&#xD;&#xA;  { Date: 1679266800000, Close: 1.29},&#xD;&#xA;  { Date: 1689548400000, Close: 1.39},&#xD;&#xA;  { Date: 1700434800000, Close: 1.49},&#xD;&#xA;  { Date: 1701039600000, Close: 1.19},&#xD;&#xA;  { Date: 1705878000000, Close: 0.99},&#xD;&#xA;  { Date: 1714950000000, Close: 0.69},&#xD;&#xA;  { Date: 1719183600000, Close: 0.89},&#xD;&#xA;  { Date: 1719183600000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1608505200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>041/062 - Sandslash</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/041---sandslash/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/041---sandslash/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149437.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 16-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.69},&#xD;&#xA;  { Date: 1603062000000, Close: 0.79},&#xD;&#xA;  { Date: 1603666800000, Close: 0.99},&#xD;&#xA;  { Date: 1605481200000, Close: 1.09},&#xD;&#xA;  { Date: 1609110000000, Close: 0.99},&#xD;&#xA;  { Date: 1615762800000, Close: 1.09},&#xD;&#xA;  { Date: 1620601200000, Close: 0.99},&#xD;&#xA;  { Date: 1643583600000, Close: 1.09},&#xD;&#xA;  { Date: 1649026800000, Close: 0.99},&#xD;&#xA;  { Date: 1679871600000, Close: 0.59},&#xD;&#xA;  { Date: 1681686000000, Close: 0.69},&#xD;&#xA;  { Date: 1702854000000, Close: 0.89},&#xD;&#xA;  { Date: 1728255600000, Close: 0.99},&#xD;&#xA;  { Date: 1728255600000, Close: 0.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1605481200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>042/062 - Seadra</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/042---seadra/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/042---seadra/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149444.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 28-02-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-09-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.59},&#xD;&#xA;  { Date: 1605481200000, Close: 0.79},&#xD;&#xA;  { Date: 1606086000000, Close: 0.89},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1620601200000, Close: 0.89},&#xD;&#xA;  { Date: 1624834800000, Close: 0.79},&#xD;&#xA;  { Date: 1628463600000, Close: 0.69},&#xD;&#xA;  { Date: 1633302000000, Close: 0.59},&#xD;&#xA;  { Date: 1633906800000, Close: 0.69},&#xD;&#xA;  { Date: 1636326000000, Close: 0.99},&#xD;&#xA;  { Date: 1646002800000, Close: 2.49},&#xD;&#xA;  { Date: 1647817200000, Close: 2.29},&#xD;&#xA;  { Date: 1649631600000, Close: 1.99},&#xD;&#xA;  { Date: 1651446000000, Close: 1.69},&#xD;&#xA;  { Date: 1653260400000, Close: 1.29},&#xD;&#xA;  { Date: 1655679600000, Close: 0.99},&#xD;&#xA;  { Date: 1665961200000, Close: 0.89},&#xD;&#xA;  { Date: 1668380400000, Close: 0.79},&#xD;&#xA;  { Date: 1670194800000, Close: 0.69},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1692572400000, Close: 0.39},&#xD;&#xA;  { Date: 1705878000000, Close: 0.49},&#xD;&#xA;  { Date: 1706482800000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1646002800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1600383600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>043/062 - Slowbro</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/043---slowbro/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/043---slowbro/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149460.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 20-12-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 0.89},&#xD;&#xA;  { Date: 1606690800000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 1.09},&#xD;&#xA;  { Date: 1620601200000, Close: 0.99},&#xD;&#xA;  { Date: 1632697200000, Close: 1.09},&#xD;&#xA;  { Date: 1636326000000, Close: 1.49},&#xD;&#xA;  { Date: 1639954800000, Close: 1.99},&#xD;&#xA;  { Date: 1641769200000, Close: 1.69},&#xD;&#xA;  { Date: 1642978800000, Close: 1.49},&#xD;&#xA;  { Date: 1644793200000, Close: 1.19},&#xD;&#xA;  { Date: 1645398000000, Close: 1.09},&#xD;&#xA;  { Date: 1646002800000, Close: 0.99},&#xD;&#xA;  { Date: 1668985200000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.79},&#xD;&#xA;  { Date: 1684710000000, Close: 0.89},&#xD;&#xA;  { Date: 1684710000000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1639954800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>044/062 - Tentacruel</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/044---tentacruel/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/044---tentacruel/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149484.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 14-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1604271600000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 1.29},&#xD;&#xA;  { Date: 1610319600000, Close: 1.19},&#xD;&#xA;  { Date: 1612738800000, Close: 0.89},&#xD;&#xA;  { Date: 1615158000000, Close: 0.99},&#xD;&#xA;  { Date: 1628463600000, Close: 0.89},&#xD;&#xA;  { Date: 1650236400000, Close: 0.79},&#xD;&#xA;  { Date: 1658098800000, Close: 0.69},&#xD;&#xA;  { Date: 1662332400000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 0.89},&#xD;&#xA;  { Date: 1669590000000, Close: 0.79},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.59},&#xD;&#xA;  { Date: 1679871600000, Close: 0.69},&#xD;&#xA;  { Date: 1681686000000, Close: 0.79},&#xD;&#xA;  { Date: 1684710000000, Close: 0.89},&#xD;&#xA;  { Date: 1687129200000, Close: 0.79},&#xD;&#xA;  { Date: 1687734000000, Close: 0.69},&#xD;&#xA;  { Date: 1719183600000, Close: 0.79},&#xD;&#xA;  { Date: 1719183600000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607900400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>045/062 - Weezing</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/045---weezing/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/045---weezing/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149534.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 20-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.69},&#xD;&#xA;  { Date: 1610924400000, Close: 0.79},&#xD;&#xA;  { Date: 1613948400000, Close: 0.89},&#xD;&#xA;  { Date: 1620601200000, Close: 0.79},&#xD;&#xA;  { Date: 1633906800000, Close: 0.69},&#xD;&#xA;  { Date: 1635116400000, Close: 0.79},&#xD;&#xA;  { Date: 1639954800000, Close: 0.89},&#xD;&#xA;  { Date: 1649026800000, Close: 0.79},&#xD;&#xA;  { Date: 1655679600000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 0.89},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.69},&#xD;&#xA;  { Date: 1706482800000, Close: 0.89},&#xD;&#xA;  { Date: 1722207600000, Close: 0.69},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1655679600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>046/062 - Ekans</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/046---ekans/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/046---ekans/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148992.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 15-02-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1683500400000, Close: 0.39},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.59},&#xD;&#xA;  { Date: 1703458800000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.59},&#xD;&#xA;  { Date: 1714950000000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1613343600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>047/062 - Geodude</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/047---geodude/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/047---geodude/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149066.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 08-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.39},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.39},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615158000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>048/062 - Grimer</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/048---grimer/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/048---grimer/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149101.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 24-06-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.40},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.40},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1684105200000, Close: 0.39},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;  { Date: 1703458800000, Close: 0.59},&#xD;&#xA;  { Date: 1719183600000, Close: 0.69},&#xD;&#xA;  { Date: 1719183600000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1719183600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>049/062 - Horsea</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/049---horsea/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/049---horsea/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149121.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 27-05-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.39},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.40},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1646002800000, Close: 0.39},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1682290800000, Close: 0.59},&#xD;&#xA;  { Date: 1709506800000, Close: 0.69},&#xD;&#xA;  { Date: 1714345200000, Close: 0.89},&#xD;&#xA;  { Date: 1716764400000, Close: 0.99},&#xD;&#xA;  { Date: 1716764400000, Close: 0.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1716764400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>050/062 - Kabuto</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/050---kabuto/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/050---kabuto/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149139.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 01-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.89},&#xD;&#xA;  { Date: 1616972400000, Close: 0.79},&#xD;&#xA;  { Date: 1630278000000, Close: 0.69},&#xD;&#xA;  { Date: 1632697200000, Close: 0.59},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1703458800000, Close: 0.59},&#xD;&#xA;  { Date: 1714345200000, Close: 0.69},&#xD;&#xA;  { Date: 1714345200000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1614553200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>051/062 - Krabby</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/051---krabby/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/051---krabby/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149171.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 07-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 28-06-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.39},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.39},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.39},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1705878000000, Close: 0.59},&#xD;&#xA;  { Date: 1705878000000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1607295600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1624834800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>052/062 - Omanyte</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/052---omanyte/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/052---omanyte/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149324.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 19-02-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.59},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.39},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1703458800000, Close: 0.69},&#xD;&#xA;  { Date: 1708297200000, Close: 0.79},&#xD;&#xA;  { Date: 1708297200000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1708297200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>053/062 - Psyduck</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/053---psyduck/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/053---psyduck/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149374.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 27-03-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.29 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.29},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.69},&#xD;&#xA;  { Date: 1632092400000, Close: 0.59},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1675033200000, Close: 0.59},&#xD;&#xA;  { Date: 1678662000000, Close: 0.69},&#xD;&#xA;  { Date: 1679871600000, Close: 0.79},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1704063600000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1679871600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>054/062 - Shellder</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/054---shellder/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/054---shellder/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149451.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 27-03-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.39},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.39},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.59},&#xD;&#xA;  { Date: 1679871600000, Close: 0.69},&#xD;&#xA;  { Date: 1687734000000, Close: 0.59},&#xD;&#xA;  { Date: 1688338800000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1679871600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>055/062 - Slowpoke</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/055---slowpoke/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/055---slowpoke/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149461.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 30-01-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.39},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.59},&#xD;&#xA;  { Date: 1650841200000, Close: 0.49},&#xD;&#xA;  { Date: 1656889200000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.89},&#xD;&#xA;  { Date: 1687734000000, Close: 0.39},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1675033200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>056/062 - Tentacool</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/056---tentacool/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/056---tentacool/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149482.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 21-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.59},&#xD;&#xA;  { Date: 1626044400000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.39},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1645398000000, Close: 0.39},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1680476400000, Close: 0.39},&#xD;&#xA;  { Date: 1683500400000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.59},&#xD;&#xA;  { Date: 1696201200000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1608505200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>057/062 - Zubat</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/057---zubat/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/057---zubat/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149542.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 15-04-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-09-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.39},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.39},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1713135600000, Close: 0.69},&#xD;&#xA;  { Date: 1713135600000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1713135600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1600383600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>058/062 - Mr. Fuji</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/058---mr.-fuji/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/058---mr.-fuji/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149298.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 06-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1608505200000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.39},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.39},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.59},&#xD;&#xA;  { Date: 1693782000000, Close: 0.39},&#xD;&#xA;  { Date: 1701039600000, Close: 0.49},&#xD;&#xA;  { Date: 1706482800000, Close: 0.39},&#xD;&#xA;  { Date: 1707692400000, Close: 0.49},&#xD;&#xA;  { Date: 1707692400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>059/062 - Energy Search</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/059---energy-search/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/059---energy-search/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149003.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 04-09-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1693782000000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1693782000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>060/062 - Gambler</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/060---gambler/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/060---gambler/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149058.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 04-09-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1693782000000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.39},&#xD;&#xA;  { Date: 1702854000000, Close: 0.35},&#xD;&#xA;  { Date: 1708297200000, Close: 0.49},&#xD;&#xA;  { Date: 1716764400000, Close: 0.39},&#xD;&#xA;  { Date: 1720393200000, Close: 0.35},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1693782000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>061/062 - Recycle</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/061---recycle/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/061---recycle/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/183541.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1717974000000, Close: 0.39},&#xD;&#xA;  { Date: 1720393200000, Close: 0.35},&#xD;&#xA;  { Date: 1725231600000, Close: 0.49},&#xD;&#xA;  { Date: 1725231600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591398000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>062/062 - Mysterious Fossil</title>
      <link>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/062---mysterious-fossil/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/01-original-series/03-fossil/062---mysterious-fossil/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149304.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 20-05-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.39},&#xD;&#xA;  { Date: 1619996400000, Close: 0.35},&#xD;&#xA;  { Date: 1701644400000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.59},&#xD;&#xA;  { Date: 1716159600000, Close: 0.69},&#xD;&#xA;  { Date: 1716159600000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(939510000000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1716159600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584486000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
