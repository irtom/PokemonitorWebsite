<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EX Team Magma vs Team Aqua on Pokémonitor</title>
    <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/</link>
    <description>Recent content in EX Team Magma vs Team Aqua on Pokémonitor</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>001/095 - Team Aqua&#39;s Cacturne</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/001---team-aquas-cacturne/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/001---team-aquas-cacturne/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168817.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 23.99 on 24-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.49 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575716400000, Close: 4.49},&#xD;&#xA;  { Date: 1589886000000, Close: 6.49},&#xD;&#xA;  { Date: 1595934000000, Close: 9.99},&#xD;&#xA;  { Date: 1599217200000, Close: 10.99},&#xD;&#xA;  { Date: 1601118000000, Close: 11.99},&#xD;&#xA;  { Date: 1601463600000, Close: 12.99},&#xD;&#xA;  { Date: 1605956400000, Close: 14.99},&#xD;&#xA;  { Date: 1607166000000, Close: 17.99},&#xD;&#xA;  { Date: 1608721200000, Close: 16.99},&#xD;&#xA;  { Date: 1610017200000, Close: 15.49},&#xD;&#xA;  { Date: 1612090800000, Close: 13.99},&#xD;&#xA;  { Date: 1613300400000, Close: 12.49},&#xD;&#xA;  { Date: 1615374000000, Close: 10.99},&#xD;&#xA;  { Date: 1616929200000, Close: 9.79},&#xD;&#xA;  { Date: 1617361200000, Close: 10.49},&#xD;&#xA;  { Date: 1621335600000, Close: 10.89},&#xD;&#xA;  { Date: 1623841200000, Close: 9.79},&#xD;&#xA;  { Date: 1629457200000, Close: 10.99},&#xD;&#xA;  { Date: 1632481200000, Close: 16.99},&#xD;&#xA;  { Date: 1637146800000, Close: 15.49},&#xD;&#xA;  { Date: 1641207600000, Close: 13.99},&#xD;&#xA;  { Date: 1645959600000, Close: 14.89},&#xD;&#xA;  { Date: 1647946800000, Close: 14.99},&#xD;&#xA;  { Date: 1652958000000, Close: 15.09},&#xD;&#xA;  { Date: 1660993200000, Close: 14.99},&#xD;&#xA;  { Date: 1666263600000, Close: 13.49},&#xD;&#xA;  { Date: 1666782000000, Close: 14.99},&#xD;&#xA;  { Date: 1671966000000, Close: 13.49},&#xD;&#xA;  { Date: 1674644400000, Close: 15.09},&#xD;&#xA;  { Date: 1674990000000, Close: 16.89},&#xD;&#xA;  { Date: 1698145200000, Close: 23.99},&#xD;&#xA;  { Date: 1705230000000, Close: 22.49},&#xD;&#xA;  { Date: 1709204400000, Close: 20.99},&#xD;&#xA;  { Date: 1710500400000, Close: 19.49},&#xD;&#xA;  { Date: 1711882800000, Close: 17.99},&#xD;&#xA;  { Date: 1712401200000, Close: 14.99},&#xD;&#xA;  { Date: 1713956400000, Close: 13.49},&#xD;&#xA;  { Date: 1714129200000, Close: 11.99},&#xD;&#xA;  { Date: 1718622000000, Close: 10.49},&#xD;&#xA;  { Date: 1727262000000, Close: 9.39},&#xD;&#xA;  { Date: 1729545459607, Close: 9.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1698145200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575716400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>002/095 - Team Aqua&#39;s Crawdaunt</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/002---team-aquas-crawdaunt/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/002---team-aquas-crawdaunt/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168797.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 17-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 3.99 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575716400000, Close: 3.99},&#xD;&#xA;  { Date: 1583319600000, Close: 4.49},&#xD;&#xA;  { Date: 1588935600000, Close: 5.99},&#xD;&#xA;  { Date: 1589367600000, Close: 6.99},&#xD;&#xA;  { Date: 1594551600000, Close: 7.99},&#xD;&#xA;  { Date: 1598698800000, Close: 8.49},&#xD;&#xA;  { Date: 1599390000000, Close: 8.99},&#xD;&#xA;  { Date: 1600254000000, Close: 9.49},&#xD;&#xA;  { Date: 1602154800000, Close: 11.99},&#xD;&#xA;  { Date: 1607166000000, Close: 13.99},&#xD;&#xA;  { Date: 1608202800000, Close: 14.99},&#xD;&#xA;  { Date: 1611831600000, Close: 13.49},&#xD;&#xA;  { Date: 1612522800000, Close: 12.99},&#xD;&#xA;  { Date: 1613732400000, Close: 11.99},&#xD;&#xA;  { Date: 1614942000000, Close: 10.49},&#xD;&#xA;  { Date: 1615028400000, Close: 9.99},&#xD;&#xA;  { Date: 1616238000000, Close: 8.99},&#xD;&#xA;  { Date: 1617447600000, Close: 7.99},&#xD;&#xA;  { Date: 1618657200000, Close: 7.49},&#xD;&#xA;  { Date: 1619866800000, Close: 6.79},&#xD;&#xA;  { Date: 1620126000000, Close: 6.49},&#xD;&#xA;  { Date: 1621335600000, Close: 5.99},&#xD;&#xA;  { Date: 1622631600000, Close: 5.39},&#xD;&#xA;  { Date: 1623927600000, Close: 4.79},&#xD;&#xA;  { Date: 1653390000000, Close: 9.99},&#xD;&#xA;  { Date: 1657450800000, Close: 8.79},&#xD;&#xA;  { Date: 1660993200000, Close: 8.99},&#xD;&#xA;  { Date: 1664967600000, Close: 9.59},&#xD;&#xA;  { Date: 1666350000000, Close: 9.69},&#xD;&#xA;  { Date: 1668510000000, Close: 9.89},&#xD;&#xA;  { Date: 1669287600000, Close: 9.59},&#xD;&#xA;  { Date: 1670324400000, Close: 9.69},&#xD;&#xA;  { Date: 1670929200000, Close: 8.99},&#xD;&#xA;  { Date: 1671274800000, Close: 9.49},&#xD;&#xA;  { Date: 1672484400000, Close: 9.59},&#xD;&#xA;  { Date: 1707908400000, Close: 11.99},&#xD;&#xA;  { Date: 1729545459927, Close: 11.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1608202800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575716400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>003/095 - Team Aqua&#39;s Kyogre</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/003---team-aquas-kyogre/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/003---team-aquas-kyogre/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168813.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 29.99 on 25-11-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 9.99 on 21-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579604400000, Close: 9.99},&#xD;&#xA;  { Date: 1583319600000, Close: 10.99},&#xD;&#xA;  { Date: 1589886000000, Close: 14.99},&#xD;&#xA;  { Date: 1592737200000, Close: 15.99},&#xD;&#xA;  { Date: 1595588400000, Close: 14.99},&#xD;&#xA;  { Date: 1602154800000, Close: 24.99},&#xD;&#xA;  { Date: 1606302000000, Close: 29.99},&#xD;&#xA;  { Date: 1611745200000, Close: 27.99},&#xD;&#xA;  { Date: 1614337200000, Close: 26.49},&#xD;&#xA;  { Date: 1616151600000, Close: 24.99},&#xD;&#xA;  { Date: 1620212400000, Close: 26.99},&#xD;&#xA;  { Date: 1623495600000, Close: 25.49},&#xD;&#xA;  { Date: 1647601200000, Close: 27.99},&#xD;&#xA;  { Date: 1651489200000, Close: 26.49},&#xD;&#xA;  { Date: 1661252400000, Close: 27.99},&#xD;&#xA;  { Date: 1729545460039, Close: 27.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1606302000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579604400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>004/095 - Team Aqua&#39;s Manectric</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/004---team-aquas-manectric/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/004---team-aquas-manectric/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168804.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 27.99 on 01-10-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.49 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575716400000, Close: 4.49},&#xD;&#xA;  { Date: 1590750000000, Close: 7.99},&#xD;&#xA;  { Date: 1594810800000, Close: 12.99},&#xD;&#xA;  { Date: 1597316400000, Close: 17.99},&#xD;&#xA;  { Date: 1600254000000, Close: 21.99},&#xD;&#xA;  { Date: 1600599600000, Close: 24.99},&#xD;&#xA;  { Date: 1601550000000, Close: 27.99},&#xD;&#xA;  { Date: 1607252400000, Close: 26.49},&#xD;&#xA;  { Date: 1609930800000, Close: 24.99},&#xD;&#xA;  { Date: 1611140400000, Close: 23.49},&#xD;&#xA;  { Date: 1612436400000, Close: 21.99},&#xD;&#xA;  { Date: 1613646000000, Close: 20.49},&#xD;&#xA;  { Date: 1614942000000, Close: 18.99},&#xD;&#xA;  { Date: 1615028400000, Close: 17.99},&#xD;&#xA;  { Date: 1616238000000, Close: 16.49},&#xD;&#xA;  { Date: 1616583600000, Close: 15.99},&#xD;&#xA;  { Date: 1617793200000, Close: 14.49},&#xD;&#xA;  { Date: 1619089200000, Close: 12.99},&#xD;&#xA;  { Date: 1619262000000, Close: 11.99},&#xD;&#xA;  { Date: 1620558000000, Close: 10.49},&#xD;&#xA;  { Date: 1620730800000, Close: 9.99},&#xD;&#xA;  { Date: 1622026800000, Close: 8.79},&#xD;&#xA;  { Date: 1623322800000, Close: 8.19},&#xD;&#xA;  { Date: 1624618800000, Close: 7.59},&#xD;&#xA;  { Date: 1627038000000, Close: 9.99},&#xD;&#xA;  { Date: 1637146800000, Close: 8.79},&#xD;&#xA;  { Date: 1653390000000, Close: 14.99},&#xD;&#xA;  { Date: 1664622000000, Close: 15.99},&#xD;&#xA;  { Date: 1700305200000, Close: 17.99},&#xD;&#xA;  { Date: 1705230000000, Close: 16.49},&#xD;&#xA;  { Date: 1711191600000, Close: 14.99},&#xD;&#xA;  { Date: 1717153200000, Close: 13.49},&#xD;&#xA;  { Date: 1726916400000, Close: 11.99},&#xD;&#xA;  { Date: 1727089200000, Close: 12.09},&#xD;&#xA;  { Date: 1729545460127, Close: 12.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1601550000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575716400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>005/095 - Team Aqua&#39;s Sharpedo</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/005---team-aquas-sharpedo/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/005---team-aquas-sharpedo/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168826.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 21.99 on 06-10-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.49 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575716400000, Close: 4.49},&#xD;&#xA;  { Date: 1589886000000, Close: 8.99},&#xD;&#xA;  { Date: 1596020400000, Close: 14.99},&#xD;&#xA;  { Date: 1596193200000, Close: 15.99},&#xD;&#xA;  { Date: 1600426800000, Close: 19.99},&#xD;&#xA;  { Date: 1601982000000, Close: 21.99},&#xD;&#xA;  { Date: 1606042800000, Close: 20.49},&#xD;&#xA;  { Date: 1610017200000, Close: 18.99},&#xD;&#xA;  { Date: 1614423600000, Close: 17.49},&#xD;&#xA;  { Date: 1620212400000, Close: 17.99},&#xD;&#xA;  { Date: 1622113200000, Close: 16.49},&#xD;&#xA;  { Date: 1624791600000, Close: 14.99},&#xD;&#xA;  { Date: 1625310000000, Close: 15.99},&#xD;&#xA;  { Date: 1628334000000, Close: 16.99},&#xD;&#xA;  { Date: 1634036400000, Close: 15.49},&#xD;&#xA;  { Date: 1636628400000, Close: 13.99},&#xD;&#xA;  { Date: 1645959600000, Close: 14.89},&#xD;&#xA;  { Date: 1652958000000, Close: 15.99},&#xD;&#xA;  { Date: 1666004400000, Close: 14.49},&#xD;&#xA;  { Date: 1669892400000, Close: 13.09},&#xD;&#xA;  { Date: 1670238000000, Close: 12.99},&#xD;&#xA;  { Date: 1671015600000, Close: 12.79},&#xD;&#xA;  { Date: 1671534000000, Close: 10.99},&#xD;&#xA;  { Date: 1674126000000, Close: 9.79},&#xD;&#xA;  { Date: 1682593200000, Close: 13.89},&#xD;&#xA;  { Date: 1682679600000, Close: 14.59},&#xD;&#xA;  { Date: 1683025200000, Close: 15.09},&#xD;&#xA;  { Date: 1699009200000, Close: 18.99},&#xD;&#xA;  { Date: 1704538800000, Close: 17.49},&#xD;&#xA;  { Date: 1708599600000, Close: 15.99},&#xD;&#xA;  { Date: 1729545460443, Close: 15.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1601982000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575716400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>006/095 - Team Aqua&#39;s Walrein</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/006---team-aquas-walrein/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/006---team-aquas-walrein/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168810.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 9.99 on 14-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 18-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579345200000, Close: 0.89},&#xD;&#xA;  { Date: 1589886000000, Close: 1.29},&#xD;&#xA;  { Date: 1594983600000, Close: 1.39},&#xD;&#xA;  { Date: 1595588400000, Close: 1.69},&#xD;&#xA;  { Date: 1596884400000, Close: 2.49},&#xD;&#xA;  { Date: 1597834800000, Close: 2.99},&#xD;&#xA;  { Date: 1599217200000, Close: 3.99},&#xD;&#xA;  { Date: 1601204400000, Close: 3.39},&#xD;&#xA;  { Date: 1602068400000, Close: 2.99},&#xD;&#xA;  { Date: 1603364400000, Close: 3.49},&#xD;&#xA;  { Date: 1604574000000, Close: 2.89},&#xD;&#xA;  { Date: 1605783600000, Close: 3.49},&#xD;&#xA;  { Date: 1608202800000, Close: 4.99},&#xD;&#xA;  { Date: 1610103600000, Close: 4.39},&#xD;&#xA;  { Date: 1611313200000, Close: 3.79},&#xD;&#xA;  { Date: 1615374000000, Close: 5.99},&#xD;&#xA;  { Date: 1616670000000, Close: 6.99},&#xD;&#xA;  { Date: 1618398000000, Close: 9.99},&#xD;&#xA;  { Date: 1619780400000, Close: 8.79},&#xD;&#xA;  { Date: 1620385200000, Close: 7.99},&#xD;&#xA;  { Date: 1621594800000, Close: 6.99},&#xD;&#xA;  { Date: 1622804400000, Close: 6.49},&#xD;&#xA;  { Date: 1624014000000, Close: 5.99},&#xD;&#xA;  { Date: 1625310000000, Close: 5.49},&#xD;&#xA;  { Date: 1626519600000, Close: 4.49},&#xD;&#xA;  { Date: 1627729200000, Close: 3.99},&#xD;&#xA;  { Date: 1628938800000, Close: 3.49},&#xD;&#xA;  { Date: 1630926000000, Close: 2.89},&#xD;&#xA;  { Date: 1634986800000, Close: 2.99},&#xD;&#xA;  { Date: 1636023600000, Close: 3.49},&#xD;&#xA;  { Date: 1647601200000, Close: 3.79},&#xD;&#xA;  { Date: 1653390000000, Close: 4.99},&#xD;&#xA;  { Date: 1670583600000, Close: 4.39},&#xD;&#xA;  { Date: 1671793200000, Close: 3.99},&#xD;&#xA;  { Date: 1672138800000, Close: 3.69},&#xD;&#xA;  { Date: 1689937200000, Close: 3.99},&#xD;&#xA;  { Date: 1696935600000, Close: 4.49},&#xD;&#xA;  { Date: 1700910000000, Close: 3.89},&#xD;&#xA;  { Date: 1701169200000, Close: 3.99},&#xD;&#xA;  { Date: 1703847600000, Close: 4.09},&#xD;&#xA;  { Date: 1704279600000, Close: 4.19},&#xD;&#xA;  { Date: 1704452400000, Close: 3.99},&#xD;&#xA;  { Date: 1704884400000, Close: 4.29},&#xD;&#xA;  { Date: 1707994800000, Close: 4.59},&#xD;&#xA;  { Date: 1729545460557, Close: 4.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618398000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579345200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>007/095 - Team Magma&#39;s Aggron</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/007---team-magmas-aggron/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/007---team-magmas-aggron/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168832.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 21-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 07-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575716400000, Close: 0.99},&#xD;&#xA;  { Date: 1580382000000, Close: 1.59},&#xD;&#xA;  { Date: 1582714800000, Close: 2.29},&#xD;&#xA;  { Date: 1586689200000, Close: 2.99},&#xD;&#xA;  { Date: 1589886000000, Close: 3.99},&#xD;&#xA;  { Date: 1591700400000, Close: 5.99},&#xD;&#xA;  { Date: 1592564400000, Close: 6.99},&#xD;&#xA;  { Date: 1592910000000, Close: 7.49},&#xD;&#xA;  { Date: 1593774000000, Close: 7.99},&#xD;&#xA;  { Date: 1598094000000, Close: 7.39},&#xD;&#xA;  { Date: 1599044400000, Close: 8.99},&#xD;&#xA;  { Date: 1600426800000, Close: 8.39},&#xD;&#xA;  { Date: 1601636400000, Close: 7.79},&#xD;&#xA;  { Date: 1602068400000, Close: 6.99},&#xD;&#xA;  { Date: 1603278000000, Close: 6.49},&#xD;&#xA;  { Date: 1604487600000, Close: 5.99},&#xD;&#xA;  { Date: 1605783600000, Close: 5.39},&#xD;&#xA;  { Date: 1608116400000, Close: 5.99},&#xD;&#xA;  { Date: 1608980400000, Close: 5.39},&#xD;&#xA;  { Date: 1610190000000, Close: 4.79},&#xD;&#xA;  { Date: 1615460400000, Close: 6.99},&#xD;&#xA;  { Date: 1618657200000, Close: 10.99},&#xD;&#xA;  { Date: 1619002800000, Close: 14.99},&#xD;&#xA;  { Date: 1620212400000, Close: 13.99},&#xD;&#xA;  { Date: 1620471600000, Close: 11.99},&#xD;&#xA;  { Date: 1625742000000, Close: 10.49},&#xD;&#xA;  { Date: 1628420400000, Close: 9.39},&#xD;&#xA;  { Date: 1631185200000, Close: 8.79},&#xD;&#xA;  { Date: 1632481200000, Close: 8.19},&#xD;&#xA;  { Date: 1632567600000, Close: 7.49},&#xD;&#xA;  { Date: 1633863600000, Close: 6.79},&#xD;&#xA;  { Date: 1634036400000, Close: 5.99},&#xD;&#xA;  { Date: 1635332400000, Close: 6.99},&#xD;&#xA;  { Date: 1635591600000, Close: 7.99},&#xD;&#xA;  { Date: 1647601200000, Close: 9.09},&#xD;&#xA;  { Date: 1651143600000, Close: 11.99},&#xD;&#xA;  { Date: 1660993200000, Close: 9.99},&#xD;&#xA;  { Date: 1664967600000, Close: 8.79},&#xD;&#xA;  { Date: 1669806000000, Close: 7.49},&#xD;&#xA;  { Date: 1670497200000, Close: 5.99},&#xD;&#xA;  { Date: 1671706800000, Close: 5.49},&#xD;&#xA;  { Date: 1673002800000, Close: 4.99},&#xD;&#xA;  { Date: 1674212400000, Close: 4.39},&#xD;&#xA;  { Date: 1707908400000, Close: 4.99},&#xD;&#xA;  { Date: 1729545460801, Close: 4.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619002800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575716400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>008/095 - Team Magma&#39;s Claydol</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/008---team-magmas-claydol/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/008---team-magmas-claydol/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168843.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 14.99 on 25-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.39 on 21-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575716400000, Close: 3.49},&#xD;&#xA;  { Date: 1576753200000, Close: 2.99},&#xD;&#xA;  { Date: 1579604400000, Close: 2.39},&#xD;&#xA;  { Date: 1581159600000, Close: 2.49},&#xD;&#xA;  { Date: 1582714800000, Close: 2.99},&#xD;&#xA;  { Date: 1586689200000, Close: 3.49},&#xD;&#xA;  { Date: 1588244400000, Close: 3.99},&#xD;&#xA;  { Date: 1590750000000, Close: 4.99},&#xD;&#xA;  { Date: 1600254000000, Close: 9.99},&#xD;&#xA;  { Date: 1601982000000, Close: 11.99},&#xD;&#xA;  { Date: 1603191600000, Close: 10.99},&#xD;&#xA;  { Date: 1604401200000, Close: 9.99},&#xD;&#xA;  { Date: 1607770800000, Close: 10.99},&#xD;&#xA;  { Date: 1616670000000, Close: 14.99},&#xD;&#xA;  { Date: 1617879600000, Close: 13.49},&#xD;&#xA;  { Date: 1621422000000, Close: 11.99},&#xD;&#xA;  { Date: 1624100400000, Close: 10.49},&#xD;&#xA;  { Date: 1624359600000, Close: 9.99},&#xD;&#xA;  { Date: 1625828400000, Close: 10.99},&#xD;&#xA;  { Date: 1627038000000, Close: 11.99},&#xD;&#xA;  { Date: 1636887600000, Close: 10.49},&#xD;&#xA;  { Date: 1643281200000, Close: 9.39},&#xD;&#xA;  { Date: 1645959600000, Close: 9.69},&#xD;&#xA;  { Date: 1648638000000, Close: 8.99},&#xD;&#xA;  { Date: 1653390000000, Close: 10.99},&#xD;&#xA;  { Date: 1661252400000, Close: 12.99},&#xD;&#xA;  { Date: 1665140400000, Close: 11.49},&#xD;&#xA;  { Date: 1665226800000, Close: 12.99},&#xD;&#xA;  { Date: 1669287600000, Close: 11.49},&#xD;&#xA;  { Date: 1669374000000, Close: 12.69},&#xD;&#xA;  { Date: 1673434800000, Close: 11.49},&#xD;&#xA;  { Date: 1673521200000, Close: 12.29},&#xD;&#xA;  { Date: 1674039600000, Close: 12.59},&#xD;&#xA;  { Date: 1676199600000, Close: 14.09},&#xD;&#xA;  { Date: 1686913200000, Close: 13.99},&#xD;&#xA;  { Date: 1696330800000, Close: 14.99},&#xD;&#xA;  { Date: 1700737200000, Close: 13.49},&#xD;&#xA;  { Date: 1703502000000, Close: 11.99},&#xD;&#xA;  { Date: 1703674800000, Close: 10.49},&#xD;&#xA;  { Date: 1706266800000, Close: 9.39},&#xD;&#xA;  { Date: 1708945200000, Close: 8.79},&#xD;&#xA;  { Date: 1711623600000, Close: 8.19},&#xD;&#xA;  { Date: 1713006000000, Close: 9.49},&#xD;&#xA;  { Date: 1716807600000, Close: 10.59},&#xD;&#xA;  { Date: 1717585200000, Close: 11.09},&#xD;&#xA;  { Date: 1729545461090, Close: 11.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1616670000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579604400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>009/095 - Team Magma&#39;s Groudon</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/009---team-magmas-groudon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/009---team-magmas-groudon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168844.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 59.99 on 31-12-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 14.99 on 15-02-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1581764400000, Close: 14.99},&#xD;&#xA;  { Date: 1582369200000, Close: 15.99},&#xD;&#xA;  { Date: 1589454000000, Close: 17.99},&#xD;&#xA;  { Date: 1594810800000, Close: 27.99},&#xD;&#xA;  { Date: 1595588400000, Close: 29.99},&#xD;&#xA;  { Date: 1596193200000, Close: 31.99},&#xD;&#xA;  { Date: 1601377200000, Close: 34.99},&#xD;&#xA;  { Date: 1601982000000, Close: 32.99},&#xD;&#xA;  { Date: 1602586800000, Close: 29.99},&#xD;&#xA;  { Date: 1608030000000, Close: 49.99},&#xD;&#xA;  { Date: 1609412400000, Close: 59.99},&#xD;&#xA;  { Date: 1610708400000, Close: 55.99},&#xD;&#xA;  { Date: 1612522800000, Close: 52.99},&#xD;&#xA;  { Date: 1614250800000, Close: 49.99},&#xD;&#xA;  { Date: 1614337200000, Close: 44.99},&#xD;&#xA;  { Date: 1616151600000, Close: 41.99},&#xD;&#xA;  { Date: 1616842800000, Close: 39.99},&#xD;&#xA;  { Date: 1618570800000, Close: 34.99},&#xD;&#xA;  { Date: 1620126000000, Close: 29.99},&#xD;&#xA;  { Date: 1621940400000, Close: 24.99},&#xD;&#xA;  { Date: 1623754800000, Close: 21.99},&#xD;&#xA;  { Date: 1628334000000, Close: 24.99},&#xD;&#xA;  { Date: 1649502000000, Close: 26.49},&#xD;&#xA;  { Date: 1653390000000, Close: 29.99},&#xD;&#xA;  { Date: 1656500400000, Close: 31.99},&#xD;&#xA;  { Date: 1691578800000, Close: 54.99},&#xD;&#xA;  { Date: 1692183600000, Close: 52.99},&#xD;&#xA;  { Date: 1700737200000, Close: 41.99},&#xD;&#xA;  { Date: 1700910000000, Close: 37.99},&#xD;&#xA;  { Date: 1701255600000, Close: 52.99},&#xD;&#xA;  { Date: 1705230000000, Close: 49.99},&#xD;&#xA;  { Date: 1726225200000, Close: 46.99},&#xD;&#xA;  { Date: 1728126000000, Close: 43.99},&#xD;&#xA;  { Date: 1729545461114, Close: 43.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1609412400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1581764400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>010/095 - Team Magma&#39;s Houndoom</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/010---team-magmas-houndoom/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/010---team-magmas-houndoom/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168854.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 49.99 on 20-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 8.49 on 21-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575716400000, Close: 8.99},&#xD;&#xA;  { Date: 1576926000000, Close: 8.49},&#xD;&#xA;  { Date: 1588935600000, Close: 8.99},&#xD;&#xA;  { Date: 1589972400000, Close: 9.99},&#xD;&#xA;  { Date: 1590750000000, Close: 10.99},&#xD;&#xA;  { Date: 1599390000000, Close: 14.99},&#xD;&#xA;  { Date: 1600254000000, Close: 15.99},&#xD;&#xA;  { Date: 1611831600000, Close: 39.99},&#xD;&#xA;  { Date: 1616756400000, Close: 36.99},&#xD;&#xA;  { Date: 1618484400000, Close: 34.99},&#xD;&#xA;  { Date: 1620298800000, Close: 32.99},&#xD;&#xA;  { Date: 1620385200000, Close: 29.99},&#xD;&#xA;  { Date: 1622113200000, Close: 27.99},&#xD;&#xA;  { Date: 1623841200000, Close: 24.99},&#xD;&#xA;  { Date: 1625569200000, Close: 23.49},&#xD;&#xA;  { Date: 1625655600000, Close: 21.99},&#xD;&#xA;  { Date: 1627383600000, Close: 19.99},&#xD;&#xA;  { Date: 1629111600000, Close: 18.49},&#xD;&#xA;  { Date: 1630926000000, Close: 16.99},&#xD;&#xA;  { Date: 1638356400000, Close: 19.99},&#xD;&#xA;  { Date: 1670670000000, Close: 36.99},&#xD;&#xA;  { Date: 1677754800000, Close: 37.49},&#xD;&#xA;  { Date: 1677841200000, Close: 41.79},&#xD;&#xA;  { Date: 1678186800000, Close: 46.59},&#xD;&#xA;  { Date: 1682161200000, Close: 43.99},&#xD;&#xA;  { Date: 1697799600000, Close: 49.99},&#xD;&#xA;  { Date: 1703242800000, Close: 44.99},&#xD;&#xA;  { Date: 1729545461136, Close: 44.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1697799600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576926000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>011/095 - Team Magma&#39;s Rhydon</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/011---team-magmas-rhydon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/011---team-magmas-rhydon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168850.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 19.99 on 30-08-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 4.49 on 23-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575716400000, Close: 5.39},&#xD;&#xA;  { Date: 1579777200000, Close: 4.49},&#xD;&#xA;  { Date: 1589886000000, Close: 5.49},&#xD;&#xA;  { Date: 1598007600000, Close: 12.99},&#xD;&#xA;  { Date: 1599217200000, Close: 14.99},&#xD;&#xA;  { Date: 1600945200000, Close: 16.99},&#xD;&#xA;  { Date: 1601722800000, Close: 15.99},&#xD;&#xA;  { Date: 1603018800000, Close: 14.49},&#xD;&#xA;  { Date: 1604228400000, Close: 12.99},&#xD;&#xA;  { Date: 1605438000000, Close: 11.49},&#xD;&#xA;  { Date: 1606474800000, Close: 9.99},&#xD;&#xA;  { Date: 1606561200000, Close: 8.99},&#xD;&#xA;  { Date: 1606734000000, Close: 9.99},&#xD;&#xA;  { Date: 1606820400000, Close: 11.49},&#xD;&#xA;  { Date: 1608807600000, Close: 9.99},&#xD;&#xA;  { Date: 1610017200000, Close: 8.79},&#xD;&#xA;  { Date: 1616670000000, Close: 11.99},&#xD;&#xA;  { Date: 1619089200000, Close: 13.99},&#xD;&#xA;  { Date: 1620471600000, Close: 12.49},&#xD;&#xA;  { Date: 1623927600000, Close: 10.99},&#xD;&#xA;  { Date: 1627038000000, Close: 14.99},&#xD;&#xA;  { Date: 1628334000000, Close: 15.99},&#xD;&#xA;  { Date: 1632222000000, Close: 14.49},&#xD;&#xA;  { Date: 1633518000000, Close: 12.99},&#xD;&#xA;  { Date: 1634727600000, Close: 11.49},&#xD;&#xA;  { Date: 1635937200000, Close: 9.99},&#xD;&#xA;  { Date: 1636023600000, Close: 8.99},&#xD;&#xA;  { Date: 1637319600000, Close: 8.39},&#xD;&#xA;  { Date: 1637406000000, Close: 7.49},&#xD;&#xA;  { Date: 1669806000000, Close: 12.99},&#xD;&#xA;  { Date: 1673694000000, Close: 11.49},&#xD;&#xA;  { Date: 1673780400000, Close: 11.69},&#xD;&#xA;  { Date: 1674126000000, Close: 11.79},&#xD;&#xA;  { Date: 1680951600000, Close: 14.99},&#xD;&#xA;  { Date: 1693393200000, Close: 19.99},&#xD;&#xA;  { Date: 1700564400000, Close: 18.49},&#xD;&#xA;  { Date: 1704625200000, Close: 16.99},&#xD;&#xA;  { Date: 1708599600000, Close: 15.49},&#xD;&#xA;  { Date: 1729545461497, Close: 15.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1693393200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579777200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>012/095 - Team Magma&#39;s Torkoal</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/012---team-magmas-torkoal/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/012---team-magmas-torkoal/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168851.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 19.99 on 23-01-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 3.99 on 21-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575716400000, Close: 4.39},&#xD;&#xA;  { Date: 1576926000000, Close: 3.99},&#xD;&#xA;  { Date: 1585306800000, Close: 4.49},&#xD;&#xA;  { Date: 1589886000000, Close: 5.99},&#xD;&#xA;  { Date: 1595329200000, Close: 6.99},&#xD;&#xA;  { Date: 1596625200000, Close: 7.99},&#xD;&#xA;  { Date: 1600254000000, Close: 8.49},&#xD;&#xA;  { Date: 1600513200000, Close: 8.99},&#xD;&#xA;  { Date: 1611399600000, Close: 19.99},&#xD;&#xA;  { Date: 1613473200000, Close: 18.49},&#xD;&#xA;  { Date: 1614769200000, Close: 17.99},&#xD;&#xA;  { Date: 1619953200000, Close: 16.49},&#xD;&#xA;  { Date: 1620126000000, Close: 14.99},&#xD;&#xA;  { Date: 1622718000000, Close: 13.99},&#xD;&#xA;  { Date: 1625310000000, Close: 11.99},&#xD;&#xA;  { Date: 1627902000000, Close: 10.49},&#xD;&#xA;  { Date: 1627988400000, Close: 8.99},&#xD;&#xA;  { Date: 1631617200000, Close: 8.39},&#xD;&#xA;  { Date: 1633086000000, Close: 7.49},&#xD;&#xA;  { Date: 1635850800000, Close: 6.79},&#xD;&#xA;  { Date: 1651748400000, Close: 11.99},&#xD;&#xA;  { Date: 1656759600000, Close: 10.99},&#xD;&#xA;  { Date: 1660993200000, Close: 13.99},&#xD;&#xA;  { Date: 1664967600000, Close: 12.49},&#xD;&#xA;  { Date: 1665226800000, Close: 11.29},&#xD;&#xA;  { Date: 1667905200000, Close: 9.99},&#xD;&#xA;  { Date: 1670497200000, Close: 7.49},&#xD;&#xA;  { Date: 1673175600000, Close: 6.99},&#xD;&#xA;  { Date: 1696330800000, Close: 16.09},&#xD;&#xA;  { Date: 1697799600000, Close: 15.99},&#xD;&#xA;  { Date: 1705143600000, Close: 17.09},&#xD;&#xA;  { Date: 1729249200000, Close: 17.99},&#xD;&#xA;  { Date: 1729545461690, Close: 17.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1611399600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576926000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>013/095 - Raichu</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/013---raichu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/013---raichu/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168772.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.99 on 29-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 19-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 0.99},&#xD;&#xA;  { Date: 1589886000000, Close: 1.49},&#xD;&#xA;  { Date: 1592478000000, Close: 1.89},&#xD;&#xA;  { Date: 1592564400000, Close: 1.79},&#xD;&#xA;  { Date: 1593860400000, Close: 1.49},&#xD;&#xA;  { Date: 1595588400000, Close: 1.59},&#xD;&#xA;  { Date: 1596884400000, Close: 1.29},&#xD;&#xA;  { Date: 1597921200000, Close: 1.49},&#xD;&#xA;  { Date: 1598612400000, Close: 1.79},&#xD;&#xA;  { Date: 1599390000000, Close: 2.09},&#xD;&#xA;  { Date: 1600254000000, Close: 2.19},&#xD;&#xA;  { Date: 1604746800000, Close: 1.89},&#xD;&#xA;  { Date: 1614682800000, Close: 3.79},&#xD;&#xA;  { Date: 1619694000000, Close: 4.99},&#xD;&#xA;  { Date: 1621162800000, Close: 4.39},&#xD;&#xA;  { Date: 1622286000000, Close: 3.99},&#xD;&#xA;  { Date: 1623495600000, Close: 3.79},&#xD;&#xA;  { Date: 1624791600000, Close: 3.19},&#xD;&#xA;  { Date: 1624964400000, Close: 2.99},&#xD;&#xA;  { Date: 1626260400000, Close: 2.39},&#xD;&#xA;  { Date: 1647601200000, Close: 3.79},&#xD;&#xA;  { Date: 1650020400000, Close: 3.69},&#xD;&#xA;  { Date: 1651662000000, Close: 3.59},&#xD;&#xA;  { Date: 1652007600000, Close: 3.49},&#xD;&#xA;  { Date: 1653303600000, Close: 2.89},&#xD;&#xA;  { Date: 1654599600000, Close: 2.59},&#xD;&#xA;  { Date: 1655809200000, Close: 2.29},&#xD;&#xA;  { Date: 1657018800000, Close: 1.99},&#xD;&#xA;  { Date: 1664622000000, Close: 2.79},&#xD;&#xA;  { Date: 1707908400000, Close: 4.99},&#xD;&#xA;  { Date: 1723719600000, Close: 4.49},&#xD;&#xA;  { Date: 1727607600000, Close: 3.89},&#xD;&#xA;  { Date: 1727780400000, Close: 4.39},&#xD;&#xA;  { Date: 1729545459243, Close: 4.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619694000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579431600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>014/095 - Team Aqua&#39;s Crawdaunt</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/014---team-aquas-crawdaunt/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/014---team-aquas-crawdaunt/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168812.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 03-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 19-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 0.49},&#xD;&#xA;  { Date: 1615287600000, Close: 1.09},&#xD;&#xA;  { Date: 1617274800000, Close: 1.49},&#xD;&#xA;  { Date: 1619089200000, Close: 1.99},&#xD;&#xA;  { Date: 1622286000000, Close: 1.69},&#xD;&#xA;  { Date: 1623495600000, Close: 1.39},&#xD;&#xA;  { Date: 1625050800000, Close: 0.99},&#xD;&#xA;  { Date: 1654599600000, Close: 1.49},&#xD;&#xA;  { Date: 1664622000000, Close: 1.79},&#xD;&#xA;  { Date: 1696330800000, Close: 2.99},&#xD;&#xA;  { Date: 1703847600000, Close: 2.39},&#xD;&#xA;  { Date: 1705143600000, Close: 2.09},&#xD;&#xA;  { Date: 1713524400000, Close: 1.79},&#xD;&#xA;  { Date: 1729545459897, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1696330800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579431600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>015/095 - Team Aqua&#39;s Mightyena</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/015---team-aquas-mightyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/015---team-aquas-mightyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168815.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 01-10-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 19-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 0.69},&#xD;&#xA;  { Date: 1589886000000, Close: 0.79},&#xD;&#xA;  { Date: 1596711600000, Close: 1.19},&#xD;&#xA;  { Date: 1599908400000, Close: 1.99},&#xD;&#xA;  { Date: 1601204400000, Close: 1.69},&#xD;&#xA;  { Date: 1602068400000, Close: 1.29},&#xD;&#xA;  { Date: 1603278000000, Close: 0.99},&#xD;&#xA;  { Date: 1617274800000, Close: 1.59},&#xD;&#xA;  { Date: 1621076400000, Close: 1.99},&#xD;&#xA;  { Date: 1627383600000, Close: 2.29},&#xD;&#xA;  { Date: 1629198000000, Close: 1.99},&#xD;&#xA;  { Date: 1635505200000, Close: 1.69},&#xD;&#xA;  { Date: 1638097200000, Close: 1.39},&#xD;&#xA;  { Date: 1648810800000, Close: 1.99},&#xD;&#xA;  { Date: 1654599600000, Close: 2.29},&#xD;&#xA;  { Date: 1664622000000, Close: 2.49},&#xD;&#xA;  { Date: 1668510000000, Close: 2.19},&#xD;&#xA;  { Date: 1672570800000, Close: 1.89},&#xD;&#xA;  { Date: 1696330800000, Close: 2.29},&#xD;&#xA;  { Date: 1704538800000, Close: 1.99},&#xD;&#xA;  { Date: 1705402800000, Close: 2.19},&#xD;&#xA;  { Date: 1729545460156, Close: 2.19},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1664622000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579431600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>016/095 - Team Aqua&#39;s Sealeo</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/016---team-aquas-sealeo/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/016---team-aquas-sealeo/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168816.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 08-03-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 04-02-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 0.49},&#xD;&#xA;  { Date: 1580814000000, Close: 0.39},&#xD;&#xA;  { Date: 1580900400000, Close: 0.49},&#xD;&#xA;  { Date: 1589886000000, Close: 0.59},&#xD;&#xA;  { Date: 1596798000000, Close: 0.89},&#xD;&#xA;  { Date: 1603882800000, Close: 0.79},&#xD;&#xA;  { Date: 1605092400000, Close: 0.69},&#xD;&#xA;  { Date: 1606820400000, Close: 0.79},&#xD;&#xA;  { Date: 1614855600000, Close: 0.89},&#xD;&#xA;  { Date: 1619089200000, Close: 1.29},&#xD;&#xA;  { Date: 1622026800000, Close: 1.39},&#xD;&#xA;  { Date: 1623322800000, Close: 0.99},&#xD;&#xA;  { Date: 1647082800000, Close: 1.39},&#xD;&#xA;  { Date: 1648897200000, Close: 0.99},&#xD;&#xA;  { Date: 1655031600000, Close: 1.09},&#xD;&#xA;  { Date: 1661943600000, Close: 1.49},&#xD;&#xA;  { Date: 1668855600000, Close: 1.19},&#xD;&#xA;  { Date: 1668942000000, Close: 1.29},&#xD;&#xA;  { Date: 1680001200000, Close: 1.39},&#xD;&#xA;  { Date: 1690455600000, Close: 1.49},&#xD;&#xA;  { Date: 1709895600000, Close: 1.99},&#xD;&#xA;  { Date: 1729545460311, Close: 1.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1709895600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1580814000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>017/095 - Team Aqua&#39;s Seviper</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/017---team-aquas-seviper/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/017---team-aquas-seviper/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168807.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 15-02-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 19-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 0.49},&#xD;&#xA;  { Date: 1589540400000, Close: 0.69},&#xD;&#xA;  { Date: 1596711600000, Close: 0.99},&#xD;&#xA;  { Date: 1601463600000, Close: 1.09},&#xD;&#xA;  { Date: 1605438000000, Close: 0.99},&#xD;&#xA;  { Date: 1606647600000, Close: 1.09},&#xD;&#xA;  { Date: 1609930800000, Close: 1.19},&#xD;&#xA;  { Date: 1615028400000, Close: 1.99},&#xD;&#xA;  { Date: 1619521200000, Close: 2.39},&#xD;&#xA;  { Date: 1620817200000, Close: 2.09},&#xD;&#xA;  { Date: 1621594800000, Close: 1.79},&#xD;&#xA;  { Date: 1622804400000, Close: 1.49},&#xD;&#xA;  { Date: 1624014000000, Close: 1.29},&#xD;&#xA;  { Date: 1625310000000, Close: 0.99},&#xD;&#xA;  { Date: 1648810800000, Close: 1.99},&#xD;&#xA;  { Date: 1654599600000, Close: 2.49},&#xD;&#xA;  { Date: 1660993200000, Close: 2.29},&#xD;&#xA;  { Date: 1668510000000, Close: 1.99},&#xD;&#xA;  { Date: 1672570800000, Close: 1.69},&#xD;&#xA;  { Date: 1688122800000, Close: 1.99},&#xD;&#xA;  { Date: 1699009200000, Close: 2.49},&#xD;&#xA;  { Date: 1707994800000, Close: 2.99},&#xD;&#xA;  { Date: 1729545460386, Close: 2.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1707994800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579431600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>018/095 - Team Aqua&#39;s Sharpedo</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/018---team-aquas-sharpedo/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/018---team-aquas-sharpedo/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168801.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.99 on 23-07-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 14-04-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 0.49},&#xD;&#xA;  { Date: 1586862000000, Close: 0.39},&#xD;&#xA;  { Date: 1586948400000, Close: 0.49},&#xD;&#xA;  { Date: 1602154800000, Close: 0.69},&#xD;&#xA;  { Date: 1615546800000, Close: 0.89},&#xD;&#xA;  { Date: 1627038000000, Close: 3.99},&#xD;&#xA;  { Date: 1628506800000, Close: 3.39},&#xD;&#xA;  { Date: 1628766000000, Close: 2.99},&#xD;&#xA;  { Date: 1630062000000, Close: 2.39},&#xD;&#xA;  { Date: 1631358000000, Close: 2.09},&#xD;&#xA;  { Date: 1631703600000, Close: 1.79},&#xD;&#xA;  { Date: 1633172400000, Close: 1.49},&#xD;&#xA;  { Date: 1634382000000, Close: 1.19},&#xD;&#xA;  { Date: 1635591600000, Close: 0.89},&#xD;&#xA;  { Date: 1646910000000, Close: 1.49},&#xD;&#xA;  { Date: 1649502000000, Close: 1.39},&#xD;&#xA;  { Date: 1650798000000, Close: 0.99},&#xD;&#xA;  { Date: 1664622000000, Close: 1.99},&#xD;&#xA;  { Date: 1684494000000, Close: 2.19},&#xD;&#xA;  { Date: 1686049200000, Close: 2.29},&#xD;&#xA;  { Date: 1694257200000, Close: 3.49},&#xD;&#xA;  { Date: 1700737200000, Close: 2.89},&#xD;&#xA;  { Date: 1704798000000, Close: 2.59},&#xD;&#xA;  { Date: 1729545460414, Close: 2.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1627038000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1586862000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>019/095 - Team Magma&#39;s Camerupt</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/019---team-magmas-camerupt/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/019---team-magmas-camerupt/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168853.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 22-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 19-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 0.79},&#xD;&#xA;  { Date: 1591527600000, Close: 1.09},&#xD;&#xA;  { Date: 1596020400000, Close: 1.49},&#xD;&#xA;  { Date: 1599994800000, Close: 1.19},&#xD;&#xA;  { Date: 1601377200000, Close: 0.89},&#xD;&#xA;  { Date: 1607425200000, Close: 1.29},&#xD;&#xA;  { Date: 1612522800000, Close: 1.99},&#xD;&#xA;  { Date: 1615287600000, Close: 2.29},&#xD;&#xA;  { Date: 1619089200000, Close: 2.49},&#xD;&#xA;  { Date: 1620471600000, Close: 2.19},&#xD;&#xA;  { Date: 1621767600000, Close: 1.89},&#xD;&#xA;  { Date: 1623063600000, Close: 1.49},&#xD;&#xA;  { Date: 1624359600000, Close: 1.19},&#xD;&#xA;  { Date: 1625655600000, Close: 0.89},&#xD;&#xA;  { Date: 1634986800000, Close: 0.99},&#xD;&#xA;  { Date: 1654599600000, Close: 1.99},&#xD;&#xA;  { Date: 1662202800000, Close: 2.29},&#xD;&#xA;  { Date: 1669546800000, Close: 1.99},&#xD;&#xA;  { Date: 1673607600000, Close: 1.69},&#xD;&#xA;  { Date: 1687863600000, Close: 1.99},&#xD;&#xA;  { Date: 1703674800000, Close: 2.49},&#xD;&#xA;  { Date: 1704884400000, Close: 2.29},&#xD;&#xA;  { Date: 1729545461013, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619089200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579431600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>020/095 - Team Magma&#39;s Lairon</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/020---team-magmas-lairon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/020---team-magmas-lairon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168856.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 11-08-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 19-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 0.49},&#xD;&#xA;  { Date: 1599217200000, Close: 0.69},&#xD;&#xA;  { Date: 1601982000000, Close: 0.59},&#xD;&#xA;  { Date: 1603450800000, Close: 0.49},&#xD;&#xA;  { Date: 1615287600000, Close: 0.89},&#xD;&#xA;  { Date: 1625223600000, Close: 1.99},&#xD;&#xA;  { Date: 1628679600000, Close: 2.99},&#xD;&#xA;  { Date: 1632999600000, Close: 2.39},&#xD;&#xA;  { Date: 1637838000000, Close: 2.09},&#xD;&#xA;  { Date: 1646564400000, Close: 2.19},&#xD;&#xA;  { Date: 1646996400000, Close: 1.99},&#xD;&#xA;  { Date: 1647082800000, Close: 2.19},&#xD;&#xA;  { Date: 1651057200000, Close: 1.89},&#xD;&#xA;  { Date: 1654599600000, Close: 2.29},&#xD;&#xA;  { Date: 1664622000000, Close: 2.49},&#xD;&#xA;  { Date: 1668510000000, Close: 2.19},&#xD;&#xA;  { Date: 1672570800000, Close: 1.89},&#xD;&#xA;  { Date: 1677063600000, Close: 1.49},&#xD;&#xA;  { Date: 1677150000000, Close: 1.69},&#xD;&#xA;  { Date: 1694257200000, Close: 2.99},&#xD;&#xA;  { Date: 1700650800000, Close: 2.79},&#xD;&#xA;  { Date: 1701342000000, Close: 2.29},&#xD;&#xA;  { Date: 1702638000000, Close: 1.99},&#xD;&#xA;  { Date: 1702724400000, Close: 1.79},&#xD;&#xA;  { Date: 1704020400000, Close: 1.49},&#xD;&#xA;  { Date: 1705230000000, Close: 1.19},&#xD;&#xA;  { Date: 1705402800000, Close: 0.99},&#xD;&#xA;  { Date: 1713006000000, Close: 1.39},&#xD;&#xA;  { Date: 1729545461289, Close: 1.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1628679600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579431600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>021/095 - Team Magma&#39;s Mightyena</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/021---team-magmas-mightyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/021---team-magmas-mightyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168829.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 03-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 22-02-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 0.69},&#xD;&#xA;  { Date: 1582369200000, Close: 0.59},&#xD;&#xA;  { Date: 1589886000000, Close: 0.79},&#xD;&#xA;  { Date: 1596020400000, Close: 0.89},&#xD;&#xA;  { Date: 1600254000000, Close: 1.09},&#xD;&#xA;  { Date: 1602241200000, Close: 0.99},&#xD;&#xA;  { Date: 1603450800000, Close: 0.89},&#xD;&#xA;  { Date: 1656500400000, Close: 0.99},&#xD;&#xA;  { Date: 1661943600000, Close: 2.29},&#xD;&#xA;  { Date: 1696330800000, Close: 2.99},&#xD;&#xA;  { Date: 1701514800000, Close: 2.79},&#xD;&#xA;  { Date: 1705575600000, Close: 2.49},&#xD;&#xA;  { Date: 1705834800000, Close: 2.69},&#xD;&#xA;  { Date: 1706526000000, Close: 2.29},&#xD;&#xA;  { Date: 1713006000000, Close: 1.99},&#xD;&#xA;  { Date: 1713265200000, Close: 2.19},&#xD;&#xA;  { Date: 1713438000000, Close: 1.99},&#xD;&#xA;  { Date: 1713870000000, Close: 2.19},&#xD;&#xA;  { Date: 1729545461346, Close: 2.19},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1696330800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1582369200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>022/095 - Team Magma&#39;s Rhydon</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/022---team-magmas-rhydon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/022---team-magmas-rhydon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168830.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.49 on 23-07-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 24-04-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 1.29},&#xD;&#xA;  { Date: 1580641200000, Close: 0.99},&#xD;&#xA;  { Date: 1587726000000, Close: 0.89},&#xD;&#xA;  { Date: 1591527600000, Close: 1.09},&#xD;&#xA;  { Date: 1597230000000, Close: 1.99},&#xD;&#xA;  { Date: 1598698800000, Close: 2.49},&#xD;&#xA;  { Date: 1599994800000, Close: 2.19},&#xD;&#xA;  { Date: 1600167600000, Close: 1.99},&#xD;&#xA;  { Date: 1601377200000, Close: 1.79},&#xD;&#xA;  { Date: 1602586800000, Close: 1.49},&#xD;&#xA;  { Date: 1603882800000, Close: 1.19},&#xD;&#xA;  { Date: 1604487600000, Close: 0.99},&#xD;&#xA;  { Date: 1614942000000, Close: 1.19},&#xD;&#xA;  { Date: 1616151600000, Close: 0.89},&#xD;&#xA;  { Date: 1620212400000, Close: 0.99},&#xD;&#xA;  { Date: 1622199600000, Close: 1.49},&#xD;&#xA;  { Date: 1624446000000, Close: 3.49},&#xD;&#xA;  { Date: 1627038000000, Close: 4.49},&#xD;&#xA;  { Date: 1628334000000, Close: 3.89},&#xD;&#xA;  { Date: 1628766000000, Close: 3.49},&#xD;&#xA;  { Date: 1629975600000, Close: 2.99},&#xD;&#xA;  { Date: 1631185200000, Close: 2.49},&#xD;&#xA;  { Date: 1633258800000, Close: 2.19},&#xD;&#xA;  { Date: 1634554800000, Close: 1.89},&#xD;&#xA;  { Date: 1634986800000, Close: 1.79},&#xD;&#xA;  { Date: 1636196400000, Close: 1.49},&#xD;&#xA;  { Date: 1637406000000, Close: 1.29},&#xD;&#xA;  { Date: 1638615600000, Close: 1.09},&#xD;&#xA;  { Date: 1647601200000, Close: 1.49},&#xD;&#xA;  { Date: 1648810800000, Close: 1.19},&#xD;&#xA;  { Date: 1654599600000, Close: 2.49},&#xD;&#xA;  { Date: 1664967600000, Close: 2.19},&#xD;&#xA;  { Date: 1670151600000, Close: 1.89},&#xD;&#xA;  { Date: 1674212400000, Close: 1.49},&#xD;&#xA;  { Date: 1676631600000, Close: 1.59},&#xD;&#xA;  { Date: 1679137200000, Close: 1.69},&#xD;&#xA;  { Date: 1688122800000, Close: 1.99},&#xD;&#xA;  { Date: 1707908400000, Close: 3.49},&#xD;&#xA;  { Date: 1729545461527, Close: 3.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1627038000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1587726000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>023/095 - Team Magma&#39;s Zangoose</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/023---team-magmas-zangoose/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/023---team-magmas-zangoose/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168863.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.99 on 15-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.49 on 19-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1579431600000, Close: 1.49},&#xD;&#xA;  { Date: 1581159600000, Close: 1.99},&#xD;&#xA;  { Date: 1586689200000, Close: 2.49},&#xD;&#xA;  { Date: 1589886000000, Close: 3.49},&#xD;&#xA;  { Date: 1591354800000, Close: 2.89},&#xD;&#xA;  { Date: 1592478000000, Close: 2.99},&#xD;&#xA;  { Date: 1595934000000, Close: 3.99},&#xD;&#xA;  { Date: 1600945200000, Close: 3.39},&#xD;&#xA;  { Date: 1602068400000, Close: 2.99},&#xD;&#xA;  { Date: 1603796400000, Close: 2.39},&#xD;&#xA;  { Date: 1615287600000, Close: 3.99},&#xD;&#xA;  { Date: 1621076400000, Close: 4.99},&#xD;&#xA;  { Date: 1625569200000, Close: 4.39},&#xD;&#xA;  { Date: 1631703600000, Close: 3.79},&#xD;&#xA;  { Date: 1650020400000, Close: 3.19},&#xD;&#xA;  { Date: 1651748400000, Close: 2.59},&#xD;&#xA;  { Date: 1654340400000, Close: 2.29},&#xD;&#xA;  { Date: 1729545461717, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1621076400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579431600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>024/095 - Team Aqua&#39;s Cacnea</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/024---team-aquas-cacnea/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/024---team-aquas-cacnea/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168809.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.29 on 07-06-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.69},&#xD;&#xA;  { Date: 1600426800000, Close: 1.29},&#xD;&#xA;  { Date: 1611745200000, Close: 1.99},&#xD;&#xA;  { Date: 1614855600000, Close: 2.09},&#xD;&#xA;  { Date: 1616497200000, Close: 1.79},&#xD;&#xA;  { Date: 1620126000000, Close: 1.49},&#xD;&#xA;  { Date: 1635591600000, Close: 1.19},&#xD;&#xA;  { Date: 1648983600000, Close: 0.89},&#xD;&#xA;  { Date: 1663758000000, Close: 1.29},&#xD;&#xA;  { Date: 1668855600000, Close: 0.99},&#xD;&#xA;  { Date: 1717758000000, Close: 2.29},&#xD;&#xA;  { Date: 1729545459566, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1717758000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>025/095 - Team Aqua&#39;s Carvanha</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/025---team-aquas-carvanha/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/025---team-aquas-carvanha/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168819.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.79 on 10-04-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1618916400000, Close: 0.89},&#xD;&#xA;  { Date: 1625223600000, Close: 0.79},&#xD;&#xA;  { Date: 1635505200000, Close: 0.69},&#xD;&#xA;  { Date: 1646910000000, Close: 1.29},&#xD;&#xA;  { Date: 1662202800000, Close: 1.49},&#xD;&#xA;  { Date: 1666090800000, Close: 1.19},&#xD;&#xA;  { Date: 1666177200000, Close: 1.29},&#xD;&#xA;  { Date: 1670238000000, Close: 0.99},&#xD;&#xA;  { Date: 1712746800000, Close: 1.79},&#xD;&#xA;  { Date: 1729545459628, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1712746800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>026/095 - Team Aqua&#39;s Corphish</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/026---team-aquas-corphish/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/026---team-aquas-corphish/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168803.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 03-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.59 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.59},&#xD;&#xA;  { Date: 1600426800000, Close: 0.69},&#xD;&#xA;  { Date: 1606388400000, Close: 0.79},&#xD;&#xA;  { Date: 1612350000000, Close: 0.89},&#xD;&#xA;  { Date: 1621335600000, Close: 0.99},&#xD;&#xA;  { Date: 1635850800000, Close: 0.89},&#xD;&#xA;  { Date: 1662202800000, Close: 1.39},&#xD;&#xA;  { Date: 1666090800000, Close: 0.99},&#xD;&#xA;  { Date: 1670151600000, Close: 0.89},&#xD;&#xA;  { Date: 1670238000000, Close: 0.99},&#xD;&#xA;  { Date: 1672138800000, Close: 1.09},&#xD;&#xA;  { Date: 1674126000000, Close: 0.99},&#xD;&#xA;  { Date: 1674471600000, Close: 0.79},&#xD;&#xA;  { Date: 1676113200000, Close: 0.99},&#xD;&#xA;  { Date: 1678532400000, Close: 1.09},&#xD;&#xA;  { Date: 1683370800000, Close: 0.99},&#xD;&#xA;  { Date: 1683543600000, Close: 1.09},&#xD;&#xA;  { Date: 1696330800000, Close: 1.49},&#xD;&#xA;  { Date: 1703070000000, Close: 1.29},&#xD;&#xA;  { Date: 1704970800000, Close: 0.99},&#xD;&#xA;  { Date: 1729545459794, Close: 0.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1696330800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>027/095 - Team Aqua&#39;s Electrike</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/027---team-aquas-electrike/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/027---team-aquas-electrike/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168799.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.79 on 28-02-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.79},&#xD;&#xA;  { Date: 1600426800000, Close: 1.09},&#xD;&#xA;  { Date: 1607770800000, Close: 0.99},&#xD;&#xA;  { Date: 1614337200000, Close: 1.09},&#xD;&#xA;  { Date: 1619089200000, Close: 1.19},&#xD;&#xA;  { Date: 1622977200000, Close: 0.89},&#xD;&#xA;  { Date: 1664622000000, Close: 0.99},&#xD;&#xA;  { Date: 1709118000000, Close: 1.79},&#xD;&#xA;  { Date: 1729545459946, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1709118000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>028/095 - Team Aqua&#39;s Lanturn</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/028---team-aquas-lanturn/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/028---team-aquas-lanturn/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168814.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 09-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 05-10-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1601895600000, Close: 0.35},&#xD;&#xA;  { Date: 1615287600000, Close: 0.59},&#xD;&#xA;  { Date: 1641121200000, Close: 0.49},&#xD;&#xA;  { Date: 1668769200000, Close: 0.39},&#xD;&#xA;  { Date: 1672830000000, Close: 0.35},&#xD;&#xA;  { Date: 1676458800000, Close: 0.49},&#xD;&#xA;  { Date: 1685703600000, Close: 0.39},&#xD;&#xA;  { Date: 1689073200000, Close: 0.49},&#xD;&#xA;  { Date: 1729545460071, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615287600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1601895600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>029/095 - Team Aqua&#39;s Manectric</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/029---team-aquas-manectric/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/029---team-aquas-manectric/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168800.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 17-02-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 11-03-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 1.19},&#xD;&#xA;  { Date: 1600426800000, Close: 1.49},&#xD;&#xA;  { Date: 1600858800000, Close: 1.79},&#xD;&#xA;  { Date: 1606647600000, Close: 1.49},&#xD;&#xA;  { Date: 1610017200000, Close: 1.89},&#xD;&#xA;  { Date: 1622199600000, Close: 1.49},&#xD;&#xA;  { Date: 1645095600000, Close: 2.49},&#xD;&#xA;  { Date: 1647687600000, Close: 2.19},&#xD;&#xA;  { Date: 1647774000000, Close: 1.89},&#xD;&#xA;  { Date: 1649070000000, Close: 1.69},&#xD;&#xA;  { Date: 1654167600000, Close: 1.59},&#xD;&#xA;  { Date: 1662202800000, Close: 1.99},&#xD;&#xA;  { Date: 1666090800000, Close: 1.69},&#xD;&#xA;  { Date: 1670151600000, Close: 1.39},&#xD;&#xA;  { Date: 1670497200000, Close: 1.59},&#xD;&#xA;  { Date: 1674558000000, Close: 1.29},&#xD;&#xA;  { Date: 1678532400000, Close: 0.99},&#xD;&#xA;  { Date: 1709118000000, Close: 2.29},&#xD;&#xA;  { Date: 1729545460096, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1645095600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1678532400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>030/095 - Team Aqua&#39;s Mightyena</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/030---team-aquas-mightyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/030---team-aquas-mightyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168824.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 23-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 22-09-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1605092400000, Close: 0.39},&#xD;&#xA;  { Date: 1605178800000, Close: 0.49},&#xD;&#xA;  { Date: 1646046000000, Close: 0.39},&#xD;&#xA;  { Date: 1646218800000, Close: 0.49},&#xD;&#xA;  { Date: 1650193200000, Close: 0.39},&#xD;&#xA;  { Date: 1650366000000, Close: 0.49},&#xD;&#xA;  { Date: 1655377200000, Close: 0.39},&#xD;&#xA;  { Date: 1655463600000, Close: 0.49},&#xD;&#xA;  { Date: 1661252400000, Close: 0.79},&#xD;&#xA;  { Date: 1668769200000, Close: 0.69},&#xD;&#xA;  { Date: 1669978800000, Close: 0.59},&#xD;&#xA;  { Date: 1672052400000, Close: 0.49},&#xD;&#xA;  { Date: 1674212400000, Close: 0.39},&#xD;&#xA;  { Date: 1677409200000, Close: 0.49},&#xD;&#xA;  { Date: 1678618800000, Close: 0.59},&#xD;&#xA;  { Date: 1686394800000, Close: 0.49},&#xD;&#xA;  { Date: 1690974000000, Close: 0.39},&#xD;&#xA;  { Date: 1695380400000, Close: 0.35},&#xD;&#xA;  { Date: 1700650800000, Close: 0.69},&#xD;&#xA;  { Date: 1708686000000, Close: 0.59},&#xD;&#xA;  { Date: 1709722800000, Close: 0.69},&#xD;&#xA;  { Date: 1729545460200, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1661252400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1695380400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>031/095 - Team Aqua&#39;s Sealeo</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/031---team-aquas-sealeo/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/031---team-aquas-sealeo/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168806.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 04-03-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 23-06-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1611226800000, Close: 0.39},&#xD;&#xA;  { Date: 1611313200000, Close: 0.49},&#xD;&#xA;  { Date: 1621076400000, Close: 0.59},&#xD;&#xA;  { Date: 1627815600000, Close: 0.49},&#xD;&#xA;  { Date: 1651921200000, Close: 0.39},&#xD;&#xA;  { Date: 1655982000000, Close: 0.35},&#xD;&#xA;  { Date: 1657364400000, Close: 0.49},&#xD;&#xA;  { Date: 1660993200000, Close: 0.59},&#xD;&#xA;  { Date: 1665054000000, Close: 0.49},&#xD;&#xA;  { Date: 1666954800000, Close: 0.39},&#xD;&#xA;  { Date: 1670583600000, Close: 0.35},&#xD;&#xA;  { Date: 1682247600000, Close: 0.39},&#xD;&#xA;  { Date: 1694343600000, Close: 0.49},&#xD;&#xA;  { Date: 1700650800000, Close: 0.39},&#xD;&#xA;  { Date: 1700910000000, Close: 0.49},&#xD;&#xA;  { Date: 1703847600000, Close: 0.59},&#xD;&#xA;  { Date: 1704279600000, Close: 0.69},&#xD;&#xA;  { Date: 1709550000000, Close: 0.99},&#xD;&#xA;  { Date: 1710500400000, Close: 0.79},&#xD;&#xA;  { Date: 1714302000000, Close: 0.69},&#xD;&#xA;  { Date: 1714734000000, Close: 0.79},&#xD;&#xA;  { Date: 1729545460356, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1709550000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1655982000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>032/095 - Team Magma&#39;s Baltoy</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/032---team-magmas-baltoy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/032---team-magmas-baltoy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168858.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 14-02-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.89},&#xD;&#xA;  { Date: 1600426800000, Close: 1.39},&#xD;&#xA;  { Date: 1602068400000, Close: 0.99},&#xD;&#xA;  { Date: 1606129200000, Close: 0.89},&#xD;&#xA;  { Date: 1614337200000, Close: 1.09},&#xD;&#xA;  { Date: 1625223600000, Close: 0.99},&#xD;&#xA;  { Date: 1628938800000, Close: 0.89},&#xD;&#xA;  { Date: 1658919600000, Close: 1.19},&#xD;&#xA;  { Date: 1664622000000, Close: 1.79},&#xD;&#xA;  { Date: 1668510000000, Close: 1.49},&#xD;&#xA;  { Date: 1672570800000, Close: 1.19},&#xD;&#xA;  { Date: 1679137200000, Close: 1.29},&#xD;&#xA;  { Date: 1707908400000, Close: 1.99},&#xD;&#xA;  { Date: 1729545460905, Close: 1.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1707908400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>033/095 - Team Magma&#39;s Claydol</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/033---team-magmas-claydol/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/033---team-magmas-claydol/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168842.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 04-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 28-01-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.39},&#xD;&#xA;  { Date: 1593428400000, Close: 0.49},&#xD;&#xA;  { Date: 1605092400000, Close: 0.39},&#xD;&#xA;  { Date: 1611831600000, Close: 0.35},&#xD;&#xA;  { Date: 1612522800000, Close: 0.49},&#xD;&#xA;  { Date: 1619866800000, Close: 0.39},&#xD;&#xA;  { Date: 1626951600000, Close: 0.35},&#xD;&#xA;  { Date: 1646478000000, Close: 0.49},&#xD;&#xA;  { Date: 1651662000000, Close: 1.29},&#xD;&#xA;  { Date: 1655722800000, Close: 0.99},&#xD;&#xA;  { Date: 1660993200000, Close: 1.19},&#xD;&#xA;  { Date: 1664967600000, Close: 0.89},&#xD;&#xA;  { Date: 1669028400000, Close: 0.79},&#xD;&#xA;  { Date: 1673089200000, Close: 0.69},&#xD;&#xA;  { Date: 1674903600000, Close: 0.59},&#xD;&#xA;  { Date: 1676804400000, Close: 0.49},&#xD;&#xA;  { Date: 1680951600000, Close: 0.39},&#xD;&#xA;  { Date: 1686049200000, Close: 0.35},&#xD;&#xA;  { Date: 1712746800000, Close: 0.59},&#xD;&#xA;  { Date: 1729545461053, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1651662000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1611831600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>034/095 - Team Magma&#39;s Houndoom</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/034---team-magmas-houndoom/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/034---team-magmas-houndoom/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168855.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 20-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 04-11-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.59},&#xD;&#xA;  { Date: 1602241200000, Close: 0.49},&#xD;&#xA;  { Date: 1604487600000, Close: 0.39},&#xD;&#xA;  { Date: 1605610800000, Close: 0.49},&#xD;&#xA;  { Date: 1620212400000, Close: 0.69},&#xD;&#xA;  { Date: 1654686000000, Close: 1.29},&#xD;&#xA;  { Date: 1660993200000, Close: 1.49},&#xD;&#xA;  { Date: 1664967600000, Close: 1.19},&#xD;&#xA;  { Date: 1665054000000, Close: 1.09},&#xD;&#xA;  { Date: 1668164400000, Close: 0.99},&#xD;&#xA;  { Date: 1670065200000, Close: 0.89},&#xD;&#xA;  { Date: 1673521200000, Close: 0.79},&#xD;&#xA;  { Date: 1707908400000, Close: 1.29},&#xD;&#xA;  { Date: 1729545461159, Close: 1.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1660993200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1604487600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>035/095 - Team Magma&#39;s Houndour</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/035---team-magmas-houndour/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/035---team-magmas-houndour/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168848.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 03-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.79},&#xD;&#xA;  { Date: 1600426800000, Close: 1.49},&#xD;&#xA;  { Date: 1602241200000, Close: 1.19},&#xD;&#xA;  { Date: 1604487600000, Close: 0.99},&#xD;&#xA;  { Date: 1614337200000, Close: 1.19},&#xD;&#xA;  { Date: 1619089200000, Close: 1.49},&#xD;&#xA;  { Date: 1626087600000, Close: 1.19},&#xD;&#xA;  { Date: 1638788400000, Close: 0.89},&#xD;&#xA;  { Date: 1647601200000, Close: 1.29},&#xD;&#xA;  { Date: 1662202800000, Close: 1.79},&#xD;&#xA;  { Date: 1666177200000, Close: 1.49},&#xD;&#xA;  { Date: 1670151600000, Close: 1.19},&#xD;&#xA;  { Date: 1675335600000, Close: 1.39},&#xD;&#xA;  { Date: 1687431600000, Close: 2.29},&#xD;&#xA;  { Date: 1696330800000, Close: 2.99},&#xD;&#xA;  { Date: 1700650800000, Close: 2.39},&#xD;&#xA;  { Date: 1704625200000, Close: 2.09},&#xD;&#xA;  { Date: 1729545461179, Close: 2.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1696330800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>036/095 - Team Magma&#39;s Lairon</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/036---team-magmas-lairon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/036---team-magmas-lairon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168849.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 04-04-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 26-01-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1611658800000, Close: 0.39},&#xD;&#xA;  { Date: 1612350000000, Close: 0.49},&#xD;&#xA;  { Date: 1619002800000, Close: 0.39},&#xD;&#xA;  { Date: 1625569200000, Close: 0.49},&#xD;&#xA;  { Date: 1627642800000, Close: 0.39},&#xD;&#xA;  { Date: 1632049200000, Close: 0.49},&#xD;&#xA;  { Date: 1664622000000, Close: 0.39},&#xD;&#xA;  { Date: 1664967600000, Close: 0.49},&#xD;&#xA;  { Date: 1671274800000, Close: 0.39},&#xD;&#xA;  { Date: 1671361200000, Close: 0.49},&#xD;&#xA;  { Date: 1678618800000, Close: 0.59},&#xD;&#xA;  { Date: 1685703600000, Close: 0.49},&#xD;&#xA;  { Date: 1689591600000, Close: 0.59},&#xD;&#xA;  { Date: 1712228400000, Close: 0.69},&#xD;&#xA;  { Date: 1714302000000, Close: 0.59},&#xD;&#xA;  { Date: 1714993200000, Close: 0.69},&#xD;&#xA;  { Date: 1729545461321, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1712228400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1611658800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>037/095 - Team Magma&#39;s Mightyena</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/037---team-magmas-mightyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/037---team-magmas-mightyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168837.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 17-02-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.99 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.99},&#xD;&#xA;  { Date: 1600426800000, Close: 1.09},&#xD;&#xA;  { Date: 1609498800000, Close: 1.29},&#xD;&#xA;  { Date: 1615719600000, Close: 1.49},&#xD;&#xA;  { Date: 1645095600000, Close: 2.99},&#xD;&#xA;  { Date: 1647601200000, Close: 2.39},&#xD;&#xA;  { Date: 1649502000000, Close: 2.09},&#xD;&#xA;  { Date: 1651402800000, Close: 1.79},&#xD;&#xA;  { Date: 1653217200000, Close: 1.49},&#xD;&#xA;  { Date: 1653390000000, Close: 1.39},&#xD;&#xA;  { Date: 1664622000000, Close: 1.99},&#xD;&#xA;  { Date: 1675508400000, Close: 1.69},&#xD;&#xA;  { Date: 1729545461365, Close: 1.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1645095600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>038/095 - Team Magma&#39;s Rhyhorn</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/038---team-magmas-rhyhorn/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/038---team-magmas-rhyhorn/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168846.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.19 on 18-03-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.59},&#xD;&#xA;  { Date: 1606820400000, Close: 0.69},&#xD;&#xA;  { Date: 1610017200000, Close: 0.79},&#xD;&#xA;  { Date: 1619089200000, Close: 0.89},&#xD;&#xA;  { Date: 1627038000000, Close: 1.49},&#xD;&#xA;  { Date: 1647601200000, Close: 2.19},&#xD;&#xA;  { Date: 1650020400000, Close: 2.09},&#xD;&#xA;  { Date: 1651575600000, Close: 2.19},&#xD;&#xA;  { Date: 1654340400000, Close: 2.09},&#xD;&#xA;  { Date: 1655809200000, Close: 2.19},&#xD;&#xA;  { Date: 1657623600000, Close: 1.99},&#xD;&#xA;  { Date: 1657710000000, Close: 2.19},&#xD;&#xA;  { Date: 1660993200000, Close: 1.99},&#xD;&#xA;  { Date: 1664881200000, Close: 1.69},&#xD;&#xA;  { Date: 1666695600000, Close: 1.39},&#xD;&#xA;  { Date: 1668596400000, Close: 0.99},&#xD;&#xA;  { Date: 1674903600000, Close: 1.29},&#xD;&#xA;  { Date: 1682506800000, Close: 0.79},&#xD;&#xA;  { Date: 1685703600000, Close: 0.69},&#xD;&#xA;  { Date: 1729545461555, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1647601200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>039/095 - Bulbasaur</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/039---bulbasaur/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/039---bulbasaur/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168754.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 8.99 on 29-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 2.49},&#xD;&#xA;  { Date: 1591441200000, Close: 3.89},&#xD;&#xA;  { Date: 1600426800000, Close: 7.99},&#xD;&#xA;  { Date: 1602759600000, Close: 7.39},&#xD;&#xA;  { Date: 1605956400000, Close: 7.89},&#xD;&#xA;  { Date: 1606820400000, Close: 7.99},&#xD;&#xA;  { Date: 1608807600000, Close: 7.39},&#xD;&#xA;  { Date: 1610622000000, Close: 6.99},&#xD;&#xA;  { Date: 1614164400000, Close: 7.29},&#xD;&#xA;  { Date: 1615028400000, Close: 7.39},&#xD;&#xA;  { Date: 1616842800000, Close: 7.99},&#xD;&#xA;  { Date: 1619694000000, Close: 8.99},&#xD;&#xA;  { Date: 1620471600000, Close: 8.39},&#xD;&#xA;  { Date: 1621508400000, Close: 7.99},&#xD;&#xA;  { Date: 1623322800000, Close: 7.49},&#xD;&#xA;  { Date: 1625137200000, Close: 6.79},&#xD;&#xA;  { Date: 1625310000000, Close: 5.99},&#xD;&#xA;  { Date: 1627815600000, Close: 5.39},&#xD;&#xA;  { Date: 1631617200000, Close: 5.99},&#xD;&#xA;  { Date: 1633086000000, Close: 5.49},&#xD;&#xA;  { Date: 1634900400000, Close: 5.99},&#xD;&#xA;  { Date: 1644750000000, Close: 5.39},&#xD;&#xA;  { Date: 1661943600000, Close: 5.79},&#xD;&#xA;  { Date: 1664967600000, Close: 6.09},&#xD;&#xA;  { Date: 1665313200000, Close: 6.39},&#xD;&#xA;  { Date: 1669374000000, Close: 5.79},&#xD;&#xA;  { Date: 1669460400000, Close: 5.99},&#xD;&#xA;  { Date: 1670929200000, Close: 5.95},&#xD;&#xA;  { Date: 1671274800000, Close: 5.99},&#xD;&#xA;  { Date: 1671793200000, Close: 6.09},&#xD;&#xA;  { Date: 1675335600000, Close: 6.19},&#xD;&#xA;  { Date: 1678618800000, Close: 6.29},&#xD;&#xA;  { Date: 1696330800000, Close: 7.99},&#xD;&#xA;  { Date: 1702897200000, Close: 7.39},&#xD;&#xA;  { Date: 1704884400000, Close: 6.79},&#xD;&#xA;  { Date: 1706871600000, Close: 6.19},&#xD;&#xA;  { Date: 1708167600000, Close: 5.49},&#xD;&#xA;  { Date: 1729545458894, Close: 5.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619694000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>040/095 - Cubone</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/040---cubone/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/040---cubone/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168756.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 19-01-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1614855600000, Close: 0.69},&#xD;&#xA;  { Date: 1627038000000, Close: 0.89},&#xD;&#xA;  { Date: 1664622000000, Close: 1.99},&#xD;&#xA;  { Date: 1668510000000, Close: 1.69},&#xD;&#xA;  { Date: 1671102000000, Close: 1.79},&#xD;&#xA;  { Date: 1684494000000, Close: 1.99},&#xD;&#xA;  { Date: 1705662000000, Close: 2.99},&#xD;&#xA;  { Date: 1706266800000, Close: 2.49},&#xD;&#xA;  { Date: 1711537200000, Close: 2.29},&#xD;&#xA;  { Date: 1729545458942, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1705662000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>041/095 - Jigglypuff</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/041---jigglypuff/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/041---jigglypuff/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168761.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 18-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1604142000000, Close: 0.49},&#xD;&#xA;  { Date: 1614769200000, Close: 0.59},&#xD;&#xA;  { Date: 1627038000000, Close: 0.69},&#xD;&#xA;  { Date: 1647601200000, Close: 1.99},&#xD;&#xA;  { Date: 1655550000000, Close: 2.49},&#xD;&#xA;  { Date: 1660993200000, Close: 2.29},&#xD;&#xA;  { Date: 1664967600000, Close: 1.99},&#xD;&#xA;  { Date: 1666782000000, Close: 1.69},&#xD;&#xA;  { Date: 1668682800000, Close: 1.39},&#xD;&#xA;  { Date: 1669114800000, Close: 1.29},&#xD;&#xA;  { Date: 1670929200000, Close: 1.25},&#xD;&#xA;  { Date: 1672225200000, Close: 1.29},&#xD;&#xA;  { Date: 1683198000000, Close: 1.39},&#xD;&#xA;  { Date: 1683889200000, Close: 1.29},&#xD;&#xA;  { Date: 1684234800000, Close: 1.39},&#xD;&#xA;  { Date: 1687172400000, Close: 1.29},&#xD;&#xA;  { Date: 1687863600000, Close: 1.49},&#xD;&#xA;  { Date: 1688814000000, Close: 1.79},&#xD;&#xA;  { Date: 1691578800000, Close: 1.49},&#xD;&#xA;  { Date: 1694775600000, Close: 1.19},&#xD;&#xA;  { Date: 1696417200000, Close: 0.99},&#xD;&#xA;  { Date: 1702638000000, Close: 0.89},&#xD;&#xA;  { Date: 1704798000000, Close: 0.79},&#xD;&#xA;  { Date: 1729545459048, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1655550000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>042/095 - Meowth</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/042---meowth/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/042---meowth/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168766.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 14-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.69},&#xD;&#xA;  { Date: 1606561200000, Close: 0.79},&#xD;&#xA;  { Date: 1616583600000, Close: 0.89},&#xD;&#xA;  { Date: 1661943600000, Close: 1.29},&#xD;&#xA;  { Date: 1664967600000, Close: 0.99},&#xD;&#xA;  { Date: 1665831600000, Close: 0.79},&#xD;&#xA;  { Date: 1679828400000, Close: 0.99},&#xD;&#xA;  { Date: 1697281200000, Close: 1.99},&#xD;&#xA;  { Date: 1701169200000, Close: 1.69},&#xD;&#xA;  { Date: 1708081200000, Close: 1.39},&#xD;&#xA;  { Date: 1711191600000, Close: 0.99},&#xD;&#xA;  { Date: 1729545459155, Close: 0.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1697281200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>043/095 - Pikachu</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/043---pikachu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/043---pikachu/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168770.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 7.39 on 17-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 2.29 on 14-03-2024.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 3.29},&#xD;&#xA;  { Date: 1593428400000, Close: 2.69},&#xD;&#xA;  { Date: 1600426800000, Close: 2.99},&#xD;&#xA;  { Date: 1606820400000, Close: 3.19},&#xD;&#xA;  { Date: 1607684400000, Close: 3.99},&#xD;&#xA;  { Date: 1608721200000, Close: 4.29},&#xD;&#xA;  { Date: 1610103600000, Close: 4.49},&#xD;&#xA;  { Date: 1614855600000, Close: 6.99},&#xD;&#xA;  { Date: 1618657200000, Close: 7.39},&#xD;&#xA;  { Date: 1620558000000, Close: 6.79},&#xD;&#xA;  { Date: 1621335600000, Close: 5.99},&#xD;&#xA;  { Date: 1623150000000, Close: 5.49},&#xD;&#xA;  { Date: 1624964400000, Close: 3.99},&#xD;&#xA;  { Date: 1628247600000, Close: 4.49},&#xD;&#xA;  { Date: 1647946800000, Close: 3.89},&#xD;&#xA;  { Date: 1649847600000, Close: 3.29},&#xD;&#xA;  { Date: 1655895600000, Close: 6.49},&#xD;&#xA;  { Date: 1661943600000, Close: 6.99},&#xD;&#xA;  { Date: 1665054000000, Close: 6.39},&#xD;&#xA;  { Date: 1665140400000, Close: 5.89},&#xD;&#xA;  { Date: 1665918000000, Close: 5.79},&#xD;&#xA;  { Date: 1666436400000, Close: 5.69},&#xD;&#xA;  { Date: 1667473200000, Close: 5.59},&#xD;&#xA;  { Date: 1668510000000, Close: 5.49},&#xD;&#xA;  { Date: 1671274800000, Close: 5.59},&#xD;&#xA;  { Date: 1675162800000, Close: 5.19},&#xD;&#xA;  { Date: 1686308400000, Close: 5.99},&#xD;&#xA;  { Date: 1691665200000, Close: 5.49},&#xD;&#xA;  { Date: 1700650800000, Close: 5.19},&#xD;&#xA;  { Date: 1701255600000, Close: 5.09},&#xD;&#xA;  { Date: 1701601200000, Close: 4.99},&#xD;&#xA;  { Date: 1702551600000, Close: 4.79},&#xD;&#xA;  { Date: 1704452400000, Close: 4.19},&#xD;&#xA;  { Date: 1704798000000, Close: 3.49},&#xD;&#xA;  { Date: 1706785200000, Close: 2.89},&#xD;&#xA;  { Date: 1709895600000, Close: 2.49},&#xD;&#xA;  { Date: 1710414000000, Close: 2.29},&#xD;&#xA;  { Date: 1717066800000, Close: 2.99},&#xD;&#xA;  { Date: 1729545459185, Close: 2.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618657200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1710414000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>044/095 - Psyduck</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/044---psyduck/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/044---psyduck/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168771.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.49 on 31-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1591441200000, Close: 0.59},&#xD;&#xA;  { Date: 1605006000000, Close: 0.49},&#xD;&#xA;  { Date: 1612350000000, Close: 0.59},&#xD;&#xA;  { Date: 1621076400000, Close: 0.69},&#xD;&#xA;  { Date: 1648810800000, Close: 2.49},&#xD;&#xA;  { Date: 1648897200000, Close: 2.59},&#xD;&#xA;  { Date: 1654858800000, Close: 3.29},&#xD;&#xA;  { Date: 1661943600000, Close: 3.49},&#xD;&#xA;  { Date: 1668855600000, Close: 2.89},&#xD;&#xA;  { Date: 1672916400000, Close: 2.59},&#xD;&#xA;  { Date: 1695466800000, Close: 2.29},&#xD;&#xA;  { Date: 1695553200000, Close: 1.99},&#xD;&#xA;  { Date: 1702033200000, Close: 1.69},&#xD;&#xA;  { Date: 1702206000000, Close: 1.89},&#xD;&#xA;  { Date: 1709118000000, Close: 1.99},&#xD;&#xA;  { Date: 1729545459215, Close: 1.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1661943600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>045/095 - Slowpoke</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/045---slowpoke/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/045---slowpoke/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168786.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.99 on 17-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.79},&#xD;&#xA;  { Date: 1608289200000, Close: 1.09},&#xD;&#xA;  { Date: 1614337200000, Close: 1.49},&#xD;&#xA;  { Date: 1615028400000, Close: 1.99},&#xD;&#xA;  { Date: 1617274800000, Close: 2.49},&#xD;&#xA;  { Date: 1618657200000, Close: 2.99},&#xD;&#xA;  { Date: 1620212400000, Close: 2.49},&#xD;&#xA;  { Date: 1622026800000, Close: 2.29},&#xD;&#xA;  { Date: 1623841200000, Close: 1.99},&#xD;&#xA;  { Date: 1625742000000, Close: 1.49},&#xD;&#xA;  { Date: 1627556400000, Close: 1.29},&#xD;&#xA;  { Date: 1629370800000, Close: 1.09},&#xD;&#xA;  { Date: 1631530800000, Close: 0.99},&#xD;&#xA;  { Date: 1641466800000, Close: 0.89},&#xD;&#xA;  { Date: 1647601200000, Close: 1.69},&#xD;&#xA;  { Date: 1649502000000, Close: 1.49},&#xD;&#xA;  { Date: 1651316400000, Close: 1.39},&#xD;&#xA;  { Date: 1653994800000, Close: 0.99},&#xD;&#xA;  { Date: 1655895600000, Close: 0.89},&#xD;&#xA;  { Date: 1657710000000, Close: 0.79},&#xD;&#xA;  { Date: 1675940400000, Close: 0.99},&#xD;&#xA;  { Date: 1729545459334, Close: 0.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618657200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>046/095 - Squirtle</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/046---squirtle/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/046---squirtle/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168787.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 11.99 on 10-08-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.49 on 23-09-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1600426800000, Close: 1.59},&#xD;&#xA;  { Date: 1600858800000, Close: 1.49},&#xD;&#xA;  { Date: 1606215600000, Close: 2.99},&#xD;&#xA;  { Date: 1609498800000, Close: 3.49},&#xD;&#xA;  { Date: 1614855600000, Close: 4.19},&#xD;&#xA;  { Date: 1616324400000, Close: 3.59},&#xD;&#xA;  { Date: 1617274800000, Close: 3.99},&#xD;&#xA;  { Date: 1620212400000, Close: 5.99},&#xD;&#xA;  { Date: 1621335600000, Close: 6.99},&#xD;&#xA;  { Date: 1622286000000, Close: 6.59},&#xD;&#xA;  { Date: 1623322800000, Close: 5.99},&#xD;&#xA;  { Date: 1627297200000, Close: 5.39},&#xD;&#xA;  { Date: 1636801200000, Close: 5.99},&#xD;&#xA;  { Date: 1646910000000, Close: 5.49},&#xD;&#xA;  { Date: 1648810800000, Close: 8.99},&#xD;&#xA;  { Date: 1652180400000, Close: 9.09},&#xD;&#xA;  { Date: 1656154800000, Close: 8.39},&#xD;&#xA;  { Date: 1656241200000, Close: 8.49},&#xD;&#xA;  { Date: 1660993200000, Close: 9.99},&#xD;&#xA;  { Date: 1665831600000, Close: 8.79},&#xD;&#xA;  { Date: 1669892400000, Close: 8.19},&#xD;&#xA;  { Date: 1691665200000, Close: 11.99},&#xD;&#xA;  { Date: 1695553200000, Close: 10.49},&#xD;&#xA;  { Date: 1696417200000, Close: 8.99},&#xD;&#xA;  { Date: 1698231600000, Close: 7.99},&#xD;&#xA;  { Date: 1700564400000, Close: 6.99},&#xD;&#xA;  { Date: 1702465200000, Close: 5.49},&#xD;&#xA;  { Date: 1703070000000, Close: 5.99},&#xD;&#xA;  { Date: 1704884400000, Close: 5.49},&#xD;&#xA;  { Date: 1709118000000, Close: 6.69},&#xD;&#xA;  { Date: 1716375600000, Close: 6.99},&#xD;&#xA;  { Date: 1729545459364, Close: 6.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1691665200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1600858800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>047/095 - Team Aqua&#39;s Carvanha</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/047---team-aquas-carvanha/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/047---team-aquas-carvanha/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168818.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 20-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 02-07-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1611658800000, Close: 0.39},&#xD;&#xA;  { Date: 1611918000000, Close: 0.49},&#xD;&#xA;  { Date: 1615978800000, Close: 0.39},&#xD;&#xA;  { Date: 1616065200000, Close: 0.49},&#xD;&#xA;  { Date: 1622286000000, Close: 0.39},&#xD;&#xA;  { Date: 1625223600000, Close: 0.35},&#xD;&#xA;  { Date: 1645095600000, Close: 0.49},&#xD;&#xA;  { Date: 1660993200000, Close: 0.79},&#xD;&#xA;  { Date: 1664967600000, Close: 0.69},&#xD;&#xA;  { Date: 1669028400000, Close: 0.59},&#xD;&#xA;  { Date: 1670065200000, Close: 0.39},&#xD;&#xA;  { Date: 1672916400000, Close: 0.49},&#xD;&#xA;  { Date: 1678359600000, Close: 0.69},&#xD;&#xA;  { Date: 1680951600000, Close: 0.59},&#xD;&#xA;  { Date: 1685962800000, Close: 0.49},&#xD;&#xA;  { Date: 1691406000000, Close: 0.39},&#xD;&#xA;  { Date: 1693306800000, Close: 0.35},&#xD;&#xA;  { Date: 1709118000000, Close: 0.49},&#xD;&#xA;  { Date: 1713006000000, Close: 0.39},&#xD;&#xA;  { Date: 1713265200000, Close: 0.49},&#xD;&#xA;  { Date: 1729545459669, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1660993200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1625223600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>048/095 - Team Aqua&#39;s Carvanha</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/048---team-aquas-carvanha/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/048---team-aquas-carvanha/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168828.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1593860400000, Close: 0.39},&#xD;&#xA;  { Date: 1600426800000, Close: 0.35},&#xD;&#xA;  { Date: 1705662000000, Close: 0.49},&#xD;&#xA;  { Date: 1709636400000, Close: 0.39},&#xD;&#xA;  { Date: 1716030000000, Close: 0.35},&#xD;&#xA;  { Date: 1729545459721, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>049/095 - Team Aqua&#39;s Chinchou</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/049---team-aquas-chinchou/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/049---team-aquas-chinchou/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168811.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 29-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1593428400000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.35},&#xD;&#xA;  { Date: 1666695600000, Close: 0.49},&#xD;&#xA;  { Date: 1670583600000, Close: 0.39},&#xD;&#xA;  { Date: 1674039600000, Close: 0.35},&#xD;&#xA;  { Date: 1709118000000, Close: 0.49},&#xD;&#xA;  { Date: 1729545459767, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1593428400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>050/095 - Team Aqua&#39;s Corphish</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/050---team-aquas-corphish/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/050---team-aquas-corphish/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168820.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 03-12-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1600426800000, Close: 0.49},&#xD;&#xA;  { Date: 1600858800000, Close: 0.39},&#xD;&#xA;  { Date: 1602673200000, Close: 0.35},&#xD;&#xA;  { Date: 1656414000000, Close: 0.49},&#xD;&#xA;  { Date: 1668510000000, Close: 0.39},&#xD;&#xA;  { Date: 1668596400000, Close: 0.49},&#xD;&#xA;  { Date: 1670065200000, Close: 0.69},&#xD;&#xA;  { Date: 1670670000000, Close: 0.59},&#xD;&#xA;  { Date: 1679223600000, Close: 0.49},&#xD;&#xA;  { Date: 1684839600000, Close: 0.39},&#xD;&#xA;  { Date: 1691492400000, Close: 0.35},&#xD;&#xA;  { Date: 1729545459833, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1670065200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>051/095 - Team Aqua&#39;s Corphish</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/051---team-aquas-corphish/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/051---team-aquas-corphish/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168821.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.19 on 31-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 28-02-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1609930800000, Close: 0.49},&#xD;&#xA;  { Date: 1612609200000, Close: 0.39},&#xD;&#xA;  { Date: 1614510000000, Close: 0.35},&#xD;&#xA;  { Date: 1618916400000, Close: 0.49},&#xD;&#xA;  { Date: 1622286000000, Close: 0.39},&#xD;&#xA;  { Date: 1630926000000, Close: 0.35},&#xD;&#xA;  { Date: 1657969200000, Close: 0.49},&#xD;&#xA;  { Date: 1661943600000, Close: 1.19},&#xD;&#xA;  { Date: 1665831600000, Close: 0.89},&#xD;&#xA;  { Date: 1669892400000, Close: 0.79},&#xD;&#xA;  { Date: 1673866800000, Close: 0.69},&#xD;&#xA;  { Date: 1676545200000, Close: 0.39},&#xD;&#xA;  { Date: 1676718000000, Close: 0.49},&#xD;&#xA;  { Date: 1681556400000, Close: 0.39},&#xD;&#xA;  { Date: 1682161200000, Close: 0.49},&#xD;&#xA;  { Date: 1685962800000, Close: 0.39},&#xD;&#xA;  { Date: 1691492400000, Close: 0.35},&#xD;&#xA;  { Date: 1709118000000, Close: 0.79},&#xD;&#xA;  { Date: 1729545459870, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1661943600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1614510000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>052/095 - Team Aqua&#39;s Electrike</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/052---team-aquas-electrike/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/052---team-aquas-electrike/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168822.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.89 on 19-01-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-09-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.39},&#xD;&#xA;  { Date: 1593428400000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.35},&#xD;&#xA;  { Date: 1603796400000, Close: 0.49},&#xD;&#xA;  { Date: 1610708400000, Close: 0.39},&#xD;&#xA;  { Date: 1614682800000, Close: 0.35},&#xD;&#xA;  { Date: 1617793200000, Close: 0.49},&#xD;&#xA;  { Date: 1627815600000, Close: 0.39},&#xD;&#xA;  { Date: 1630407600000, Close: 0.49},&#xD;&#xA;  { Date: 1641121200000, Close: 0.39},&#xD;&#xA;  { Date: 1644577200000, Close: 0.49},&#xD;&#xA;  { Date: 1661943600000, Close: 0.79},&#xD;&#xA;  { Date: 1665054000000, Close: 0.69},&#xD;&#xA;  { Date: 1666868400000, Close: 0.59},&#xD;&#xA;  { Date: 1668682800000, Close: 0.49},&#xD;&#xA;  { Date: 1670151600000, Close: 0.39},&#xD;&#xA;  { Date: 1673780400000, Close: 0.35},&#xD;&#xA;  { Date: 1705662000000, Close: 0.89},&#xD;&#xA;  { Date: 1706958000000, Close: 0.79},&#xD;&#xA;  { Date: 1713351600000, Close: 0.69},&#xD;&#xA;  { Date: 1729545459983, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1705662000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1600426800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>053/095 - Team Aqua&#39;s Electrike</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/053---team-aquas-electrike/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/053---team-aquas-electrike/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168823.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 21-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 17-11-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1603796400000, Close: 0.39},&#xD;&#xA;  { Date: 1605610800000, Close: 0.35},&#xD;&#xA;  { Date: 1607425200000, Close: 0.49},&#xD;&#xA;  { Date: 1608375600000, Close: 0.59},&#xD;&#xA;  { Date: 1624273200000, Close: 0.49},&#xD;&#xA;  { Date: 1655809200000, Close: 0.99},&#xD;&#xA;  { Date: 1660993200000, Close: 0.89},&#xD;&#xA;  { Date: 1666177200000, Close: 0.79},&#xD;&#xA;  { Date: 1670065200000, Close: 0.59},&#xD;&#xA;  { Date: 1670670000000, Close: 0.49},&#xD;&#xA;  { Date: 1674298800000, Close: 0.39},&#xD;&#xA;  { Date: 1675508400000, Close: 0.49},&#xD;&#xA;  { Date: 1678532400000, Close: 0.59},&#xD;&#xA;  { Date: 1685962800000, Close: 0.49},&#xD;&#xA;  { Date: 1691406000000, Close: 0.39},&#xD;&#xA;  { Date: 1693306800000, Close: 0.35},&#xD;&#xA;  { Date: 1709118000000, Close: 0.69},&#xD;&#xA;  { Date: 1729545460013, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1655809200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1605610800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>054/095 - Team Aqua&#39;s Poochyena</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/054---team-aquas-poochyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/054---team-aquas-poochyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168825.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1593860400000, Close: 0.39},&#xD;&#xA;  { Date: 1600426800000, Close: 0.35},&#xD;&#xA;  { Date: 1616065200000, Close: 0.49},&#xD;&#xA;  { Date: 1619175600000, Close: 0.39},&#xD;&#xA;  { Date: 1621076400000, Close: 0.35},&#xD;&#xA;  { Date: 1677322800000, Close: 0.49},&#xD;&#xA;  { Date: 1683802800000, Close: 0.39},&#xD;&#xA;  { Date: 1686308400000, Close: 0.35},&#xD;&#xA;  { Date: 1709118000000, Close: 0.49},&#xD;&#xA;  { Date: 1729545460246, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>055/095 - Team Aqua&#39;s Poochyena</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/055---team-aquas-poochyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/055---team-aquas-poochyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168805.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 04-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 26-10-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1603710000000, Close: 0.35},&#xD;&#xA;  { Date: 1608721200000, Close: 0.49},&#xD;&#xA;  { Date: 1612782000000, Close: 0.39},&#xD;&#xA;  { Date: 1617361200000, Close: 0.49},&#xD;&#xA;  { Date: 1624273200000, Close: 0.39},&#xD;&#xA;  { Date: 1633690800000, Close: 0.49},&#xD;&#xA;  { Date: 1651662000000, Close: 0.79},&#xD;&#xA;  { Date: 1665054000000, Close: 0.69},&#xD;&#xA;  { Date: 1669028400000, Close: 0.59},&#xD;&#xA;  { Date: 1676718000000, Close: 0.39},&#xD;&#xA;  { Date: 1678878000000, Close: 0.59},&#xD;&#xA;  { Date: 1680087600000, Close: 0.69},&#xD;&#xA;  { Date: 1686135600000, Close: 0.59},&#xD;&#xA;  { Date: 1690974000000, Close: 0.49},&#xD;&#xA;  { Date: 1694689200000, Close: 0.39},&#xD;&#xA;  { Date: 1702378800000, Close: 0.35},&#xD;&#xA;  { Date: 1709118000000, Close: 0.79},&#xD;&#xA;  { Date: 1729545460281, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1651662000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1603710000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>056/095 - Team Aqua&#39;s Spheal</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/056---team-aquas-spheal/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/056---team-aquas-spheal/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168827.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.69 on 29-04-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-02-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.39},&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1604055600000, Close: 0.39},&#xD;&#xA;  { Date: 1606129200000, Close: 0.49},&#xD;&#xA;  { Date: 1611831600000, Close: 0.39},&#xD;&#xA;  { Date: 1613646000000, Close: 0.35},&#xD;&#xA;  { Date: 1616583600000, Close: 0.49},&#xD;&#xA;  { Date: 1622890800000, Close: 0.39},&#xD;&#xA;  { Date: 1624705200000, Close: 0.35},&#xD;&#xA;  { Date: 1666090800000, Close: 0.49},&#xD;&#xA;  { Date: 1670583600000, Close: 0.39},&#xD;&#xA;  { Date: 1679137200000, Close: 0.49},&#xD;&#xA;  { Date: 1680951600000, Close: 0.39},&#xD;&#xA;  { Date: 1682161200000, Close: 0.49},&#xD;&#xA;  { Date: 1682506800000, Close: 0.39},&#xD;&#xA;  { Date: 1695639600000, Close: 0.35},&#xD;&#xA;  { Date: 1709118000000, Close: 0.49},&#xD;&#xA;  { Date: 1714388400000, Close: 0.69},&#xD;&#xA;  { Date: 1729545460496, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1714388400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1613646000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>057/095 - Team Aqua&#39;s Spheal</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/057---team-aquas-spheal/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/057---team-aquas-spheal/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168802.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.29 on 28-02-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1624273200000, Close: 0.39},&#xD;&#xA;  { Date: 1633431600000, Close: 0.49},&#xD;&#xA;  { Date: 1641121200000, Close: 0.39},&#xD;&#xA;  { Date: 1651662000000, Close: 0.79},&#xD;&#xA;  { Date: 1654686000000, Close: 0.99},&#xD;&#xA;  { Date: 1665831600000, Close: 0.89},&#xD;&#xA;  { Date: 1671879600000, Close: 0.79},&#xD;&#xA;  { Date: 1673175600000, Close: 0.89},&#xD;&#xA;  { Date: 1681383600000, Close: 0.79},&#xD;&#xA;  { Date: 1685962800000, Close: 0.69},&#xD;&#xA;  { Date: 1691406000000, Close: 0.59},&#xD;&#xA;  { Date: 1693306800000, Close: 0.49},&#xD;&#xA;  { Date: 1695121200000, Close: 0.39},&#xD;&#xA;  { Date: 1709118000000, Close: 1.29},&#xD;&#xA;  { Date: 1729545460525, Close: 1.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1709118000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>058/095 - Team Magma&#39;s Aron</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/058---team-magmas-aron/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/058---team-magmas-aron/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168852.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-09-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1593428400000, Close: 0.39},&#xD;&#xA;  { Date: 1600426800000, Close: 0.35},&#xD;&#xA;  { Date: 1616065200000, Close: 0.49},&#xD;&#xA;  { Date: 1619002800000, Close: 0.39},&#xD;&#xA;  { Date: 1623063600000, Close: 0.35},&#xD;&#xA;  { Date: 1666868400000, Close: 0.49},&#xD;&#xA;  { Date: 1671274800000, Close: 0.39},&#xD;&#xA;  { Date: 1671966000000, Close: 0.49},&#xD;&#xA;  { Date: 1674126000000, Close: 0.39},&#xD;&#xA;  { Date: 1674212400000, Close: 0.49},&#xD;&#xA;  { Date: 1681556400000, Close: 0.39},&#xD;&#xA;  { Date: 1681642800000, Close: 0.49},&#xD;&#xA;  { Date: 1685962800000, Close: 0.39},&#xD;&#xA;  { Date: 1690455600000, Close: 0.35},&#xD;&#xA;  { Date: 1709118000000, Close: 0.49},&#xD;&#xA;  { Date: 1713178800000, Close: 0.39},&#xD;&#xA;  { Date: 1713351600000, Close: 0.49},&#xD;&#xA;  { Date: 1729545460843, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1600426800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>059/095 - Team Magma&#39;s Aron</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/059---team-magmas-aron/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/059---team-magmas-aron/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168833.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 15-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 12-03-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.39},&#xD;&#xA;  { Date: 1593428400000, Close: 0.49},&#xD;&#xA;  { Date: 1604055600000, Close: 0.39},&#xD;&#xA;  { Date: 1605092400000, Close: 0.49},&#xD;&#xA;  { Date: 1611658800000, Close: 0.39},&#xD;&#xA;  { Date: 1615546800000, Close: 0.35},&#xD;&#xA;  { Date: 1619175600000, Close: 0.49},&#xD;&#xA;  { Date: 1623409200000, Close: 0.39},&#xD;&#xA;  { Date: 1631790000000, Close: 0.49},&#xD;&#xA;  { Date: 1649329200000, Close: 0.79},&#xD;&#xA;  { Date: 1655290800000, Close: 0.99},&#xD;&#xA;  { Date: 1664967600000, Close: 0.89},&#xD;&#xA;  { Date: 1666782000000, Close: 0.79},&#xD;&#xA;  { Date: 1669201200000, Close: 0.69},&#xD;&#xA;  { Date: 1670065200000, Close: 0.49},&#xD;&#xA;  { Date: 1673780400000, Close: 0.39},&#xD;&#xA;  { Date: 1676458800000, Close: 0.49},&#xD;&#xA;  { Date: 1680433200000, Close: 0.39},&#xD;&#xA;  { Date: 1680519600000, Close: 0.49},&#xD;&#xA;  { Date: 1682506800000, Close: 0.39},&#xD;&#xA;  { Date: 1691838000000, Close: 0.35},&#xD;&#xA;  { Date: 1729545460881, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1655290800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1615546800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>060/095 - Team Magma&#39;s Baltoy</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/060---team-magmas-baltoy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/060---team-magmas-baltoy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168834.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 02-10-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.39},&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1601636400000, Close: 0.35},&#xD;&#xA;  { Date: 1615546800000, Close: 0.49},&#xD;&#xA;  { Date: 1619002800000, Close: 0.39},&#xD;&#xA;  { Date: 1620903600000, Close: 0.35},&#xD;&#xA;  { Date: 1703329200000, Close: 0.49},&#xD;&#xA;  { Date: 1705143600000, Close: 0.39},&#xD;&#xA;  { Date: 1707130800000, Close: 0.35},&#xD;&#xA;  { Date: 1729545460955, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1601636400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>061/095 - Team Magma&#39;s Baltoy</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/061---team-magmas-baltoy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/061---team-magmas-baltoy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168847.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 18-12-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 02-01-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1591441200000, Close: 0.39},&#xD;&#xA;  { Date: 1600426800000, Close: 0.49},&#xD;&#xA;  { Date: 1605006000000, Close: 0.39},&#xD;&#xA;  { Date: 1609585200000, Close: 0.35},&#xD;&#xA;  { Date: 1633690800000, Close: 0.49},&#xD;&#xA;  { Date: 1641121200000, Close: 0.39},&#xD;&#xA;  { Date: 1642244400000, Close: 0.49},&#xD;&#xA;  { Date: 1670065200000, Close: 0.69},&#xD;&#xA;  { Date: 1671361200000, Close: 0.79},&#xD;&#xA;  { Date: 1715684400000, Close: 0.49},&#xD;&#xA;  { Date: 1729545460985, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1671361200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1609585200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>062/095 - Team Magma&#39;s Houndour</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/062---team-magmas-houndour/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/062---team-magmas-houndour/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168835.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 14-05-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1593428400000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.35},&#xD;&#xA;  { Date: 1616842800000, Close: 0.49},&#xD;&#xA;  { Date: 1627815600000, Close: 0.39},&#xD;&#xA;  { Date: 1630926000000, Close: 0.35},&#xD;&#xA;  { Date: 1664967600000, Close: 0.49},&#xD;&#xA;  { Date: 1669028400000, Close: 0.39},&#xD;&#xA;  { Date: 1669114800000, Close: 0.49},&#xD;&#xA;  { Date: 1673866800000, Close: 0.39},&#xD;&#xA;  { Date: 1685617200000, Close: 0.49},&#xD;&#xA;  { Date: 1693393200000, Close: 0.39},&#xD;&#xA;  { Date: 1715684400000, Close: 0.59},&#xD;&#xA;  { Date: 1715770800000, Close: 0.49},&#xD;&#xA;  { Date: 1716980400000, Close: 0.39},&#xD;&#xA;  { Date: 1729545461228, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1715684400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>063/095 - Team Magma&#39;s Houndour</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/063---team-magmas-houndour/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/063---team-magmas-houndour/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168836.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.99 on 03-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 23-07-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1622286000000, Close: 0.39},&#xD;&#xA;  { Date: 1627038000000, Close: 0.35},&#xD;&#xA;  { Date: 1661943600000, Close: 0.49},&#xD;&#xA;  { Date: 1668769200000, Close: 0.39},&#xD;&#xA;  { Date: 1668855600000, Close: 0.49},&#xD;&#xA;  { Date: 1670065200000, Close: 0.79},&#xD;&#xA;  { Date: 1671620400000, Close: 0.89},&#xD;&#xA;  { Date: 1671966000000, Close: 0.99},&#xD;&#xA;  { Date: 1696330800000, Close: 1.99},&#xD;&#xA;  { Date: 1700737200000, Close: 1.69},&#xD;&#xA;  { Date: 1704798000000, Close: 1.39},&#xD;&#xA;  { Date: 1707822000000, Close: 0.99},&#xD;&#xA;  { Date: 1716116400000, Close: 0.89},&#xD;&#xA;  { Date: 1729545461261, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1696330800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1627038000000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>064/095 - Team Magma&#39;s Numel</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/064---team-magmas-numel/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/064---team-magmas-numel/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168838.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.19 on 23-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 08-10-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1602154800000, Close: 0.35},&#xD;&#xA;  { Date: 1609671600000, Close: 0.49},&#xD;&#xA;  { Date: 1615287600000, Close: 0.59},&#xD;&#xA;  { Date: 1636023600000, Close: 0.49},&#xD;&#xA;  { Date: 1651662000000, Close: 0.79},&#xD;&#xA;  { Date: 1661252400000, Close: 1.19},&#xD;&#xA;  { Date: 1665140400000, Close: 0.89},&#xD;&#xA;  { Date: 1669201200000, Close: 0.79},&#xD;&#xA;  { Date: 1673262000000, Close: 0.69},&#xD;&#xA;  { Date: 1677495600000, Close: 0.79},&#xD;&#xA;  { Date: 1681470000000, Close: 0.69},&#xD;&#xA;  { Date: 1715684400000, Close: 0.89},&#xD;&#xA;  { Date: 1715770800000, Close: 0.79},&#xD;&#xA;  { Date: 1716289200000, Close: 0.69},&#xD;&#xA;  { Date: 1729545461394, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1661252400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1602154800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>065/095 - Team Magma&#39;s Poochyena</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/065---team-magmas-poochyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/065---team-magmas-poochyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168839.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 18-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 02-01-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1604055600000, Close: 0.39},&#xD;&#xA;  { Date: 1609585200000, Close: 0.35},&#xD;&#xA;  { Date: 1614337200000, Close: 0.49},&#xD;&#xA;  { Date: 1618398000000, Close: 0.39},&#xD;&#xA;  { Date: 1620298800000, Close: 0.49},&#xD;&#xA;  { Date: 1623322800000, Close: 0.39},&#xD;&#xA;  { Date: 1632049200000, Close: 0.49},&#xD;&#xA;  { Date: 1647946800000, Close: 0.79},&#xD;&#xA;  { Date: 1655550000000, Close: 0.99},&#xD;&#xA;  { Date: 1668855600000, Close: 0.89},&#xD;&#xA;  { Date: 1672916400000, Close: 0.79},&#xD;&#xA;  { Date: 1713006000000, Close: 0.69},&#xD;&#xA;  { Date: 1715770800000, Close: 0.49},&#xD;&#xA;  { Date: 1717585200000, Close: 0.39},&#xD;&#xA;  { Date: 1720350000000, Close: 0.35},&#xD;&#xA;  { Date: 1729545461429, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1655550000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1609585200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>066/095 - Team Magma&#39;s Poochyena</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/066---team-magmas-poochyena/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/066---team-magmas-poochyena/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168845.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.09 on 28-02-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 28-01-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1604055600000, Close: 0.39},&#xD;&#xA;  { Date: 1611831600000, Close: 0.35},&#xD;&#xA;  { Date: 1613646000000, Close: 0.49},&#xD;&#xA;  { Date: 1617793200000, Close: 0.39},&#xD;&#xA;  { Date: 1618138800000, Close: 0.49},&#xD;&#xA;  { Date: 1622286000000, Close: 0.39},&#xD;&#xA;  { Date: 1624273200000, Close: 0.35},&#xD;&#xA;  { Date: 1628247600000, Close: 0.49},&#xD;&#xA;  { Date: 1647082800000, Close: 0.39},&#xD;&#xA;  { Date: 1651143600000, Close: 0.35},&#xD;&#xA;  { Date: 1660906800000, Close: 0.49},&#xD;&#xA;  { Date: 1660993200000, Close: 0.45},&#xD;&#xA;  { Date: 1665054000000, Close: 0.39},&#xD;&#xA;  { Date: 1666868400000, Close: 0.35},&#xD;&#xA;  { Date: 1682161200000, Close: 0.79},&#xD;&#xA;  { Date: 1682506800000, Close: 0.69},&#xD;&#xA;  { Date: 1685962800000, Close: 0.59},&#xD;&#xA;  { Date: 1690974000000, Close: 0.49},&#xD;&#xA;  { Date: 1694170800000, Close: 0.39},&#xD;&#xA;  { Date: 1709118000000, Close: 1.09},&#xD;&#xA;  { Date: 1729545461464, Close: 1.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1709118000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1611831600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>067/095 - Team Magma&#39;s Rhyhorn</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/067---team-magmas-rhyhorn/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/067---team-magmas-rhyhorn/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168840.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 08-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 17-02-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.39},&#xD;&#xA;  { Date: 1593428400000, Close: 0.49},&#xD;&#xA;  { Date: 1605783600000, Close: 0.39},&#xD;&#xA;  { Date: 1606734000000, Close: 0.49},&#xD;&#xA;  { Date: 1611658800000, Close: 0.39},&#xD;&#xA;  { Date: 1613559600000, Close: 0.35},&#xD;&#xA;  { Date: 1618138800000, Close: 0.49},&#xD;&#xA;  { Date: 1622286000000, Close: 0.39},&#xD;&#xA;  { Date: 1632049200000, Close: 0.49},&#xD;&#xA;  { Date: 1650538800000, Close: 0.39},&#xD;&#xA;  { Date: 1650625200000, Close: 0.49},&#xD;&#xA;  { Date: 1654686000000, Close: 0.79},&#xD;&#xA;  { Date: 1665831600000, Close: 0.69},&#xD;&#xA;  { Date: 1669892400000, Close: 0.59},&#xD;&#xA;  { Date: 1674126000000, Close: 0.49},&#xD;&#xA;  { Date: 1674212400000, Close: 0.39},&#xD;&#xA;  { Date: 1674558000000, Close: 0.49},&#xD;&#xA;  { Date: 1685962800000, Close: 0.39},&#xD;&#xA;  { Date: 1690714800000, Close: 0.35},&#xD;&#xA;  { Date: 1709118000000, Close: 0.59},&#xD;&#xA;  { Date: 1729545461605, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1654686000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1613559600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>068/095 - Team Magma&#39;s Rhyhorn</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/068---team-magmas-rhyhorn/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/068---team-magmas-rhyhorn/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168857.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 12-03-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.39},&#xD;&#xA;  { Date: 1591441200000, Close: 0.35},&#xD;&#xA;  { Date: 1615546800000, Close: 0.49},&#xD;&#xA;  { Date: 1619002800000, Close: 0.39},&#xD;&#xA;  { Date: 1621335600000, Close: 0.35},&#xD;&#xA;  { Date: 1666695600000, Close: 0.49},&#xD;&#xA;  { Date: 1670065200000, Close: 0.39},&#xD;&#xA;  { Date: 1673780400000, Close: 0.35},&#xD;&#xA;  { Date: 1729545461656, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1615546800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>069/095 - Team Aqua Schemer</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/069---team-aqua-schemer/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/069---team-aqua-schemer/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168808.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 29-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.35},&#xD;&#xA;  { Date: 1593428400000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.35},&#xD;&#xA;  { Date: 1604055600000, Close: 0.49},&#xD;&#xA;  { Date: 1608116400000, Close: 0.39},&#xD;&#xA;  { Date: 1609930800000, Close: 0.35},&#xD;&#xA;  { Date: 1729545460612, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1593428400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>070/095 - Team Magma Schemer</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/070---team-magma-schemer/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/070---team-magma-schemer/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168841.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.49 on 29-06-2020.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 23-09-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.39},&#xD;&#xA;  { Date: 1593428400000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.39},&#xD;&#xA;  { Date: 1600858800000, Close: 0.35},&#xD;&#xA;  { Date: 1729545461773, Close: 0.35},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1593428400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1600858800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>071/095 - Archie</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/071---archie/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/071---archie/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168749.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.49 on 21-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.89},&#xD;&#xA;  { Date: 1600426800000, Close: 0.99},&#xD;&#xA;  { Date: 1605351600000, Close: 1.29},&#xD;&#xA;  { Date: 1613818800000, Close: 2.19},&#xD;&#xA;  { Date: 1619002800000, Close: 3.49},&#xD;&#xA;  { Date: 1624532400000, Close: 2.89},&#xD;&#xA;  { Date: 1626433200000, Close: 2.59},&#xD;&#xA;  { Date: 1626519600000, Close: 2.29},&#xD;&#xA;  { Date: 1628334000000, Close: 1.99},&#xD;&#xA;  { Date: 1630926000000, Close: 1.69},&#xD;&#xA;  { Date: 1638874800000, Close: 1.39},&#xD;&#xA;  { Date: 1729545458843, Close: 1.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1619002800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>072/095 - Dual Ball</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/072---dual-ball/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/072---dual-ball/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168759.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.99 on 02-11-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.59},&#xD;&#xA;  { Date: 1615546800000, Close: 0.99},&#xD;&#xA;  { Date: 1620126000000, Close: 1.09},&#xD;&#xA;  { Date: 1634295600000, Close: 1.29},&#xD;&#xA;  { Date: 1664967600000, Close: 0.99},&#xD;&#xA;  { Date: 1669028400000, Close: 0.89},&#xD;&#xA;  { Date: 1675335600000, Close: 0.99},&#xD;&#xA;  { Date: 1686826800000, Close: 2.49},&#xD;&#xA;  { Date: 1687518000000, Close: 2.99},&#xD;&#xA;  { Date: 1698922800000, Close: 3.99},&#xD;&#xA;  { Date: 1713092400000, Close: 3.39},&#xD;&#xA;  { Date: 1717239600000, Close: 2.79},&#xD;&#xA;  { Date: 1729545458992, Close: 2.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1698922800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>073/095 - Maxie</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/073---maxie/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/073---maxie/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168765.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 4.39 on 09-08-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.69 on 08-01-2023.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 1.89},&#xD;&#xA;  { Date: 1591441200000, Close: 2.99},&#xD;&#xA;  { Date: 1593428400000, Close: 3.19},&#xD;&#xA;  { Date: 1600426800000, Close: 3.79},&#xD;&#xA;  { Date: 1600945200000, Close: 3.19},&#xD;&#xA;  { Date: 1601982000000, Close: 2.99},&#xD;&#xA;  { Date: 1604574000000, Close: 2.49},&#xD;&#xA;  { Date: 1607166000000, Close: 2.29},&#xD;&#xA;  { Date: 1618916400000, Close: 2.99},&#xD;&#xA;  { Date: 1621422000000, Close: 3.49},&#xD;&#xA;  { Date: 1652353200000, Close: 2.89},&#xD;&#xA;  { Date: 1656327600000, Close: 2.59},&#xD;&#xA;  { Date: 1660993200000, Close: 2.49},&#xD;&#xA;  { Date: 1664967600000, Close: 2.19},&#xD;&#xA;  { Date: 1669028400000, Close: 1.89},&#xD;&#xA;  { Date: 1669114800000, Close: 1.99},&#xD;&#xA;  { Date: 1673175600000, Close: 1.69},&#xD;&#xA;  { Date: 1673262000000, Close: 1.89},&#xD;&#xA;  { Date: 1673780400000, Close: 2.09},&#xD;&#xA;  { Date: 1674903600000, Close: 1.99},&#xD;&#xA;  { Date: 1703674800000, Close: 3.09},&#xD;&#xA;  { Date: 1705489200000, Close: 3.19},&#xD;&#xA;  { Date: 1705921200000, Close: 3.29},&#xD;&#xA;  { Date: 1706353200000, Close: 3.39},&#xD;&#xA;  { Date: 1707217200000, Close: 3.49},&#xD;&#xA;  { Date: 1723201200000, Close: 4.39},&#xD;&#xA;  { Date: 1729545459126, Close: 4.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1723201200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1673175600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>074/095 - Strength Charm</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/074---strength-charm/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/074---strength-charm/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168788.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 01-10-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.59},&#xD;&#xA;  { Date: 1602241200000, Close: 0.69},&#xD;&#xA;  { Date: 1610017200000, Close: 0.79},&#xD;&#xA;  { Date: 1612350000000, Close: 0.89},&#xD;&#xA;  { Date: 1614682800000, Close: 0.79},&#xD;&#xA;  { Date: 1627038000000, Close: 1.09},&#xD;&#xA;  { Date: 1638615600000, Close: 1.29},&#xD;&#xA;  { Date: 1642503600000, Close: 0.99},&#xD;&#xA;  { Date: 1647601200000, Close: 1.09},&#xD;&#xA;  { Date: 1664622000000, Close: 1.49},&#xD;&#xA;  { Date: 1668769200000, Close: 1.19},&#xD;&#xA;  { Date: 1672830000000, Close: 0.89},&#xD;&#xA;  { Date: 1675335600000, Close: 0.99},&#xD;&#xA;  { Date: 1679223600000, Close: 0.89},&#xD;&#xA;  { Date: 1723201200000, Close: 0.99},&#xD;&#xA;  { Date: 1729545459391, Close: 0.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1664622000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>075/095 - Team Aqua Ball</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/075---team-aqua-ball/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/075---team-aqua-ball/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168793.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 18-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 20-10-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1593428400000, Close: 0.39},&#xD;&#xA;  { Date: 1603191600000, Close: 0.35},&#xD;&#xA;  { Date: 1605006000000, Close: 0.49},&#xD;&#xA;  { Date: 1621076400000, Close: 0.59},&#xD;&#xA;  { Date: 1648206000000, Close: 0.69},&#xD;&#xA;  { Date: 1655550000000, Close: 0.99},&#xD;&#xA;  { Date: 1660993200000, Close: 0.89},&#xD;&#xA;  { Date: 1664967600000, Close: 0.79},&#xD;&#xA;  { Date: 1669028400000, Close: 0.69},&#xD;&#xA;  { Date: 1670583600000, Close: 0.59},&#xD;&#xA;  { Date: 1682420400000, Close: 0.69},&#xD;&#xA;  { Date: 1687431600000, Close: 0.79},&#xD;&#xA;  { Date: 1729545459470, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1655550000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1603191600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>076/095 - Team Aqua Belt</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/076---team-aqua-belt/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/076---team-aqua-belt/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168794.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 14-02-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.59},&#xD;&#xA;  { Date: 1612350000000, Close: 0.79},&#xD;&#xA;  { Date: 1664622000000, Close: 1.29},&#xD;&#xA;  { Date: 1668510000000, Close: 0.99},&#xD;&#xA;  { Date: 1681902000000, Close: 0.89},&#xD;&#xA;  { Date: 1682506800000, Close: 0.79},&#xD;&#xA;  { Date: 1685703600000, Close: 0.69},&#xD;&#xA;  { Date: 1690887600000, Close: 0.59},&#xD;&#xA;  { Date: 1707908400000, Close: 1.49},&#xD;&#xA;  { Date: 1729545459492, Close: 1.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1707908400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>077/095 - Team Aqua Conspirator</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/077---team-aqua-conspirator/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/077---team-aqua-conspirator/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168795.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.59 on 20-08-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.35 on 21-04-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1602932400000, Close: 0.39},&#xD;&#xA;  { Date: 1607598000000, Close: 0.49},&#xD;&#xA;  { Date: 1644577200000, Close: 0.39},&#xD;&#xA;  { Date: 1650538800000, Close: 0.35},&#xD;&#xA;  { Date: 1655204400000, Close: 0.49},&#xD;&#xA;  { Date: 1660993200000, Close: 0.59},&#xD;&#xA;  { Date: 1668510000000, Close: 0.49},&#xD;&#xA;  { Date: 1672570800000, Close: 0.39},&#xD;&#xA;  { Date: 1676458800000, Close: 0.49},&#xD;&#xA;  { Date: 1682506800000, Close: 0.39},&#xD;&#xA;  { Date: 1689159600000, Close: 0.49},&#xD;&#xA;  { Date: 1729545459524, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1660993200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1650538800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>078/095 - Team Aqua Hideout</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/078---team-aqua-hideout/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/078---team-aqua-hideout/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168798.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.79 on 28-01-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1617274800000, Close: 0.79},&#xD;&#xA;  { Date: 1664622000000, Close: 0.99},&#xD;&#xA;  { Date: 1693652400000, Close: 1.49},&#xD;&#xA;  { Date: 1706439600000, Close: 1.79},&#xD;&#xA;  { Date: 1729545459544, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1706439600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>079/095 - Team Aqua Technical Machine 01</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/079---team-aqua-technical-machine-01/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/079---team-aqua-technical-machine-01/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168796.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 03-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 13-11-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1605265200000, Close: 0.39},&#xD;&#xA;  { Date: 1605438000000, Close: 0.49},&#xD;&#xA;  { Date: 1615546800000, Close: 0.59},&#xD;&#xA;  { Date: 1648206000000, Close: 0.69},&#xD;&#xA;  { Date: 1651662000000, Close: 0.79},&#xD;&#xA;  { Date: 1655895600000, Close: 1.29},&#xD;&#xA;  { Date: 1665226800000, Close: 0.99},&#xD;&#xA;  { Date: 1669287600000, Close: 0.89},&#xD;&#xA;  { Date: 1670065200000, Close: 0.79},&#xD;&#xA;  { Date: 1672657200000, Close: 0.89},&#xD;&#xA;  { Date: 1696330800000, Close: 1.49},&#xD;&#xA;  { Date: 1704538800000, Close: 1.19},&#xD;&#xA;  { Date: 1729545460640, Close: 1.19},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1696330800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1605265200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>080/095 - Team Magma Ball</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/080---team-magma-ball/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/080---team-magma-ball/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168859.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 03-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.59},&#xD;&#xA;  { Date: 1618916400000, Close: 0.69},&#xD;&#xA;  { Date: 1632654000000, Close: 0.59},&#xD;&#xA;  { Date: 1651575600000, Close: 0.79},&#xD;&#xA;  { Date: 1664967600000, Close: 0.69},&#xD;&#xA;  { Date: 1669028400000, Close: 0.59},&#xD;&#xA;  { Date: 1671879600000, Close: 0.79},&#xD;&#xA;  { Date: 1675940400000, Close: 0.69},&#xD;&#xA;  { Date: 1682420400000, Close: 0.79},&#xD;&#xA;  { Date: 1682506800000, Close: 0.69},&#xD;&#xA;  { Date: 1729545460674, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1651575600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>081/095 - Team Magma Belt</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/081---team-magma-belt/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/081---team-magma-belt/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168860.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.49 on 23-07-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.79},&#xD;&#xA;  { Date: 1602241200000, Close: 0.89},&#xD;&#xA;  { Date: 1608807600000, Close: 0.99},&#xD;&#xA;  { Date: 1615287600000, Close: 1.19},&#xD;&#xA;  { Date: 1617102000000, Close: 0.89},&#xD;&#xA;  { Date: 1621076400000, Close: 0.99},&#xD;&#xA;  { Date: 1622199600000, Close: 1.29},&#xD;&#xA;  { Date: 1627038000000, Close: 1.49},&#xD;&#xA;  { Date: 1639134000000, Close: 1.19},&#xD;&#xA;  { Date: 1648465200000, Close: 0.89},&#xD;&#xA;  { Date: 1660993200000, Close: 1.19},&#xD;&#xA;  { Date: 1665054000000, Close: 0.89},&#xD;&#xA;  { Date: 1669114800000, Close: 0.79},&#xD;&#xA;  { Date: 1673175600000, Close: 0.69},&#xD;&#xA;  { Date: 1677150000000, Close: 0.59},&#xD;&#xA;  { Date: 1679137200000, Close: 0.69},&#xD;&#xA;  { Date: 1697626800000, Close: 0.79},&#xD;&#xA;  { Date: 1729545460703, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1627038000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>082/095 - Team Magma Conspirator</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/082---team-magma-conspirator/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/082---team-magma-conspirator/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168861.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.99 on 25-03-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 06-06-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1600426800000, Close: 0.59},&#xD;&#xA;  { Date: 1603105200000, Close: 0.49},&#xD;&#xA;  { Date: 1627038000000, Close: 0.59},&#xD;&#xA;  { Date: 1648206000000, Close: 0.99},&#xD;&#xA;  { Date: 1665831600000, Close: 0.89},&#xD;&#xA;  { Date: 1669892400000, Close: 0.79},&#xD;&#xA;  { Date: 1682506800000, Close: 0.49},&#xD;&#xA;  { Date: 1709118000000, Close: 0.59},&#xD;&#xA;  { Date: 1722078000000, Close: 0.69},&#xD;&#xA;  { Date: 1729545460731, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1648206000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1591441200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>083/095 - Team Magma Hideout</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/083---team-magma-hideout/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/083---team-magma-hideout/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168862.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 0.79 on 03-05-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.39 on 04-07-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1591441200000, Close: 0.49},&#xD;&#xA;  { Date: 1593860400000, Close: 0.39},&#xD;&#xA;  { Date: 1600426800000, Close: 0.49},&#xD;&#xA;  { Date: 1621076400000, Close: 0.59},&#xD;&#xA;  { Date: 1636023600000, Close: 0.49},&#xD;&#xA;  { Date: 1651575600000, Close: 0.79},&#xD;&#xA;  { Date: 1655550000000, Close: 0.69},&#xD;&#xA;  { Date: 1660993200000, Close: 0.79},&#xD;&#xA;  { Date: 1664967600000, Close: 0.69},&#xD;&#xA;  { Date: 1669028400000, Close: 0.59},&#xD;&#xA;  { Date: 1673521200000, Close: 0.69},&#xD;&#xA;  { Date: 1676631600000, Close: 0.49},&#xD;&#xA;  { Date: 1678532400000, Close: 0.59},&#xD;&#xA;  { Date: 1729545460760, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1651575600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1593860400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>084/095 - Team Magma Technical Machine 01</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/084---team-magma-technical-machine-01/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/084---team-magma-technical-machine-01/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168831.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.49 on 27-07-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.49 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.49},&#xD;&#xA;  { Date: 1619089200000, Close: 0.59},&#xD;&#xA;  { Date: 1635937200000, Close: 0.69},&#xD;&#xA;  { Date: 1648206000000, Close: 0.99},&#xD;&#xA;  { Date: 1664622000000, Close: 1.49},&#xD;&#xA;  { Date: 1669114800000, Close: 1.19},&#xD;&#xA;  { Date: 1669201200000, Close: 1.29},&#xD;&#xA;  { Date: 1673262000000, Close: 0.99},&#xD;&#xA;  { Date: 1722078000000, Close: 2.49},&#xD;&#xA;  { Date: 1729545461795, Close: 2.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1722078000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>085/095 - Warp Point</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/085---warp-point/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/085---warp-point/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168866.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 1.79 on 03-10-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.79 on 01-12-2022.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1600426800000, Close: 0.99},&#xD;&#xA;  { Date: 1602673200000, Close: 1.09},&#xD;&#xA;  { Date: 1606647600000, Close: 0.99},&#xD;&#xA;  { Date: 1610708400000, Close: 0.89},&#xD;&#xA;  { Date: 1619089200000, Close: 1.49},&#xD;&#xA;  { Date: 1622286000000, Close: 1.19},&#xD;&#xA;  { Date: 1624186800000, Close: 0.89},&#xD;&#xA;  { Date: 1661943600000, Close: 1.19},&#xD;&#xA;  { Date: 1665831600000, Close: 0.89},&#xD;&#xA;  { Date: 1669892400000, Close: 0.79},&#xD;&#xA;  { Date: 1675335600000, Close: 0.99},&#xD;&#xA;  { Date: 1696330800000, Close: 1.79},&#xD;&#xA;  { Date: 1697108400000, Close: 1.49},&#xD;&#xA;  { Date: 1697886000000, Close: 1.29},&#xD;&#xA;  { Date: 1699354800000, Close: 1.09},&#xD;&#xA;  { Date: 1701946800000, Close: 0.99},&#xD;&#xA;  { Date: 1729545461828, Close: 0.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1696330800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1669892400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>086/095 - Aqua Energy</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/086---aqua-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/086---aqua-energy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168748.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 2.29 on 02-11-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.89 on 14-03-2021.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1600426800000, Close: 1.49},&#xD;&#xA;  { Date: 1601463600000, Close: 1.19},&#xD;&#xA;  { Date: 1602068400000, Close: 0.99},&#xD;&#xA;  { Date: 1608030000000, Close: 1.49},&#xD;&#xA;  { Date: 1612350000000, Close: 1.19},&#xD;&#xA;  { Date: 1615719600000, Close: 0.89},&#xD;&#xA;  { Date: 1617274800000, Close: 1.29},&#xD;&#xA;  { Date: 1621076400000, Close: 1.49},&#xD;&#xA;  { Date: 1621335600000, Close: 1.59},&#xD;&#xA;  { Date: 1624964400000, Close: 1.29},&#xD;&#xA;  { Date: 1626865200000, Close: 0.99},&#xD;&#xA;  { Date: 1632913200000, Close: 0.89},&#xD;&#xA;  { Date: 1648810800000, Close: 1.99},&#xD;&#xA;  { Date: 1669114800000, Close: 1.69},&#xD;&#xA;  { Date: 1673175600000, Close: 1.39},&#xD;&#xA;  { Date: 1698922800000, Close: 2.29},&#xD;&#xA;  { Date: 1699614000000, Close: 1.99},&#xD;&#xA;  { Date: 1702119600000, Close: 1.79},&#xD;&#xA;  { Date: 1706266800000, Close: 1.49},&#xD;&#xA;  { Date: 1729545458822, Close: 1.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1698922800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1615719600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>087/095 - Magma Energy</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/087---magma-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/087---magma-energy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168764.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 3.99 on 01-10-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 0.69 on 18-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1584529200000, Close: 0.69},&#xD;&#xA;  { Date: 1600426800000, Close: 2.99},&#xD;&#xA;  { Date: 1601982000000, Close: 2.39},&#xD;&#xA;  { Date: 1602068400000, Close: 1.99},&#xD;&#xA;  { Date: 1603278000000, Close: 1.79},&#xD;&#xA;  { Date: 1605524400000, Close: 1.49},&#xD;&#xA;  { Date: 1614855600000, Close: 2.09},&#xD;&#xA;  { Date: 1618916400000, Close: 2.49},&#xD;&#xA;  { Date: 1625482800000, Close: 2.19},&#xD;&#xA;  { Date: 1627038000000, Close: 2.49},&#xD;&#xA;  { Date: 1642503600000, Close: 2.19},&#xD;&#xA;  { Date: 1648206000000, Close: 1.89},&#xD;&#xA;  { Date: 1649502000000, Close: 1.49},&#xD;&#xA;  { Date: 1650798000000, Close: 1.19},&#xD;&#xA;  { Date: 1652007600000, Close: 0.89},&#xD;&#xA;  { Date: 1664622000000, Close: 3.99},&#xD;&#xA;  { Date: 1668596400000, Close: 3.39},&#xD;&#xA;  { Date: 1672570800000, Close: 2.79},&#xD;&#xA;  { Date: 1672657200000, Close: 2.99},&#xD;&#xA;  { Date: 1698922800000, Close: 3.99},&#xD;&#xA;  { Date: 1729545459100, Close: 3.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1664622000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584529200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>088/095 - Double Rainbow Energy</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/088---double-rainbow-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/088---double-rainbow-energy/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168758.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 13.99 on 09-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 5.99 on 29-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1580295600000, Close: 5.99},&#xD;&#xA;  { Date: 1586602800000, Close: 6.99},&#xD;&#xA;  { Date: 1598698800000, Close: 11.99},&#xD;&#xA;  { Date: 1600340400000, Close: 10.99},&#xD;&#xA;  { Date: 1601031600000, Close: 9.99},&#xD;&#xA;  { Date: 1602586800000, Close: 8.99},&#xD;&#xA;  { Date: 1604228400000, Close: 8.39},&#xD;&#xA;  { Date: 1604401200000, Close: 7.49},&#xD;&#xA;  { Date: 1605956400000, Close: 6.99},&#xD;&#xA;  { Date: 1607684400000, Close: 6.39},&#xD;&#xA;  { Date: 1614855600000, Close: 7.99},&#xD;&#xA;  { Date: 1615374000000, Close: 8.99},&#xD;&#xA;  { Date: 1615546800000, Close: 9.99},&#xD;&#xA;  { Date: 1617966000000, Close: 13.99},&#xD;&#xA;  { Date: 1619953200000, Close: 12.49},&#xD;&#xA;  { Date: 1621422000000, Close: 10.99},&#xD;&#xA;  { Date: 1622977200000, Close: 9.79},&#xD;&#xA;  { Date: 1623150000000, Close: 8.99},&#xD;&#xA;  { Date: 1625396400000, Close: 8.39},&#xD;&#xA;  { Date: 1631962800000, Close: 8.99},&#xD;&#xA;  { Date: 1637233200000, Close: 8.39},&#xD;&#xA;  { Date: 1642158000000, Close: 7.79},&#xD;&#xA;  { Date: 1647601200000, Close: 7.49},&#xD;&#xA;  { Date: 1648292400000, Close: 7.29},&#xD;&#xA;  { Date: 1648638000000, Close: 7.19},&#xD;&#xA;  { Date: 1649934000000, Close: 6.89},&#xD;&#xA;  { Date: 1657796400000, Close: 7.49},&#xD;&#xA;  { Date: 1677322800000, Close: 6.79},&#xD;&#xA;  { Date: 1677927600000, Close: 5.99},&#xD;&#xA;  { Date: 1691233200000, Close: 7.99},&#xD;&#xA;  { Date: 1692183600000, Close: 6.99},&#xD;&#xA;  { Date: 1706439600000, Close: 7.99},&#xD;&#xA;  { Date: 1706698800000, Close: 8.09},&#xD;&#xA;  { Date: 1713783600000, Close: 7.39},&#xD;&#xA;  { Date: 1717930800000, Close: 6.79},&#xD;&#xA;  { Date: 1729545458971, Close: 6.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1617966000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1580295600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>089/095 - Blaziken ex</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/089---blaziken-ex/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/089---blaziken-ex/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168751.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 179.99 on 17-06-2022.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 32.99 on 02-02-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576753200000, Close: 34.99},&#xD;&#xA;  { Date: 1580641200000, Close: 32.99},&#xD;&#xA;  { Date: 1588935600000, Close: 49.99},&#xD;&#xA;  { Date: 1605783600000, Close: 99.99},&#xD;&#xA;  { Date: 1606906800000, Close: 89.99},&#xD;&#xA;  { Date: 1607425200000, Close: 99.99},&#xD;&#xA;  { Date: 1608202800000, Close: 89.99},&#xD;&#xA;  { Date: 1655463600000, Close: 179.99},&#xD;&#xA;  { Date: 1657364400000, Close: 174.99},&#xD;&#xA;  { Date: 1670670000000, Close: 159.99},&#xD;&#xA;  { Date: 1671102000000, Close: 161.09},&#xD;&#xA;  { Date: 1675162800000, Close: 152.99},&#xD;&#xA;  { Date: 1729545458862, Close: 152.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1655463600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1580641200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>090/095 - Cradily ex</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/090---cradily-ex/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/090---cradily-ex/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168755.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 74.99 on 04-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 27.99 on 05-05-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1588676400000, Close: 27.99},&#xD;&#xA;  { Date: 1601636400000, Close: 44.99},&#xD;&#xA;  { Date: 1604055600000, Close: 54.99},&#xD;&#xA;  { Date: 1605956400000, Close: 59.99},&#xD;&#xA;  { Date: 1606906800000, Close: 54.99},&#xD;&#xA;  { Date: 1606993200000, Close: 49.99},&#xD;&#xA;  { Date: 1607425200000, Close: 59.99},&#xD;&#xA;  { Date: 1612177200000, Close: 55.99},&#xD;&#xA;  { Date: 1616670000000, Close: 64.99},&#xD;&#xA;  { Date: 1617793200000, Close: 69.99},&#xD;&#xA;  { Date: 1620126000000, Close: 74.99},&#xD;&#xA;  { Date: 1624014000000, Close: 70.99},&#xD;&#xA;  { Date: 1627815600000, Close: 66.99},&#xD;&#xA;  { Date: 1630407600000, Close: 62.99},&#xD;&#xA;  { Date: 1633086000000, Close: 58.99},&#xD;&#xA;  { Date: 1633777200000, Close: 49.99},&#xD;&#xA;  { Date: 1636369200000, Close: 46.99},&#xD;&#xA;  { Date: 1636714800000, Close: 44.99},&#xD;&#xA;  { Date: 1641034800000, Close: 41.99},&#xD;&#xA;  { Date: 1645873200000, Close: 47.19},&#xD;&#xA;  { Date: 1651921200000, Close: 43.99},&#xD;&#xA;  { Date: 1711796400000, Close: 59.99},&#xD;&#xA;  { Date: 1713265200000, Close: 54.99},&#xD;&#xA;  { Date: 1729545458920, Close: 54.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1620126000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1588676400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>091/095 - Entei ex</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/091---entei-ex/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/091---entei-ex/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168760.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 224.99 on 11-06-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 21.99 on 13-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 21.99},&#xD;&#xA;  { Date: 1600599600000, Close: 79.99},&#xD;&#xA;  { Date: 1602586800000, Close: 89.99},&#xD;&#xA;  { Date: 1604055600000, Close: 109.99},&#xD;&#xA;  { Date: 1615028400000, Close: 179.99},&#xD;&#xA;  { Date: 1623409200000, Close: 224.99},&#xD;&#xA;  { Date: 1627383600000, Close: 209.99},&#xD;&#xA;  { Date: 1631444400000, Close: 198.99},&#xD;&#xA;  { Date: 1635505200000, Close: 188.99},&#xD;&#xA;  { Date: 1637319600000, Close: 178.99},&#xD;&#xA;  { Date: 1637751600000, Close: 149.99},&#xD;&#xA;  { Date: 1638270000000, Close: 178.99},&#xD;&#xA;  { Date: 1642330800000, Close: 169.99},&#xD;&#xA;  { Date: 1646996400000, Close: 174.59},&#xD;&#xA;  { Date: 1650970800000, Close: 164.99},&#xD;&#xA;  { Date: 1651143600000, Close: 173.09},&#xD;&#xA;  { Date: 1678014000000, Close: 169.99},&#xD;&#xA;  { Date: 1711796400000, Close: 179.99},&#xD;&#xA;  { Date: 1729545459015, Close: 179.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1623409200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1576234800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>092/095 - Raikou ex</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/092---raikou-ex/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/092---raikou-ex/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168773.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 180.79 on 05-03-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 34.99 on 23-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577530800000, Close: 39.99},&#xD;&#xA;  { Date: 1579777200000, Close: 34.99},&#xD;&#xA;  { Date: 1600599600000, Close: 79.99},&#xD;&#xA;  { Date: 1602586800000, Close: 89.99},&#xD;&#xA;  { Date: 1606561200000, Close: 149.99},&#xD;&#xA;  { Date: 1606993200000, Close: 139.99},&#xD;&#xA;  { Date: 1612177200000, Close: 131.99},&#xD;&#xA;  { Date: 1614337200000, Close: 119.99},&#xD;&#xA;  { Date: 1621508400000, Close: 174.99},&#xD;&#xA;  { Date: 1626865200000, Close: 165.99},&#xD;&#xA;  { Date: 1630926000000, Close: 156.99},&#xD;&#xA;  { Date: 1634900400000, Close: 148.99},&#xD;&#xA;  { Date: 1634986800000, Close: 139.99},&#xD;&#xA;  { Date: 1637751600000, Close: 124.99},&#xD;&#xA;  { Date: 1643367600000, Close: 139.99},&#xD;&#xA;  { Date: 1655463600000, Close: 174.99},&#xD;&#xA;  { Date: 1678014000000, Close: 180.79},&#xD;&#xA;  { Date: 1681902000000, Close: 169.99},&#xD;&#xA;  { Date: 1706180400000, Close: 159.99},&#xD;&#xA;  { Date: 1729545459276, Close: 159.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1678014000000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1579777200000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>093/095 - Sceptile ex</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/093---sceptile-ex/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/093---sceptile-ex/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168785.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 199.99 on 06-05-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 60.99 on 14-03-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1580295600000, Close: 64.99},&#xD;&#xA;  { Date: 1584183600000, Close: 60.99},&#xD;&#xA;  { Date: 1596193200000, Close: 124.99},&#xD;&#xA;  { Date: 1603969200000, Close: 139.99},&#xD;&#xA;  { Date: 1614337200000, Close: 174.99},&#xD;&#xA;  { Date: 1620298800000, Close: 199.99},&#xD;&#xA;  { Date: 1624186800000, Close: 188.99},&#xD;&#xA;  { Date: 1630234800000, Close: 178.99},&#xD;&#xA;  { Date: 1634209200000, Close: 169.99},&#xD;&#xA;  { Date: 1638270000000, Close: 160.99},&#xD;&#xA;  { Date: 1638356400000, Close: 149.99},&#xD;&#xA;  { Date: 1642330800000, Close: 141.99},&#xD;&#xA;  { Date: 1642590000000, Close: 129.99},&#xD;&#xA;  { Date: 1650366000000, Close: 122.99},&#xD;&#xA;  { Date: 1674298800000, Close: 139.99},&#xD;&#xA;  { Date: 1700305200000, Close: 154.99},&#xD;&#xA;  { Date: 1709809200000, Close: 149.99},&#xD;&#xA;  { Date: 1725706800000, Close: 158.49},&#xD;&#xA;  { Date: 1726138800000, Close: 166.99},&#xD;&#xA;  { Date: 1729545459305, Close: 166.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1620298800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1584183600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>094/095 - Suicune ex</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/094---suicune-ex/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/094---suicune-ex/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168789.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 264.99 on 30-03-2024.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 51.99 on 18-02-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1576234800000, Close: 54.99},&#xD;&#xA;  { Date: 1582023600000, Close: 51.99},&#xD;&#xA;  { Date: 1584702000000, Close: 54.99},&#xD;&#xA;  { Date: 1588762800000, Close: 51.99},&#xD;&#xA;  { Date: 1589540400000, Close: 54.99},&#xD;&#xA;  { Date: 1590404400000, Close: 59.99},&#xD;&#xA;  { Date: 1614337200000, Close: 174.99},&#xD;&#xA;  { Date: 1639652400000, Close: 249.99},&#xD;&#xA;  { Date: 1643540400000, Close: 234.99},&#xD;&#xA;  { Date: 1711796400000, Close: 264.99},&#xD;&#xA;  { Date: 1729545459409, Close: 264.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1711796400000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1582023600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>095/095 - Swampert ex</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/095---swampert-ex/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/095---swampert-ex/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168790.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 114.99 on 22-03-2023.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 46.99 on 15-04-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1586948400000, Close: 46.99},&#xD;&#xA;  { Date: 1587034800000, Close: 49.99},&#xD;&#xA;  { Date: 1596279600000, Close: 69.99},&#xD;&#xA;  { Date: 1600599600000, Close: 89.99},&#xD;&#xA;  { Date: 1600772400000, Close: 99.99},&#xD;&#xA;  { Date: 1606474800000, Close: 89.99},&#xD;&#xA;  { Date: 1606561200000, Close: 79.99},&#xD;&#xA;  { Date: 1606734000000, Close: 89.99},&#xD;&#xA;  { Date: 1606820400000, Close: 99.99},&#xD;&#xA;  { Date: 1610881200000, Close: 93.99},&#xD;&#xA;  { Date: 1614855600000, Close: 88.99},&#xD;&#xA;  { Date: 1622286000000, Close: 94.99},&#xD;&#xA;  { Date: 1627470000000, Close: 99.99},&#xD;&#xA;  { Date: 1631358000000, Close: 93.99},&#xD;&#xA;  { Date: 1648206000000, Close: 102.79},&#xD;&#xA;  { Date: 1648551600000, Close: 103.59},&#xD;&#xA;  { Date: 1679482800000, Close: 114.99},&#xD;&#xA;  { Date: 1691751600000, Close: 109.99},&#xD;&#xA;  { Date: 1695639600000, Close: 103.99},&#xD;&#xA;  { Date: 1729545459432, Close: 103.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1679482800000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1586948400000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>096/095 - Absol</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/096---absol/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/096---absol/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168747.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 159.99 on 24-09-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 24.99 on 28-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1577530800000, Close: 24.99},&#xD;&#xA;  { Date: 1581159600000, Close: 25.99},&#xD;&#xA;  { Date: 1582282800000, Close: 26.99},&#xD;&#xA;  { Date: 1586257200000, Close: 25.49},&#xD;&#xA;  { Date: 1587207600000, Close: 26.99},&#xD;&#xA;  { Date: 1588417200000, Close: 24.99},&#xD;&#xA;  { Date: 1600254000000, Close: 54.99},&#xD;&#xA;  { Date: 1621422000000, Close: 149.99},&#xD;&#xA;  { Date: 1632481200000, Close: 159.99},&#xD;&#xA;  { Date: 1636369200000, Close: 150.99},&#xD;&#xA;  { Date: 1640343600000, Close: 142.99},&#xD;&#xA;  { Date: 1644404400000, Close: 134.99},&#xD;&#xA;  { Date: 1644490800000, Close: 129.99},&#xD;&#xA;  { Date: 1645959600000, Close: 139.99},&#xD;&#xA;  { Date: 1649847600000, Close: 148.29},&#xD;&#xA;  { Date: 1655550000000, Close: 139.99},&#xD;&#xA;  { Date: 1658314800000, Close: 114.99},&#xD;&#xA;  { Date: 1660993200000, Close: 124.99},&#xD;&#xA;  { Date: 1664967600000, Close: 129.99},&#xD;&#xA;  { Date: 1669028400000, Close: 122.99},&#xD;&#xA;  { Date: 1669114800000, Close: 129.99},&#xD;&#xA;  { Date: 1673175600000, Close: 122.99},&#xD;&#xA;  { Date: 1673262000000, Close: 124.49},&#xD;&#xA;  { Date: 1703242800000, Close: 129.99},&#xD;&#xA;  { Date: 1707217200000, Close: 122.99},&#xD;&#xA;  { Date: 1707476400000, Close: 126.99},&#xD;&#xA;  { Date: 1708426800000, Close: 119.99},&#xD;&#xA;  { Date: 1708772400000, Close: 126.99},&#xD;&#xA;  { Date: 1711710000000, Close: 129.99},&#xD;&#xA;  { Date: 1713265200000, Close: 130.99},&#xD;&#xA;  { Date: 1714129200000, Close: 129.99},&#xD;&#xA;  { Date: 1715079600000, Close: 130.99},&#xD;&#xA;  { Date: 1729545458791, Close: 130.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1632481200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1577530800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>097/095 - Jirachi</title>
      <link>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/097---jirachi/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/05-ex-series/04-ex-team-magma-vs-team-aqua/097---jirachi/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/168762.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 104.99 on 24-09-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 13.99 on 09-01-2020.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    })&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1578567600000, Close: 13.99},&#xD;&#xA;  { Date: 1601982000000, Close: 39.99},&#xD;&#xA;  { Date: 1608116400000, Close: 67.99},&#xD;&#xA;  { Date: 1608202800000, Close: 68.99},&#xD;&#xA;  { Date: 1632481200000, Close: 104.99},&#xD;&#xA;  { Date: 1636369200000, Close: 98.99},&#xD;&#xA;  { Date: 1640343600000, Close: 93.99},&#xD;&#xA;  { Date: 1644404400000, Close: 88.99},&#xD;&#xA;  { Date: 1648465200000, Close: 83.99},&#xD;&#xA;  { Date: 1651057200000, Close: 78.99},&#xD;&#xA;  { Date: 1651316400000, Close: 71.99},&#xD;&#xA;  { Date: 1653044400000, Close: 67.99},&#xD;&#xA;  { Date: 1654772400000, Close: 63.99},&#xD;&#xA;  { Date: 1654858800000, Close: 57.29},&#xD;&#xA;  { Date: 1655895600000, Close: 51.99},&#xD;&#xA;  { Date: 1657623600000, Close: 48.99},&#xD;&#xA;  { Date: 1699009200000, Close: 59.99},&#xD;&#xA;  { Date: 1729545459072, Close: 59.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1079348400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1632481200000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1578567600000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
