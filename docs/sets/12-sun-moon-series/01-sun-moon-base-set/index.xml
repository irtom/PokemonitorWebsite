<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sun &amp; Moon on Pokémonitor</title>
    <link>https://irtom.github.io/website/docs/sets/12-sun-moon-series/01-sun-moon-base-set/</link>
    <description>Recent content in Sun &amp; Moon on Pokémonitor</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://irtom.github.io/website/docs/sets/12-sun-moon-series/01-sun-moon-base-set/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>000/000 - Sun &amp; Moon Booster Pack (Pokemon)</title>
      <link>https://irtom.github.io/website/docs/sets/12-sun-moon-series/01-sun-moon-base-set/000---sun--moon-booster-pack-pokemon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/sets/12-sun-moon-series/01-sun-moon-base-set/000---sun--moon-booster-pack-pokemon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Image&#34; src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1108863.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Highest price was 6.99 on 16-04-2021.&lt;/p&gt;&#xA;&lt;p&gt;Lowest price was 1.99 on 01-12-2019.&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  //clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  //calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.SmoothedXLineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;  { Date: 1575154800000, Close: 1.99},&#xD;&#xA;  { Date: 1575586800000, Close: 2.69},&#xD;&#xA;  { Date: 1575932400000, Close: 2.29},&#xD;&#xA;  { Date: 1577314800000, Close: 2.69},&#xD;&#xA;  { Date: 1577833200000, Close: 2.79},&#xD;&#xA;  { Date: 1578351600000, Close: 2.49},&#xD;&#xA;  { Date: 1578956400000, Close: 2.79},&#xD;&#xA;  { Date: 1581375600000, Close: 2.59},&#xD;&#xA;  { Date: 1581980400000, Close: 2.79},&#xD;&#xA;  { Date: 1583276400000, Close: 2.49},&#xD;&#xA;  { Date: 1586214000000, Close: 2.69},&#xD;&#xA;  { Date: 1596150000000, Close: 2.79},&#xD;&#xA;  { Date: 1607382000000, Close: 3.49},&#xD;&#xA;  { Date: 1612911600000, Close: 3.79},&#xD;&#xA;  { Date: 1613516400000, Close: 3.99},&#xD;&#xA;  { Date: 1614380400000, Close: 4.49},&#xD;&#xA;  { Date: 1615849200000, Close: 4.79},&#xD;&#xA;  { Date: 1617058800000, Close: 4.99},&#xD;&#xA;  { Date: 1617663600000, Close: 5.99},&#xD;&#xA;  { Date: 1618527600000, Close: 6.99},&#xD;&#xA;  { Date: 1625871600000, Close: 4.99},&#xD;&#xA;  { Date: 1628290800000, Close: 4.49},&#xD;&#xA;  { Date: 1634252400000, Close: 4.99},&#xD;&#xA;  { Date: 1639436400000, Close: 4.49},&#xD;&#xA;  { Date: 1639695600000, Close: 4.99},&#xD;&#xA;  { Date: 1645743600000, Close: 4.49},&#xD;&#xA;  { Date: 1650927600000, Close: 4.99},&#xD;&#xA;  { Date: 1658444400000, Close: 4.49},&#xD;&#xA;  { Date: 1674169200000, Close: 5.99},&#xD;&#xA;  { Date: 1687474800000, Close: 6.95},&#xD;&#xA;  { Date: 1707174000000, Close: 5.99},&#xD;&#xA;  { Date: 1708383600000, Close: 6.95},&#xD;&#xA;  { Date: 1708383600000, Close: 6.95},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;makeEvent(1486076400000, &#34;R&#34;, am5.color(0x0000ff), &#34;Release&#34;)&#xD;&#xA;makeEvent(1618527600000, &#34;U&#34;, am5.color(0xff0000), &#34;Highest price&#34;)&#xD;&#xA;makeEvent(1575154800000, &#34;L&#34;, am5.color(0x00ff00), &#34;Lowest price&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
