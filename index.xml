<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Goldydocs on Pokémonitor</title>
    <link>https://irtom.github.io/website/</link>
    <description>Recent content in Goldydocs on Pokémonitor</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://irtom.github.io/website/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>https://irtom.github.io/website/docs/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/overview/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;The Overview is where your users find out about your project. Depending on the&#xA;size of your docset, you can have a separate overview page (like this one) or&#xA;put your overview contents in the Documentation landing page (like in the Docsy&#xA;User Guide).&lt;/p&gt;&#xA;&lt;p&gt;Try answering these questions for your user in this page:&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-it&#34;&gt;What is it?&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#what-is-it&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;Introduce your project, including what it does or lets you do, why you would use&#xA;it, and its primary goal (and how it achieves it). This should be similar to&#xA;your README description, though you can go into a little more detail here if you&#xA;want.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Abra</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/043---abra/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/043---abra/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148825.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.39},&#xD;&#xA;  { Date: 1602457200000, Close: 0.39},&#xD;&#xA;  { Date: 1608505200000, Close: 0.59},&#xD;&#xA;  { Date: 1609110000000, Close: 1.49},&#xD;&#xA;  { Date: 1609714800000, Close: 1.19},&#xD;&#xA;  { Date: 1610233200000, Close: 1.19},&#xD;&#xA;  { Date: 1610924400000, Close: 1.19},&#xD;&#xA;  { Date: 1611529200000, Close: 1.19},&#xD;&#xA;  { Date: 1612134000000, Close: 1.19},&#xD;&#xA;  { Date: 1612738800000, Close: 1.09},&#xD;&#xA;  { Date: 1613343600000, Close: 1.09},&#xD;&#xA;  { Date: 1613948400000, Close: 1.09},&#xD;&#xA;  { Date: 1614553200000, Close: 1.09},&#xD;&#xA;  { Date: 1615158000000, Close: 1.09},&#xD;&#xA;  { Date: 1615762800000, Close: 1.09},&#xD;&#xA;  { Date: 1616367600000, Close: 1.09},&#xD;&#xA;  { Date: 1616972400000, Close: 1.09},&#xD;&#xA;  { Date: 1617577200000, Close: 1.09},&#xD;&#xA;  { Date: 1618182000000, Close: 1.09},&#xD;&#xA;  { Date: 1618786800000, Close: 0.89},&#xD;&#xA;  { Date: 1619391600000, Close: 0.89},&#xD;&#xA;  { Date: 1619996400000, Close: 0.89},&#xD;&#xA;  { Date: 1620601200000, Close: 0.89},&#xD;&#xA;  { Date: 1621206000000, Close: 0.79},&#xD;&#xA;  { Date: 1621810800000, Close: 0.79},&#xD;&#xA;  { Date: 1622415600000, Close: 0.79},&#xD;&#xA;  { Date: 1623020400000, Close: 0.79},&#xD;&#xA;  { Date: 1623625200000, Close: 0.79},&#xD;&#xA;  { Date: 1624230000000, Close: 0.79},&#xD;&#xA;  { Date: 1624834800000, Close: 0.79},&#xD;&#xA;  { Date: 1625439600000, Close: 0.79},&#xD;&#xA;  { Date: 1626044400000, Close: 0.79},&#xD;&#xA;  { Date: 1626649200000, Close: 0.69},&#xD;&#xA;  { Date: 1627254000000, Close: 0.69},&#xD;&#xA;  { Date: 1627858800000, Close: 0.69},&#xD;&#xA;  { Date: 1628463600000, Close: 0.69},&#xD;&#xA;  { Date: 1629068400000, Close: 0.69},&#xD;&#xA;  { Date: 1629673200000, Close: 0.69},&#xD;&#xA;  { Date: 1630278000000, Close: 0.69},&#xD;&#xA;  { Date: 1630882800000, Close: 0.59},&#xD;&#xA;  { Date: 1631487600000, Close: 0.59},&#xD;&#xA;  { Date: 1632092400000, Close: 0.59},&#xD;&#xA;  { Date: 1632697200000, Close: 0.59},&#xD;&#xA;  { Date: 1633302000000, Close: 0.59},&#xD;&#xA;  { Date: 1633906800000, Close: 0.59},&#xD;&#xA;  { Date: 1634511600000, Close: 0.59},&#xD;&#xA;  { Date: 1635116400000, Close: 0.59},&#xD;&#xA;  { Date: 1635721200000, Close: 0.59},&#xD;&#xA;  { Date: 1636326000000, Close: 0.59},&#xD;&#xA;  { Date: 1636930800000, Close: 0.59},&#xD;&#xA;  { Date: 1637535600000, Close: 0.59},&#xD;&#xA;  { Date: 1638140400000, Close: 0.59},&#xD;&#xA;  { Date: 1638745200000, Close: 0.59},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.49},&#xD;&#xA;  { Date: 1640559600000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1641769200000, Close: 0.49},&#xD;&#xA;  { Date: 1642374000000, Close: 0.49},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1644188400000, Close: 0.49},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1645398000000, Close: 0.49},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.49},&#xD;&#xA;  { Date: 1649631600000, Close: 0.49},&#xD;&#xA;  { Date: 1650236400000, Close: 0.49},&#xD;&#xA;  { Date: 1650841200000, Close: 0.49},&#xD;&#xA;  { Date: 1651446000000, Close: 0.49},&#xD;&#xA;  { Date: 1652050800000, Close: 0.49},&#xD;&#xA;  { Date: 1652655600000, Close: 0.49},&#xD;&#xA;  { Date: 1653260400000, Close: 0.49},&#xD;&#xA;  { Date: 1653865200000, Close: 0.49},&#xD;&#xA;  { Date: 1654470000000, Close: 0.49},&#xD;&#xA;  { Date: 1655074800000, Close: 0.39},&#xD;&#xA;  { Date: 1655679600000, Close: 0.39},&#xD;&#xA;  { Date: 1656284400000, Close: 0.39},&#xD;&#xA;  { Date: 1656889200000, Close: 0.39},&#xD;&#xA;  { Date: 1657494000000, Close: 0.39},&#xD;&#xA;  { Date: 1658098800000, Close: 0.39},&#xD;&#xA;  { Date: 1658703600000, Close: 0.39},&#xD;&#xA;  { Date: 1662937200000, Close: 0.39},&#xD;&#xA;  { Date: 1663542000000, Close: 0.39},&#xD;&#xA;  { Date: 1664146800000, Close: 0.39},&#xD;&#xA;  { Date: 1664751600000, Close: 0.39},&#xD;&#xA;  { Date: 1665356400000, Close: 0.39},&#xD;&#xA;  { Date: 1665961200000, Close: 0.39},&#xD;&#xA;  { Date: 1666566000000, Close: 0.39},&#xD;&#xA;  { Date: 1667170800000, Close: 0.39},&#xD;&#xA;  { Date: 1667775600000, Close: 0.39},&#xD;&#xA;  { Date: 1668380400000, Close: 0.39},&#xD;&#xA;  { Date: 1668985200000, Close: 0.39},&#xD;&#xA;  { Date: 1669590000000, Close: 0.39},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.39},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1682895600000, Close: 0.49},&#xD;&#xA;  { Date: 1683500400000, Close: 0.49},&#xD;&#xA;  { Date: 1684105200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1685314800000, Close: 0.59},&#xD;&#xA;  { Date: 1685919600000, Close: 0.59},&#xD;&#xA;  { Date: 1686524400000, Close: 0.59},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1700434800000, Close: 0.39},&#xD;&#xA;  { Date: 1701039600000, Close: 0.39},&#xD;&#xA;  { Date: 1701644400000, Close: 0.39},&#xD;&#xA;  { Date: 1702249200000, Close: 0.39},&#xD;&#xA;  { Date: 1702854000000, Close: 0.39},&#xD;&#xA;  { Date: 1703458800000, Close: 0.39},&#xD;&#xA;  { Date: 1704063600000, Close: 0.39},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Alakazam</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/001---alakazam/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/001---alakazam/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148829.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577228400000, Close: 17.99},&#xD;&#xA;  { Date: 1578524400000, Close: 17.99},&#xD;&#xA;  { Date: 1579129200000, Close: 19.99},&#xD;&#xA;  { Date: 1580857200000, Close: 19.99},&#xD;&#xA;  { Date: 1582066800000, Close: 20.99},&#xD;&#xA;  { Date: 1583967600000, Close: 19.99},&#xD;&#xA;  { Date: 1587423600000, Close: 20.99},&#xD;&#xA;  { Date: 1588633200000, Close: 22.99},&#xD;&#xA;  { Date: 1590706800000, Close: 25.99},&#xD;&#xA;  { Date: 1591311600000, Close: 26.99},&#xD;&#xA;  { Date: 1591916400000, Close: 27.99},&#xD;&#xA;  { Date: 1592434800000, Close: 27.49},&#xD;&#xA;  { Date: 1592521200000, Close: 29.99},&#xD;&#xA;  { Date: 1593558000000, Close: 31.99},&#xD;&#xA;  { Date: 1594854000000, Close: 31.99},&#xD;&#xA;  { Date: 1596063600000, Close: 31.99},&#xD;&#xA;  { Date: 1596841200000, Close: 31.99},&#xD;&#xA;  { Date: 1597100400000, Close: 34.99},&#xD;&#xA;  { Date: 1597446000000, Close: 35.99},&#xD;&#xA;  { Date: 1597964400000, Close: 37.99},&#xD;&#xA;  { Date: 1598310000000, Close: 37.99},&#xD;&#xA;  { Date: 1599001200000, Close: 39.99},&#xD;&#xA;  { Date: 1599692400000, Close: 34.99},&#xD;&#xA;  { Date: 1600988400000, Close: 32.99},&#xD;&#xA;  { Date: 1602025200000, Close: 33.99},&#xD;&#xA;  { Date: 1602111600000, Close: 34.99},&#xD;&#xA;  { Date: 1605135600000, Close: 99.99},&#xD;&#xA;  { Date: 1606604400000, Close: 124.99},&#xD;&#xA;  { Date: 1606863600000, Close: 99.99},&#xD;&#xA;  { Date: 1606950000000, Close: 89.99},&#xD;&#xA;  { Date: 1607382000000, Close: 124.99},&#xD;&#xA;  { Date: 1608159600000, Close: 109.99},&#xD;&#xA;  { Date: 1608332400000, Close: 84.95},&#xD;&#xA;  { Date: 1608591600000, Close: 79.99},&#xD;&#xA;  { Date: 1609196400000, Close: 74.99},&#xD;&#xA;  { Date: 1609282800000, Close: 69.99},&#xD;&#xA;  { Date: 1615330800000, Close: 72.99},&#xD;&#xA;  { Date: 1617231600000, Close: 69.99},&#xD;&#xA;  { Date: 1618614000000, Close: 59.99},&#xD;&#xA;  { Date: 1619823600000, Close: 57.99},&#xD;&#xA;  { Date: 1621292400000, Close: 49.99},&#xD;&#xA;  { Date: 1621551600000, Close: 44.99},&#xD;&#xA;  { Date: 1623798000000, Close: 45.99},&#xD;&#xA;  { Date: 1623970800000, Close: 42.99},&#xD;&#xA;  { Date: 1625612400000, Close: 39.99},&#xD;&#xA;  { Date: 1627340400000, Close: 34.99},&#xD;&#xA;  { Date: 1632438000000, Close: 36.99},&#xD;&#xA;  { Date: 1632870000000, Close: 36.99},&#xD;&#xA;  { Date: 1634943600000, Close: 37.99},&#xD;&#xA;  { Date: 1639090800000, Close: 41.99},&#xD;&#xA;  { Date: 1641510000000, Close: 44.99},&#xD;&#xA;  { Date: 1642633200000, Close: 47.99},&#xD;&#xA;  { Date: 1646780400000, Close: 44.99},&#xD;&#xA;  { Date: 1647644400000, Close: 42.99},&#xD;&#xA;  { Date: 1648594800000, Close: 36.99},&#xD;&#xA;  { Date: 1649199600000, Close: 35.59},&#xD;&#xA;  { Date: 1649718000000, Close: 39.99},&#xD;&#xA;  { Date: 1652396400000, Close: 41.99},&#xD;&#xA;  { Date: 1653346800000, Close: 44.99},&#xD;&#xA;  { Date: 1655247600000, Close: 41.99},&#xD;&#xA;  { Date: 1657062000000, Close: 38.99},&#xD;&#xA;  { Date: 1657839600000, Close: 37.99},&#xD;&#xA;  { Date: 1661900400000, Close: 39.99},&#xD;&#xA;  { Date: 1664492400000, Close: 39.99},&#xD;&#xA;  { Date: 1665183600000, Close: 36.39},&#xD;&#xA;  { Date: 1669676400000, Close: 40.79},&#xD;&#xA;  { Date: 1670022000000, Close: 40.69},&#xD;&#xA;  { Date: 1671231600000, Close: 42.39},&#xD;&#xA;  { Date: 1671490800000, Close: 39.99},&#xD;&#xA;  { Date: 1672441200000, Close: 41.99},&#xD;&#xA;  { Date: 1674255600000, Close: 38.09},&#xD;&#xA;  { Date: 1675206000000, Close: 39.99},&#xD;&#xA;  { Date: 1675292400000, Close: 36.39},&#xD;&#xA;  { Date: 1684796400000, Close: 45.29},&#xD;&#xA;  { Date: 1685574000000, Close: 44.79},&#xD;&#xA;  { Date: 1686092400000, Close: 47.99},&#xD;&#xA;  { Date: 1686870000000, Close: 47.99},&#xD;&#xA;  { Date: 1689116400000, Close: 43.29},&#xD;&#xA;  { Date: 1699570800000, Close: 41.19},&#xD;&#xA;  { Date: 1701903600000, Close: 41.99},&#xD;&#xA;  { Date: 1703286000000, Close: 43.19},&#xD;&#xA;  { Date: 1704495600000, Close: 39.99},&#xD;&#xA;  { Date: 1706396400000, Close: 44.99},&#xD;&#xA;  { Date: 1708642800000, Close: 46.49},&#xD;&#xA;  { Date: 1709161200000, Close: 46.79},&#xD;&#xA;  { Date: 1709593200000, Close: 47.09},&#xD;&#xA;  { Date: 1710025200000, Close: 47.19},&#xD;&#xA;  { Date: 1710457200000, Close: 47.89},&#xD;&#xA;  { Date: 1724886000000, Close: 44.39},&#xD;&#xA;  { Date: 1725663600000, Close: 43.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Arcanine</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/023---arcanine/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/023---arcanine/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148832.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.49},&#xD;&#xA;  { Date: 1593385200000, Close: 3.49},&#xD;&#xA;  { Date: 1593817200000, Close: 3.49},&#xD;&#xA;  { Date: 1600383600000, Close: 2.49},&#xD;&#xA;  { Date: 1601247600000, Close: 2.29},&#xD;&#xA;  { Date: 1601852400000, Close: 2.39},&#xD;&#xA;  { Date: 1602457200000, Close: 2.39},&#xD;&#xA;  { Date: 1604876400000, Close: 3.49},&#xD;&#xA;  { Date: 1605481200000, Close: 3.99},&#xD;&#xA;  { Date: 1606086000000, Close: 3.99},&#xD;&#xA;  { Date: 1606690800000, Close: 3.99},&#xD;&#xA;  { Date: 1607295600000, Close: 3.99},&#xD;&#xA;  { Date: 1607900400000, Close: 3.49},&#xD;&#xA;  { Date: 1608505200000, Close: 3.49},&#xD;&#xA;  { Date: 1609110000000, Close: 3.49},&#xD;&#xA;  { Date: 1609714800000, Close: 2.99},&#xD;&#xA;  { Date: 1610233200000, Close: 2.99},&#xD;&#xA;  { Date: 1610924400000, Close: 2.99},&#xD;&#xA;  { Date: 1611529200000, Close: 2.99},&#xD;&#xA;  { Date: 1612134000000, Close: 2.99},&#xD;&#xA;  { Date: 1612738800000, Close: 2.99},&#xD;&#xA;  { Date: 1613343600000, Close: 2.99},&#xD;&#xA;  { Date: 1614553200000, Close: 2.85},&#xD;&#xA;  { Date: 1615762800000, Close: 2.99},&#xD;&#xA;  { Date: 1616367600000, Close: 2.99},&#xD;&#xA;  { Date: 1616972400000, Close: 2.99},&#xD;&#xA;  { Date: 1619391600000, Close: 2.79},&#xD;&#xA;  { Date: 1619996400000, Close: 2.79},&#xD;&#xA;  { Date: 1620601200000, Close: 2.49},&#xD;&#xA;  { Date: 1621206000000, Close: 2.29},&#xD;&#xA;  { Date: 1621810800000, Close: 2.45},&#xD;&#xA;  { Date: 1622415600000, Close: 2.45},&#xD;&#xA;  { Date: 1623020400000, Close: 2.39},&#xD;&#xA;  { Date: 1623625200000, Close: 2.39},&#xD;&#xA;  { Date: 1624230000000, Close: 2.39},&#xD;&#xA;  { Date: 1624834800000, Close: 2.39},&#xD;&#xA;  { Date: 1625439600000, Close: 2.29},&#xD;&#xA;  { Date: 1626044400000, Close: 1.99},&#xD;&#xA;  { Date: 1626649200000, Close: 2.29},&#xD;&#xA;  { Date: 1627254000000, Close: 2.29},&#xD;&#xA;  { Date: 1627858800000, Close: 2.29},&#xD;&#xA;  { Date: 1628463600000, Close: 2.29},&#xD;&#xA;  { Date: 1629673200000, Close: 2.29},&#xD;&#xA;  { Date: 1630278000000, Close: 2.29},&#xD;&#xA;  { Date: 1630882800000, Close: 2.29},&#xD;&#xA;  { Date: 1631487600000, Close: 2.29},&#xD;&#xA;  { Date: 1633906800000, Close: 2.99},&#xD;&#xA;  { Date: 1634511600000, Close: 2.99},&#xD;&#xA;  { Date: 1635116400000, Close: 2.99},&#xD;&#xA;  { Date: 1635721200000, Close: 2.99},&#xD;&#xA;  { Date: 1636326000000, Close: 2.99},&#xD;&#xA;  { Date: 1636930800000, Close: 2.39},&#xD;&#xA;  { Date: 1637535600000, Close: 2.49},&#xD;&#xA;  { Date: 1638140400000, Close: 2.49},&#xD;&#xA;  { Date: 1642374000000, Close: 2.99},&#xD;&#xA;  { Date: 1643583600000, Close: 3.49},&#xD;&#xA;  { Date: 1644188400000, Close: 3.49},&#xD;&#xA;  { Date: 1644793200000, Close: 3.49},&#xD;&#xA;  { Date: 1645398000000, Close: 2.99},&#xD;&#xA;  { Date: 1646002800000, Close: 2.99},&#xD;&#xA;  { Date: 1646607600000, Close: 2.99},&#xD;&#xA;  { Date: 1647212400000, Close: 2.99},&#xD;&#xA;  { Date: 1647817200000, Close: 2.99},&#xD;&#xA;  { Date: 1648422000000, Close: 2.99},&#xD;&#xA;  { Date: 1649026800000, Close: 2.99},&#xD;&#xA;  { Date: 1655074800000, Close: 2.99},&#xD;&#xA;  { Date: 1655679600000, Close: 2.99},&#xD;&#xA;  { Date: 1656284400000, Close: 2.49},&#xD;&#xA;  { Date: 1656889200000, Close: 2.49},&#xD;&#xA;  { Date: 1660518000000, Close: 3.49},&#xD;&#xA;  { Date: 1661122800000, Close: 3.49},&#xD;&#xA;  { Date: 1661727600000, Close: 3.99},&#xD;&#xA;  { Date: 1662332400000, Close: 3.99},&#xD;&#xA;  { Date: 1662937200000, Close: 3.99},&#xD;&#xA;  { Date: 1663542000000, Close: 3.99},&#xD;&#xA;  { Date: 1664146800000, Close: 3.99},&#xD;&#xA;  { Date: 1664751600000, Close: 3.99},&#xD;&#xA;  { Date: 1665356400000, Close: 3.39},&#xD;&#xA;  { Date: 1665961200000, Close: 3.39},&#xD;&#xA;  { Date: 1666566000000, Close: 2.99},&#xD;&#xA;  { Date: 1667170800000, Close: 2.89},&#xD;&#xA;  { Date: 1667775600000, Close: 2.49},&#xD;&#xA;  { Date: 1668380400000, Close: 2.49},&#xD;&#xA;  { Date: 1668985200000, Close: 2.19},&#xD;&#xA;  { Date: 1669590000000, Close: 1.99},&#xD;&#xA;  { Date: 1670194800000, Close: 1.99},&#xD;&#xA;  { Date: 1670799600000, Close: 1.79},&#xD;&#xA;  { Date: 1671404400000, Close: 1.99},&#xD;&#xA;  { Date: 1672009200000, Close: 1.79},&#xD;&#xA;  { Date: 1672614000000, Close: 1.79},&#xD;&#xA;  { Date: 1678662000000, Close: 1.99},&#xD;&#xA;  { Date: 1679266800000, Close: 1.79},&#xD;&#xA;  { Date: 1696806000000, Close: 1.79},&#xD;&#xA;  { Date: 1702854000000, Close: 1.99},&#xD;&#xA;  { Date: 1714345200000, Close: 2.49},&#xD;&#xA;  { Date: 1714950000000, Close: 2.49},&#xD;&#xA;  { Date: 1716764400000, Close: 2.49},&#xD;&#xA;  { Date: 1717369200000, Close: 2.49},&#xD;&#xA;  { Date: 1717974000000, Close: 2.49},&#xD;&#xA;  { Date: 1728255600000, Close: 2.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Bed and Chair Metrics</title>
      <link>https://irtom.github.io/website/docs/tasks/beds/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/tasks/beds/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://gohugo.io&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beedrill</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/017---beedrill/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/017---beedrill/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148837.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 0.69},&#xD;&#xA;  { Date: 1578524400000, Close: 0.69},&#xD;&#xA;  { Date: 1579215600000, Close: 0.59},&#xD;&#xA;  { Date: 1579820400000, Close: 0.69},&#xD;&#xA;  { Date: 1580511600000, Close: 0.59},&#xD;&#xA;  { Date: 1585263600000, Close: 0.69},&#xD;&#xA;  { Date: 1586818800000, Close: 0.99},&#xD;&#xA;  { Date: 1588028400000, Close: 0.99},&#xD;&#xA;  { Date: 1589238000000, Close: 3.49},&#xD;&#xA;  { Date: 1589929200000, Close: 3.99},&#xD;&#xA;  { Date: 1591311600000, Close: 4.99},&#xD;&#xA;  { Date: 1592348400000, Close: 5.49},&#xD;&#xA;  { Date: 1592521200000, Close: 5.99},&#xD;&#xA;  { Date: 1593039600000, Close: 5.79},&#xD;&#xA;  { Date: 1594249200000, Close: 5.89},&#xD;&#xA;  { Date: 1596754800000, Close: 5.89},&#xD;&#xA;  { Date: 1597186800000, Close: 5.19},&#xD;&#xA;  { Date: 1597446000000, Close: 4.99},&#xD;&#xA;  { Date: 1598050800000, Close: 4.39},&#xD;&#xA;  { Date: 1598396400000, Close: 3.99},&#xD;&#xA;  { Date: 1600729200000, Close: 3.39},&#xD;&#xA;  { Date: 1600815600000, Close: 2.99},&#xD;&#xA;  { Date: 1603753200000, Close: 2.39},&#xD;&#xA;  { Date: 1605913200000, Close: 5.99},&#xD;&#xA;  { Date: 1607468400000, Close: 5.39},&#xD;&#xA;  { Date: 1607727600000, Close: 4.49},&#xD;&#xA;  { Date: 1608764400000, Close: 3.99},&#xD;&#xA;  { Date: 1609282800000, Close: 2.99},&#xD;&#xA;  { Date: 1609887600000, Close: 3.29},&#xD;&#xA;  { Date: 1610060400000, Close: 3.29},&#xD;&#xA;  { Date: 1612306800000, Close: 5.49},&#xD;&#xA;  { Date: 1612911600000, Close: 4.99},&#xD;&#xA;  { Date: 1613516400000, Close: 4.39},&#xD;&#xA;  { Date: 1614207600000, Close: 4.99},&#xD;&#xA;  { Date: 1616022000000, Close: 5.49},&#xD;&#xA;  { Date: 1618354800000, Close: 5.59},&#xD;&#xA;  { Date: 1618614000000, Close: 5.49},&#xD;&#xA;  { Date: 1619823600000, Close: 4.89},&#xD;&#xA;  { Date: 1620428400000, Close: 4.69},&#xD;&#xA;  { Date: 1620946800000, Close: 4.99},&#xD;&#xA;  { Date: 1621465200000, Close: 4.49},&#xD;&#xA;  { Date: 1623106800000, Close: 4.99},&#xD;&#xA;  { Date: 1624489200000, Close: 4.49},&#xD;&#xA;  { Date: 1626908400000, Close: 3.89},&#xD;&#xA;  { Date: 1627599600000, Close: 3.29},&#xD;&#xA;  { Date: 1628204400000, Close: 3.09},&#xD;&#xA;  { Date: 1629241200000, Close: 3.99},&#xD;&#xA;  { Date: 1630537200000, Close: 3.99},&#xD;&#xA;  { Date: 1631314800000, Close: 3.99},&#xD;&#xA;  { Date: 1631574000000, Close: 3.39},&#xD;&#xA;  { Date: 1632438000000, Close: 3.39},&#xD;&#xA;  { Date: 1632783600000, Close: 3.39},&#xD;&#xA;  { Date: 1633561200000, Close: 3.49},&#xD;&#xA;  { Date: 1633734000000, Close: 3.49},&#xD;&#xA;  { Date: 1634943600000, Close: 3.99},&#xD;&#xA;  { Date: 1636153200000, Close: 4.49},&#xD;&#xA;  { Date: 1637362800000, Close: 4.99},&#xD;&#xA;  { Date: 1638572400000, Close: 4.99},&#xD;&#xA;  { Date: 1638831600000, Close: 5.39},&#xD;&#xA;  { Date: 1639436400000, Close: 5.39},&#xD;&#xA;  { Date: 1640300400000, Close: 5.99},&#xD;&#xA;  { Date: 1641855600000, Close: 6.39},&#xD;&#xA;  { Date: 1642114800000, Close: 6.99},&#xD;&#xA;  { Date: 1646348400000, Close: 6.39},&#xD;&#xA;  { Date: 1646866800000, Close: 5.49},&#xD;&#xA;  { Date: 1648767600000, Close: 4.89},&#xD;&#xA;  { Date: 1649458800000, Close: 4.29},&#xD;&#xA;  { Date: 1650927600000, Close: 4.49},&#xD;&#xA;  { Date: 1653433200000, Close: 4.29},&#xD;&#xA;  { Date: 1654210800000, Close: 4.59},&#xD;&#xA;  { Date: 1654902000000, Close: 4.59},&#xD;&#xA;  { Date: 1655420400000, Close: 4.79},&#xD;&#xA;  { Date: 1661900400000, Close: 6.49},&#xD;&#xA;  { Date: 1664492400000, Close: 6.49},&#xD;&#xA;  { Date: 1664578800000, Close: 6.99},&#xD;&#xA;  { Date: 1666047600000, Close: 6.99},&#xD;&#xA;  { Date: 1667343600000, Close: 6.99},&#xD;&#xA;  { Date: 1671231600000, Close: 6.99},&#xD;&#xA;  { Date: 1675551600000, Close: 6.39},&#xD;&#xA;  { Date: 1676415600000, Close: 6.39},&#xD;&#xA;  { Date: 1677279600000, Close: 6.49},&#xD;&#xA;  { Date: 1679353200000, Close: 6.49},&#xD;&#xA;  { Date: 1679785200000, Close: 6.49},&#xD;&#xA;  { Date: 1680217200000, Close: 6.49},&#xD;&#xA;  { Date: 1680649200000, Close: 5.99},&#xD;&#xA;  { Date: 1682463600000, Close: 5.49},&#xD;&#xA;  { Date: 1684278000000, Close: 5.99},&#xD;&#xA;  { Date: 1686956400000, Close: 5.99},&#xD;&#xA;  { Date: 1688166000000, Close: 6.99},&#xD;&#xA;  { Date: 1692658800000, Close: 7.99},&#xD;&#xA;  { Date: 1693263600000, Close: 7.39},&#xD;&#xA;  { Date: 1695250800000, Close: 6.79},&#xD;&#xA;  { Date: 1700607600000, Close: 6.19},&#xD;&#xA;  { Date: 1701817200000, Close: 5.59},&#xD;&#xA;  { Date: 1702681200000, Close: 4.99},&#xD;&#xA;  { Date: 1703977200000, Close: 4.39},&#xD;&#xA;  { Date: 1705014000000, Close: 3.99},&#xD;&#xA;  { Date: 1706050800000, Close: 3.49},&#xD;&#xA;  { Date: 1706569200000, Close: 3.19},&#xD;&#xA;  { Date: 1707865200000, Close: 3.49},&#xD;&#xA;  { Date: 1708470000000, Close: 3.29},&#xD;&#xA;  { Date: 1708902000000, Close: 3.39},&#xD;&#xA;  { Date: 1714172400000, Close: 3.99},&#xD;&#xA;  { Date: 1716764400000, Close: 4.49},&#xD;&#xA;  { Date: 1719874800000, Close: 4.49},&#xD;&#xA;  { Date: 1722898800000, Close: 4.49},&#xD;&#xA;  { Date: 1725922800000, Close: 4.49},&#xD;&#xA;  { Date: 1727737200000, Close: 4.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Bill</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/091---bill/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/091---bill/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148841.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.39},&#xD;&#xA;  { Date: 1603062000000, Close: 0.39},&#xD;&#xA;  { Date: 1603666800000, Close: 0.39},&#xD;&#xA;  { Date: 1604271600000, Close: 0.39},&#xD;&#xA;  { Date: 1604876400000, Close: 0.39},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1610233200000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1612134000000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.49},&#xD;&#xA;  { Date: 1613343600000, Close: 0.49},&#xD;&#xA;  { Date: 1613948400000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.49},&#xD;&#xA;  { Date: 1615762800000, Close: 0.49},&#xD;&#xA;  { Date: 1616367600000, Close: 0.49},&#xD;&#xA;  { Date: 1616972400000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.39},&#xD;&#xA;  { Date: 1620601200000, Close: 0.39},&#xD;&#xA;  { Date: 1621206000000, Close: 0.39},&#xD;&#xA;  { Date: 1621810800000, Close: 0.39},&#xD;&#xA;  { Date: 1622415600000, Close: 0.39},&#xD;&#xA;  { Date: 1623020400000, Close: 0.39},&#xD;&#xA;  { Date: 1623625200000, Close: 0.39},&#xD;&#xA;  { Date: 1624230000000, Close: 0.39},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1625439600000, Close: 0.35},&#xD;&#xA;  { Date: 1626044400000, Close: 0.35},&#xD;&#xA;  { Date: 1626649200000, Close: 0.35},&#xD;&#xA;  { Date: 1627254000000, Close: 0.35},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1629068400000, Close: 0.35},&#xD;&#xA;  { Date: 1629673200000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.40},&#xD;&#xA;  { Date: 1633906800000, Close: 0.40},&#xD;&#xA;  { Date: 1634511600000, Close: 0.40},&#xD;&#xA;  { Date: 1635116400000, Close: 0.40},&#xD;&#xA;  { Date: 1635721200000, Close: 0.40},&#xD;&#xA;  { Date: 1636326000000, Close: 0.40},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.59},&#xD;&#xA;  { Date: 1640559600000, Close: 0.59},&#xD;&#xA;  { Date: 1641164400000, Close: 0.59},&#xD;&#xA;  { Date: 1641769200000, Close: 0.59},&#xD;&#xA;  { Date: 1642374000000, Close: 0.59},&#xD;&#xA;  { Date: 1642978800000, Close: 0.59},&#xD;&#xA;  { Date: 1643583600000, Close: 0.59},&#xD;&#xA;  { Date: 1644188400000, Close: 0.59},&#xD;&#xA;  { Date: 1644793200000, Close: 0.59},&#xD;&#xA;  { Date: 1645398000000, Close: 0.59},&#xD;&#xA;  { Date: 1646607600000, Close: 0.59},&#xD;&#xA;  { Date: 1647817200000, Close: 0.69},&#xD;&#xA;  { Date: 1648422000000, Close: 0.69},&#xD;&#xA;  { Date: 1649026800000, Close: 0.69},&#xD;&#xA;  { Date: 1649631600000, Close: 0.69},&#xD;&#xA;  { Date: 1650236400000, Close: 0.69},&#xD;&#xA;  { Date: 1650841200000, Close: 0.69},&#xD;&#xA;  { Date: 1651446000000, Close: 0.59},&#xD;&#xA;  { Date: 1652050800000, Close: 0.59},&#xD;&#xA;  { Date: 1652655600000, Close: 0.59},&#xD;&#xA;  { Date: 1653260400000, Close: 0.59},&#xD;&#xA;  { Date: 1653865200000, Close: 0.59},&#xD;&#xA;  { Date: 1654470000000, Close: 0.59},&#xD;&#xA;  { Date: 1655074800000, Close: 0.59},&#xD;&#xA;  { Date: 1662937200000, Close: 0.69},&#xD;&#xA;  { Date: 1663542000000, Close: 0.69},&#xD;&#xA;  { Date: 1664146800000, Close: 0.69},&#xD;&#xA;  { Date: 1664751600000, Close: 0.69},&#xD;&#xA;  { Date: 1665356400000, Close: 0.59},&#xD;&#xA;  { Date: 1665961200000, Close: 0.59},&#xD;&#xA;  { Date: 1666566000000, Close: 0.59},&#xD;&#xA;  { Date: 1667170800000, Close: 0.59},&#xD;&#xA;  { Date: 1667775600000, Close: 0.59},&#xD;&#xA;  { Date: 1668380400000, Close: 0.59},&#xD;&#xA;  { Date: 1672614000000, Close: 0.59},&#xD;&#xA;  { Date: 1674428400000, Close: 0.59},&#xD;&#xA;  { Date: 1675033200000, Close: 0.59},&#xD;&#xA;  { Date: 1675638000000, Close: 0.59},&#xD;&#xA;  { Date: 1676242800000, Close: 0.59},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.39},&#xD;&#xA;  { Date: 1682895600000, Close: 0.49},&#xD;&#xA;  { Date: 1689548400000, Close: 0.39},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1691362800000, Close: 0.49},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.49},&#xD;&#xA;  { Date: 1694386800000, Close: 0.49},&#xD;&#xA;  { Date: 1694991600000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1697410800000, Close: 0.49},&#xD;&#xA;  { Date: 1698015600000, Close: 0.49},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1699225200000, Close: 0.49},&#xD;&#xA;  { Date: 1699830000000, Close: 0.49},&#xD;&#xA;  { Date: 1700434800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.39},&#xD;&#xA;  { Date: 1708297200000, Close: 0.59},&#xD;&#xA;  { Date: 1708902000000, Close: 0.59},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;  { Date: 1710716400000, Close: 0.39},&#xD;&#xA;  { Date: 1711321200000, Close: 0.39},&#xD;&#xA;  { Date: 1711926000000, Close: 0.49},&#xD;&#xA;  { Date: 1713135600000, Close: 0.49},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1715554800000, Close: 0.49},&#xD;&#xA;  { Date: 1717974000000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.49},&#xD;&#xA;  { Date: 1719788400000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727650800000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Blastoise</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/002---blastoise/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/002---blastoise/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148871.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575586800000, Close: 59.99},&#xD;&#xA;  { Date: 1575932400000, Close: 59.99},&#xD;&#xA;  { Date: 1576018800000, Close: 64.99},&#xD;&#xA;  { Date: 1576278000000, Close: 64.99},&#xD;&#xA;  { Date: 1576710000000, Close: 59.99},&#xD;&#xA;  { Date: 1578524400000, Close: 59.99},&#xD;&#xA;  { Date: 1579302000000, Close: 61.99},&#xD;&#xA;  { Date: 1582758000000, Close: 84.99},&#xD;&#xA;  { Date: 1584658800000, Close: 81.99},&#xD;&#xA;  { Date: 1585695600000, Close: 79.99},&#xD;&#xA;  { Date: 1586214000000, Close: 77.99},&#xD;&#xA;  { Date: 1586386800000, Close: 79.99},&#xD;&#xA;  { Date: 1586818800000, Close: 84.99},&#xD;&#xA;  { Date: 1589842800000, Close: 89.99},&#xD;&#xA;  { Date: 1590102000000, Close: 99.99},&#xD;&#xA;  { Date: 1590534000000, Close: 99.99},&#xD;&#xA;  { Date: 1591138800000, Close: 109.99},&#xD;&#xA;  { Date: 1591657200000, Close: 119.99},&#xD;&#xA;  { Date: 1594508400000, Close: 159.99},&#xD;&#xA;  { Date: 1595286000000, Close: 149.99},&#xD;&#xA;  { Date: 1595977200000, Close: 179.99},&#xD;&#xA;  { Date: 1596754800000, Close: 189.99},&#xD;&#xA;  { Date: 1599001200000, Close: 179.99},&#xD;&#xA;  { Date: 1600556400000, Close: 179.99},&#xD;&#xA;  { Date: 1600902000000, Close: 194.99},&#xD;&#xA;  { Date: 1602284400000, Close: 199.99},&#xD;&#xA;  { Date: 1604444400000, Close: 499.99},&#xD;&#xA;  { Date: 1606431600000, Close: 399.99},&#xD;&#xA;  { Date: 1606518000000, Close: 359.99},&#xD;&#xA;  { Date: 1606690800000, Close: 499.99},&#xD;&#xA;  { Date: 1606777200000, Close: 399.99},&#xD;&#xA;  { Date: 1606863600000, Close: 349.99},&#xD;&#xA;  { Date: 1607382000000, Close: 449.99},&#xD;&#xA;  { Date: 1608159600000, Close: 424.99},&#xD;&#xA;  { Date: 1609282800000, Close: 349.99},&#xD;&#xA;  { Date: 1610665200000, Close: 329.99},&#xD;&#xA;  { Date: 1612220400000, Close: 299.99},&#xD;&#xA;  { Date: 1612825200000, Close: 289.99},&#xD;&#xA;  { Date: 1614207600000, Close: 279.99},&#xD;&#xA;  { Date: 1614294000000, Close: 269.99},&#xD;&#xA;  { Date: 1614812400000, Close: 274.99},&#xD;&#xA;  { Date: 1615590000000, Close: 269.99},&#xD;&#xA;  { Date: 1616281200000, Close: 254.99},&#xD;&#xA;  { Date: 1616454000000, Close: 249.99},&#xD;&#xA;  { Date: 1618614000000, Close: 239.99},&#xD;&#xA;  { Date: 1619218800000, Close: 249.99},&#xD;&#xA;  { Date: 1619823600000, Close: 239.99},&#xD;&#xA;  { Date: 1621292400000, Close: 199.99},&#xD;&#xA;  { Date: 1622761200000, Close: 189.99},&#xD;&#xA;  { Date: 1624057200000, Close: 179.99},&#xD;&#xA;  { Date: 1626390000000, Close: 169.99},&#xD;&#xA;  { Date: 1631574000000, Close: 174.99},&#xD;&#xA;  { Date: 1632956400000, Close: 174.99},&#xD;&#xA;  { Date: 1633993200000, Close: 174.99},&#xD;&#xA;  { Date: 1634252400000, Close: 189.99},&#xD;&#xA;  { Date: 1634857200000, Close: 189.99},&#xD;&#xA;  { Date: 1639090800000, Close: 199.99},&#xD;&#xA;  { Date: 1641337200000, Close: 199.99},&#xD;&#xA;  { Date: 1646866800000, Close: 179.99},&#xD;&#xA;  { Date: 1648594800000, Close: 169.99},&#xD;&#xA;  { Date: 1649718000000, Close: 169.99},&#xD;&#xA;  { Date: 1650495600000, Close: 169.99},&#xD;&#xA;  { Date: 1655334000000, Close: 169.99},&#xD;&#xA;  { Date: 1656370800000, Close: 179.99},&#xD;&#xA;  { Date: 1660086000000, Close: 179.99},&#xD;&#xA;  { Date: 1664406000000, Close: 189.99},&#xD;&#xA;  { Date: 1674774000000, Close: 199.99},&#xD;&#xA;  { Date: 1676415600000, Close: 199.99},&#xD;&#xA;  { Date: 1677970800000, Close: 199.99},&#xD;&#xA;  { Date: 1679785200000, Close: 209.99},&#xD;&#xA;  { Date: 1680217200000, Close: 209.99},&#xD;&#xA;  { Date: 1681858800000, Close: 199.99},&#xD;&#xA;  { Date: 1686956400000, Close: 199.99},&#xD;&#xA;  { Date: 1688684400000, Close: 199.99},&#xD;&#xA;  { Date: 1690498800000, Close: 199.99},&#xD;&#xA;  { Date: 1695942000000, Close: 209.99},&#xD;&#xA;  { Date: 1700694000000, Close: 164.99},&#xD;&#xA;  { Date: 1701212400000, Close: 209.99},&#xD;&#xA;  { Date: 1703286000000, Close: 209.99},&#xD;&#xA;  { Date: 1706137200000, Close: 209.99},&#xD;&#xA;  { Date: 1707346800000, Close: 209.99},&#xD;&#xA;  { Date: 1708642800000, Close: 209.99},&#xD;&#xA;  { Date: 1710889200000, Close: 209.99},&#xD;&#xA;  { Date: 1712098800000, Close: 174.99},&#xD;&#xA;  { Date: 1716159600000, Close: 165.99},&#xD;&#xA;  { Date: 1717542000000, Close: 165.99},&#xD;&#xA;  { Date: 1717714800000, Close: 165.99},&#xD;&#xA;  { Date: 1721170800000, Close: 165.99},&#xD;&#xA;  { Date: 1725663600000, Close: 165.99},&#xD;&#xA;  { Date: 1727218800000, Close: 165.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Bulbasaur</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/044---bulbasaur/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/044---bulbasaur/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148904.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.09},&#xD;&#xA;  { Date: 1591398000000, Close: 3.99},&#xD;&#xA;  { Date: 1600383600000, Close: 3.49},&#xD;&#xA;  { Date: 1604271600000, Close: 11.99},&#xD;&#xA;  { Date: 1604876400000, Close: 11.99},&#xD;&#xA;  { Date: 1605481200000, Close: 10.99},&#xD;&#xA;  { Date: 1606086000000, Close: 10.99},&#xD;&#xA;  { Date: 1606690800000, Close: 10.99},&#xD;&#xA;  { Date: 1607295600000, Close: 6.99},&#xD;&#xA;  { Date: 1607900400000, Close: 9.99},&#xD;&#xA;  { Date: 1608505200000, Close: 6.99},&#xD;&#xA;  { Date: 1609110000000, Close: 6.99},&#xD;&#xA;  { Date: 1609714800000, Close: 8.99},&#xD;&#xA;  { Date: 1610233200000, Close: 8.99},&#xD;&#xA;  { Date: 1610924400000, Close: 4.99},&#xD;&#xA;  { Date: 1611529200000, Close: 4.49},&#xD;&#xA;  { Date: 1612134000000, Close: 4.49},&#xD;&#xA;  { Date: 1612738800000, Close: 4.29},&#xD;&#xA;  { Date: 1613343600000, Close: 3.99},&#xD;&#xA;  { Date: 1613948400000, Close: 3.99},&#xD;&#xA;  { Date: 1614553200000, Close: 3.99},&#xD;&#xA;  { Date: 1615158000000, Close: 4.99},&#xD;&#xA;  { Date: 1615762800000, Close: 4.99},&#xD;&#xA;  { Date: 1616367600000, Close: 4.99},&#xD;&#xA;  { Date: 1616972400000, Close: 4.99},&#xD;&#xA;  { Date: 1617577200000, Close: 4.99},&#xD;&#xA;  { Date: 1618182000000, Close: 4.49},&#xD;&#xA;  { Date: 1618786800000, Close: 3.89},&#xD;&#xA;  { Date: 1619391600000, Close: 3.89},&#xD;&#xA;  { Date: 1620601200000, Close: 7.99},&#xD;&#xA;  { Date: 1621206000000, Close: 7.99},&#xD;&#xA;  { Date: 1621810800000, Close: 8.99},&#xD;&#xA;  { Date: 1622415600000, Close: 8.49},&#xD;&#xA;  { Date: 1623020400000, Close: 8.49},&#xD;&#xA;  { Date: 1623625200000, Close: 7.99},&#xD;&#xA;  { Date: 1624230000000, Close: 7.99},&#xD;&#xA;  { Date: 1624834800000, Close: 6.99},&#xD;&#xA;  { Date: 1625439600000, Close: 6.99},&#xD;&#xA;  { Date: 1626044400000, Close: 6.99},&#xD;&#xA;  { Date: 1626649200000, Close: 6.49},&#xD;&#xA;  { Date: 1627254000000, Close: 5.99},&#xD;&#xA;  { Date: 1627858800000, Close: 5.99},&#xD;&#xA;  { Date: 1628463600000, Close: 5.39},&#xD;&#xA;  { Date: 1629068400000, Close: 4.99},&#xD;&#xA;  { Date: 1629673200000, Close: 4.49},&#xD;&#xA;  { Date: 1630278000000, Close: 4.49},&#xD;&#xA;  { Date: 1630882800000, Close: 4.49},&#xD;&#xA;  { Date: 1631487600000, Close: 4.49},&#xD;&#xA;  { Date: 1632092400000, Close: 4.49},&#xD;&#xA;  { Date: 1632697200000, Close: 3.49},&#xD;&#xA;  { Date: 1633302000000, Close: 3.29},&#xD;&#xA;  { Date: 1633906800000, Close: 3.29},&#xD;&#xA;  { Date: 1634511600000, Close: 3.29},&#xD;&#xA;  { Date: 1635116400000, Close: 2.99},&#xD;&#xA;  { Date: 1635721200000, Close: 2.89},&#xD;&#xA;  { Date: 1636326000000, Close: 2.89},&#xD;&#xA;  { Date: 1636930800000, Close: 2.29},&#xD;&#xA;  { Date: 1637535600000, Close: 2.29},&#xD;&#xA;  { Date: 1638140400000, Close: 2.29},&#xD;&#xA;  { Date: 1638745200000, Close: 2.29},&#xD;&#xA;  { Date: 1639350000000, Close: 2.49},&#xD;&#xA;  { Date: 1639954800000, Close: 2.49},&#xD;&#xA;  { Date: 1640559600000, Close: 2.49},&#xD;&#xA;  { Date: 1641164400000, Close: 2.99},&#xD;&#xA;  { Date: 1641769200000, Close: 2.99},&#xD;&#xA;  { Date: 1643583600000, Close: 3.99},&#xD;&#xA;  { Date: 1644188400000, Close: 3.39},&#xD;&#xA;  { Date: 1644793200000, Close: 3.39},&#xD;&#xA;  { Date: 1645398000000, Close: 3.99},&#xD;&#xA;  { Date: 1646002800000, Close: 3.99},&#xD;&#xA;  { Date: 1646607600000, Close: 3.39},&#xD;&#xA;  { Date: 1647212400000, Close: 3.39},&#xD;&#xA;  { Date: 1647817200000, Close: 2.99},&#xD;&#xA;  { Date: 1652050800000, Close: 3.99},&#xD;&#xA;  { Date: 1652655600000, Close: 3.99},&#xD;&#xA;  { Date: 1653260400000, Close: 3.49},&#xD;&#xA;  { Date: 1653865200000, Close: 3.49},&#xD;&#xA;  { Date: 1654470000000, Close: 2.89},&#xD;&#xA;  { Date: 1655074800000, Close: 2.89},&#xD;&#xA;  { Date: 1655679600000, Close: 2.99},&#xD;&#xA;  { Date: 1656284400000, Close: 2.99},&#xD;&#xA;  { Date: 1656889200000, Close: 2.99},&#xD;&#xA;  { Date: 1659308400000, Close: 3.99},&#xD;&#xA;  { Date: 1659913200000, Close: 3.99},&#xD;&#xA;  { Date: 1662332400000, Close: 3.99},&#xD;&#xA;  { Date: 1663542000000, Close: 3.99},&#xD;&#xA;  { Date: 1664146800000, Close: 3.99},&#xD;&#xA;  { Date: 1664751600000, Close: 3.99},&#xD;&#xA;  { Date: 1665356400000, Close: 3.39},&#xD;&#xA;  { Date: 1665961200000, Close: 2.99},&#xD;&#xA;  { Date: 1666566000000, Close: 2.59},&#xD;&#xA;  { Date: 1667170800000, Close: 2.39},&#xD;&#xA;  { Date: 1667775600000, Close: 2.39},&#xD;&#xA;  { Date: 1668380400000, Close: 2.09},&#xD;&#xA;  { Date: 1668985200000, Close: 1.79},&#xD;&#xA;  { Date: 1669590000000, Close: 1.69},&#xD;&#xA;  { Date: 1670194800000, Close: 1.69},&#xD;&#xA;  { Date: 1670799600000, Close: 1.29},&#xD;&#xA;  { Date: 1676847600000, Close: 1.79},&#xD;&#xA;  { Date: 1677452400000, Close: 1.49},&#xD;&#xA;  { Date: 1678057200000, Close: 1.49},&#xD;&#xA;  { Date: 1679871600000, Close: 1.59},&#xD;&#xA;  { Date: 1681081200000, Close: 1.49},&#xD;&#xA;  { Date: 1681686000000, Close: 1.29},&#xD;&#xA;  { Date: 1682290800000, Close: 1.29},&#xD;&#xA;  { Date: 1682895600000, Close: 1.49},&#xD;&#xA;  { Date: 1683500400000, Close: 1.49},&#xD;&#xA;  { Date: 1690758000000, Close: 1.39},&#xD;&#xA;  { Date: 1699830000000, Close: 1.09},&#xD;&#xA;  { Date: 1700434800000, Close: 1.09},&#xD;&#xA;  { Date: 1706482800000, Close: 1.49},&#xD;&#xA;  { Date: 1707087600000, Close: 1.19},&#xD;&#xA;  { Date: 1710716400000, Close: 1.49},&#xD;&#xA;  { Date: 1714950000000, Close: 1.49},&#xD;&#xA;  { Date: 1727046000000, Close: 2.09},&#xD;&#xA;  { Date: 1727650800000, Close: 2.09},&#xD;&#xA;  { Date: 1728255600000, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Caterpie</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/045---caterpie/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/045---caterpie/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148908.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1601247600000, Close: 0.59},&#xD;&#xA;  { Date: 1601852400000, Close: 0.59},&#xD;&#xA;  { Date: 1602457200000, Close: 0.59},&#xD;&#xA;  { Date: 1606086000000, Close: 0.69},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 0.99},&#xD;&#xA;  { Date: 1608505200000, Close: 0.99},&#xD;&#xA;  { Date: 1609110000000, Close: 0.99},&#xD;&#xA;  { Date: 1609714800000, Close: 0.99},&#xD;&#xA;  { Date: 1610233200000, Close: 0.99},&#xD;&#xA;  { Date: 1610924400000, Close: 0.99},&#xD;&#xA;  { Date: 1611529200000, Close: 0.99},&#xD;&#xA;  { Date: 1612134000000, Close: 0.99},&#xD;&#xA;  { Date: 1612738800000, Close: 0.99},&#xD;&#xA;  { Date: 1613343600000, Close: 0.99},&#xD;&#xA;  { Date: 1613948400000, Close: 0.99},&#xD;&#xA;  { Date: 1614553200000, Close: 1.09},&#xD;&#xA;  { Date: 1615158000000, Close: 1.09},&#xD;&#xA;  { Date: 1615762800000, Close: 1.09},&#xD;&#xA;  { Date: 1616367600000, Close: 1.09},&#xD;&#xA;  { Date: 1616972400000, Close: 1.09},&#xD;&#xA;  { Date: 1617577200000, Close: 0.99},&#xD;&#xA;  { Date: 1618182000000, Close: 0.99},&#xD;&#xA;  { Date: 1618786800000, Close: 0.89},&#xD;&#xA;  { Date: 1619391600000, Close: 0.89},&#xD;&#xA;  { Date: 1619996400000, Close: 0.89},&#xD;&#xA;  { Date: 1620601200000, Close: 0.89},&#xD;&#xA;  { Date: 1621206000000, Close: 0.89},&#xD;&#xA;  { Date: 1621810800000, Close: 0.89},&#xD;&#xA;  { Date: 1622415600000, Close: 0.89},&#xD;&#xA;  { Date: 1623020400000, Close: 0.89},&#xD;&#xA;  { Date: 1623625200000, Close: 0.89},&#xD;&#xA;  { Date: 1624230000000, Close: 0.89},&#xD;&#xA;  { Date: 1624834800000, Close: 0.89},&#xD;&#xA;  { Date: 1625439600000, Close: 0.89},&#xD;&#xA;  { Date: 1626044400000, Close: 0.89},&#xD;&#xA;  { Date: 1626649200000, Close: 0.89},&#xD;&#xA;  { Date: 1627254000000, Close: 0.89},&#xD;&#xA;  { Date: 1627858800000, Close: 0.89},&#xD;&#xA;  { Date: 1628463600000, Close: 0.89},&#xD;&#xA;  { Date: 1629068400000, Close: 0.89},&#xD;&#xA;  { Date: 1629673200000, Close: 0.89},&#xD;&#xA;  { Date: 1630278000000, Close: 0.89},&#xD;&#xA;  { Date: 1630882800000, Close: 0.89},&#xD;&#xA;  { Date: 1631487600000, Close: 0.89},&#xD;&#xA;  { Date: 1632092400000, Close: 0.89},&#xD;&#xA;  { Date: 1632697200000, Close: 0.89},&#xD;&#xA;  { Date: 1633302000000, Close: 0.89},&#xD;&#xA;  { Date: 1633906800000, Close: 0.79},&#xD;&#xA;  { Date: 1635116400000, Close: 0.79},&#xD;&#xA;  { Date: 1635721200000, Close: 0.79},&#xD;&#xA;  { Date: 1636326000000, Close: 0.79},&#xD;&#xA;  { Date: 1644793200000, Close: 0.99},&#xD;&#xA;  { Date: 1645398000000, Close: 0.99},&#xD;&#xA;  { Date: 1646607600000, Close: 0.99},&#xD;&#xA;  { Date: 1649026800000, Close: 0.99},&#xD;&#xA;  { Date: 1649631600000, Close: 0.99},&#xD;&#xA;  { Date: 1650236400000, Close: 0.99},&#xD;&#xA;  { Date: 1663542000000, Close: 0.89},&#xD;&#xA;  { Date: 1664146800000, Close: 0.89},&#xD;&#xA;  { Date: 1664751600000, Close: 0.89},&#xD;&#xA;  { Date: 1665356400000, Close: 0.89},&#xD;&#xA;  { Date: 1665961200000, Close: 0.89},&#xD;&#xA;  { Date: 1666566000000, Close: 0.89},&#xD;&#xA;  { Date: 1667170800000, Close: 0.89},&#xD;&#xA;  { Date: 1667775600000, Close: 0.89},&#xD;&#xA;  { Date: 1674428400000, Close: 0.79},&#xD;&#xA;  { Date: 1675033200000, Close: 0.89},&#xD;&#xA;  { Date: 1676847600000, Close: 0.89},&#xD;&#xA;  { Date: 1682290800000, Close: 1.29},&#xD;&#xA;  { Date: 1695596400000, Close: 1.29},&#xD;&#xA;  { Date: 1696201200000, Close: 1.29},&#xD;&#xA;  { Date: 1696806000000, Close: 1.29},&#xD;&#xA;  { Date: 1697410800000, Close: 1.49},&#xD;&#xA;  { Date: 1698620400000, Close: 1.49},&#xD;&#xA;  { Date: 1699225200000, Close: 1.49},&#xD;&#xA;  { Date: 1699830000000, Close: 1.49},&#xD;&#xA;  { Date: 1702854000000, Close: 1.49},&#xD;&#xA;  { Date: 1706482800000, Close: 1.49},&#xD;&#xA;  { Date: 1708297200000, Close: 1.19},&#xD;&#xA;  { Date: 1708902000000, Close: 1.19},&#xD;&#xA;  { Date: 1709506800000, Close: 0.69},&#xD;&#xA;  { Date: 1710111600000, Close: 0.69},&#xD;&#xA;  { Date: 1710716400000, Close: 0.59},&#xD;&#xA;  { Date: 1711321200000, Close: 0.59},&#xD;&#xA;  { Date: 1711926000000, Close: 0.59},&#xD;&#xA;  { Date: 1716764400000, Close: 0.69},&#xD;&#xA;  { Date: 1727046000000, Close: 1.19},&#xD;&#xA;  { Date: 1727650800000, Close: 1.19},&#xD;&#xA;  { Date: 1728255600000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Chansey</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/003---chansey/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/003---chansey/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148913.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575586800000, Close: 8.79},&#xD;&#xA;  { Date: 1575673200000, Close: 8.99},&#xD;&#xA;  { Date: 1575932400000, Close: 8.99},&#xD;&#xA;  { Date: 1577228400000, Close: 8.99},&#xD;&#xA;  { Date: 1577487600000, Close: 8.99},&#xD;&#xA;  { Date: 1578524400000, Close: 8.99},&#xD;&#xA;  { Date: 1579820400000, Close: 9.99},&#xD;&#xA;  { Date: 1581030000000, Close: 10.99},&#xD;&#xA;  { Date: 1581375600000, Close: 10.99},&#xD;&#xA;  { Date: 1582671600000, Close: 10.99},&#xD;&#xA;  { Date: 1583881200000, Close: 11.99},&#xD;&#xA;  { Date: 1584486000000, Close: 11.99},&#xD;&#xA;  { Date: 1585177200000, Close: 11.99},&#xD;&#xA;  { Date: 1585695600000, Close: 10.99},&#xD;&#xA;  { Date: 1590620400000, Close: 12.99},&#xD;&#xA;  { Date: 1590706800000, Close: 14.99},&#xD;&#xA;  { Date: 1591311600000, Close: 16.99},&#xD;&#xA;  { Date: 1591743600000, Close: 16.99},&#xD;&#xA;  { Date: 1593298800000, Close: 17.99},&#xD;&#xA;  { Date: 1594249200000, Close: 18.99},&#xD;&#xA;  { Date: 1594767600000, Close: 19.49},&#xD;&#xA;  { Date: 1595286000000, Close: 17.99},&#xD;&#xA;  { Date: 1595890800000, Close: 19.99},&#xD;&#xA;  { Date: 1596754800000, Close: 19.99},&#xD;&#xA;  { Date: 1598482800000, Close: 20.99},&#xD;&#xA;  { Date: 1599001200000, Close: 21.99},&#xD;&#xA;  { Date: 1600988400000, Close: 22.99},&#xD;&#xA;  { Date: 1601334000000, Close: 21.99},&#xD;&#xA;  { Date: 1601593200000, Close: 21.99},&#xD;&#xA;  { Date: 1602716400000, Close: 21.99},&#xD;&#xA;  { Date: 1604444400000, Close: 39.99},&#xD;&#xA;  { Date: 1605567600000, Close: 39.99},&#xD;&#xA;  { Date: 1609282800000, Close: 31.99},&#xD;&#xA;  { Date: 1611010800000, Close: 31.99},&#xD;&#xA;  { Date: 1612479600000, Close: 32.99},&#xD;&#xA;  { Date: 1614898800000, Close: 29.99},&#xD;&#xA;  { Date: 1616540400000, Close: 31.99},&#xD;&#xA;  { Date: 1618354800000, Close: 32.99},&#xD;&#xA;  { Date: 1618614000000, Close: 31.98},&#xD;&#xA;  { Date: 1619650800000, Close: 32.49},&#xD;&#xA;  { Date: 1620342000000, Close: 34.99},&#xD;&#xA;  { Date: 1620428400000, Close: 37.99},&#xD;&#xA;  { Date: 1621292400000, Close: 39.99},&#xD;&#xA;  { Date: 1623366000000, Close: 37.99},&#xD;&#xA;  { Date: 1625698800000, Close: 34.99},&#xD;&#xA;  { Date: 1626994800000, Close: 29.99},&#xD;&#xA;  { Date: 1629500400000, Close: 27.99},&#xD;&#xA;  { Date: 1631055600000, Close: 27.99},&#xD;&#xA;  { Date: 1631228400000, Close: 27.99},&#xD;&#xA;  { Date: 1632438000000, Close: 29.99},&#xD;&#xA;  { Date: 1634252400000, Close: 28.99},&#xD;&#xA;  { Date: 1639782000000, Close: 29.99},&#xD;&#xA;  { Date: 1644620400000, Close: 24.99},&#xD;&#xA;  { Date: 1645138800000, Close: 24.99},&#xD;&#xA;  { Date: 1645225200000, Close: 27.99},&#xD;&#xA;  { Date: 1646434800000, Close: 27.99},&#xD;&#xA;  { Date: 1646866800000, Close: 27.99},&#xD;&#xA;  { Date: 1648767600000, Close: 26.49},&#xD;&#xA;  { Date: 1649286000000, Close: 22.69},&#xD;&#xA;  { Date: 1649890800000, Close: 22.69},&#xD;&#xA;  { Date: 1650236400000, Close: 24.09},&#xD;&#xA;  { Date: 1652396400000, Close: 24.49},&#xD;&#xA;  { Date: 1652569200000, Close: 24.39},&#xD;&#xA;  { Date: 1652914800000, Close: 23.59},&#xD;&#xA;  { Date: 1653346800000, Close: 23.49},&#xD;&#xA;  { Date: 1654210800000, Close: 23.39},&#xD;&#xA;  { Date: 1654297200000, Close: 22.29},&#xD;&#xA;  { Date: 1654729200000, Close: 21.59},&#xD;&#xA;  { Date: 1655074800000, Close: 20.59},&#xD;&#xA;  { Date: 1655420400000, Close: 19.79},&#xD;&#xA;  { Date: 1655766000000, Close: 18.39},&#xD;&#xA;  { Date: 1656111600000, Close: 18.19},&#xD;&#xA;  { Date: 1656630000000, Close: 18.89},&#xD;&#xA;  { Date: 1656975600000, Close: 17.99},&#xD;&#xA;  { Date: 1657580400000, Close: 15.99},&#xD;&#xA;  { Date: 1661554800000, Close: 29.99},&#xD;&#xA;  { Date: 1664233200000, Close: 29.99},&#xD;&#xA;  { Date: 1665529200000, Close: 29.99},&#xD;&#xA;  { Date: 1669676400000, Close: 26.09},&#xD;&#xA;  { Date: 1674255600000, Close: 22.89},&#xD;&#xA;  { Date: 1674860400000, Close: 22.59},&#xD;&#xA;  { Date: 1678316400000, Close: 24.99},&#xD;&#xA;  { Date: 1678748400000, Close: 24.99},&#xD;&#xA;  { Date: 1680822000000, Close: 27.99},&#xD;&#xA;  { Date: 1681167600000, Close: 26.49},&#xD;&#xA;  { Date: 1682722800000, Close: 25.39},&#xD;&#xA;  { Date: 1682809200000, Close: 25.59},&#xD;&#xA;  { Date: 1689721200000, Close: 31.99},&#xD;&#xA;  { Date: 1725404400000, Close: 29.99},&#xD;&#xA;  { Date: 1727737200000, Close: 29.99},&#xD;&#xA;  { Date: 1728428400000, Close: 30.19},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Charizard</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/004---charizard/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/004---charizard/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148917.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575586800000, Close: 146.99},&#xD;&#xA;  { Date: 1576796400000, Close: 149.99},&#xD;&#xA;  { Date: 1577228400000, Close: 149.99},&#xD;&#xA;  { Date: 1577574000000, Close: 149.99},&#xD;&#xA;  { Date: 1580252400000, Close: 159.99},&#xD;&#xA;  { Date: 1580943600000, Close: 169.99},&#xD;&#xA;  { Date: 1582671600000, Close: 199.99},&#xD;&#xA;  { Date: 1583535600000, Close: 274.99},&#xD;&#xA;  { Date: 1584658800000, Close: 294.99},&#xD;&#xA;  { Date: 1585954800000, Close: 289.99},&#xD;&#xA;  { Date: 1588374000000, Close: 299.99},&#xD;&#xA;  { Date: 1588806000000, Close: 309.99},&#xD;&#xA;  { Date: 1590620400000, Close: 324.99},&#xD;&#xA;  { Date: 1591657200000, Close: 349.99},&#xD;&#xA;  { Date: 1594076400000, Close: 399.99},&#xD;&#xA;  { Date: 1594422000000, Close: 399.99},&#xD;&#xA;  { Date: 1595372400000, Close: 414.99},&#xD;&#xA;  { Date: 1595631600000, Close: 449.99},&#xD;&#xA;  { Date: 1596754800000, Close: 449.99},&#xD;&#xA;  { Date: 1597878000000, Close: 474.99},&#xD;&#xA;  { Date: 1599778800000, Close: 469.99},&#xD;&#xA;  { Date: 1600470000000, Close: 469.99},&#xD;&#xA;  { Date: 1601420400000, Close: 499.99},&#xD;&#xA;  { Date: 1601593200000, Close: 499.99},&#xD;&#xA;  { Date: 1605567600000, Close: 1199.99},&#xD;&#xA;  { Date: 1606950000000, Close: 1149.99},&#xD;&#xA;  { Date: 1608159600000, Close: 1099.99},&#xD;&#xA;  { Date: 1608505200000, Close: 999.99},&#xD;&#xA;  { Date: 1608591600000, Close: 874.99},&#xD;&#xA;  { Date: 1609282800000, Close: 849.99},&#xD;&#xA;  { Date: 1609714800000, Close: 1099.99},&#xD;&#xA;  { Date: 1610146800000, Close: 1199.99},&#xD;&#xA;  { Date: 1610665200000, Close: 1149.99},&#xD;&#xA;  { Date: 1612220400000, Close: 1099.99},&#xD;&#xA;  { Date: 1612566000000, Close: 999.99},&#xD;&#xA;  { Date: 1612825200000, Close: 899.99},&#xD;&#xA;  { Date: 1613170800000, Close: 849.99},&#xD;&#xA;  { Date: 1614034800000, Close: 849.99},&#xD;&#xA;  { Date: 1614121200000, Close: 874.99},&#xD;&#xA;  { Date: 1614294000000, Close: 794.99},&#xD;&#xA;  { Date: 1614639600000, Close: 1049.99},&#xD;&#xA;  { Date: 1615503600000, Close: 999.99},&#xD;&#xA;  { Date: 1617577200000, Close: 944.99},&#xD;&#xA;  { Date: 1618441200000, Close: 924.99},&#xD;&#xA;  { Date: 1618614000000, Close: 899.99},&#xD;&#xA;  { Date: 1619823600000, Close: 849.99},&#xD;&#xA;  { Date: 1620774000000, Close: 799.99},&#xD;&#xA;  { Date: 1621551600000, Close: 749.99},&#xD;&#xA;  { Date: 1621983600000, Close: 724.99},&#xD;&#xA;  { Date: 1623193200000, Close: 689.99},&#xD;&#xA;  { Date: 1623884400000, Close: 669.99},&#xD;&#xA;  { Date: 1623970800000, Close: 649.99},&#xD;&#xA;  { Date: 1625266800000, Close: 614.99},&#xD;&#xA;  { Date: 1625612400000, Close: 599.99},&#xD;&#xA;  { Date: 1626908400000, Close: 564.99},&#xD;&#xA;  { Date: 1627081200000, Close: 524.99},&#xD;&#xA;  { Date: 1628550000000, Close: 494.99},&#xD;&#xA;  { Date: 1628636400000, Close: 479.99},&#xD;&#xA;  { Date: 1629846000000, Close: 469.99},&#xD;&#xA;  { Date: 1631055600000, Close: 449.99},&#xD;&#xA;  { Date: 1632351600000, Close: 424.99},&#xD;&#xA;  { Date: 1632783600000, Close: 449.95},&#xD;&#xA;  { Date: 1643410800000, Close: 449.99},&#xD;&#xA;  { Date: 1654210800000, Close: 499.99},&#xD;&#xA;  { Date: 1661468400000, Close: 499.99},&#xD;&#xA;  { Date: 1661986800000, Close: 499.99},&#xD;&#xA;  { Date: 1664233200000, Close: 499.99},&#xD;&#xA;  { Date: 1669244400000, Close: 499.99},&#xD;&#xA;  { Date: 1672441200000, Close: 499.99},&#xD;&#xA;  { Date: 1674255600000, Close: 499.99},&#xD;&#xA;  { Date: 1677279600000, Close: 524.99},&#xD;&#xA;  { Date: 1679785200000, Close: 524.99},&#xD;&#xA;  { Date: 1680217200000, Close: 524.99},&#xD;&#xA;  { Date: 1682722800000, Close: 524.99},&#xD;&#xA;  { Date: 1683932400000, Close: 524.99},&#xD;&#xA;  { Date: 1688079600000, Close: 524.99},&#xD;&#xA;  { Date: 1692831600000, Close: 549.99},&#xD;&#xA;  { Date: 1697324400000, Close: 549.99},&#xD;&#xA;  { Date: 1700521200000, Close: 549.99},&#xD;&#xA;  { Date: 1711407600000, Close: 549.99},&#xD;&#xA;  { Date: 1724886000000, Close: 499.99},&#xD;&#xA;  { Date: 1725663600000, Close: 499.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Charmander</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/046---charmander/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/046---charmander/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148919.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1591398000000, Close: 2.59},&#xD;&#xA;  { Date: 1593385200000, Close: 2.49},&#xD;&#xA;  { Date: 1593817200000, Close: 2.49},&#xD;&#xA;  { Date: 1600383600000, Close: 2.29},&#xD;&#xA;  { Date: 1604271600000, Close: 13.99},&#xD;&#xA;  { Date: 1604876400000, Close: 13.99},&#xD;&#xA;  { Date: 1605481200000, Close: 13.99},&#xD;&#xA;  { Date: 1606086000000, Close: 13.99},&#xD;&#xA;  { Date: 1606690800000, Close: 12.99},&#xD;&#xA;  { Date: 1607295600000, Close: 6.99},&#xD;&#xA;  { Date: 1607900400000, Close: 12.99},&#xD;&#xA;  { Date: 1608505200000, Close: 8.99},&#xD;&#xA;  { Date: 1609110000000, Close: 8.99},&#xD;&#xA;  { Date: 1609714800000, Close: 5.99},&#xD;&#xA;  { Date: 1610233200000, Close: 5.99},&#xD;&#xA;  { Date: 1610924400000, Close: 5.49},&#xD;&#xA;  { Date: 1611529200000, Close: 5.49},&#xD;&#xA;  { Date: 1612134000000, Close: 5.49},&#xD;&#xA;  { Date: 1612738800000, Close: 5.48},&#xD;&#xA;  { Date: 1613343600000, Close: 5.39},&#xD;&#xA;  { Date: 1613948400000, Close: 5.39},&#xD;&#xA;  { Date: 1614553200000, Close: 5.39},&#xD;&#xA;  { Date: 1615158000000, Close: 4.99},&#xD;&#xA;  { Date: 1615762800000, Close: 4.99},&#xD;&#xA;  { Date: 1616367600000, Close: 4.99},&#xD;&#xA;  { Date: 1616972400000, Close: 4.99},&#xD;&#xA;  { Date: 1617577200000, Close: 4.99},&#xD;&#xA;  { Date: 1618182000000, Close: 3.98},&#xD;&#xA;  { Date: 1618786800000, Close: 3.49},&#xD;&#xA;  { Date: 1619391600000, Close: 3.49},&#xD;&#xA;  { Date: 1619996400000, Close: 3.49},&#xD;&#xA;  { Date: 1620601200000, Close: 3.49},&#xD;&#xA;  { Date: 1621206000000, Close: 3.29},&#xD;&#xA;  { Date: 1621810800000, Close: 2.99},&#xD;&#xA;  { Date: 1622415600000, Close: 2.99},&#xD;&#xA;  { Date: 1623020400000, Close: 2.99},&#xD;&#xA;  { Date: 1623625200000, Close: 2.99},&#xD;&#xA;  { Date: 1624230000000, Close: 2.99},&#xD;&#xA;  { Date: 1624834800000, Close: 2.99},&#xD;&#xA;  { Date: 1625439600000, Close: 2.99},&#xD;&#xA;  { Date: 1626044400000, Close: 2.99},&#xD;&#xA;  { Date: 1626649200000, Close: 2.99},&#xD;&#xA;  { Date: 1627254000000, Close: 2.99},&#xD;&#xA;  { Date: 1627858800000, Close: 2.99},&#xD;&#xA;  { Date: 1628463600000, Close: 1.74},&#xD;&#xA;  { Date: 1629068400000, Close: 1.99},&#xD;&#xA;  { Date: 1629673200000, Close: 1.99},&#xD;&#xA;  { Date: 1630278000000, Close: 1.99},&#xD;&#xA;  { Date: 1630882800000, Close: 1.99},&#xD;&#xA;  { Date: 1631487600000, Close: 1.99},&#xD;&#xA;  { Date: 1633906800000, Close: 2.49},&#xD;&#xA;  { Date: 1634511600000, Close: 2.49},&#xD;&#xA;  { Date: 1635116400000, Close: 2.49},&#xD;&#xA;  { Date: 1635721200000, Close: 2.49},&#xD;&#xA;  { Date: 1636326000000, Close: 2.49},&#xD;&#xA;  { Date: 1636930800000, Close: 2.49},&#xD;&#xA;  { Date: 1637535600000, Close: 2.99},&#xD;&#xA;  { Date: 1638745200000, Close: 2.99},&#xD;&#xA;  { Date: 1639350000000, Close: 2.99},&#xD;&#xA;  { Date: 1642978800000, Close: 3.49},&#xD;&#xA;  { Date: 1643583600000, Close: 3.49},&#xD;&#xA;  { Date: 1644188400000, Close: 2.99},&#xD;&#xA;  { Date: 1644793200000, Close: 2.99},&#xD;&#xA;  { Date: 1645398000000, Close: 2.99},&#xD;&#xA;  { Date: 1646607600000, Close: 2.39},&#xD;&#xA;  { Date: 1647212400000, Close: 2.39},&#xD;&#xA;  { Date: 1647817200000, Close: 1.99},&#xD;&#xA;  { Date: 1648422000000, Close: 1.69},&#xD;&#xA;  { Date: 1649026800000, Close: 1.69},&#xD;&#xA;  { Date: 1652050800000, Close: 1.99},&#xD;&#xA;  { Date: 1652655600000, Close: 1.99},&#xD;&#xA;  { Date: 1653260400000, Close: 1.99},&#xD;&#xA;  { Date: 1653865200000, Close: 1.99},&#xD;&#xA;  { Date: 1654470000000, Close: 1.99},&#xD;&#xA;  { Date: 1655074800000, Close: 1.99},&#xD;&#xA;  { Date: 1655679600000, Close: 1.99},&#xD;&#xA;  { Date: 1661122800000, Close: 2.99},&#xD;&#xA;  { Date: 1661727600000, Close: 2.99},&#xD;&#xA;  { Date: 1662332400000, Close: 2.99},&#xD;&#xA;  { Date: 1662937200000, Close: 2.99},&#xD;&#xA;  { Date: 1663542000000, Close: 2.99},&#xD;&#xA;  { Date: 1664146800000, Close: 2.99},&#xD;&#xA;  { Date: 1664751600000, Close: 2.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.29},&#xD;&#xA;  { Date: 1665961200000, Close: 1.79},&#xD;&#xA;  { Date: 1666566000000, Close: 1.79},&#xD;&#xA;  { Date: 1667170800000, Close: 1.79},&#xD;&#xA;  { Date: 1667775600000, Close: 1.79},&#xD;&#xA;  { Date: 1668380400000, Close: 1.79},&#xD;&#xA;  { Date: 1668985200000, Close: 1.39},&#xD;&#xA;  { Date: 1669590000000, Close: 1.39},&#xD;&#xA;  { Date: 1670194800000, Close: 1.29},&#xD;&#xA;  { Date: 1670799600000, Close: 1.29},&#xD;&#xA;  { Date: 1671404400000, Close: 1.29},&#xD;&#xA;  { Date: 1672614000000, Close: 1.25},&#xD;&#xA;  { Date: 1676847600000, Close: 1.09},&#xD;&#xA;  { Date: 1677452400000, Close: 1.19},&#xD;&#xA;  { Date: 1679871600000, Close: 1.49},&#xD;&#xA;  { Date: 1680476400000, Close: 1.49},&#xD;&#xA;  { Date: 1681081200000, Close: 1.29},&#xD;&#xA;  { Date: 1681686000000, Close: 1.29},&#xD;&#xA;  { Date: 1682290800000, Close: 1.29},&#xD;&#xA;  { Date: 1682895600000, Close: 1.29},&#xD;&#xA;  { Date: 1683500400000, Close: 1.39},&#xD;&#xA;  { Date: 1684105200000, Close: 1.79},&#xD;&#xA;  { Date: 1689548400000, Close: 1.29},&#xD;&#xA;  { Date: 1691967600000, Close: 1.29},&#xD;&#xA;  { Date: 1692572400000, Close: 1.09},&#xD;&#xA;  { Date: 1693177200000, Close: 1.29},&#xD;&#xA;  { Date: 1695596400000, Close: 1.49},&#xD;&#xA;  { Date: 1698620400000, Close: 1.99},&#xD;&#xA;  { Date: 1699225200000, Close: 1.99},&#xD;&#xA;  { Date: 1699830000000, Close: 1.99},&#xD;&#xA;  { Date: 1702854000000, Close: 2.29},&#xD;&#xA;  { Date: 1703458800000, Close: 2.29},&#xD;&#xA;  { Date: 1704668400000, Close: 2.29},&#xD;&#xA;  { Date: 1705273200000, Close: 2.29},&#xD;&#xA;  { Date: 1705878000000, Close: 2.29},&#xD;&#xA;  { Date: 1706482800000, Close: 1.99},&#xD;&#xA;  { Date: 1707087600000, Close: 1.99},&#xD;&#xA;  { Date: 1707692400000, Close: 1.69},&#xD;&#xA;  { Date: 1708297200000, Close: 1.69},&#xD;&#xA;  { Date: 1708902000000, Close: 1.49},&#xD;&#xA;  { Date: 1709506800000, Close: 1.49},&#xD;&#xA;  { Date: 1711321200000, Close: 1.79},&#xD;&#xA;  { Date: 1713740400000, Close: 1.99},&#xD;&#xA;  { Date: 1714950000000, Close: 1.99},&#xD;&#xA;  { Date: 1715554800000, Close: 1.99},&#xD;&#xA;  { Date: 1719183600000, Close: 1.99},&#xD;&#xA;  { Date: 1725231600000, Close: 2.29},&#xD;&#xA;  { Date: 1727046000000, Close: 2.29},&#xD;&#xA;  { Date: 1727650800000, Close: 1.99},&#xD;&#xA;  { Date: 1728255600000, Close: 1.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Charmeleon</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/024---charmeleon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/024---charmeleon/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148921.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1593817200000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 1.99},&#xD;&#xA;  { Date: 1601852400000, Close: 2.49},&#xD;&#xA;  { Date: 1604271600000, Close: 4.99},&#xD;&#xA;  { Date: 1605481200000, Close: 5.49},&#xD;&#xA;  { Date: 1606086000000, Close: 5.49},&#xD;&#xA;  { Date: 1606690800000, Close: 4.99},&#xD;&#xA;  { Date: 1607295600000, Close: 4.99},&#xD;&#xA;  { Date: 1607900400000, Close: 4.49},&#xD;&#xA;  { Date: 1608505200000, Close: 2.99},&#xD;&#xA;  { Date: 1609110000000, Close: 2.99},&#xD;&#xA;  { Date: 1609714800000, Close: 4.49},&#xD;&#xA;  { Date: 1610233200000, Close: 4.49},&#xD;&#xA;  { Date: 1610924400000, Close: 3.49},&#xD;&#xA;  { Date: 1611529200000, Close: 3.79},&#xD;&#xA;  { Date: 1612134000000, Close: 3.49},&#xD;&#xA;  { Date: 1612738800000, Close: 3.29},&#xD;&#xA;  { Date: 1613343600000, Close: 3.29},&#xD;&#xA;  { Date: 1614553200000, Close: 2.99},&#xD;&#xA;  { Date: 1615158000000, Close: 2.49},&#xD;&#xA;  { Date: 1615762800000, Close: 2.49},&#xD;&#xA;  { Date: 1616367600000, Close: 2.49},&#xD;&#xA;  { Date: 1616972400000, Close: 2.49},&#xD;&#xA;  { Date: 1617577200000, Close: 2.49},&#xD;&#xA;  { Date: 1618182000000, Close: 2.29},&#xD;&#xA;  { Date: 1618786800000, Close: 1.99},&#xD;&#xA;  { Date: 1619391600000, Close: 1.99},&#xD;&#xA;  { Date: 1619996400000, Close: 1.99},&#xD;&#xA;  { Date: 1621206000000, Close: 2.19},&#xD;&#xA;  { Date: 1621810800000, Close: 1.99},&#xD;&#xA;  { Date: 1622415600000, Close: 1.79},&#xD;&#xA;  { Date: 1623020400000, Close: 1.79},&#xD;&#xA;  { Date: 1623625200000, Close: 1.49},&#xD;&#xA;  { Date: 1624230000000, Close: 1.49},&#xD;&#xA;  { Date: 1624834800000, Close: 1.39},&#xD;&#xA;  { Date: 1625439600000, Close: 1.25},&#xD;&#xA;  { Date: 1626044400000, Close: 1.25},&#xD;&#xA;  { Date: 1626649200000, Close: 1.25},&#xD;&#xA;  { Date: 1627254000000, Close: 0.89},&#xD;&#xA;  { Date: 1627858800000, Close: 0.89},&#xD;&#xA;  { Date: 1628463600000, Close: 0.89},&#xD;&#xA;  { Date: 1630882800000, Close: 1.29},&#xD;&#xA;  { Date: 1633302000000, Close: 1.99},&#xD;&#xA;  { Date: 1633906800000, Close: 1.99},&#xD;&#xA;  { Date: 1634511600000, Close: 2.29},&#xD;&#xA;  { Date: 1635116400000, Close: 1.99},&#xD;&#xA;  { Date: 1635721200000, Close: 1.79},&#xD;&#xA;  { Date: 1637535600000, Close: 2.29},&#xD;&#xA;  { Date: 1638745200000, Close: 2.29},&#xD;&#xA;  { Date: 1639350000000, Close: 1.99},&#xD;&#xA;  { Date: 1639954800000, Close: 2.49},&#xD;&#xA;  { Date: 1642374000000, Close: 2.49},&#xD;&#xA;  { Date: 1642978800000, Close: 2.99},&#xD;&#xA;  { Date: 1643583600000, Close: 2.99},&#xD;&#xA;  { Date: 1644188400000, Close: 2.99},&#xD;&#xA;  { Date: 1644793200000, Close: 2.99},&#xD;&#xA;  { Date: 1645398000000, Close: 2.99},&#xD;&#xA;  { Date: 1646002800000, Close: 2.99},&#xD;&#xA;  { Date: 1646607600000, Close: 2.99},&#xD;&#xA;  { Date: 1647212400000, Close: 2.99},&#xD;&#xA;  { Date: 1647817200000, Close: 2.49},&#xD;&#xA;  { Date: 1648422000000, Close: 2.49},&#xD;&#xA;  { Date: 1649026800000, Close: 2.49},&#xD;&#xA;  { Date: 1662332400000, Close: 2.99},&#xD;&#xA;  { Date: 1662937200000, Close: 2.99},&#xD;&#xA;  { Date: 1663542000000, Close: 2.99},&#xD;&#xA;  { Date: 1664146800000, Close: 2.99},&#xD;&#xA;  { Date: 1664751600000, Close: 2.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.39},&#xD;&#xA;  { Date: 1665961200000, Close: 2.29},&#xD;&#xA;  { Date: 1666566000000, Close: 2.29},&#xD;&#xA;  { Date: 1667170800000, Close: 1.99},&#xD;&#xA;  { Date: 1673823600000, Close: 2.29},&#xD;&#xA;  { Date: 1674428400000, Close: 2.29},&#xD;&#xA;  { Date: 1675033200000, Close: 2.29},&#xD;&#xA;  { Date: 1675638000000, Close: 2.29},&#xD;&#xA;  { Date: 1676242800000, Close: 2.29},&#xD;&#xA;  { Date: 1676847600000, Close: 2.49},&#xD;&#xA;  { Date: 1678662000000, Close: 2.49},&#xD;&#xA;  { Date: 1679266800000, Close: 2.49},&#xD;&#xA;  { Date: 1679871600000, Close: 2.49},&#xD;&#xA;  { Date: 1680476400000, Close: 2.49},&#xD;&#xA;  { Date: 1681081200000, Close: 2.49},&#xD;&#xA;  { Date: 1681686000000, Close: 2.49},&#xD;&#xA;  { Date: 1682290800000, Close: 2.49},&#xD;&#xA;  { Date: 1682895600000, Close: 2.49},&#xD;&#xA;  { Date: 1685314800000, Close: 2.49},&#xD;&#xA;  { Date: 1693782000000, Close: 2.49},&#xD;&#xA;  { Date: 1694386800000, Close: 2.49},&#xD;&#xA;  { Date: 1694991600000, Close: 2.29},&#xD;&#xA;  { Date: 1695596400000, Close: 1.99},&#xD;&#xA;  { Date: 1696201200000, Close: 1.99},&#xD;&#xA;  { Date: 1696806000000, Close: 1.99},&#xD;&#xA;  { Date: 1697410800000, Close: 1.99},&#xD;&#xA;  { Date: 1698015600000, Close: 2.29},&#xD;&#xA;  { Date: 1698620400000, Close: 2.29},&#xD;&#xA;  { Date: 1699225200000, Close: 2.29},&#xD;&#xA;  { Date: 1699830000000, Close: 2.29},&#xD;&#xA;  { Date: 1700434800000, Close: 2.29},&#xD;&#xA;  { Date: 1701039600000, Close: 2.29},&#xD;&#xA;  { Date: 1701644400000, Close: 2.29},&#xD;&#xA;  { Date: 1702249200000, Close: 2.29},&#xD;&#xA;  { Date: 1702854000000, Close: 2.29},&#xD;&#xA;  { Date: 1704668400000, Close: 2.49},&#xD;&#xA;  { Date: 1705273200000, Close: 2.49},&#xD;&#xA;  { Date: 1706482800000, Close: 2.49},&#xD;&#xA;  { Date: 1707087600000, Close: 2.49},&#xD;&#xA;  { Date: 1707692400000, Close: 2.49},&#xD;&#xA;  { Date: 1708297200000, Close: 2.49},&#xD;&#xA;  { Date: 1708902000000, Close: 2.49},&#xD;&#xA;  { Date: 1709506800000, Close: 2.49},&#xD;&#xA;  { Date: 1710111600000, Close: 2.49},&#xD;&#xA;  { Date: 1710716400000, Close: 2.29},&#xD;&#xA;  { Date: 1711926000000, Close: 1.99},&#xD;&#xA;  { Date: 1714950000000, Close: 1.99},&#xD;&#xA;  { Date: 1715554800000, Close: 1.99},&#xD;&#xA;  { Date: 1716159600000, Close: 1.99},&#xD;&#xA;  { Date: 1716764400000, Close: 1.99},&#xD;&#xA;  { Date: 1717369200000, Close: 1.99},&#xD;&#xA;  { Date: 1727046000000, Close: 1.69},&#xD;&#xA;  { Date: 1727650800000, Close: 1.69},&#xD;&#xA;  { Date: 1728255600000, Close: 1.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Clefairy</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/005---clefairy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/005---clefairy/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148926.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575586800000, Close: 8.49},&#xD;&#xA;  { Date: 1577228400000, Close: 8.89},&#xD;&#xA;  { Date: 1578092400000, Close: 8.89},&#xD;&#xA;  { Date: 1578524400000, Close: 8.99},&#xD;&#xA;  { Date: 1580943600000, Close: 10.99},&#xD;&#xA;  { Date: 1582326000000, Close: 11.99},&#xD;&#xA;  { Date: 1583881200000, Close: 12.99},&#xD;&#xA;  { Date: 1584399600000, Close: 12.99},&#xD;&#xA;  { Date: 1585090800000, Close: 11.99},&#xD;&#xA;  { Date: 1586818800000, Close: 11.49},&#xD;&#xA;  { Date: 1587510000000, Close: 11.99},&#xD;&#xA;  { Date: 1588892400000, Close: 13.99},&#xD;&#xA;  { Date: 1589497200000, Close: 14.99},&#xD;&#xA;  { Date: 1590620400000, Close: 15.99},&#xD;&#xA;  { Date: 1590706800000, Close: 16.99},&#xD;&#xA;  { Date: 1591311600000, Close: 17.99},&#xD;&#xA;  { Date: 1593298800000, Close: 19.99},&#xD;&#xA;  { Date: 1593644400000, Close: 18.99},&#xD;&#xA;  { Date: 1594854000000, Close: 17.99},&#xD;&#xA;  { Date: 1595890800000, Close: 15.99},&#xD;&#xA;  { Date: 1596495600000, Close: 16.99},&#xD;&#xA;  { Date: 1596754800000, Close: 16.99},&#xD;&#xA;  { Date: 1598482800000, Close: 15.99},&#xD;&#xA;  { Date: 1598914800000, Close: 15.99},&#xD;&#xA;  { Date: 1599087600000, Close: 16.49},&#xD;&#xA;  { Date: 1599606000000, Close: 16.99},&#xD;&#xA;  { Date: 1601679600000, Close: 17.99},&#xD;&#xA;  { Date: 1602198000000, Close: 16.99},&#xD;&#xA;  { Date: 1602543600000, Close: 17.99},&#xD;&#xA;  { Date: 1604530800000, Close: 39.99},&#xD;&#xA;  { Date: 1605135600000, Close: 47.99},&#xD;&#xA;  { Date: 1605654000000, Close: 48.99},&#xD;&#xA;  { Date: 1607554800000, Close: 48.99},&#xD;&#xA;  { Date: 1608246000000, Close: 44.99},&#xD;&#xA;  { Date: 1609282800000, Close: 39.99},&#xD;&#xA;  { Date: 1610665200000, Close: 39.95},&#xD;&#xA;  { Date: 1617231600000, Close: 32.99},&#xD;&#xA;  { Date: 1618009200000, Close: 29.99},&#xD;&#xA;  { Date: 1618614000000, Close: 27.99},&#xD;&#xA;  { Date: 1620255600000, Close: 26.49},&#xD;&#xA;  { Date: 1620860400000, Close: 24.99},&#xD;&#xA;  { Date: 1621378800000, Close: 27.49},&#xD;&#xA;  { Date: 1622329200000, Close: 25.99},&#xD;&#xA;  { Date: 1623452400000, Close: 24.49},&#xD;&#xA;  { Date: 1623970800000, Close: 19.99},&#xD;&#xA;  { Date: 1624921200000, Close: 17.99},&#xD;&#xA;  { Date: 1625698800000, Close: 15.99},&#xD;&#xA;  { Date: 1626908400000, Close: 17.99},&#xD;&#xA;  { Date: 1628722800000, Close: 17.99},&#xD;&#xA;  { Date: 1629500400000, Close: 17.99},&#xD;&#xA;  { Date: 1631574000000, Close: 19.99},&#xD;&#xA;  { Date: 1632956400000, Close: 17.99},&#xD;&#xA;  { Date: 1634943600000, Close: 18.99},&#xD;&#xA;  { Date: 1635462000000, Close: 17.99},&#xD;&#xA;  { Date: 1642633200000, Close: 21.99},&#xD;&#xA;  { Date: 1644793200000, Close: 20.49},&#xD;&#xA;  { Date: 1646262000000, Close: 20.19},&#xD;&#xA;  { Date: 1647471600000, Close: 20.99},&#xD;&#xA;  { Date: 1647730800000, Close: 19.49},&#xD;&#xA;  { Date: 1648767600000, Close: 18.49},&#xD;&#xA;  { Date: 1652396400000, Close: 21.99},&#xD;&#xA;  { Date: 1652569200000, Close: 21.29},&#xD;&#xA;  { Date: 1653001200000, Close: 20.79},&#xD;&#xA;  { Date: 1654210800000, Close: 20.39},&#xD;&#xA;  { Date: 1654470000000, Close: 19.89},&#xD;&#xA;  { Date: 1654902000000, Close: 20.29},&#xD;&#xA;  { Date: 1655334000000, Close: 20.29},&#xD;&#xA;  { Date: 1655420400000, Close: 22.99},&#xD;&#xA;  { Date: 1656284400000, Close: 19.59},&#xD;&#xA;  { Date: 1657321200000, Close: 19.49},&#xD;&#xA;  { Date: 1657753200000, Close: 19.49},&#xD;&#xA;  { Date: 1657839600000, Close: 19.99},&#xD;&#xA;  { Date: 1658358000000, Close: 20.99},&#xD;&#xA;  { Date: 1659999600000, Close: 20.99},&#xD;&#xA;  { Date: 1661554800000, Close: 24.99},&#xD;&#xA;  { Date: 1669762800000, Close: 24.99},&#xD;&#xA;  { Date: 1669935600000, Close: 21.49},&#xD;&#xA;  { Date: 1670281200000, Close: 20.09},&#xD;&#xA;  { Date: 1670540400000, Close: 20.09},&#xD;&#xA;  { Date: 1670626800000, Close: 19.99},&#xD;&#xA;  { Date: 1670886000000, Close: 18.99},&#xD;&#xA;  { Date: 1672441200000, Close: 21.09},&#xD;&#xA;  { Date: 1678316400000, Close: 25.19},&#xD;&#xA;  { Date: 1684278000000, Close: 31.99},&#xD;&#xA;  { Date: 1688166000000, Close: 31.99},&#xD;&#xA;  { Date: 1695942000000, Close: 22.89},&#xD;&#xA;  { Date: 1701298800000, Close: 22.99},&#xD;&#xA;  { Date: 1707778800000, Close: 24.99},&#xD;&#xA;  { Date: 1709074800000, Close: 24.99},&#xD;&#xA;  { Date: 1711062000000, Close: 24.99},&#xD;&#xA;  { Date: 1718406000000, Close: 29.99},&#xD;&#xA;  { Date: 1725663600000, Close: 29.99},&#xD;&#xA;  { Date: 1727996400000, Close: 29.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Clefairy Doll</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/070---clefairy-doll/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/070---clefairy-doll/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148927.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 0.99},&#xD;&#xA;  { Date: 1578956400000, Close: 0.99},&#xD;&#xA;  { Date: 1579820400000, Close: 1.49},&#xD;&#xA;  { Date: 1582239600000, Close: 2.99},&#xD;&#xA;  { Date: 1582758000000, Close: 2.99},&#xD;&#xA;  { Date: 1583535600000, Close: 2.99},&#xD;&#xA;  { Date: 1583794800000, Close: 2.39},&#xD;&#xA;  { Date: 1584486000000, Close: 2.49},&#xD;&#xA;  { Date: 1585695600000, Close: 2.29},&#xD;&#xA;  { Date: 1586646000000, Close: 2.19},&#xD;&#xA;  { Date: 1587164400000, Close: 2.49},&#xD;&#xA;  { Date: 1587682800000, Close: 2.99},&#xD;&#xA;  { Date: 1588201200000, Close: 3.09},&#xD;&#xA;  { Date: 1588719600000, Close: 2.99},&#xD;&#xA;  { Date: 1588806000000, Close: 2.89},&#xD;&#xA;  { Date: 1589238000000, Close: 2.89},&#xD;&#xA;  { Date: 1589324400000, Close: 2.99},&#xD;&#xA;  { Date: 1589929200000, Close: 3.09},&#xD;&#xA;  { Date: 1590534000000, Close: 2.99},&#xD;&#xA;  { Date: 1591052400000, Close: 2.49},&#xD;&#xA;  { Date: 1591311600000, Close: 2.99},&#xD;&#xA;  { Date: 1594767600000, Close: 4.99},&#xD;&#xA;  { Date: 1595890800000, Close: 5.29},&#xD;&#xA;  { Date: 1596754800000, Close: 5.29},&#xD;&#xA;  { Date: 1597100400000, Close: 4.99},&#xD;&#xA;  { Date: 1597705200000, Close: 4.89},&#xD;&#xA;  { Date: 1598482800000, Close: 4.95},&#xD;&#xA;  { Date: 1600210800000, Close: 4.99},&#xD;&#xA;  { Date: 1604098800000, Close: 5.09},&#xD;&#xA;  { Date: 1608073200000, Close: 4.99},&#xD;&#xA;  { Date: 1608591600000, Close: 4.49},&#xD;&#xA;  { Date: 1609282800000, Close: 4.19},&#xD;&#xA;  { Date: 1611183600000, Close: 3.99},&#xD;&#xA;  { Date: 1617750000000, Close: 3.49},&#xD;&#xA;  { Date: 1618354800000, Close: 3.89},&#xD;&#xA;  { Date: 1620946800000, Close: 3.99},&#xD;&#xA;  { Date: 1621033200000, Close: 3.69},&#xD;&#xA;  { Date: 1621551600000, Close: 3.99},&#xD;&#xA;  { Date: 1623884400000, Close: 4.49},&#xD;&#xA;  { Date: 1623970800000, Close: 4.89},&#xD;&#xA;  { Date: 1624489200000, Close: 4.49},&#xD;&#xA;  { Date: 1625266800000, Close: 4.89},&#xD;&#xA;  { Date: 1626130800000, Close: 4.99},&#xD;&#xA;  { Date: 1628636400000, Close: 4.49},&#xD;&#xA;  { Date: 1630710000000, Close: 4.99},&#xD;&#xA;  { Date: 1632006000000, Close: 4.39},&#xD;&#xA;  { Date: 1633734000000, Close: 4.99},&#xD;&#xA;  { Date: 1634943600000, Close: 5.99},&#xD;&#xA;  { Date: 1637362800000, Close: 5.49},&#xD;&#xA;  { Date: 1638572400000, Close: 4.89},&#xD;&#xA;  { Date: 1639782000000, Close: 5.49},&#xD;&#xA;  { Date: 1643065200000, Close: 5.49},&#xD;&#xA;  { Date: 1647385200000, Close: 5.79},&#xD;&#xA;  { Date: 1647644400000, Close: 5.49},&#xD;&#xA;  { Date: 1647730800000, Close: 4.79},&#xD;&#xA;  { Date: 1648854000000, Close: 4.69},&#xD;&#xA;  { Date: 1649199600000, Close: 4.59},&#xD;&#xA;  { Date: 1649631600000, Close: 4.09},&#xD;&#xA;  { Date: 1651791600000, Close: 3.49},&#xD;&#xA;  { Date: 1653087600000, Close: 2.89},&#xD;&#xA;  { Date: 1655420400000, Close: 3.99},&#xD;&#xA;  { Date: 1655506800000, Close: 3.89},&#xD;&#xA;  { Date: 1656543600000, Close: 3.79},&#xD;&#xA;  { Date: 1658962800000, Close: 4.29},&#xD;&#xA;  { Date: 1660604400000, Close: 4.99},&#xD;&#xA;  { Date: 1661900400000, Close: 4.99},&#xD;&#xA;  { Date: 1664838000000, Close: 4.99},&#xD;&#xA;  { Date: 1666047600000, Close: 4.99},&#xD;&#xA;  { Date: 1667430000000, Close: 4.99},&#xD;&#xA;  { Date: 1674774000000, Close: 4.99},&#xD;&#xA;  { Date: 1675206000000, Close: 5.39},&#xD;&#xA;  { Date: 1678230000000, Close: 5.59},&#xD;&#xA;  { Date: 1678748400000, Close: 5.59},&#xD;&#xA;  { Date: 1680994800000, Close: 5.99},&#xD;&#xA;  { Date: 1681340400000, Close: 5.39},&#xD;&#xA;  { Date: 1682722800000, Close: 5.39},&#xD;&#xA;  { Date: 1684278000000, Close: 5.49},&#xD;&#xA;  { Date: 1690498800000, Close: 6.99},&#xD;&#xA;  { Date: 1691103600000, Close: 6.49},&#xD;&#xA;  { Date: 1692918000000, Close: 6.99},&#xD;&#xA;  { Date: 1698966000000, Close: 7.99},&#xD;&#xA;  { Date: 1706137200000, Close: 7.99},&#xD;&#xA;  { Date: 1708556400000, Close: 6.99},&#xD;&#xA;  { Date: 1709247600000, Close: 6.99},&#xD;&#xA;  { Date: 1715209200000, Close: 6.99},&#xD;&#xA;  { Date: 1716764400000, Close: 6.99},&#xD;&#xA;  { Date: 1717714800000, Close: 6.99},&#xD;&#xA;  { Date: 1719615600000, Close: 6.39},&#xD;&#xA;  { Date: 1722898800000, Close: 6.39},&#xD;&#xA;  { Date: 1724108400000, Close: 6.99},&#xD;&#xA;  { Date: 1727737200000, Close: 6.99},&#xD;&#xA;  { Date: 1728428400000, Close: 6.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Computer Search</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/071---computer-search/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/071---computer-search/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148929.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1578092400000, Close: 2.99},&#xD;&#xA;  { Date: 1578524400000, Close: 2.99},&#xD;&#xA;  { Date: 1579042800000, Close: 3.99},&#xD;&#xA;  { Date: 1579561200000, Close: 3.99},&#xD;&#xA;  { Date: 1579906800000, Close: 3.99},&#xD;&#xA;  { Date: 1582066800000, Close: 4.49},&#xD;&#xA;  { Date: 1582585200000, Close: 4.59},&#xD;&#xA;  { Date: 1583967600000, Close: 3.49},&#xD;&#xA;  { Date: 1585004400000, Close: 3.29},&#xD;&#xA;  { Date: 1585695600000, Close: 2.99},&#xD;&#xA;  { Date: 1588028400000, Close: 4.49},&#xD;&#xA;  { Date: 1589497200000, Close: 4.99},&#xD;&#xA;  { Date: 1589929200000, Close: 4.99},&#xD;&#xA;  { Date: 1591225200000, Close: 5.39},&#xD;&#xA;  { Date: 1594508400000, Close: 6.99},&#xD;&#xA;  { Date: 1595977200000, Close: 9.99},&#xD;&#xA;  { Date: 1596754800000, Close: 9.99},&#xD;&#xA;  { Date: 1597705200000, Close: 10.99},&#xD;&#xA;  { Date: 1598482800000, Close: 11.99},&#xD;&#xA;  { Date: 1599433200000, Close: 10.49},&#xD;&#xA;  { Date: 1600988400000, Close: 8.99},&#xD;&#xA;  { Date: 1601852400000, Close: 8.39},&#xD;&#xA;  { Date: 1601938800000, Close: 7.99},&#xD;&#xA;  { Date: 1604098800000, Close: 7.69},&#xD;&#xA;  { Date: 1604703600000, Close: 7.79},&#xD;&#xA;  { Date: 1605567600000, Close: 7.79},&#xD;&#xA;  { Date: 1607036400000, Close: 8.99},&#xD;&#xA;  { Date: 1608591600000, Close: 8.49},&#xD;&#xA;  { Date: 1609282800000, Close: 6.99},&#xD;&#xA;  { Date: 1610578800000, Close: 7.29},&#xD;&#xA;  { Date: 1610665200000, Close: 6.99},&#xD;&#xA;  { Date: 1611702000000, Close: 6.49},&#xD;&#xA;  { Date: 1612911600000, Close: 5.99},&#xD;&#xA;  { Date: 1614121200000, Close: 5.99},&#xD;&#xA;  { Date: 1615244400000, Close: 5.99},&#xD;&#xA;  { Date: 1618268400000, Close: 8.99},&#xD;&#xA;  { Date: 1618614000000, Close: 8.99},&#xD;&#xA;  { Date: 1620860400000, Close: 8.49},&#xD;&#xA;  { Date: 1621378800000, Close: 8.89},&#xD;&#xA;  { Date: 1622242800000, Close: 7.99},&#xD;&#xA;  { Date: 1623884400000, Close: 7.49},&#xD;&#xA;  { Date: 1624489200000, Close: 6.99},&#xD;&#xA;  { Date: 1626303600000, Close: 6.59},&#xD;&#xA;  { Date: 1626908400000, Close: 5.99},&#xD;&#xA;  { Date: 1627858800000, Close: 5.39},&#xD;&#xA;  { Date: 1627945200000, Close: 4.99},&#xD;&#xA;  { Date: 1628809200000, Close: 4.49},&#xD;&#xA;  { Date: 1629500400000, Close: 4.99},&#xD;&#xA;  { Date: 1632351600000, Close: 5.99},&#xD;&#xA;  { Date: 1632956400000, Close: 5.49},&#xD;&#xA;  { Date: 1634857200000, Close: 5.99},&#xD;&#xA;  { Date: 1635548400000, Close: 6.99},&#xD;&#xA;  { Date: 1635980400000, Close: 6.99},&#xD;&#xA;  { Date: 1636758000000, Close: 6.39},&#xD;&#xA;  { Date: 1637362800000, Close: 6.49},&#xD;&#xA;  { Date: 1642633200000, Close: 6.99},&#xD;&#xA;  { Date: 1643756400000, Close: 7.39},&#xD;&#xA;  { Date: 1644620400000, Close: 7.39},&#xD;&#xA;  { Date: 1645052400000, Close: 7.99},&#xD;&#xA;  { Date: 1647903600000, Close: 8.99},&#xD;&#xA;  { Date: 1650322800000, Close: 8.39},&#xD;&#xA;  { Date: 1652396400000, Close: 8.49},&#xD;&#xA;  { Date: 1654815600000, Close: 7.99},&#xD;&#xA;  { Date: 1657321200000, Close: 7.99},&#xD;&#xA;  { Date: 1657926000000, Close: 6.99},&#xD;&#xA;  { Date: 1661900400000, Close: 7.99},&#xD;&#xA;  { Date: 1663369200000, Close: 7.99},&#xD;&#xA;  { Date: 1665615600000, Close: 7.39},&#xD;&#xA;  { Date: 1666479600000, Close: 6.79},&#xD;&#xA;  { Date: 1669676400000, Close: 6.79},&#xD;&#xA;  { Date: 1672441200000, Close: 7.49},&#xD;&#xA;  { Date: 1673910000000, Close: 8.39},&#xD;&#xA;  { Date: 1674428400000, Close: 7.79},&#xD;&#xA;  { Date: 1676415600000, Close: 7.79},&#xD;&#xA;  { Date: 1677625200000, Close: 7.79},&#xD;&#xA;  { Date: 1678748400000, Close: 8.19},&#xD;&#xA;  { Date: 1679094000000, Close: 8.29},&#xD;&#xA;  { Date: 1679785200000, Close: 8.29},&#xD;&#xA;  { Date: 1680217200000, Close: 8.29},&#xD;&#xA;  { Date: 1680649200000, Close: 8.49},&#xD;&#xA;  { Date: 1682550000000, Close: 7.79},&#xD;&#xA;  { Date: 1690326000000, Close: 7.99},&#xD;&#xA;  { Date: 1692399600000, Close: 7.99},&#xD;&#xA;  { Date: 1692918000000, Close: 7.99},&#xD;&#xA;  { Date: 1695510000000, Close: 7.39},&#xD;&#xA;  { Date: 1698102000000, Close: 5.99},&#xD;&#xA;  { Date: 1701126000000, Close: 5.49},&#xD;&#xA;  { Date: 1701990000000, Close: 4.89},&#xD;&#xA;  { Date: 1702594800000, Close: 4.19},&#xD;&#xA;  { Date: 1707865200000, Close: 3.89},&#xD;&#xA;  { Date: 1707951600000, Close: 3.79},&#xD;&#xA;  { Date: 1708124400000, Close: 3.49},&#xD;&#xA;  { Date: 1710198000000, Close: 3.99},&#xD;&#xA;  { Date: 1714172400000, Close: 5.49},&#xD;&#xA;  { Date: 1715209200000, Close: 5.99},&#xD;&#xA;  { Date: 1717455600000, Close: 5.99},&#xD;&#xA;  { Date: 1718233200000, Close: 6.39},&#xD;&#xA;  { Date: 1719615600000, Close: 5.99},&#xD;&#xA;  { Date: 1722898800000, Close: 5.99},&#xD;&#xA;  { Date: 1725922800000, Close: 5.99},&#xD;&#xA;  { Date: 1726873200000, Close: 5.99},&#xD;&#xA;  { Date: 1727218800000, Close: 5.39},&#xD;&#xA;  { Date: 1727996400000, Close: 4.99},&#xD;&#xA;  { Date: 1728428400000, Close: 4.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Configuring Ponycopters</title>
      <link>https://irtom.github.io/website/docs/tasks/ponycopters/configuring-ponycopters/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/tasks/ponycopters/configuring-ponycopters/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://gohugo.io&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Defender</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/080---defender/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/080---defender/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148968.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 2.99},&#xD;&#xA;  { Date: 1601247600000, Close: 2.99},&#xD;&#xA;  { Date: 1601852400000, Close: 2.99},&#xD;&#xA;  { Date: 1602457200000, Close: 2.99},&#xD;&#xA;  { Date: 1603062000000, Close: 2.99},&#xD;&#xA;  { Date: 1603666800000, Close: 3.09},&#xD;&#xA;  { Date: 1604271600000, Close: 3.19},&#xD;&#xA;  { Date: 1604876400000, Close: 3.19},&#xD;&#xA;  { Date: 1605481200000, Close: 3.19},&#xD;&#xA;  { Date: 1606086000000, Close: 3.19},&#xD;&#xA;  { Date: 1606690800000, Close: 3.19},&#xD;&#xA;  { Date: 1607295600000, Close: 3.19},&#xD;&#xA;  { Date: 1607900400000, Close: 3.19},&#xD;&#xA;  { Date: 1608505200000, Close: 3.19},&#xD;&#xA;  { Date: 1609110000000, Close: 3.19},&#xD;&#xA;  { Date: 1609714800000, Close: 1.99},&#xD;&#xA;  { Date: 1610233200000, Close: 2.29},&#xD;&#xA;  { Date: 1610924400000, Close: 2.49},&#xD;&#xA;  { Date: 1611529200000, Close: 2.49},&#xD;&#xA;  { Date: 1612134000000, Close: 2.49},&#xD;&#xA;  { Date: 1612738800000, Close: 2.49},&#xD;&#xA;  { Date: 1613343600000, Close: 2.49},&#xD;&#xA;  { Date: 1613948400000, Close: 2.49},&#xD;&#xA;  { Date: 1614553200000, Close: 2.49},&#xD;&#xA;  { Date: 1615158000000, Close: 2.49},&#xD;&#xA;  { Date: 1615762800000, Close: 2.49},&#xD;&#xA;  { Date: 1616367600000, Close: 2.49},&#xD;&#xA;  { Date: 1616972400000, Close: 2.49},&#xD;&#xA;  { Date: 1617577200000, Close: 2.49},&#xD;&#xA;  { Date: 1618182000000, Close: 2.49},&#xD;&#xA;  { Date: 1618786800000, Close: 2.29},&#xD;&#xA;  { Date: 1619391600000, Close: 2.29},&#xD;&#xA;  { Date: 1619996400000, Close: 2.29},&#xD;&#xA;  { Date: 1620601200000, Close: 2.29},&#xD;&#xA;  { Date: 1621206000000, Close: 1.99},&#xD;&#xA;  { Date: 1621810800000, Close: 2.19},&#xD;&#xA;  { Date: 1622415600000, Close: 1.99},&#xD;&#xA;  { Date: 1623020400000, Close: 1.79},&#xD;&#xA;  { Date: 1623625200000, Close: 1.79},&#xD;&#xA;  { Date: 1624230000000, Close: 1.79},&#xD;&#xA;  { Date: 1624834800000, Close: 1.69},&#xD;&#xA;  { Date: 1625439600000, Close: 1.49},&#xD;&#xA;  { Date: 1626044400000, Close: 1.49},&#xD;&#xA;  { Date: 1626649200000, Close: 1.49},&#xD;&#xA;  { Date: 1627254000000, Close: 1.29},&#xD;&#xA;  { Date: 1627858800000, Close: 1.29},&#xD;&#xA;  { Date: 1628463600000, Close: 1.29},&#xD;&#xA;  { Date: 1629068400000, Close: 1.09},&#xD;&#xA;  { Date: 1629673200000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 1.09},&#xD;&#xA;  { Date: 1631487600000, Close: 1.09},&#xD;&#xA;  { Date: 1632092400000, Close: 1.09},&#xD;&#xA;  { Date: 1632697200000, Close: 1.09},&#xD;&#xA;  { Date: 1633302000000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.09},&#xD;&#xA;  { Date: 1634511600000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 1.09},&#xD;&#xA;  { Date: 1635721200000, Close: 1.09},&#xD;&#xA;  { Date: 1636326000000, Close: 1.09},&#xD;&#xA;  { Date: 1636930800000, Close: 1.09},&#xD;&#xA;  { Date: 1637535600000, Close: 1.09},&#xD;&#xA;  { Date: 1638140400000, Close: 1.09},&#xD;&#xA;  { Date: 1638745200000, Close: 0.99},&#xD;&#xA;  { Date: 1639350000000, Close: 0.99},&#xD;&#xA;  { Date: 1639954800000, Close: 0.99},&#xD;&#xA;  { Date: 1640559600000, Close: 0.99},&#xD;&#xA;  { Date: 1641164400000, Close: 0.89},&#xD;&#xA;  { Date: 1641769200000, Close: 0.89},&#xD;&#xA;  { Date: 1642374000000, Close: 0.89},&#xD;&#xA;  { Date: 1642978800000, Close: 0.89},&#xD;&#xA;  { Date: 1643583600000, Close: 0.89},&#xD;&#xA;  { Date: 1644188400000, Close: 0.89},&#xD;&#xA;  { Date: 1644793200000, Close: 0.89},&#xD;&#xA;  { Date: 1645398000000, Close: 0.89},&#xD;&#xA;  { Date: 1646607600000, Close: 0.89},&#xD;&#xA;  { Date: 1647212400000, Close: 0.89},&#xD;&#xA;  { Date: 1647817200000, Close: 0.89},&#xD;&#xA;  { Date: 1648422000000, Close: 0.89},&#xD;&#xA;  { Date: 1649026800000, Close: 0.89},&#xD;&#xA;  { Date: 1649631600000, Close: 1.29},&#xD;&#xA;  { Date: 1650236400000, Close: 1.29},&#xD;&#xA;  { Date: 1650841200000, Close: 1.29},&#xD;&#xA;  { Date: 1651446000000, Close: 0.99},&#xD;&#xA;  { Date: 1652050800000, Close: 0.99},&#xD;&#xA;  { Date: 1652655600000, Close: 0.99},&#xD;&#xA;  { Date: 1653260400000, Close: 0.99},&#xD;&#xA;  { Date: 1653865200000, Close: 0.99},&#xD;&#xA;  { Date: 1654470000000, Close: 0.99},&#xD;&#xA;  { Date: 1655074800000, Close: 0.99},&#xD;&#xA;  { Date: 1655679600000, Close: 0.89},&#xD;&#xA;  { Date: 1656284400000, Close: 0.89},&#xD;&#xA;  { Date: 1656889200000, Close: 0.89},&#xD;&#xA;  { Date: 1657494000000, Close: 0.89},&#xD;&#xA;  { Date: 1658098800000, Close: 0.89},&#xD;&#xA;  { Date: 1662332400000, Close: 0.89},&#xD;&#xA;  { Date: 1663542000000, Close: 0.89},&#xD;&#xA;  { Date: 1664146800000, Close: 0.89},&#xD;&#xA;  { Date: 1664751600000, Close: 0.89},&#xD;&#xA;  { Date: 1665356400000, Close: 1.09},&#xD;&#xA;  { Date: 1668380400000, Close: 1.29},&#xD;&#xA;  { Date: 1668985200000, Close: 1.19},&#xD;&#xA;  { Date: 1669590000000, Close: 1.19},&#xD;&#xA;  { Date: 1670194800000, Close: 1.19},&#xD;&#xA;  { Date: 1670799600000, Close: 1.09},&#xD;&#xA;  { Date: 1671404400000, Close: 1.19},&#xD;&#xA;  { Date: 1672009200000, Close: 1.19},&#xD;&#xA;  { Date: 1672614000000, Close: 1.19},&#xD;&#xA;  { Date: 1674428400000, Close: 1.09},&#xD;&#xA;  { Date: 1675033200000, Close: 1.09},&#xD;&#xA;  { Date: 1675638000000, Close: 1.09},&#xD;&#xA;  { Date: 1676242800000, Close: 1.09},&#xD;&#xA;  { Date: 1676847600000, Close: 1.09},&#xD;&#xA;  { Date: 1677452400000, Close: 1.09},&#xD;&#xA;  { Date: 1678057200000, Close: 1.09},&#xD;&#xA;  { Date: 1678662000000, Close: 1.09},&#xD;&#xA;  { Date: 1679266800000, Close: 1.09},&#xD;&#xA;  { Date: 1679871600000, Close: 1.09},&#xD;&#xA;  { Date: 1680476400000, Close: 1.09},&#xD;&#xA;  { Date: 1681081200000, Close: 1.09},&#xD;&#xA;  { Date: 1681686000000, Close: 1.09},&#xD;&#xA;  { Date: 1682290800000, Close: 1.09},&#xD;&#xA;  { Date: 1682895600000, Close: 1.09},&#xD;&#xA;  { Date: 1683500400000, Close: 1.09},&#xD;&#xA;  { Date: 1684105200000, Close: 1.09},&#xD;&#xA;  { Date: 1684710000000, Close: 1.09},&#xD;&#xA;  { Date: 1685314800000, Close: 1.09},&#xD;&#xA;  { Date: 1686524400000, Close: 1.09},&#xD;&#xA;  { Date: 1690758000000, Close: 1.19},&#xD;&#xA;  { Date: 1691362800000, Close: 1.19},&#xD;&#xA;  { Date: 1693177200000, Close: 1.19},&#xD;&#xA;  { Date: 1695596400000, Close: 1.19},&#xD;&#xA;  { Date: 1696201200000, Close: 1.19},&#xD;&#xA;  { Date: 1696806000000, Close: 1.19},&#xD;&#xA;  { Date: 1697410800000, Close: 1.19},&#xD;&#xA;  { Date: 1698015600000, Close: 0.99},&#xD;&#xA;  { Date: 1698620400000, Close: 0.99},&#xD;&#xA;  { Date: 1699225200000, Close: 0.99},&#xD;&#xA;  { Date: 1699830000000, Close: 0.99},&#xD;&#xA;  { Date: 1700434800000, Close: 0.99},&#xD;&#xA;  { Date: 1701039600000, Close: 0.79},&#xD;&#xA;  { Date: 1701644400000, Close: 0.79},&#xD;&#xA;  { Date: 1702249200000, Close: 0.79},&#xD;&#xA;  { Date: 1702854000000, Close: 0.79},&#xD;&#xA;  { Date: 1703458800000, Close: 0.79},&#xD;&#xA;  { Date: 1704063600000, Close: 0.79},&#xD;&#xA;  { Date: 1704668400000, Close: 0.79},&#xD;&#xA;  { Date: 1705273200000, Close: 0.79},&#xD;&#xA;  { Date: 1705878000000, Close: 0.79},&#xD;&#xA;  { Date: 1706482800000, Close: 0.79},&#xD;&#xA;  { Date: 1710716400000, Close: 0.69},&#xD;&#xA;  { Date: 1714950000000, Close: 0.79},&#xD;&#xA;  { Date: 1724626800000, Close: 0.99},&#xD;&#xA;  { Date: 1727046000000, Close: 0.89},&#xD;&#xA;  { Date: 1727650800000, Close: 0.89},&#xD;&#xA;  { Date: 1728255600000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Devolution Spray</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/072---devolution-spray/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/072---devolution-spray/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148969.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 1.19},&#xD;&#xA;  { Date: 1578524400000, Close: 1.19},&#xD;&#xA;  { Date: 1580770800000, Close: 1.49},&#xD;&#xA;  { Date: 1581030000000, Close: 1.59},&#xD;&#xA;  { Date: 1582066800000, Close: 2.49},&#xD;&#xA;  { Date: 1582585200000, Close: 2.99},&#xD;&#xA;  { Date: 1584399600000, Close: 3.19},&#xD;&#xA;  { Date: 1585004400000, Close: 2.99},&#xD;&#xA;  { Date: 1585695600000, Close: 2.49},&#xD;&#xA;  { Date: 1586646000000, Close: 2.59},&#xD;&#xA;  { Date: 1587164400000, Close: 2.79},&#xD;&#xA;  { Date: 1588460400000, Close: 2.99},&#xD;&#xA;  { Date: 1588806000000, Close: 3.49},&#xD;&#xA;  { Date: 1589324400000, Close: 3.99},&#xD;&#xA;  { Date: 1590534000000, Close: 4.09},&#xD;&#xA;  { Date: 1591052400000, Close: 3.99},&#xD;&#xA;  { Date: 1591311600000, Close: 4.09},&#xD;&#xA;  { Date: 1593298800000, Close: 4.09},&#xD;&#xA;  { Date: 1594854000000, Close: 4.09},&#xD;&#xA;  { Date: 1595890800000, Close: 4.19},&#xD;&#xA;  { Date: 1596754800000, Close: 4.19},&#xD;&#xA;  { Date: 1597273200000, Close: 3.99},&#xD;&#xA;  { Date: 1598482800000, Close: 4.09},&#xD;&#xA;  { Date: 1599174000000, Close: 4.09},&#xD;&#xA;  { Date: 1604098800000, Close: 4.29},&#xD;&#xA;  { Date: 1604617200000, Close: 4.49},&#xD;&#xA;  { Date: 1605135600000, Close: 4.99},&#xD;&#xA;  { Date: 1605654000000, Close: 5.49},&#xD;&#xA;  { Date: 1608678000000, Close: 4.99},&#xD;&#xA;  { Date: 1609282800000, Close: 3.99},&#xD;&#xA;  { Date: 1611270000000, Close: 3.99},&#xD;&#xA;  { Date: 1612220400000, Close: 3.99},&#xD;&#xA;  { Date: 1613602800000, Close: 3.49},&#xD;&#xA;  { Date: 1614207600000, Close: 3.59},&#xD;&#xA;  { Date: 1614812400000, Close: 3.59},&#xD;&#xA;  { Date: 1617750000000, Close: 3.49},&#xD;&#xA;  { Date: 1624489200000, Close: 2.99},&#xD;&#xA;  { Date: 1626130800000, Close: 2.49},&#xD;&#xA;  { Date: 1626994800000, Close: 2.29},&#xD;&#xA;  { Date: 1628290800000, Close: 1.99},&#xD;&#xA;  { Date: 1628550000000, Close: 1.79},&#xD;&#xA;  { Date: 1629932400000, Close: 2.49},&#xD;&#xA;  { Date: 1630623600000, Close: 2.99},&#xD;&#xA;  { Date: 1631574000000, Close: 2.99},&#xD;&#xA;  { Date: 1632438000000, Close: 2.99},&#xD;&#xA;  { Date: 1633388400000, Close: 3.49},&#xD;&#xA;  { Date: 1634252400000, Close: 2.89},&#xD;&#xA;  { Date: 1635375600000, Close: 2.99},&#xD;&#xA;  { Date: 1635807600000, Close: 2.99},&#xD;&#xA;  { Date: 1635980400000, Close: 2.99},&#xD;&#xA;  { Date: 1637190000000, Close: 2.99},&#xD;&#xA;  { Date: 1637362800000, Close: 3.49},&#xD;&#xA;  { Date: 1639782000000, Close: 2.99},&#xD;&#xA;  { Date: 1643410800000, Close: 2.99},&#xD;&#xA;  { Date: 1646348400000, Close: 3.09},&#xD;&#xA;  { Date: 1648681200000, Close: 3.29},&#xD;&#xA;  { Date: 1649718000000, Close: 2.79},&#xD;&#xA;  { Date: 1649977200000, Close: 2.89},&#xD;&#xA;  { Date: 1651100400000, Close: 2.89},&#xD;&#xA;  { Date: 1651532400000, Close: 2.89},&#xD;&#xA;  { Date: 1651705200000, Close: 2.99},&#xD;&#xA;  { Date: 1652655600000, Close: 2.89},&#xD;&#xA;  { Date: 1654210800000, Close: 2.79},&#xD;&#xA;  { Date: 1654729200000, Close: 2.69},&#xD;&#xA;  { Date: 1655679600000, Close: 2.59},&#xD;&#xA;  { Date: 1656543600000, Close: 2.49},&#xD;&#xA;  { Date: 1656975600000, Close: 2.39},&#xD;&#xA;  { Date: 1657926000000, Close: 2.29},&#xD;&#xA;  { Date: 1661900400000, Close: 3.99},&#xD;&#xA;  { Date: 1662505200000, Close: 3.99},&#xD;&#xA;  { Date: 1663974000000, Close: 3.99},&#xD;&#xA;  { Date: 1664924400000, Close: 4.49},&#xD;&#xA;  { Date: 1665788400000, Close: 4.49},&#xD;&#xA;  { Date: 1667343600000, Close: 4.49},&#xD;&#xA;  { Date: 1673650800000, Close: 4.49},&#xD;&#xA;  { Date: 1676588400000, Close: 4.49},&#xD;&#xA;  { Date: 1678748400000, Close: 4.79},&#xD;&#xA;  { Date: 1680994800000, Close: 4.79},&#xD;&#xA;  { Date: 1691017200000, Close: 5.99},&#xD;&#xA;  { Date: 1695423600000, Close: 6.99},&#xD;&#xA;  { Date: 1698966000000, Close: 6.99},&#xD;&#xA;  { Date: 1702767600000, Close: 6.39},&#xD;&#xA;  { Date: 1704322800000, Close: 6.49},&#xD;&#xA;  { Date: 1706396400000, Close: 6.99},&#xD;&#xA;  { Date: 1707778800000, Close: 6.99},&#xD;&#xA;  { Date: 1712962800000, Close: 6.99},&#xD;&#xA;  { Date: 1714431600000, Close: 6.99},&#xD;&#xA;  { Date: 1715209200000, Close: 6.99},&#xD;&#xA;  { Date: 1717714800000, Close: 6.99},&#xD;&#xA;  { Date: 1720566000000, Close: 6.39},&#xD;&#xA;  { Date: 1728428400000, Close: 6.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Dewgong</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/025---dewgong/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/025---dewgong/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148970.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.79},&#xD;&#xA;  { Date: 1591398000000, Close: 2.09},&#xD;&#xA;  { Date: 1593385200000, Close: 2.09},&#xD;&#xA;  { Date: 1593817200000, Close: 2.09},&#xD;&#xA;  { Date: 1600383600000, Close: 2.99},&#xD;&#xA;  { Date: 1601247600000, Close: 3.09},&#xD;&#xA;  { Date: 1601852400000, Close: 3.19},&#xD;&#xA;  { Date: 1604271600000, Close: 4.29},&#xD;&#xA;  { Date: 1604876400000, Close: 4.29},&#xD;&#xA;  { Date: 1605481200000, Close: 4.49},&#xD;&#xA;  { Date: 1606086000000, Close: 4.49},&#xD;&#xA;  { Date: 1606690800000, Close: 4.49},&#xD;&#xA;  { Date: 1607295600000, Close: 4.99},&#xD;&#xA;  { Date: 1607900400000, Close: 4.99},&#xD;&#xA;  { Date: 1608505200000, Close: 4.49},&#xD;&#xA;  { Date: 1609110000000, Close: 4.49},&#xD;&#xA;  { Date: 1609714800000, Close: 3.49},&#xD;&#xA;  { Date: 1610233200000, Close: 3.99},&#xD;&#xA;  { Date: 1610924400000, Close: 3.99},&#xD;&#xA;  { Date: 1612134000000, Close: 3.99},&#xD;&#xA;  { Date: 1612738800000, Close: 3.99},&#xD;&#xA;  { Date: 1613343600000, Close: 3.99},&#xD;&#xA;  { Date: 1613948400000, Close: 3.49},&#xD;&#xA;  { Date: 1614553200000, Close: 3.79},&#xD;&#xA;  { Date: 1615158000000, Close: 3.79},&#xD;&#xA;  { Date: 1615762800000, Close: 3.79},&#xD;&#xA;  { Date: 1616367600000, Close: 3.79},&#xD;&#xA;  { Date: 1616972400000, Close: 3.79},&#xD;&#xA;  { Date: 1617577200000, Close: 3.79},&#xD;&#xA;  { Date: 1618182000000, Close: 3.79},&#xD;&#xA;  { Date: 1618786800000, Close: 3.49},&#xD;&#xA;  { Date: 1619391600000, Close: 3.49},&#xD;&#xA;  { Date: 1619996400000, Close: 2.99},&#xD;&#xA;  { Date: 1620601200000, Close: 2.99},&#xD;&#xA;  { Date: 1621206000000, Close: 2.49},&#xD;&#xA;  { Date: 1621810800000, Close: 2.29},&#xD;&#xA;  { Date: 1622415600000, Close: 1.99},&#xD;&#xA;  { Date: 1623020400000, Close: 1.79},&#xD;&#xA;  { Date: 1623625200000, Close: 1.79},&#xD;&#xA;  { Date: 1624230000000, Close: 1.89},&#xD;&#xA;  { Date: 1624834800000, Close: 1.49},&#xD;&#xA;  { Date: 1625439600000, Close: 1.29},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 1.09},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1628463600000, Close: 1.09},&#xD;&#xA;  { Date: 1629068400000, Close: 1.09},&#xD;&#xA;  { Date: 1629673200000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 1.09},&#xD;&#xA;  { Date: 1632697200000, Close: 1.99},&#xD;&#xA;  { Date: 1633906800000, Close: 2.49},&#xD;&#xA;  { Date: 1635116400000, Close: 2.99},&#xD;&#xA;  { Date: 1635721200000, Close: 3.49},&#xD;&#xA;  { Date: 1636326000000, Close: 3.49},&#xD;&#xA;  { Date: 1639954800000, Close: 3.49},&#xD;&#xA;  { Date: 1640559600000, Close: 3.49},&#xD;&#xA;  { Date: 1641164400000, Close: 3.49},&#xD;&#xA;  { Date: 1641769200000, Close: 3.49},&#xD;&#xA;  { Date: 1642374000000, Close: 3.49},&#xD;&#xA;  { Date: 1642978800000, Close: 2.99},&#xD;&#xA;  { Date: 1644793200000, Close: 2.99},&#xD;&#xA;  { Date: 1646607600000, Close: 3.49},&#xD;&#xA;  { Date: 1647212400000, Close: 3.49},&#xD;&#xA;  { Date: 1649026800000, Close: 2.99},&#xD;&#xA;  { Date: 1649631600000, Close: 2.99},&#xD;&#xA;  { Date: 1652655600000, Close: 2.99},&#xD;&#xA;  { Date: 1662332400000, Close: 3.49},&#xD;&#xA;  { Date: 1662937200000, Close: 3.49},&#xD;&#xA;  { Date: 1663542000000, Close: 3.49},&#xD;&#xA;  { Date: 1664146800000, Close: 3.49},&#xD;&#xA;  { Date: 1664751600000, Close: 3.49},&#xD;&#xA;  { Date: 1665356400000, Close: 2.89},&#xD;&#xA;  { Date: 1665961200000, Close: 2.19},&#xD;&#xA;  { Date: 1666566000000, Close: 2.29},&#xD;&#xA;  { Date: 1667170800000, Close: 2.29},&#xD;&#xA;  { Date: 1667775600000, Close: 1.99},&#xD;&#xA;  { Date: 1670194800000, Close: 1.99},&#xD;&#xA;  { Date: 1670799600000, Close: 1.69},&#xD;&#xA;  { Date: 1672614000000, Close: 1.99},&#xD;&#xA;  { Date: 1678662000000, Close: 1.79},&#xD;&#xA;  { Date: 1684710000000, Close: 3.29},&#xD;&#xA;  { Date: 1685314800000, Close: 3.29},&#xD;&#xA;  { Date: 1685919600000, Close: 3.29},&#xD;&#xA;  { Date: 1693177200000, Close: 4.99},&#xD;&#xA;  { Date: 1693782000000, Close: 4.49},&#xD;&#xA;  { Date: 1694386800000, Close: 4.49},&#xD;&#xA;  { Date: 1694991600000, Close: 4.49},&#xD;&#xA;  { Date: 1695596400000, Close: 3.89},&#xD;&#xA;  { Date: 1696201200000, Close: 3.89},&#xD;&#xA;  { Date: 1696806000000, Close: 3.89},&#xD;&#xA;  { Date: 1697410800000, Close: 3.89},&#xD;&#xA;  { Date: 1698015600000, Close: 3.89},&#xD;&#xA;  { Date: 1698620400000, Close: 3.89},&#xD;&#xA;  { Date: 1699225200000, Close: 3.89},&#xD;&#xA;  { Date: 1699830000000, Close: 3.49},&#xD;&#xA;  { Date: 1700434800000, Close: 3.49},&#xD;&#xA;  { Date: 1701039600000, Close: 2.59},&#xD;&#xA;  { Date: 1701644400000, Close: 2.39},&#xD;&#xA;  { Date: 1702249200000, Close: 2.29},&#xD;&#xA;  { Date: 1702854000000, Close: 2.29},&#xD;&#xA;  { Date: 1703458800000, Close: 1.99},&#xD;&#xA;  { Date: 1704063600000, Close: 1.79},&#xD;&#xA;  { Date: 1704668400000, Close: 1.79},&#xD;&#xA;  { Date: 1705273200000, Close: 1.99},&#xD;&#xA;  { Date: 1705878000000, Close: 2.29},&#xD;&#xA;  { Date: 1706482800000, Close: 2.29},&#xD;&#xA;  { Date: 1707692400000, Close: 2.49},&#xD;&#xA;  { Date: 1708297200000, Close: 2.49},&#xD;&#xA;  { Date: 1708902000000, Close: 2.19},&#xD;&#xA;  { Date: 1709506800000, Close: 1.99},&#xD;&#xA;  { Date: 1710111600000, Close: 1.99},&#xD;&#xA;  { Date: 1710716400000, Close: 1.79},&#xD;&#xA;  { Date: 1711321200000, Close: 1.49},&#xD;&#xA;  { Date: 1711926000000, Close: 1.79},&#xD;&#xA;  { Date: 1714950000000, Close: 2.99},&#xD;&#xA;  { Date: 1715554800000, Close: 2.99},&#xD;&#xA;  { Date: 1716764400000, Close: 2.99},&#xD;&#xA;  { Date: 1717369200000, Close: 2.99},&#xD;&#xA;  { Date: 1725231600000, Close: 3.19},&#xD;&#xA;  { Date: 1727046000000, Close: 2.59},&#xD;&#xA;  { Date: 1727650800000, Close: 2.59},&#xD;&#xA;  { Date: 1728255600000, Close: 2.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Diglett</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/047---diglett/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/047---diglett/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148973.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.59},&#xD;&#xA;  { Date: 1606690800000, Close: 0.59},&#xD;&#xA;  { Date: 1608505200000, Close: 0.69},&#xD;&#xA;  { Date: 1609110000000, Close: 0.69},&#xD;&#xA;  { Date: 1609714800000, Close: 0.69},&#xD;&#xA;  { Date: 1610233200000, Close: 0.69},&#xD;&#xA;  { Date: 1610924400000, Close: 0.69},&#xD;&#xA;  { Date: 1611529200000, Close: 0.69},&#xD;&#xA;  { Date: 1612738800000, Close: 0.79},&#xD;&#xA;  { Date: 1614553200000, Close: 0.89},&#xD;&#xA;  { Date: 1615158000000, Close: 0.99},&#xD;&#xA;  { Date: 1615762800000, Close: 0.99},&#xD;&#xA;  { Date: 1616367600000, Close: 0.99},&#xD;&#xA;  { Date: 1616972400000, Close: 0.99},&#xD;&#xA;  { Date: 1617577200000, Close: 0.99},&#xD;&#xA;  { Date: 1618182000000, Close: 0.99},&#xD;&#xA;  { Date: 1618786800000, Close: 0.99},&#xD;&#xA;  { Date: 1619391600000, Close: 0.99},&#xD;&#xA;  { Date: 1619996400000, Close: 0.99},&#xD;&#xA;  { Date: 1620601200000, Close: 0.99},&#xD;&#xA;  { Date: 1621206000000, Close: 0.89},&#xD;&#xA;  { Date: 1621810800000, Close: 0.89},&#xD;&#xA;  { Date: 1622415600000, Close: 0.89},&#xD;&#xA;  { Date: 1623020400000, Close: 0.89},&#xD;&#xA;  { Date: 1623625200000, Close: 0.89},&#xD;&#xA;  { Date: 1624230000000, Close: 0.79},&#xD;&#xA;  { Date: 1624834800000, Close: 0.79},&#xD;&#xA;  { Date: 1625439600000, Close: 0.79},&#xD;&#xA;  { Date: 1626044400000, Close: 0.79},&#xD;&#xA;  { Date: 1626649200000, Close: 0.69},&#xD;&#xA;  { Date: 1627254000000, Close: 0.69},&#xD;&#xA;  { Date: 1627858800000, Close: 0.69},&#xD;&#xA;  { Date: 1628463600000, Close: 0.69},&#xD;&#xA;  { Date: 1629068400000, Close: 0.69},&#xD;&#xA;  { Date: 1629673200000, Close: 0.69},&#xD;&#xA;  { Date: 1630278000000, Close: 0.69},&#xD;&#xA;  { Date: 1630882800000, Close: 0.69},&#xD;&#xA;  { Date: 1631487600000, Close: 0.69},&#xD;&#xA;  { Date: 1632092400000, Close: 0.69},&#xD;&#xA;  { Date: 1632697200000, Close: 0.69},&#xD;&#xA;  { Date: 1633302000000, Close: 0.69},&#xD;&#xA;  { Date: 1633906800000, Close: 0.69},&#xD;&#xA;  { Date: 1634511600000, Close: 0.69},&#xD;&#xA;  { Date: 1635116400000, Close: 0.69},&#xD;&#xA;  { Date: 1635721200000, Close: 0.69},&#xD;&#xA;  { Date: 1636326000000, Close: 0.59},&#xD;&#xA;  { Date: 1636930800000, Close: 0.59},&#xD;&#xA;  { Date: 1637535600000, Close: 0.59},&#xD;&#xA;  { Date: 1638140400000, Close: 0.59},&#xD;&#xA;  { Date: 1638745200000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.49},&#xD;&#xA;  { Date: 1640559600000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1641769200000, Close: 0.49},&#xD;&#xA;  { Date: 1642374000000, Close: 0.49},&#xD;&#xA;  { Date: 1642978800000, Close: 0.39},&#xD;&#xA;  { Date: 1643583600000, Close: 0.39},&#xD;&#xA;  { Date: 1644188400000, Close: 0.39},&#xD;&#xA;  { Date: 1644793200000, Close: 0.39},&#xD;&#xA;  { Date: 1645398000000, Close: 0.39},&#xD;&#xA;  { Date: 1646002800000, Close: 0.39},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.35},&#xD;&#xA;  { Date: 1670194800000, Close: 0.35},&#xD;&#xA;  { Date: 1670799600000, Close: 0.35},&#xD;&#xA;  { Date: 1671404400000, Close: 0.35},&#xD;&#xA;  { Date: 1672009200000, Close: 0.35},&#xD;&#xA;  { Date: 1672614000000, Close: 0.35},&#xD;&#xA;  { Date: 1673218800000, Close: 0.35},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.39},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.39},&#xD;&#xA;  { Date: 1685314800000, Close: 0.39},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1697410800000, Close: 0.49},&#xD;&#xA;  { Date: 1698015600000, Close: 0.49},&#xD;&#xA;  { Date: 1703458800000, Close: 0.49},&#xD;&#xA;  { Date: 1704063600000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1705273200000, Close: 0.49},&#xD;&#xA;  { Date: 1705878000000, Close: 0.49},&#xD;&#xA;  { Date: 1706482800000, Close: 0.49},&#xD;&#xA;  { Date: 1707087600000, Close: 0.49},&#xD;&#xA;  { Date: 1707692400000, Close: 0.39},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.39},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1726441200000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Doduo</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/048---doduo/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/048---doduo/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148978.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.79},&#xD;&#xA;  { Date: 1593817200000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1601247600000, Close: 0.59},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 1.49},&#xD;&#xA;  { Date: 1606086000000, Close: 1.49},&#xD;&#xA;  { Date: 1606690800000, Close: 1.59},&#xD;&#xA;  { Date: 1607295600000, Close: 1.49},&#xD;&#xA;  { Date: 1607900400000, Close: 1.49},&#xD;&#xA;  { Date: 1608505200000, Close: 1.39},&#xD;&#xA;  { Date: 1609110000000, Close: 1.29},&#xD;&#xA;  { Date: 1609714800000, Close: 0.99},&#xD;&#xA;  { Date: 1610233200000, Close: 0.99},&#xD;&#xA;  { Date: 1610924400000, Close: 0.99},&#xD;&#xA;  { Date: 1611529200000, Close: 0.99},&#xD;&#xA;  { Date: 1612134000000, Close: 0.99},&#xD;&#xA;  { Date: 1612738800000, Close: 0.99},&#xD;&#xA;  { Date: 1613343600000, Close: 0.99},&#xD;&#xA;  { Date: 1613948400000, Close: 0.99},&#xD;&#xA;  { Date: 1614553200000, Close: 0.99},&#xD;&#xA;  { Date: 1615158000000, Close: 0.99},&#xD;&#xA;  { Date: 1615762800000, Close: 0.99},&#xD;&#xA;  { Date: 1616367600000, Close: 0.99},&#xD;&#xA;  { Date: 1616972400000, Close: 0.99},&#xD;&#xA;  { Date: 1617577200000, Close: 0.99},&#xD;&#xA;  { Date: 1618182000000, Close: 0.99},&#xD;&#xA;  { Date: 1618786800000, Close: 0.89},&#xD;&#xA;  { Date: 1619391600000, Close: 0.89},&#xD;&#xA;  { Date: 1619996400000, Close: 0.89},&#xD;&#xA;  { Date: 1620601200000, Close: 0.89},&#xD;&#xA;  { Date: 1621206000000, Close: 0.89},&#xD;&#xA;  { Date: 1621810800000, Close: 0.89},&#xD;&#xA;  { Date: 1622415600000, Close: 0.89},&#xD;&#xA;  { Date: 1623020400000, Close: 0.89},&#xD;&#xA;  { Date: 1623625200000, Close: 0.89},&#xD;&#xA;  { Date: 1624230000000, Close: 0.89},&#xD;&#xA;  { Date: 1624834800000, Close: 0.89},&#xD;&#xA;  { Date: 1625439600000, Close: 0.89},&#xD;&#xA;  { Date: 1626044400000, Close: 0.89},&#xD;&#xA;  { Date: 1626649200000, Close: 0.89},&#xD;&#xA;  { Date: 1627254000000, Close: 0.79},&#xD;&#xA;  { Date: 1627858800000, Close: 0.79},&#xD;&#xA;  { Date: 1628463600000, Close: 0.79},&#xD;&#xA;  { Date: 1629068400000, Close: 0.79},&#xD;&#xA;  { Date: 1629673200000, Close: 0.79},&#xD;&#xA;  { Date: 1630278000000, Close: 0.79},&#xD;&#xA;  { Date: 1630882800000, Close: 0.79},&#xD;&#xA;  { Date: 1631487600000, Close: 0.79},&#xD;&#xA;  { Date: 1632092400000, Close: 0.79},&#xD;&#xA;  { Date: 1632697200000, Close: 0.79},&#xD;&#xA;  { Date: 1633302000000, Close: 0.79},&#xD;&#xA;  { Date: 1633906800000, Close: 0.79},&#xD;&#xA;  { Date: 1635116400000, Close: 0.79},&#xD;&#xA;  { Date: 1639350000000, Close: 0.79},&#xD;&#xA;  { Date: 1639954800000, Close: 0.79},&#xD;&#xA;  { Date: 1640559600000, Close: 0.79},&#xD;&#xA;  { Date: 1641164400000, Close: 0.79},&#xD;&#xA;  { Date: 1641769200000, Close: 0.79},&#xD;&#xA;  { Date: 1644793200000, Close: 0.79},&#xD;&#xA;  { Date: 1645398000000, Close: 0.79},&#xD;&#xA;  { Date: 1646002800000, Close: 0.79},&#xD;&#xA;  { Date: 1646607600000, Close: 0.79},&#xD;&#xA;  { Date: 1647212400000, Close: 0.79},&#xD;&#xA;  { Date: 1647817200000, Close: 0.79},&#xD;&#xA;  { Date: 1648422000000, Close: 0.79},&#xD;&#xA;  { Date: 1649026800000, Close: 0.69},&#xD;&#xA;  { Date: 1649631600000, Close: 0.69},&#xD;&#xA;  { Date: 1650236400000, Close: 0.69},&#xD;&#xA;  { Date: 1650841200000, Close: 0.69},&#xD;&#xA;  { Date: 1651446000000, Close: 0.69},&#xD;&#xA;  { Date: 1652050800000, Close: 0.69},&#xD;&#xA;  { Date: 1652655600000, Close: 0.69},&#xD;&#xA;  { Date: 1653260400000, Close: 0.69},&#xD;&#xA;  { Date: 1653865200000, Close: 0.69},&#xD;&#xA;  { Date: 1654470000000, Close: 0.59},&#xD;&#xA;  { Date: 1655074800000, Close: 0.59},&#xD;&#xA;  { Date: 1655679600000, Close: 0.59},&#xD;&#xA;  { Date: 1662332400000, Close: 0.59},&#xD;&#xA;  { Date: 1663542000000, Close: 0.59},&#xD;&#xA;  { Date: 1664146800000, Close: 0.59},&#xD;&#xA;  { Date: 1664751600000, Close: 0.59},&#xD;&#xA;  { Date: 1665356400000, Close: 0.59},&#xD;&#xA;  { Date: 1665961200000, Close: 0.59},&#xD;&#xA;  { Date: 1666566000000, Close: 0.59},&#xD;&#xA;  { Date: 1667170800000, Close: 0.59},&#xD;&#xA;  { Date: 1667775600000, Close: 0.59},&#xD;&#xA;  { Date: 1668380400000, Close: 0.59},&#xD;&#xA;  { Date: 1668985200000, Close: 0.59},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1682290800000, Close: 0.79},&#xD;&#xA;  { Date: 1682895600000, Close: 0.79},&#xD;&#xA;  { Date: 1683500400000, Close: 0.79},&#xD;&#xA;  { Date: 1684105200000, Close: 0.79},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1686524400000, Close: 0.49},&#xD;&#xA;  { Date: 1698620400000, Close: 1.49},&#xD;&#xA;  { Date: 1699830000000, Close: 1.49},&#xD;&#xA;  { Date: 1702854000000, Close: 1.29},&#xD;&#xA;  { Date: 1703458800000, Close: 1.19},&#xD;&#xA;  { Date: 1704063600000, Close: 1.19},&#xD;&#xA;  { Date: 1704668400000, Close: 1.19},&#xD;&#xA;  { Date: 1705273200000, Close: 1.19},&#xD;&#xA;  { Date: 1705878000000, Close: 1.19},&#xD;&#xA;  { Date: 1708297200000, Close: 0.99},&#xD;&#xA;  { Date: 1708902000000, Close: 0.89},&#xD;&#xA;  { Date: 1709506800000, Close: 0.69},&#xD;&#xA;  { Date: 1710111600000, Close: 0.59},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Double Colorless Energy</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/096---double-colorless-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/096---double-colorless-energy/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148980.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 2.99},&#xD;&#xA;  { Date: 1591398000000, Close: 4.49},&#xD;&#xA;  { Date: 1593385200000, Close: 4.59},&#xD;&#xA;  { Date: 1593817200000, Close: 4.59},&#xD;&#xA;  { Date: 1603062000000, Close: 5.99},&#xD;&#xA;  { Date: 1604271600000, Close: 6.99},&#xD;&#xA;  { Date: 1604876400000, Close: 7.99},&#xD;&#xA;  { Date: 1605481200000, Close: 8.99},&#xD;&#xA;  { Date: 1606086000000, Close: 8.99},&#xD;&#xA;  { Date: 1606690800000, Close: 9.29},&#xD;&#xA;  { Date: 1607295600000, Close: 8.99},&#xD;&#xA;  { Date: 1607900400000, Close: 8.99},&#xD;&#xA;  { Date: 1608505200000, Close: 8.99},&#xD;&#xA;  { Date: 1609110000000, Close: 8.39},&#xD;&#xA;  { Date: 1609714800000, Close: 5.99},&#xD;&#xA;  { Date: 1610233200000, Close: 6.99},&#xD;&#xA;  { Date: 1611529200000, Close: 7.49},&#xD;&#xA;  { Date: 1612738800000, Close: 6.99},&#xD;&#xA;  { Date: 1613343600000, Close: 6.99},&#xD;&#xA;  { Date: 1613948400000, Close: 6.49},&#xD;&#xA;  { Date: 1614553200000, Close: 6.49},&#xD;&#xA;  { Date: 1615158000000, Close: 6.49},&#xD;&#xA;  { Date: 1615762800000, Close: 6.49},&#xD;&#xA;  { Date: 1616367600000, Close: 6.49},&#xD;&#xA;  { Date: 1616972400000, Close: 6.49},&#xD;&#xA;  { Date: 1617577200000, Close: 6.49},&#xD;&#xA;  { Date: 1618182000000, Close: 6.99},&#xD;&#xA;  { Date: 1618786800000, Close: 6.99},&#xD;&#xA;  { Date: 1619391600000, Close: 6.99},&#xD;&#xA;  { Date: 1619996400000, Close: 6.99},&#xD;&#xA;  { Date: 1620601200000, Close: 5.99},&#xD;&#xA;  { Date: 1621206000000, Close: 6.29},&#xD;&#xA;  { Date: 1621810800000, Close: 5.99},&#xD;&#xA;  { Date: 1622415600000, Close: 5.99},&#xD;&#xA;  { Date: 1623020400000, Close: 5.49},&#xD;&#xA;  { Date: 1623625200000, Close: 5.49},&#xD;&#xA;  { Date: 1624230000000, Close: 4.99},&#xD;&#xA;  { Date: 1624834800000, Close: 4.49},&#xD;&#xA;  { Date: 1625439600000, Close: 4.49},&#xD;&#xA;  { Date: 1626044400000, Close: 4.49},&#xD;&#xA;  { Date: 1626649200000, Close: 4.49},&#xD;&#xA;  { Date: 1627254000000, Close: 4.49},&#xD;&#xA;  { Date: 1627858800000, Close: 3.89},&#xD;&#xA;  { Date: 1628463600000, Close: 3.49},&#xD;&#xA;  { Date: 1629068400000, Close: 3.49},&#xD;&#xA;  { Date: 1629673200000, Close: 3.49},&#xD;&#xA;  { Date: 1630278000000, Close: 3.49},&#xD;&#xA;  { Date: 1630882800000, Close: 3.45},&#xD;&#xA;  { Date: 1631487600000, Close: 3.45},&#xD;&#xA;  { Date: 1632092400000, Close: 3.45},&#xD;&#xA;  { Date: 1632697200000, Close: 3.45},&#xD;&#xA;  { Date: 1633302000000, Close: 3.45},&#xD;&#xA;  { Date: 1633906800000, Close: 3.45},&#xD;&#xA;  { Date: 1636326000000, Close: 3.49},&#xD;&#xA;  { Date: 1637535600000, Close: 3.49},&#xD;&#xA;  { Date: 1638140400000, Close: 3.49},&#xD;&#xA;  { Date: 1638745200000, Close: 3.49},&#xD;&#xA;  { Date: 1644793200000, Close: 3.99},&#xD;&#xA;  { Date: 1645398000000, Close: 3.99},&#xD;&#xA;  { Date: 1646002800000, Close: 3.99},&#xD;&#xA;  { Date: 1646607600000, Close: 3.99},&#xD;&#xA;  { Date: 1647212400000, Close: 3.99},&#xD;&#xA;  { Date: 1648422000000, Close: 3.79},&#xD;&#xA;  { Date: 1649026800000, Close: 3.79},&#xD;&#xA;  { Date: 1655074800000, Close: 2.89},&#xD;&#xA;  { Date: 1655679600000, Close: 3.49},&#xD;&#xA;  { Date: 1656284400000, Close: 2.99},&#xD;&#xA;  { Date: 1656889200000, Close: 2.79},&#xD;&#xA;  { Date: 1662332400000, Close: 4.99},&#xD;&#xA;  { Date: 1664751600000, Close: 4.99},&#xD;&#xA;  { Date: 1665356400000, Close: 4.39},&#xD;&#xA;  { Date: 1665961200000, Close: 3.59},&#xD;&#xA;  { Date: 1666566000000, Close: 3.49},&#xD;&#xA;  { Date: 1667170800000, Close: 3.19},&#xD;&#xA;  { Date: 1668380400000, Close: 3.19},&#xD;&#xA;  { Date: 1670194800000, Close: 3.09},&#xD;&#xA;  { Date: 1681686000000, Close: 3.89},&#xD;&#xA;  { Date: 1682895600000, Close: 3.79},&#xD;&#xA;  { Date: 1696201200000, Close: 3.39},&#xD;&#xA;  { Date: 1696806000000, Close: 3.49},&#xD;&#xA;  { Date: 1699225200000, Close: 3.99},&#xD;&#xA;  { Date: 1699830000000, Close: 3.99},&#xD;&#xA;  { Date: 1702249200000, Close: 3.99},&#xD;&#xA;  { Date: 1702854000000, Close: 3.09},&#xD;&#xA;  { Date: 1703458800000, Close: 3.09},&#xD;&#xA;  { Date: 1705878000000, Close: 3.19},&#xD;&#xA;  { Date: 1708297200000, Close: 3.19},&#xD;&#xA;  { Date: 1708902000000, Close: 3.19},&#xD;&#xA;  { Date: 1709506800000, Close: 2.99},&#xD;&#xA;  { Date: 1710111600000, Close: 2.99},&#xD;&#xA;  { Date: 1727046000000, Close: 4.29},&#xD;&#xA;  { Date: 1727650800000, Close: 4.29},&#xD;&#xA;  { Date: 1728255600000, Close: 3.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Dragonair</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/018---dragonair/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/018---dragonair/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148981.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 3.49},&#xD;&#xA;  { Date: 1578006000000, Close: 3.49},&#xD;&#xA;  { Date: 1578092400000, Close: 4.49},&#xD;&#xA;  { Date: 1578524400000, Close: 4.49},&#xD;&#xA;  { Date: 1579129200000, Close: 4.99},&#xD;&#xA;  { Date: 1581030000000, Close: 4.79},&#xD;&#xA;  { Date: 1581462000000, Close: 4.99},&#xD;&#xA;  { Date: 1582758000000, Close: 5.49},&#xD;&#xA;  { Date: 1585090800000, Close: 4.99},&#xD;&#xA;  { Date: 1586818800000, Close: 4.99},&#xD;&#xA;  { Date: 1588892400000, Close: 7.99},&#xD;&#xA;  { Date: 1589324400000, Close: 7.49},&#xD;&#xA;  { Date: 1590620400000, Close: 8.99},&#xD;&#xA;  { Date: 1591311600000, Close: 9.99},&#xD;&#xA;  { Date: 1592521200000, Close: 10.99},&#xD;&#xA;  { Date: 1593039600000, Close: 9.99},&#xD;&#xA;  { Date: 1594249200000, Close: 10.49},&#xD;&#xA;  { Date: 1595286000000, Close: 9.99},&#xD;&#xA;  { Date: 1597964400000, Close: 12.99},&#xD;&#xA;  { Date: 1598482800000, Close: 11.99},&#xD;&#xA;  { Date: 1598655600000, Close: 11.99},&#xD;&#xA;  { Date: 1599174000000, Close: 12.49},&#xD;&#xA;  { Date: 1599606000000, Close: 12.89},&#xD;&#xA;  { Date: 1599865200000, Close: 12.89},&#xD;&#xA;  { Date: 1600210800000, Close: 12.89},&#xD;&#xA;  { Date: 1601938800000, Close: 11.99},&#xD;&#xA;  { Date: 1602543600000, Close: 12.49},&#xD;&#xA;  { Date: 1603148400000, Close: 12.79},&#xD;&#xA;  { Date: 1605049200000, Close: 14.99},&#xD;&#xA;  { Date: 1606863600000, Close: 15.99},&#xD;&#xA;  { Date: 1609282800000, Close: 14.89},&#xD;&#xA;  { Date: 1610578800000, Close: 13.99},&#xD;&#xA;  { Date: 1610665200000, Close: 12.99},&#xD;&#xA;  { Date: 1611702000000, Close: 12.49},&#xD;&#xA;  { Date: 1612911600000, Close: 11.99},&#xD;&#xA;  { Date: 1620860400000, Close: 10.99},&#xD;&#xA;  { Date: 1621378800000, Close: 14.99},&#xD;&#xA;  { Date: 1621465200000, Close: 13.99},&#xD;&#xA;  { Date: 1622242800000, Close: 11.99},&#xD;&#xA;  { Date: 1624489200000, Close: 10.99},&#xD;&#xA;  { Date: 1625266800000, Close: 11.49},&#xD;&#xA;  { Date: 1626994800000, Close: 9.99},&#xD;&#xA;  { Date: 1628550000000, Close: 8.79},&#xD;&#xA;  { Date: 1628722800000, Close: 7.99},&#xD;&#xA;  { Date: 1630623600000, Close: 7.49},&#xD;&#xA;  { Date: 1631660400000, Close: 6.99},&#xD;&#xA;  { Date: 1634943600000, Close: 7.99},&#xD;&#xA;  { Date: 1635894000000, Close: 7.99},&#xD;&#xA;  { Date: 1636153200000, Close: 7.99},&#xD;&#xA;  { Date: 1637190000000, Close: 7.99},&#xD;&#xA;  { Date: 1639090800000, Close: 9.99},&#xD;&#xA;  { Date: 1639522800000, Close: 8.79},&#xD;&#xA;  { Date: 1642114800000, Close: 9.39},&#xD;&#xA;  { Date: 1643238000000, Close: 10.99},&#xD;&#xA;  { Date: 1646089200000, Close: 11.99},&#xD;&#xA;  { Date: 1646348400000, Close: 12.99},&#xD;&#xA;  { Date: 1647298800000, Close: 11.49},&#xD;&#xA;  { Date: 1647385200000, Close: 10.29},&#xD;&#xA;  { Date: 1647817200000, Close: 9.99},&#xD;&#xA;  { Date: 1648767600000, Close: 8.79},&#xD;&#xA;  { Date: 1649804400000, Close: 8.19},&#xD;&#xA;  { Date: 1650754800000, Close: 7.59},&#xD;&#xA;  { Date: 1652396400000, Close: 8.99},&#xD;&#xA;  { Date: 1652655600000, Close: 8.49},&#xD;&#xA;  { Date: 1653346800000, Close: 7.49},&#xD;&#xA;  { Date: 1653433200000, Close: 6.49},&#xD;&#xA;  { Date: 1654210800000, Close: 6.09},&#xD;&#xA;  { Date: 1654642800000, Close: 5.59},&#xD;&#xA;  { Date: 1654902000000, Close: 5.59},&#xD;&#xA;  { Date: 1655334000000, Close: 5.49},&#xD;&#xA;  { Date: 1655766000000, Close: 5.39},&#xD;&#xA;  { Date: 1656543600000, Close: 5.89},&#xD;&#xA;  { Date: 1656889200000, Close: 6.29},&#xD;&#xA;  { Date: 1657321200000, Close: 6.29},&#xD;&#xA;  { Date: 1658358000000, Close: 6.99},&#xD;&#xA;  { Date: 1660604400000, Close: 9.99},&#xD;&#xA;  { Date: 1661554800000, Close: 9.99},&#xD;&#xA;  { Date: 1664233200000, Close: 10.99},&#xD;&#xA;  { Date: 1664406000000, Close: 10.99},&#xD;&#xA;  { Date: 1665788400000, Close: 11.99},&#xD;&#xA;  { Date: 1670367600000, Close: 12.99},&#xD;&#xA;  { Date: 1671058800000, Close: 11.49},&#xD;&#xA;  { Date: 1672441200000, Close: 11.99},&#xD;&#xA;  { Date: 1673910000000, Close: 12.99},&#xD;&#xA;  { Date: 1675292400000, Close: 12.99},&#xD;&#xA;  { Date: 1675724400000, Close: 11.49},&#xD;&#xA;  { Date: 1676415600000, Close: 11.49},&#xD;&#xA;  { Date: 1677798000000, Close: 11.99},&#xD;&#xA;  { Date: 1679785200000, Close: 11.99},&#xD;&#xA;  { Date: 1680217200000, Close: 11.99},&#xD;&#xA;  { Date: 1680649200000, Close: 12.99},&#xD;&#xA;  { Date: 1681340400000, Close: 12.99},&#xD;&#xA;  { Date: 1685055600000, Close: 14.99},&#xD;&#xA;  { Date: 1695682800000, Close: 14.99},&#xD;&#xA;  { Date: 1698879600000, Close: 16.99},&#xD;&#xA;  { Date: 1700694000000, Close: 9.99},&#xD;&#xA;  { Date: 1701212400000, Close: 16.99},&#xD;&#xA;  { Date: 1709334000000, Close: 17.99},&#xD;&#xA;  { Date: 1712962800000, Close: 17.99},&#xD;&#xA;  { Date: 1715641200000, Close: 17.99},&#xD;&#xA;  { Date: 1716764400000, Close: 17.99},&#xD;&#xA;  { Date: 1717714800000, Close: 17.99},&#xD;&#xA;  { Date: 1720825200000, Close: 17.99},&#xD;&#xA;  { Date: 1722898800000, Close: 18.99},&#xD;&#xA;  { Date: 1725922800000, Close: 18.99},&#xD;&#xA;  { Date: 1726527600000, Close: 18.99},&#xD;&#xA;  { Date: 1727737200000, Close: 19.99},&#xD;&#xA;  { Date: 1728428400000, Close: 19.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Dratini</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/026---dratini/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/026---dratini/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148984.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 0.99},&#xD;&#xA;  { Date: 1601247600000, Close: 0.99},&#xD;&#xA;  { Date: 1601852400000, Close: 0.99},&#xD;&#xA;  { Date: 1602457200000, Close: 0.99},&#xD;&#xA;  { Date: 1604876400000, Close: 3.99},&#xD;&#xA;  { Date: 1605481200000, Close: 4.99},&#xD;&#xA;  { Date: 1606086000000, Close: 4.99},&#xD;&#xA;  { Date: 1606690800000, Close: 4.99},&#xD;&#xA;  { Date: 1607295600000, Close: 4.99},&#xD;&#xA;  { Date: 1607900400000, Close: 4.99},&#xD;&#xA;  { Date: 1608505200000, Close: 4.49},&#xD;&#xA;  { Date: 1609110000000, Close: 4.49},&#xD;&#xA;  { Date: 1609714800000, Close: 3.99},&#xD;&#xA;  { Date: 1610233200000, Close: 3.99},&#xD;&#xA;  { Date: 1610924400000, Close: 3.49},&#xD;&#xA;  { Date: 1611529200000, Close: 3.59},&#xD;&#xA;  { Date: 1612134000000, Close: 3.59},&#xD;&#xA;  { Date: 1612738800000, Close: 3.49},&#xD;&#xA;  { Date: 1613343600000, Close: 3.49},&#xD;&#xA;  { Date: 1613948400000, Close: 3.49},&#xD;&#xA;  { Date: 1614553200000, Close: 3.49},&#xD;&#xA;  { Date: 1615158000000, Close: 2.99},&#xD;&#xA;  { Date: 1615762800000, Close: 2.99},&#xD;&#xA;  { Date: 1616367600000, Close: 2.99},&#xD;&#xA;  { Date: 1616972400000, Close: 2.99},&#xD;&#xA;  { Date: 1617577200000, Close: 2.49},&#xD;&#xA;  { Date: 1618182000000, Close: 2.49},&#xD;&#xA;  { Date: 1618786800000, Close: 2.29},&#xD;&#xA;  { Date: 1619391600000, Close: 2.29},&#xD;&#xA;  { Date: 1619996400000, Close: 1.99},&#xD;&#xA;  { Date: 1620601200000, Close: 1.89},&#xD;&#xA;  { Date: 1621206000000, Close: 1.79},&#xD;&#xA;  { Date: 1621810800000, Close: 1.79},&#xD;&#xA;  { Date: 1622415600000, Close: 1.49},&#xD;&#xA;  { Date: 1623020400000, Close: 1.69},&#xD;&#xA;  { Date: 1623625200000, Close: 1.59},&#xD;&#xA;  { Date: 1624230000000, Close: 1.39},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1628463600000, Close: 1.09},&#xD;&#xA;  { Date: 1629673200000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.19},&#xD;&#xA;  { Date: 1635116400000, Close: 0.89},&#xD;&#xA;  { Date: 1636930800000, Close: 0.89},&#xD;&#xA;  { Date: 1637535600000, Close: 0.89},&#xD;&#xA;  { Date: 1638140400000, Close: 0.89},&#xD;&#xA;  { Date: 1638745200000, Close: 0.89},&#xD;&#xA;  { Date: 1639350000000, Close: 0.89},&#xD;&#xA;  { Date: 1639954800000, Close: 0.89},&#xD;&#xA;  { Date: 1640559600000, Close: 0.89},&#xD;&#xA;  { Date: 1641164400000, Close: 0.89},&#xD;&#xA;  { Date: 1641769200000, Close: 0.89},&#xD;&#xA;  { Date: 1642374000000, Close: 0.89},&#xD;&#xA;  { Date: 1642978800000, Close: 0.89},&#xD;&#xA;  { Date: 1643583600000, Close: 0.89},&#xD;&#xA;  { Date: 1646002800000, Close: 1.29},&#xD;&#xA;  { Date: 1646607600000, Close: 1.29},&#xD;&#xA;  { Date: 1647212400000, Close: 0.99},&#xD;&#xA;  { Date: 1647817200000, Close: 0.99},&#xD;&#xA;  { Date: 1648422000000, Close: 0.99},&#xD;&#xA;  { Date: 1649026800000, Close: 0.99},&#xD;&#xA;  { Date: 1649631600000, Close: 0.99},&#xD;&#xA;  { Date: 1650236400000, Close: 0.99},&#xD;&#xA;  { Date: 1652050800000, Close: 1.09},&#xD;&#xA;  { Date: 1653260400000, Close: 1.19},&#xD;&#xA;  { Date: 1653865200000, Close: 1.19},&#xD;&#xA;  { Date: 1655074800000, Close: 1.09},&#xD;&#xA;  { Date: 1655679600000, Close: 0.99},&#xD;&#xA;  { Date: 1656284400000, Close: 0.99},&#xD;&#xA;  { Date: 1656889200000, Close: 0.99},&#xD;&#xA;  { Date: 1657494000000, Close: 0.99},&#xD;&#xA;  { Date: 1661727600000, Close: 1.09},&#xD;&#xA;  { Date: 1662332400000, Close: 1.09},&#xD;&#xA;  { Date: 1663542000000, Close: 1.09},&#xD;&#xA;  { Date: 1664146800000, Close: 1.09},&#xD;&#xA;  { Date: 1664751600000, Close: 1.09},&#xD;&#xA;  { Date: 1665356400000, Close: 1.09},&#xD;&#xA;  { Date: 1665961200000, Close: 1.09},&#xD;&#xA;  { Date: 1666566000000, Close: 1.09},&#xD;&#xA;  { Date: 1667170800000, Close: 1.09},&#xD;&#xA;  { Date: 1667775600000, Close: 1.09},&#xD;&#xA;  { Date: 1668380400000, Close: 1.09},&#xD;&#xA;  { Date: 1668985200000, Close: 1.09},&#xD;&#xA;  { Date: 1669590000000, Close: 1.09},&#xD;&#xA;  { Date: 1670194800000, Close: 1.09},&#xD;&#xA;  { Date: 1670799600000, Close: 1.09},&#xD;&#xA;  { Date: 1671404400000, Close: 1.09},&#xD;&#xA;  { Date: 1672009200000, Close: 1.09},&#xD;&#xA;  { Date: 1673823600000, Close: 1.09},&#xD;&#xA;  { Date: 1674428400000, Close: 1.09},&#xD;&#xA;  { Date: 1675033200000, Close: 1.09},&#xD;&#xA;  { Date: 1675638000000, Close: 1.09},&#xD;&#xA;  { Date: 1676242800000, Close: 1.09},&#xD;&#xA;  { Date: 1676847600000, Close: 1.09},&#xD;&#xA;  { Date: 1678057200000, Close: 1.19},&#xD;&#xA;  { Date: 1679871600000, Close: 1.29},&#xD;&#xA;  { Date: 1682290800000, Close: 1.29},&#xD;&#xA;  { Date: 1682895600000, Close: 1.29},&#xD;&#xA;  { Date: 1683500400000, Close: 1.29},&#xD;&#xA;  { Date: 1684105200000, Close: 1.29},&#xD;&#xA;  { Date: 1689548400000, Close: 1.99},&#xD;&#xA;  { Date: 1690153200000, Close: 1.69},&#xD;&#xA;  { Date: 1690758000000, Close: 1.69},&#xD;&#xA;  { Date: 1691362800000, Close: 1.69},&#xD;&#xA;  { Date: 1695596400000, Close: 1.79},&#xD;&#xA;  { Date: 1696201200000, Close: 1.79},&#xD;&#xA;  { Date: 1698620400000, Close: 2.29},&#xD;&#xA;  { Date: 1702854000000, Close: 1.59},&#xD;&#xA;  { Date: 1705878000000, Close: 1.99},&#xD;&#xA;  { Date: 1706482800000, Close: 1.99},&#xD;&#xA;  { Date: 1708297200000, Close: 1.59},&#xD;&#xA;  { Date: 1708902000000, Close: 1.29},&#xD;&#xA;  { Date: 1709506800000, Close: 1.29},&#xD;&#xA;  { Date: 1710111600000, Close: 1.29},&#xD;&#xA;  { Date: 1710716400000, Close: 1.09},&#xD;&#xA;  { Date: 1711321200000, Close: 1.09},&#xD;&#xA;  { Date: 1711926000000, Close: 1.09},&#xD;&#xA;  { Date: 1714950000000, Close: 0.99},&#xD;&#xA;  { Date: 1727046000000, Close: 0.99},&#xD;&#xA;  { Date: 1728255600000, Close: 1.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Drowzee</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/049---drowzee/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/049---drowzee/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148987.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1593817200000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 0.69},&#xD;&#xA;  { Date: 1601247600000, Close: 0.69},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1602457200000, Close: 0.69},&#xD;&#xA;  { Date: 1604271600000, Close: 0.69},&#xD;&#xA;  { Date: 1605481200000, Close: 0.69},&#xD;&#xA;  { Date: 1606086000000, Close: 0.69},&#xD;&#xA;  { Date: 1606690800000, Close: 0.69},&#xD;&#xA;  { Date: 1607295600000, Close: 0.69},&#xD;&#xA;  { Date: 1607900400000, Close: 0.69},&#xD;&#xA;  { Date: 1608505200000, Close: 0.69},&#xD;&#xA;  { Date: 1609110000000, Close: 0.69},&#xD;&#xA;  { Date: 1609714800000, Close: 0.69},&#xD;&#xA;  { Date: 1610233200000, Close: 0.69},&#xD;&#xA;  { Date: 1610924400000, Close: 0.69},&#xD;&#xA;  { Date: 1611529200000, Close: 0.69},&#xD;&#xA;  { Date: 1612134000000, Close: 0.69},&#xD;&#xA;  { Date: 1612738800000, Close: 0.69},&#xD;&#xA;  { Date: 1613343600000, Close: 0.69},&#xD;&#xA;  { Date: 1613948400000, Close: 0.69},&#xD;&#xA;  { Date: 1614553200000, Close: 0.69},&#xD;&#xA;  { Date: 1615158000000, Close: 0.69},&#xD;&#xA;  { Date: 1615762800000, Close: 0.69},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.59},&#xD;&#xA;  { Date: 1620601200000, Close: 0.59},&#xD;&#xA;  { Date: 1621206000000, Close: 0.59},&#xD;&#xA;  { Date: 1621810800000, Close: 0.59},&#xD;&#xA;  { Date: 1622415600000, Close: 0.59},&#xD;&#xA;  { Date: 1623020400000, Close: 0.59},&#xD;&#xA;  { Date: 1623625200000, Close: 0.59},&#xD;&#xA;  { Date: 1624230000000, Close: 0.59},&#xD;&#xA;  { Date: 1624834800000, Close: 0.59},&#xD;&#xA;  { Date: 1625439600000, Close: 0.59},&#xD;&#xA;  { Date: 1626044400000, Close: 0.59},&#xD;&#xA;  { Date: 1626649200000, Close: 0.59},&#xD;&#xA;  { Date: 1627254000000, Close: 0.59},&#xD;&#xA;  { Date: 1627858800000, Close: 0.59},&#xD;&#xA;  { Date: 1628463600000, Close: 0.59},&#xD;&#xA;  { Date: 1629068400000, Close: 0.59},&#xD;&#xA;  { Date: 1629673200000, Close: 0.59},&#xD;&#xA;  { Date: 1630278000000, Close: 0.59},&#xD;&#xA;  { Date: 1630882800000, Close: 0.59},&#xD;&#xA;  { Date: 1631487600000, Close: 0.59},&#xD;&#xA;  { Date: 1632092400000, Close: 0.59},&#xD;&#xA;  { Date: 1632697200000, Close: 0.59},&#xD;&#xA;  { Date: 1633302000000, Close: 0.59},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1639350000000, Close: 0.39},&#xD;&#xA;  { Date: 1639954800000, Close: 0.39},&#xD;&#xA;  { Date: 1640559600000, Close: 0.39},&#xD;&#xA;  { Date: 1641164400000, Close: 0.39},&#xD;&#xA;  { Date: 1641769200000, Close: 0.39},&#xD;&#xA;  { Date: 1642374000000, Close: 0.39},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.40},&#xD;&#xA;  { Date: 1646002800000, Close: 0.40},&#xD;&#xA;  { Date: 1646607600000, Close: 0.40},&#xD;&#xA;  { Date: 1647212400000, Close: 0.40},&#xD;&#xA;  { Date: 1647817200000, Close: 0.40},&#xD;&#xA;  { Date: 1648422000000, Close: 0.40},&#xD;&#xA;  { Date: 1649026800000, Close: 0.40},&#xD;&#xA;  { Date: 1649631600000, Close: 0.40},&#xD;&#xA;  { Date: 1650236400000, Close: 0.40},&#xD;&#xA;  { Date: 1650841200000, Close: 0.40},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.59},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.69},&#xD;&#xA;  { Date: 1682290800000, Close: 0.69},&#xD;&#xA;  { Date: 1682895600000, Close: 0.59},&#xD;&#xA;  { Date: 1683500400000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1707692400000, Close: 0.39},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.39},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;  { Date: 1710716400000, Close: 0.39},&#xD;&#xA;  { Date: 1711321200000, Close: 0.39},&#xD;&#xA;  { Date: 1715554800000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Dugtrio</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/019---dugtrio/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/019---dugtrio/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148989.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1578697200000, Close: 2.99},&#xD;&#xA;  { Date: 1579215600000, Close: 2.99},&#xD;&#xA;  { Date: 1581980400000, Close: 3.49},&#xD;&#xA;  { Date: 1582758000000, Close: 3.49},&#xD;&#xA;  { Date: 1583967600000, Close: 3.99},&#xD;&#xA;  { Date: 1584486000000, Close: 3.79},&#xD;&#xA;  { Date: 1585004400000, Close: 3.49},&#xD;&#xA;  { Date: 1585695600000, Close: 3.29},&#xD;&#xA;  { Date: 1586646000000, Close: 3.19},&#xD;&#xA;  { Date: 1587164400000, Close: 3.49},&#xD;&#xA;  { Date: 1587682800000, Close: 3.99},&#xD;&#xA;  { Date: 1589238000000, Close: 5.89},&#xD;&#xA;  { Date: 1589410800000, Close: 5.99},&#xD;&#xA;  { Date: 1590620400000, Close: 5.99},&#xD;&#xA;  { Date: 1591311600000, Close: 6.49},&#xD;&#xA;  { Date: 1591830000000, Close: 6.99},&#xD;&#xA;  { Date: 1593730800000, Close: 7.29},&#xD;&#xA;  { Date: 1595286000000, Close: 7.49},&#xD;&#xA;  { Date: 1595718000000, Close: 6.99},&#xD;&#xA;  { Date: 1596236400000, Close: 7.49},&#xD;&#xA;  { Date: 1596409200000, Close: 6.99},&#xD;&#xA;  { Date: 1596754800000, Close: 6.99},&#xD;&#xA;  { Date: 1598310000000, Close: 5.99},&#xD;&#xA;  { Date: 1599606000000, Close: 6.09},&#xD;&#xA;  { Date: 1600815600000, Close: 5.99},&#xD;&#xA;  { Date: 1602198000000, Close: 5.99},&#xD;&#xA;  { Date: 1602543600000, Close: 6.09},&#xD;&#xA;  { Date: 1603494000000, Close: 6.09},&#xD;&#xA;  { Date: 1604444400000, Close: 6.09},&#xD;&#xA;  { Date: 1605049200000, Close: 5.99},&#xD;&#xA;  { Date: 1605654000000, Close: 6.99},&#xD;&#xA;  { Date: 1606258800000, Close: 6.59},&#xD;&#xA;  { Date: 1606863600000, Close: 6.99},&#xD;&#xA;  { Date: 1607554800000, Close: 6.99},&#xD;&#xA;  { Date: 1608073200000, Close: 6.49},&#xD;&#xA;  { Date: 1608591600000, Close: 5.99},&#xD;&#xA;  { Date: 1609282800000, Close: 4.49},&#xD;&#xA;  { Date: 1609887600000, Close: 4.59},&#xD;&#xA;  { Date: 1611010800000, Close: 4.99},&#xD;&#xA;  { Date: 1612911600000, Close: 5.99},&#xD;&#xA;  { Date: 1617750000000, Close: 5.49},&#xD;&#xA;  { Date: 1618268400000, Close: 5.49},&#xD;&#xA;  { Date: 1618354800000, Close: 5.99},&#xD;&#xA;  { Date: 1618614000000, Close: 6.99},&#xD;&#xA;  { Date: 1619218800000, Close: 7.99},&#xD;&#xA;  { Date: 1620860400000, Close: 6.99},&#xD;&#xA;  { Date: 1621378800000, Close: 7.49},&#xD;&#xA;  { Date: 1622761200000, Close: 7.99},&#xD;&#xA;  { Date: 1624489200000, Close: 6.99},&#xD;&#xA;  { Date: 1625266800000, Close: 6.49},&#xD;&#xA;  { Date: 1625785200000, Close: 6.59},&#xD;&#xA;  { Date: 1626994800000, Close: 5.99},&#xD;&#xA;  { Date: 1628636400000, Close: 5.39},&#xD;&#xA;  { Date: 1629500400000, Close: 4.99},&#xD;&#xA;  { Date: 1632351600000, Close: 4.39},&#xD;&#xA;  { Date: 1632956400000, Close: 4.98},&#xD;&#xA;  { Date: 1633561200000, Close: 4.98},&#xD;&#xA;  { Date: 1633734000000, Close: 4.98},&#xD;&#xA;  { Date: 1634252400000, Close: 4.99},&#xD;&#xA;  { Date: 1636153200000, Close: 4.99},&#xD;&#xA;  { Date: 1638572400000, Close: 4.99},&#xD;&#xA;  { Date: 1639090800000, Close: 5.39},&#xD;&#xA;  { Date: 1639695600000, Close: 5.39},&#xD;&#xA;  { Date: 1639782000000, Close: 5.99},&#xD;&#xA;  { Date: 1641337200000, Close: 5.99},&#xD;&#xA;  { Date: 1643065200000, Close: 5.99},&#xD;&#xA;  { Date: 1643497200000, Close: 5.39},&#xD;&#xA;  { Date: 1644620400000, Close: 5.39},&#xD;&#xA;  { Date: 1646089200000, Close: 5.99},&#xD;&#xA;  { Date: 1646348400000, Close: 5.99},&#xD;&#xA;  { Date: 1649199600000, Close: 6.99},&#xD;&#xA;  { Date: 1651100400000, Close: 5.99},&#xD;&#xA;  { Date: 1652050800000, Close: 5.89},&#xD;&#xA;  { Date: 1652828400000, Close: 5.79},&#xD;&#xA;  { Date: 1654210800000, Close: 4.89},&#xD;&#xA;  { Date: 1654470000000, Close: 4.69},&#xD;&#xA;  { Date: 1654815600000, Close: 4.59},&#xD;&#xA;  { Date: 1655593200000, Close: 4.49},&#xD;&#xA;  { Date: 1656543600000, Close: 4.39},&#xD;&#xA;  { Date: 1657148400000, Close: 4.29},&#xD;&#xA;  { Date: 1657580400000, Close: 3.99},&#xD;&#xA;  { Date: 1661900400000, Close: 4.49},&#xD;&#xA;  { Date: 1664406000000, Close: 4.49},&#xD;&#xA;  { Date: 1664924400000, Close: 4.89},&#xD;&#xA;  { Date: 1667862000000, Close: 5.59},&#xD;&#xA;  { Date: 1670367600000, Close: 5.99},&#xD;&#xA;  { Date: 1672441200000, Close: 6.49},&#xD;&#xA;  { Date: 1673910000000, Close: 6.49},&#xD;&#xA;  { Date: 1674255600000, Close: 6.99},&#xD;&#xA;  { Date: 1677279600000, Close: 6.99},&#xD;&#xA;  { Date: 1678748400000, Close: 6.99},&#xD;&#xA;  { Date: 1679785200000, Close: 6.99},&#xD;&#xA;  { Date: 1682722800000, Close: 7.39},&#xD;&#xA;  { Date: 1686956400000, Close: 7.79},&#xD;&#xA;  { Date: 1694473200000, Close: 8.99},&#xD;&#xA;  { Date: 1695942000000, Close: 8.99},&#xD;&#xA;  { Date: 1698966000000, Close: 8.99},&#xD;&#xA;  { Date: 1707951600000, Close: 8.99},&#xD;&#xA;  { Date: 1709247600000, Close: 8.99},&#xD;&#xA;  { Date: 1712012400000, Close: 9.99},&#xD;&#xA;  { Date: 1712962800000, Close: 9.99},&#xD;&#xA;  { Date: 1714431600000, Close: 9.99},&#xD;&#xA;  { Date: 1715209200000, Close: 9.99},&#xD;&#xA;  { Date: 1717714800000, Close: 9.99},&#xD;&#xA;  { Date: 1720825200000, Close: 9.99},&#xD;&#xA;  { Date: 1725663600000, Close: 9.99},&#xD;&#xA;  { Date: 1726527600000, Close: 9.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Electabuzz</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/020---electabuzz/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/020---electabuzz/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148993.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1578524400000, Close: 1.79},&#xD;&#xA;  { Date: 1581030000000, Close: 3.89},&#xD;&#xA;  { Date: 1581462000000, Close: 3.89},&#xD;&#xA;  { Date: 1581634800000, Close: 3.99},&#xD;&#xA;  { Date: 1582239600000, Close: 4.49},&#xD;&#xA;  { Date: 1584054000000, Close: 3.89},&#xD;&#xA;  { Date: 1584572400000, Close: 3.49},&#xD;&#xA;  { Date: 1585090800000, Close: 2.99},&#xD;&#xA;  { Date: 1585782000000, Close: 2.49},&#xD;&#xA;  { Date: 1586646000000, Close: 2.59},&#xD;&#xA;  { Date: 1588633200000, Close: 3.99},&#xD;&#xA;  { Date: 1589238000000, Close: 4.49},&#xD;&#xA;  { Date: 1589929200000, Close: 4.99},&#xD;&#xA;  { Date: 1591225200000, Close: 5.99},&#xD;&#xA;  { Date: 1591743600000, Close: 6.99},&#xD;&#xA;  { Date: 1592521200000, Close: 7.99},&#xD;&#xA;  { Date: 1593039600000, Close: 8.09},&#xD;&#xA;  { Date: 1595890800000, Close: 8.99},&#xD;&#xA;  { Date: 1596754800000, Close: 8.99},&#xD;&#xA;  { Date: 1597100400000, Close: 8.49},&#xD;&#xA;  { Date: 1605567600000, Close: 8.49},&#xD;&#xA;  { Date: 1607554800000, Close: 8.49},&#xD;&#xA;  { Date: 1608073200000, Close: 7.99},&#xD;&#xA;  { Date: 1608591600000, Close: 7.49},&#xD;&#xA;  { Date: 1609282800000, Close: 5.49},&#xD;&#xA;  { Date: 1609887600000, Close: 4.99},&#xD;&#xA;  { Date: 1611183600000, Close: 5.49},&#xD;&#xA;  { Date: 1611270000000, Close: 5.19},&#xD;&#xA;  { Date: 1611788400000, Close: 4.99},&#xD;&#xA;  { Date: 1614121200000, Close: 4.99},&#xD;&#xA;  { Date: 1614207600000, Close: 5.99},&#xD;&#xA;  { Date: 1614380400000, Close: 5.99},&#xD;&#xA;  { Date: 1614812400000, Close: 5.99},&#xD;&#xA;  { Date: 1615244400000, Close: 5.99},&#xD;&#xA;  { Date: 1615503600000, Close: 6.99},&#xD;&#xA;  { Date: 1616022000000, Close: 6.99},&#xD;&#xA;  { Date: 1616540400000, Close: 7.49},&#xD;&#xA;  { Date: 1617058800000, Close: 7.99},&#xD;&#xA;  { Date: 1617663600000, Close: 8.99},&#xD;&#xA;  { Date: 1618009200000, Close: 9.99},&#xD;&#xA;  { Date: 1618614000000, Close: 8.99},&#xD;&#xA;  { Date: 1620860400000, Close: 7.99},&#xD;&#xA;  { Date: 1625785200000, Close: 8.49},&#xD;&#xA;  { Date: 1626303600000, Close: 7.99},&#xD;&#xA;  { Date: 1626908400000, Close: 7.49},&#xD;&#xA;  { Date: 1628722800000, Close: 6.79},&#xD;&#xA;  { Date: 1632524400000, Close: 6.99},&#xD;&#xA;  { Date: 1632870000000, Close: 6.99},&#xD;&#xA;  { Date: 1635375600000, Close: 6.99},&#xD;&#xA;  { Date: 1635462000000, Close: 7.99},&#xD;&#xA;  { Date: 1636153200000, Close: 7.99},&#xD;&#xA;  { Date: 1636671600000, Close: 7.39},&#xD;&#xA;  { Date: 1637362800000, Close: 6.99},&#xD;&#xA;  { Date: 1639090800000, Close: 6.99},&#xD;&#xA;  { Date: 1639782000000, Close: 7.99},&#xD;&#xA;  { Date: 1640905200000, Close: 7.99},&#xD;&#xA;  { Date: 1641250800000, Close: 7.39},&#xD;&#xA;  { Date: 1643238000000, Close: 6.79},&#xD;&#xA;  { Date: 1644879600000, Close: 6.19},&#xD;&#xA;  { Date: 1645830000000, Close: 5.59},&#xD;&#xA;  { Date: 1646175600000, Close: 4.99},&#xD;&#xA;  { Date: 1649458800000, Close: 5.49},&#xD;&#xA;  { Date: 1651100400000, Close: 5.69},&#xD;&#xA;  { Date: 1651705200000, Close: 5.69},&#xD;&#xA;  { Date: 1652396400000, Close: 5.69},&#xD;&#xA;  { Date: 1654210800000, Close: 5.99},&#xD;&#xA;  { Date: 1655852400000, Close: 5.99},&#xD;&#xA;  { Date: 1657148400000, Close: 6.99},&#xD;&#xA;  { Date: 1657321200000, Close: 6.99},&#xD;&#xA;  { Date: 1660086000000, Close: 7.99},&#xD;&#xA;  { Date: 1660604400000, Close: 6.99},&#xD;&#xA;  { Date: 1661900400000, Close: 7.99},&#xD;&#xA;  { Date: 1664233200000, Close: 7.99},&#xD;&#xA;  { Date: 1666134000000, Close: 7.99},&#xD;&#xA;  { Date: 1666738800000, Close: 7.99},&#xD;&#xA;  { Date: 1667170800000, Close: 7.39},&#xD;&#xA;  { Date: 1667862000000, Close: 7.39},&#xD;&#xA;  { Date: 1672441200000, Close: 6.99},&#xD;&#xA;  { Date: 1672786800000, Close: 6.39},&#xD;&#xA;  { Date: 1673910000000, Close: 6.09},&#xD;&#xA;  { Date: 1674774000000, Close: 6.09},&#xD;&#xA;  { Date: 1678748400000, Close: 7.79},&#xD;&#xA;  { Date: 1682722800000, Close: 8.59},&#xD;&#xA;  { Date: 1686956400000, Close: 8.99},&#xD;&#xA;  { Date: 1687647600000, Close: 8.39},&#xD;&#xA;  { Date: 1692658800000, Close: 8.99},&#xD;&#xA;  { Date: 1693522800000, Close: 8.49},&#xD;&#xA;  { Date: 1694473200000, Close: 6.79},&#xD;&#xA;  { Date: 1698966000000, Close: 7.49},&#xD;&#xA;  { Date: 1702594800000, Close: 7.49},&#xD;&#xA;  { Date: 1703631600000, Close: 7.99},&#xD;&#xA;  { Date: 1707519600000, Close: 7.99},&#xD;&#xA;  { Date: 1707865200000, Close: 7.99},&#xD;&#xA;  { Date: 1709593200000, Close: 8.99},&#xD;&#xA;  { Date: 1719874800000, Close: 8.99},&#xD;&#xA;  { Date: 1726527600000, Close: 8.99},&#xD;&#xA;  { Date: 1727046000000, Close: 8.39},&#xD;&#xA;  { Date: 1727996400000, Close: 7.99},&#xD;&#xA;  { Date: 1728428400000, Close: 7.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Electrode</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/021---electrode/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/021---electrode/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/148994.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 1.49},&#xD;&#xA;  { Date: 1578524400000, Close: 1.49},&#xD;&#xA;  { Date: 1578956400000, Close: 1.49},&#xD;&#xA;  { Date: 1579302000000, Close: 1.79},&#xD;&#xA;  { Date: 1580943600000, Close: 1.99},&#xD;&#xA;  { Date: 1582066800000, Close: 2.99},&#xD;&#xA;  { Date: 1583449200000, Close: 3.49},&#xD;&#xA;  { Date: 1584658800000, Close: 3.99},&#xD;&#xA;  { Date: 1585695600000, Close: 3.79},&#xD;&#xA;  { Date: 1586818800000, Close: 3.99},&#xD;&#xA;  { Date: 1589238000000, Close: 4.49},&#xD;&#xA;  { Date: 1589929200000, Close: 4.99},&#xD;&#xA;  { Date: 1591311600000, Close: 5.49},&#xD;&#xA;  { Date: 1591830000000, Close: 5.99},&#xD;&#xA;  { Date: 1596754800000, Close: 5.99},&#xD;&#xA;  { Date: 1597100400000, Close: 4.99},&#xD;&#xA;  { Date: 1598482800000, Close: 5.49},&#xD;&#xA;  { Date: 1599692400000, Close: 4.99},&#xD;&#xA;  { Date: 1600815600000, Close: 4.49},&#xD;&#xA;  { Date: 1601420400000, Close: 4.59},&#xD;&#xA;  { Date: 1603148400000, Close: 4.59},&#xD;&#xA;  { Date: 1603926000000, Close: 4.99},&#xD;&#xA;  { Date: 1604358000000, Close: 4.99},&#xD;&#xA;  { Date: 1604530800000, Close: 5.99},&#xD;&#xA;  { Date: 1607641200000, Close: 5.49},&#xD;&#xA;  { Date: 1608159600000, Close: 4.99},&#xD;&#xA;  { Date: 1608678000000, Close: 4.49},&#xD;&#xA;  { Date: 1609282800000, Close: 3.99},&#xD;&#xA;  { Date: 1609887600000, Close: 4.29},&#xD;&#xA;  { Date: 1610060400000, Close: 4.45},&#xD;&#xA;  { Date: 1611270000000, Close: 4.49},&#xD;&#xA;  { Date: 1611788400000, Close: 4.49},&#xD;&#xA;  { Date: 1612134000000, Close: 4.49},&#xD;&#xA;  { Date: 1612393200000, Close: 4.95},&#xD;&#xA;  { Date: 1612911600000, Close: 4.95},&#xD;&#xA;  { Date: 1614121200000, Close: 4.95},&#xD;&#xA;  { Date: 1614207600000, Close: 4.99},&#xD;&#xA;  { Date: 1614380400000, Close: 4.99},&#xD;&#xA;  { Date: 1614812400000, Close: 4.99},&#xD;&#xA;  { Date: 1614985200000, Close: 4.99},&#xD;&#xA;  { Date: 1616022000000, Close: 5.99},&#xD;&#xA;  { Date: 1618009200000, Close: 6.99},&#xD;&#xA;  { Date: 1618441200000, Close: 6.49},&#xD;&#xA;  { Date: 1619218800000, Close: 6.99},&#xD;&#xA;  { Date: 1619564400000, Close: 6.99},&#xD;&#xA;  { Date: 1620255600000, Close: 6.99},&#xD;&#xA;  { Date: 1620860400000, Close: 6.49},&#xD;&#xA;  { Date: 1621378800000, Close: 6.89},&#xD;&#xA;  { Date: 1622242800000, Close: 6.99},&#xD;&#xA;  { Date: 1624489200000, Close: 6.49},&#xD;&#xA;  { Date: 1625266800000, Close: 6.39},&#xD;&#xA;  { Date: 1625785200000, Close: 6.49},&#xD;&#xA;  { Date: 1626908400000, Close: 5.99},&#xD;&#xA;  { Date: 1628809200000, Close: 5.39},&#xD;&#xA;  { Date: 1629500400000, Close: 5.49},&#xD;&#xA;  { Date: 1630710000000, Close: 4.99},&#xD;&#xA;  { Date: 1631314800000, Close: 4.99},&#xD;&#xA;  { Date: 1632438000000, Close: 4.99},&#xD;&#xA;  { Date: 1633561200000, Close: 5.99},&#xD;&#xA;  { Date: 1634252400000, Close: 5.99},&#xD;&#xA;  { Date: 1634338800000, Close: 5.39},&#xD;&#xA;  { Date: 1634943600000, Close: 5.49},&#xD;&#xA;  { Date: 1635548400000, Close: 5.29},&#xD;&#xA;  { Date: 1637017200000, Close: 5.29},&#xD;&#xA;  { Date: 1637362800000, Close: 5.99},&#xD;&#xA;  { Date: 1644620400000, Close: 5.99},&#xD;&#xA;  { Date: 1645743600000, Close: 6.99},&#xD;&#xA;  { Date: 1647903600000, Close: 7.99},&#xD;&#xA;  { Date: 1649718000000, Close: 7.39},&#xD;&#xA;  { Date: 1651014000000, Close: 6.79},&#xD;&#xA;  { Date: 1652310000000, Close: 6.19},&#xD;&#xA;  { Date: 1655334000000, Close: 6.19},&#xD;&#xA;  { Date: 1657062000000, Close: 5.99},&#xD;&#xA;  { Date: 1657321200000, Close: 5.99},&#xD;&#xA;  { Date: 1660604400000, Close: 5.99},&#xD;&#xA;  { Date: 1664492400000, Close: 5.99},&#xD;&#xA;  { Date: 1664578800000, Close: 6.99},&#xD;&#xA;  { Date: 1667862000000, Close: 6.99},&#xD;&#xA;  { Date: 1668553200000, Close: 6.39},&#xD;&#xA;  { Date: 1672441200000, Close: 6.49},&#xD;&#xA;  { Date: 1674774000000, Close: 6.49},&#xD;&#xA;  { Date: 1676588400000, Close: 6.49},&#xD;&#xA;  { Date: 1677884400000, Close: 6.99},&#xD;&#xA;  { Date: 1678748400000, Close: 6.99},&#xD;&#xA;  { Date: 1679353200000, Close: 6.99},&#xD;&#xA;  { Date: 1679785200000, Close: 6.99},&#xD;&#xA;  { Date: 1680217200000, Close: 6.99},&#xD;&#xA;  { Date: 1681426800000, Close: 6.99},&#xD;&#xA;  { Date: 1682722800000, Close: 6.99},&#xD;&#xA;  { Date: 1684278000000, Close: 6.99},&#xD;&#xA;  { Date: 1688166000000, Close: 7.49},&#xD;&#xA;  { Date: 1692918000000, Close: 7.99},&#xD;&#xA;  { Date: 1695682800000, Close: 8.99},&#xD;&#xA;  { Date: 1698966000000, Close: 8.99},&#xD;&#xA;  { Date: 1702594800000, Close: 8.99},&#xD;&#xA;  { Date: 1703631600000, Close: 9.99},&#xD;&#xA;  { Date: 1705014000000, Close: 8.99},&#xD;&#xA;  { Date: 1707865200000, Close: 9.99},&#xD;&#xA;  { Date: 1711753200000, Close: 9.99},&#xD;&#xA;  { Date: 1714431600000, Close: 9.99},&#xD;&#xA;  { Date: 1719874800000, Close: 9.99},&#xD;&#xA;  { Date: 1721862000000, Close: 8.79},&#xD;&#xA;  { Date: 1723158000000, Close: 8.19},&#xD;&#xA;  { Date: 1724367600000, Close: 7.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Energy Removal</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/092---energy-removal/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/092---energy-removal/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149000.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.39},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.35},&#xD;&#xA;  { Date: 1603666800000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.59},&#xD;&#xA;  { Date: 1606690800000, Close: 0.59},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 0.99},&#xD;&#xA;  { Date: 1608505200000, Close: 0.89},&#xD;&#xA;  { Date: 1609110000000, Close: 0.89},&#xD;&#xA;  { Date: 1609714800000, Close: 0.69},&#xD;&#xA;  { Date: 1610233200000, Close: 0.69},&#xD;&#xA;  { Date: 1610924400000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1612134000000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.49},&#xD;&#xA;  { Date: 1613343600000, Close: 0.49},&#xD;&#xA;  { Date: 1613948400000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.49},&#xD;&#xA;  { Date: 1615762800000, Close: 0.49},&#xD;&#xA;  { Date: 1616367600000, Close: 0.49},&#xD;&#xA;  { Date: 1616972400000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.39},&#xD;&#xA;  { Date: 1619391600000, Close: 0.39},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.39},&#xD;&#xA;  { Date: 1624834800000, Close: 0.39},&#xD;&#xA;  { Date: 1625439600000, Close: 0.35},&#xD;&#xA;  { Date: 1626044400000, Close: 0.35},&#xD;&#xA;  { Date: 1626649200000, Close: 0.35},&#xD;&#xA;  { Date: 1627254000000, Close: 0.35},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1629068400000, Close: 0.35},&#xD;&#xA;  { Date: 1629673200000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1630882800000, Close: 0.35},&#xD;&#xA;  { Date: 1631487600000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.35},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1680476400000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.39},&#xD;&#xA;  { Date: 1686524400000, Close: 0.49},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1691362800000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1697410800000, Close: 0.49},&#xD;&#xA;  { Date: 1698015600000, Close: 0.49},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1699225200000, Close: 0.49},&#xD;&#xA;  { Date: 1699830000000, Close: 0.49},&#xD;&#xA;  { Date: 1700434800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.39},&#xD;&#xA;  { Date: 1701644400000, Close: 0.39},&#xD;&#xA;  { Date: 1702249200000, Close: 0.35},&#xD;&#xA;  { Date: 1702854000000, Close: 0.35},&#xD;&#xA;  { Date: 1703458800000, Close: 0.35},&#xD;&#xA;  { Date: 1704063600000, Close: 0.35},&#xD;&#xA;  { Date: 1705273200000, Close: 0.39},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.39},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;  { Date: 1710716400000, Close: 0.39},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1716764400000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.39},&#xD;&#xA;  { Date: 1727650800000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Energy Retrieval</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/081---energy-retrieval/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/081---energy-retrieval/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149001.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1601247600000, Close: 0.59},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 1.99},&#xD;&#xA;  { Date: 1606086000000, Close: 1.99},&#xD;&#xA;  { Date: 1606690800000, Close: 1.99},&#xD;&#xA;  { Date: 1607295600000, Close: 1.99},&#xD;&#xA;  { Date: 1607900400000, Close: 1.99},&#xD;&#xA;  { Date: 1608505200000, Close: 1.99},&#xD;&#xA;  { Date: 1609110000000, Close: 1.79},&#xD;&#xA;  { Date: 1609714800000, Close: 1.39},&#xD;&#xA;  { Date: 1610233200000, Close: 1.29},&#xD;&#xA;  { Date: 1610924400000, Close: 0.99},&#xD;&#xA;  { Date: 1611529200000, Close: 0.99},&#xD;&#xA;  { Date: 1612134000000, Close: 0.99},&#xD;&#xA;  { Date: 1612738800000, Close: 0.99},&#xD;&#xA;  { Date: 1613343600000, Close: 0.99},&#xD;&#xA;  { Date: 1613948400000, Close: 0.99},&#xD;&#xA;  { Date: 1614553200000, Close: 0.99},&#xD;&#xA;  { Date: 1615158000000, Close: 0.99},&#xD;&#xA;  { Date: 1615762800000, Close: 0.99},&#xD;&#xA;  { Date: 1616367600000, Close: 0.99},&#xD;&#xA;  { Date: 1616972400000, Close: 0.99},&#xD;&#xA;  { Date: 1617577200000, Close: 0.99},&#xD;&#xA;  { Date: 1618182000000, Close: 0.99},&#xD;&#xA;  { Date: 1618786800000, Close: 0.89},&#xD;&#xA;  { Date: 1619391600000, Close: 0.89},&#xD;&#xA;  { Date: 1619996400000, Close: 0.89},&#xD;&#xA;  { Date: 1620601200000, Close: 0.89},&#xD;&#xA;  { Date: 1621206000000, Close: 0.89},&#xD;&#xA;  { Date: 1621810800000, Close: 0.89},&#xD;&#xA;  { Date: 1622415600000, Close: 0.89},&#xD;&#xA;  { Date: 1623020400000, Close: 0.89},&#xD;&#xA;  { Date: 1623625200000, Close: 0.89},&#xD;&#xA;  { Date: 1624230000000, Close: 0.79},&#xD;&#xA;  { Date: 1624834800000, Close: 0.79},&#xD;&#xA;  { Date: 1625439600000, Close: 0.69},&#xD;&#xA;  { Date: 1626044400000, Close: 0.69},&#xD;&#xA;  { Date: 1626649200000, Close: 0.69},&#xD;&#xA;  { Date: 1627254000000, Close: 0.69},&#xD;&#xA;  { Date: 1627858800000, Close: 0.59},&#xD;&#xA;  { Date: 1628463600000, Close: 0.59},&#xD;&#xA;  { Date: 1629068400000, Close: 0.59},&#xD;&#xA;  { Date: 1629673200000, Close: 0.59},&#xD;&#xA;  { Date: 1630278000000, Close: 0.59},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.39},&#xD;&#xA;  { Date: 1632697200000, Close: 0.39},&#xD;&#xA;  { Date: 1633302000000, Close: 0.39},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.39},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1675638000000, Close: 0.39},&#xD;&#xA;  { Date: 1676242800000, Close: 0.39},&#xD;&#xA;  { Date: 1676847600000, Close: 0.39},&#xD;&#xA;  { Date: 1677452400000, Close: 0.39},&#xD;&#xA;  { Date: 1678057200000, Close: 0.39},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.39},&#xD;&#xA;  { Date: 1686524400000, Close: 0.39},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1690153200000, Close: 0.49},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1691362800000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.49},&#xD;&#xA;  { Date: 1692572400000, Close: 0.49},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.39},&#xD;&#xA;  { Date: 1698015600000, Close: 0.49},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1699225200000, Close: 0.49},&#xD;&#xA;  { Date: 1699830000000, Close: 0.49},&#xD;&#xA;  { Date: 1700434800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.49},&#xD;&#xA;  { Date: 1701644400000, Close: 0.49},&#xD;&#xA;  { Date: 1702249200000, Close: 0.49},&#xD;&#xA;  { Date: 1702854000000, Close: 0.39},&#xD;&#xA;  { Date: 1705273200000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.39},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Farfetch&#39;d</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/027---farfetchd/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/027---farfetchd/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149042.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1603062000000, Close: 0.69},&#xD;&#xA;  { Date: 1606086000000, Close: 0.79},&#xD;&#xA;  { Date: 1607900400000, Close: 1.09},&#xD;&#xA;  { Date: 1608505200000, Close: 1.09},&#xD;&#xA;  { Date: 1609110000000, Close: 1.09},&#xD;&#xA;  { Date: 1609714800000, Close: 1.29},&#xD;&#xA;  { Date: 1610924400000, Close: 1.79},&#xD;&#xA;  { Date: 1611529200000, Close: 1.99},&#xD;&#xA;  { Date: 1612134000000, Close: 2.29},&#xD;&#xA;  { Date: 1612738800000, Close: 2.45},&#xD;&#xA;  { Date: 1613343600000, Close: 2.45},&#xD;&#xA;  { Date: 1613948400000, Close: 2.45},&#xD;&#xA;  { Date: 1614553200000, Close: 2.45},&#xD;&#xA;  { Date: 1615158000000, Close: 2.45},&#xD;&#xA;  { Date: 1615762800000, Close: 2.45},&#xD;&#xA;  { Date: 1616367600000, Close: 2.45},&#xD;&#xA;  { Date: 1616972400000, Close: 2.45},&#xD;&#xA;  { Date: 1617577200000, Close: 2.45},&#xD;&#xA;  { Date: 1618182000000, Close: 2.29},&#xD;&#xA;  { Date: 1618786800000, Close: 1.99},&#xD;&#xA;  { Date: 1619391600000, Close: 1.99},&#xD;&#xA;  { Date: 1619996400000, Close: 1.79},&#xD;&#xA;  { Date: 1620601200000, Close: 1.49},&#xD;&#xA;  { Date: 1621206000000, Close: 1.59},&#xD;&#xA;  { Date: 1621810800000, Close: 1.29},&#xD;&#xA;  { Date: 1622415600000, Close: 1.09},&#xD;&#xA;  { Date: 1623020400000, Close: 1.09},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 1.09},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1628463600000, Close: 1.09},&#xD;&#xA;  { Date: 1629673200000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.29},&#xD;&#xA;  { Date: 1634511600000, Close: 1.49},&#xD;&#xA;  { Date: 1635116400000, Close: 1.49},&#xD;&#xA;  { Date: 1635721200000, Close: 1.79},&#xD;&#xA;  { Date: 1644188400000, Close: 2.49},&#xD;&#xA;  { Date: 1644793200000, Close: 2.49},&#xD;&#xA;  { Date: 1645398000000, Close: 2.49},&#xD;&#xA;  { Date: 1646002800000, Close: 2.49},&#xD;&#xA;  { Date: 1646607600000, Close: 2.49},&#xD;&#xA;  { Date: 1647212400000, Close: 2.19},&#xD;&#xA;  { Date: 1647817200000, Close: 2.19},&#xD;&#xA;  { Date: 1648422000000, Close: 2.19},&#xD;&#xA;  { Date: 1649026800000, Close: 1.89},&#xD;&#xA;  { Date: 1649631600000, Close: 1.89},&#xD;&#xA;  { Date: 1650236400000, Close: 1.89},&#xD;&#xA;  { Date: 1650841200000, Close: 1.89},&#xD;&#xA;  { Date: 1651446000000, Close: 1.49},&#xD;&#xA;  { Date: 1652050800000, Close: 1.49},&#xD;&#xA;  { Date: 1652655600000, Close: 1.49},&#xD;&#xA;  { Date: 1653260400000, Close: 1.49},&#xD;&#xA;  { Date: 1653865200000, Close: 1.49},&#xD;&#xA;  { Date: 1654470000000, Close: 1.49},&#xD;&#xA;  { Date: 1655074800000, Close: 1.19},&#xD;&#xA;  { Date: 1655679600000, Close: 1.19},&#xD;&#xA;  { Date: 1656284400000, Close: 0.99},&#xD;&#xA;  { Date: 1656889200000, Close: 0.99},&#xD;&#xA;  { Date: 1657494000000, Close: 0.99},&#xD;&#xA;  { Date: 1658098800000, Close: 0.99},&#xD;&#xA;  { Date: 1658703600000, Close: 0.99},&#xD;&#xA;  { Date: 1659308400000, Close: 0.99},&#xD;&#xA;  { Date: 1661727600000, Close: 0.99},&#xD;&#xA;  { Date: 1662332400000, Close: 0.99},&#xD;&#xA;  { Date: 1663542000000, Close: 0.99},&#xD;&#xA;  { Date: 1664146800000, Close: 0.99},&#xD;&#xA;  { Date: 1664751600000, Close: 0.99},&#xD;&#xA;  { Date: 1665356400000, Close: 0.99},&#xD;&#xA;  { Date: 1665961200000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 0.99},&#xD;&#xA;  { Date: 1667170800000, Close: 0.99},&#xD;&#xA;  { Date: 1667775600000, Close: 0.99},&#xD;&#xA;  { Date: 1668380400000, Close: 0.99},&#xD;&#xA;  { Date: 1668985200000, Close: 0.99},&#xD;&#xA;  { Date: 1669590000000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 0.89},&#xD;&#xA;  { Date: 1670799600000, Close: 0.89},&#xD;&#xA;  { Date: 1671404400000, Close: 0.79},&#xD;&#xA;  { Date: 1672009200000, Close: 0.79},&#xD;&#xA;  { Date: 1672614000000, Close: 0.79},&#xD;&#xA;  { Date: 1673218800000, Close: 0.79},&#xD;&#xA;  { Date: 1673823600000, Close: 0.79},&#xD;&#xA;  { Date: 1674428400000, Close: 0.79},&#xD;&#xA;  { Date: 1677452400000, Close: 0.79},&#xD;&#xA;  { Date: 1679871600000, Close: 0.89},&#xD;&#xA;  { Date: 1681081200000, Close: 0.89},&#xD;&#xA;  { Date: 1681686000000, Close: 0.89},&#xD;&#xA;  { Date: 1682290800000, Close: 0.89},&#xD;&#xA;  { Date: 1688338800000, Close: 0.69},&#xD;&#xA;  { Date: 1696201200000, Close: 0.59},&#xD;&#xA;  { Date: 1704668400000, Close: 0.69},&#xD;&#xA;  { Date: 1708297200000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1715554800000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.79},&#xD;&#xA;  { Date: 1728255600000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Fighting Energy</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/097---fighting-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/097---fighting-energy/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149046.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.35},&#xD;&#xA;  { Date: 1605481200000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.35},&#xD;&#xA;  { Date: 1607295600000, Close: 0.35},&#xD;&#xA;  { Date: 1607900400000, Close: 0.35},&#xD;&#xA;  { Date: 1608505200000, Close: 0.35},&#xD;&#xA;  { Date: 1609110000000, Close: 0.35},&#xD;&#xA;  { Date: 1609714800000, Close: 0.35},&#xD;&#xA;  { Date: 1610233200000, Close: 0.35},&#xD;&#xA;  { Date: 1610924400000, Close: 0.35},&#xD;&#xA;  { Date: 1611529200000, Close: 0.35},&#xD;&#xA;  { Date: 1612134000000, Close: 0.35},&#xD;&#xA;  { Date: 1612738800000, Close: 0.35},&#xD;&#xA;  { Date: 1613343600000, Close: 0.35},&#xD;&#xA;  { Date: 1613948400000, Close: 0.35},&#xD;&#xA;  { Date: 1614553200000, Close: 0.35},&#xD;&#xA;  { Date: 1615158000000, Close: 0.35},&#xD;&#xA;  { Date: 1615762800000, Close: 0.35},&#xD;&#xA;  { Date: 1616367600000, Close: 0.35},&#xD;&#xA;  { Date: 1616972400000, Close: 0.35},&#xD;&#xA;  { Date: 1617577200000, Close: 0.35},&#xD;&#xA;  { Date: 1618182000000, Close: 0.35},&#xD;&#xA;  { Date: 1618786800000, Close: 0.35},&#xD;&#xA;  { Date: 1619391600000, Close: 0.35},&#xD;&#xA;  { Date: 1619996400000, Close: 0.35},&#xD;&#xA;  { Date: 1620601200000, Close: 0.35},&#xD;&#xA;  { Date: 1621206000000, Close: 0.35},&#xD;&#xA;  { Date: 1621810800000, Close: 0.35},&#xD;&#xA;  { Date: 1622415600000, Close: 0.35},&#xD;&#xA;  { Date: 1623020400000, Close: 0.35},&#xD;&#xA;  { Date: 1623625200000, Close: 0.35},&#xD;&#xA;  { Date: 1624230000000, Close: 0.35},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1625439600000, Close: 0.35},&#xD;&#xA;  { Date: 1626044400000, Close: 0.35},&#xD;&#xA;  { Date: 1626649200000, Close: 0.35},&#xD;&#xA;  { Date: 1627254000000, Close: 0.35},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1629068400000, Close: 0.35},&#xD;&#xA;  { Date: 1629673200000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1630882800000, Close: 0.35},&#xD;&#xA;  { Date: 1631487600000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.35},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.49},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.49},&#xD;&#xA;  { Date: 1683500400000, Close: 0.49},&#xD;&#xA;  { Date: 1684105200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1685919600000, Close: 0.49},&#xD;&#xA;  { Date: 1686524400000, Close: 0.49},&#xD;&#xA;  { Date: 1687129200000, Close: 0.49},&#xD;&#xA;  { Date: 1687734000000, Close: 0.49},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;  { Date: 1688943600000, Close: 0.49},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1690153200000, Close: 0.49},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1691362800000, Close: 0.49},&#xD;&#xA;  { Date: 1691967600000, Close: 0.39},&#xD;&#xA;  { Date: 1692572400000, Close: 0.39},&#xD;&#xA;  { Date: 1693177200000, Close: 0.39},&#xD;&#xA;  { Date: 1693782000000, Close: 0.39},&#xD;&#xA;  { Date: 1694386800000, Close: 0.39},&#xD;&#xA;  { Date: 1694991600000, Close: 0.39},&#xD;&#xA;  { Date: 1695596400000, Close: 0.35},&#xD;&#xA;  { Date: 1696201200000, Close: 0.35},&#xD;&#xA;  { Date: 1696806000000, Close: 0.35},&#xD;&#xA;  { Date: 1697410800000, Close: 0.35},&#xD;&#xA;  { Date: 1698015600000, Close: 0.35},&#xD;&#xA;  { Date: 1698620400000, Close: 0.35},&#xD;&#xA;  { Date: 1699225200000, Close: 0.35},&#xD;&#xA;  { Date: 1699830000000, Close: 0.35},&#xD;&#xA;  { Date: 1700434800000, Close: 0.35},&#xD;&#xA;  { Date: 1701039600000, Close: 0.35},&#xD;&#xA;  { Date: 1701644400000, Close: 0.35},&#xD;&#xA;  { Date: 1702249200000, Close: 0.35},&#xD;&#xA;  { Date: 1702854000000, Close: 0.35},&#xD;&#xA;  { Date: 1703458800000, Close: 0.35},&#xD;&#xA;  { Date: 1704063600000, Close: 0.35},&#xD;&#xA;  { Date: 1704668400000, Close: 0.35},&#xD;&#xA;  { Date: 1705273200000, Close: 0.35},&#xD;&#xA;  { Date: 1705878000000, Close: 0.35},&#xD;&#xA;  { Date: 1706482800000, Close: 0.35},&#xD;&#xA;  { Date: 1707087600000, Close: 0.35},&#xD;&#xA;  { Date: 1707692400000, Close: 0.35},&#xD;&#xA;  { Date: 1708297200000, Close: 0.35},&#xD;&#xA;  { Date: 1708902000000, Close: 0.35},&#xD;&#xA;  { Date: 1709506800000, Close: 0.35},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1711321200000, Close: 0.49},&#xD;&#xA;  { Date: 1711926000000, Close: 0.49},&#xD;&#xA;  { Date: 1712530800000, Close: 0.49},&#xD;&#xA;  { Date: 1716159600000, Close: 0.49},&#xD;&#xA;  { Date: 1716764400000, Close: 0.49},&#xD;&#xA;  { Date: 1717369200000, Close: 0.49},&#xD;&#xA;  { Date: 1717974000000, Close: 0.49},&#xD;&#xA;  { Date: 1718578800000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.49},&#xD;&#xA;  { Date: 1719788400000, Close: 0.49},&#xD;&#xA;  { Date: 1720393200000, Close: 0.49},&#xD;&#xA;  { Date: 1720998000000, Close: 0.49},&#xD;&#xA;  { Date: 1721602800000, Close: 0.49},&#xD;&#xA;  { Date: 1722207600000, Close: 0.49},&#xD;&#xA;  { Date: 1722812400000, Close: 0.49},&#xD;&#xA;  { Date: 1723417200000, Close: 0.49},&#xD;&#xA;  { Date: 1724022000000, Close: 0.49},&#xD;&#xA;  { Date: 1724626800000, Close: 0.49},&#xD;&#xA;  { Date: 1725231600000, Close: 0.39},&#xD;&#xA;  { Date: 1725836400000, Close: 0.39},&#xD;&#xA;  { Date: 1726441200000, Close: 0.39},&#xD;&#xA;  { Date: 1727046000000, Close: 0.39},&#xD;&#xA;  { Date: 1727650800000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Fire Energy</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/098---fire-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/098---fire-energy/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149049.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.39},&#xD;&#xA;  { Date: 1603062000000, Close: 0.39},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1604271600000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1610233200000, Close: 0.39},&#xD;&#xA;  { Date: 1610924400000, Close: 0.39},&#xD;&#xA;  { Date: 1611529200000, Close: 0.39},&#xD;&#xA;  { Date: 1612134000000, Close: 0.39},&#xD;&#xA;  { Date: 1612738800000, Close: 0.49},&#xD;&#xA;  { Date: 1613343600000, Close: 0.49},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1626649200000, Close: 0.39},&#xD;&#xA;  { Date: 1627254000000, Close: 0.39},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1629068400000, Close: 0.35},&#xD;&#xA;  { Date: 1629673200000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1630882800000, Close: 0.35},&#xD;&#xA;  { Date: 1631487600000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.35},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.20},&#xD;&#xA;  { Date: 1648422000000, Close: 0.20},&#xD;&#xA;  { Date: 1649026800000, Close: 0.20},&#xD;&#xA;  { Date: 1649631600000, Close: 0.20},&#xD;&#xA;  { Date: 1650236400000, Close: 0.20},&#xD;&#xA;  { Date: 1650841200000, Close: 0.20},&#xD;&#xA;  { Date: 1651446000000, Close: 0.20},&#xD;&#xA;  { Date: 1652050800000, Close: 0.20},&#xD;&#xA;  { Date: 1652655600000, Close: 0.20},&#xD;&#xA;  { Date: 1653260400000, Close: 0.20},&#xD;&#xA;  { Date: 1653865200000, Close: 0.20},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.39},&#xD;&#xA;  { Date: 1682895600000, Close: 0.39},&#xD;&#xA;  { Date: 1683500400000, Close: 0.39},&#xD;&#xA;  { Date: 1684105200000, Close: 0.39},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1685314800000, Close: 0.39},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1691362800000, Close: 0.49},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.49},&#xD;&#xA;  { Date: 1694386800000, Close: 0.49},&#xD;&#xA;  { Date: 1694991600000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1696806000000, Close: 0.39},&#xD;&#xA;  { Date: 1697410800000, Close: 0.39},&#xD;&#xA;  { Date: 1698015600000, Close: 0.39},&#xD;&#xA;  { Date: 1698620400000, Close: 0.39},&#xD;&#xA;  { Date: 1699225200000, Close: 0.39},&#xD;&#xA;  { Date: 1699830000000, Close: 0.39},&#xD;&#xA;  { Date: 1700434800000, Close: 0.39},&#xD;&#xA;  { Date: 1701039600000, Close: 0.49},&#xD;&#xA;  { Date: 1705273200000, Close: 0.39},&#xD;&#xA;  { Date: 1705878000000, Close: 0.39},&#xD;&#xA;  { Date: 1706482800000, Close: 0.39},&#xD;&#xA;  { Date: 1707087600000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.39},&#xD;&#xA;  { Date: 1715554800000, Close: 0.39},&#xD;&#xA;  { Date: 1716159600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Full Heal</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/082---full-heal/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/082---full-heal/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149056.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.89},&#xD;&#xA;  { Date: 1593385200000, Close: 0.89},&#xD;&#xA;  { Date: 1593817200000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 0.99},&#xD;&#xA;  { Date: 1603062000000, Close: 1.19},&#xD;&#xA;  { Date: 1605481200000, Close: 2.99},&#xD;&#xA;  { Date: 1606086000000, Close: 2.99},&#xD;&#xA;  { Date: 1606690800000, Close: 2.99},&#xD;&#xA;  { Date: 1607295600000, Close: 2.99},&#xD;&#xA;  { Date: 1607900400000, Close: 2.99},&#xD;&#xA;  { Date: 1608505200000, Close: 2.99},&#xD;&#xA;  { Date: 1609110000000, Close: 2.49},&#xD;&#xA;  { Date: 1609714800000, Close: 2.49},&#xD;&#xA;  { Date: 1610233200000, Close: 2.49},&#xD;&#xA;  { Date: 1610924400000, Close: 2.29},&#xD;&#xA;  { Date: 1611529200000, Close: 2.29},&#xD;&#xA;  { Date: 1612134000000, Close: 2.09},&#xD;&#xA;  { Date: 1612738800000, Close: 2.19},&#xD;&#xA;  { Date: 1613343600000, Close: 2.19},&#xD;&#xA;  { Date: 1613948400000, Close: 1.99},&#xD;&#xA;  { Date: 1614553200000, Close: 2.09},&#xD;&#xA;  { Date: 1615158000000, Close: 2.09},&#xD;&#xA;  { Date: 1615762800000, Close: 2.09},&#xD;&#xA;  { Date: 1616367600000, Close: 2.09},&#xD;&#xA;  { Date: 1616972400000, Close: 2.09},&#xD;&#xA;  { Date: 1617577200000, Close: 2.09},&#xD;&#xA;  { Date: 1618182000000, Close: 2.09},&#xD;&#xA;  { Date: 1618786800000, Close: 1.99},&#xD;&#xA;  { Date: 1619391600000, Close: 1.99},&#xD;&#xA;  { Date: 1619996400000, Close: 1.99},&#xD;&#xA;  { Date: 1620601200000, Close: 1.99},&#xD;&#xA;  { Date: 1621206000000, Close: 1.79},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1622415600000, Close: 1.29},&#xD;&#xA;  { Date: 1623020400000, Close: 1.39},&#xD;&#xA;  { Date: 1623625200000, Close: 1.39},&#xD;&#xA;  { Date: 1624230000000, Close: 1.29},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1628463600000, Close: 1.09},&#xD;&#xA;  { Date: 1629068400000, Close: 1.09},&#xD;&#xA;  { Date: 1629673200000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 1.09},&#xD;&#xA;  { Date: 1631487600000, Close: 1.09},&#xD;&#xA;  { Date: 1632092400000, Close: 1.09},&#xD;&#xA;  { Date: 1632697200000, Close: 1.09},&#xD;&#xA;  { Date: 1633302000000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.09},&#xD;&#xA;  { Date: 1634511600000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 1.09},&#xD;&#xA;  { Date: 1635721200000, Close: 1.09},&#xD;&#xA;  { Date: 1636326000000, Close: 1.09},&#xD;&#xA;  { Date: 1636930800000, Close: 1.09},&#xD;&#xA;  { Date: 1637535600000, Close: 1.09},&#xD;&#xA;  { Date: 1638140400000, Close: 1.09},&#xD;&#xA;  { Date: 1638745200000, Close: 0.99},&#xD;&#xA;  { Date: 1639350000000, Close: 0.99},&#xD;&#xA;  { Date: 1639954800000, Close: 0.99},&#xD;&#xA;  { Date: 1640559600000, Close: 0.89},&#xD;&#xA;  { Date: 1641164400000, Close: 0.89},&#xD;&#xA;  { Date: 1641769200000, Close: 0.89},&#xD;&#xA;  { Date: 1642374000000, Close: 0.89},&#xD;&#xA;  { Date: 1642978800000, Close: 0.89},&#xD;&#xA;  { Date: 1643583600000, Close: 0.89},&#xD;&#xA;  { Date: 1644188400000, Close: 0.89},&#xD;&#xA;  { Date: 1644793200000, Close: 0.89},&#xD;&#xA;  { Date: 1649026800000, Close: 1.09},&#xD;&#xA;  { Date: 1663542000000, Close: 0.99},&#xD;&#xA;  { Date: 1664146800000, Close: 0.99},&#xD;&#xA;  { Date: 1664751600000, Close: 0.99},&#xD;&#xA;  { Date: 1665356400000, Close: 0.99},&#xD;&#xA;  { Date: 1665961200000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 0.99},&#xD;&#xA;  { Date: 1667170800000, Close: 0.99},&#xD;&#xA;  { Date: 1667775600000, Close: 0.99},&#xD;&#xA;  { Date: 1668380400000, Close: 0.99},&#xD;&#xA;  { Date: 1668985200000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 1.09},&#xD;&#xA;  { Date: 1670799600000, Close: 1.09},&#xD;&#xA;  { Date: 1671404400000, Close: 1.09},&#xD;&#xA;  { Date: 1672009200000, Close: 1.09},&#xD;&#xA;  { Date: 1673823600000, Close: 0.89},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1681081200000, Close: 0.99},&#xD;&#xA;  { Date: 1688338800000, Close: 0.69},&#xD;&#xA;  { Date: 1690758000000, Close: 0.69},&#xD;&#xA;  { Date: 1691967600000, Close: 0.89},&#xD;&#xA;  { Date: 1693177200000, Close: 0.79},&#xD;&#xA;  { Date: 1698620400000, Close: 0.89},&#xD;&#xA;  { Date: 1699225200000, Close: 0.89},&#xD;&#xA;  { Date: 1699830000000, Close: 0.89},&#xD;&#xA;  { Date: 1700434800000, Close: 0.89},&#xD;&#xA;  { Date: 1701039600000, Close: 0.89},&#xD;&#xA;  { Date: 1701644400000, Close: 0.89},&#xD;&#xA;  { Date: 1702249200000, Close: 0.89},&#xD;&#xA;  { Date: 1702854000000, Close: 0.89},&#xD;&#xA;  { Date: 1703458800000, Close: 0.89},&#xD;&#xA;  { Date: 1710716400000, Close: 0.79},&#xD;&#xA;  { Date: 1714345200000, Close: 0.79},&#xD;&#xA;  { Date: 1720393200000, Close: 0.59},&#xD;&#xA;  { Date: 1720998000000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;  { Date: 1727650800000, Close: 0.69},&#xD;&#xA;  { Date: 1728255600000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Gastly</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/050---gastly/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/050---gastly/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149060.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.79},&#xD;&#xA;  { Date: 1606690800000, Close: 0.79},&#xD;&#xA;  { Date: 1607295600000, Close: 0.79},&#xD;&#xA;  { Date: 1607900400000, Close: 0.79},&#xD;&#xA;  { Date: 1608505200000, Close: 0.79},&#xD;&#xA;  { Date: 1609110000000, Close: 0.79},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1610233200000, Close: 0.49},&#xD;&#xA;  { Date: 1610924400000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.75},&#xD;&#xA;  { Date: 1613343600000, Close: 0.75},&#xD;&#xA;  { Date: 1613948400000, Close: 0.75},&#xD;&#xA;  { Date: 1614553200000, Close: 0.75},&#xD;&#xA;  { Date: 1615158000000, Close: 0.75},&#xD;&#xA;  { Date: 1615762800000, Close: 0.75},&#xD;&#xA;  { Date: 1616367600000, Close: 0.75},&#xD;&#xA;  { Date: 1616972400000, Close: 0.75},&#xD;&#xA;  { Date: 1617577200000, Close: 0.75},&#xD;&#xA;  { Date: 1618182000000, Close: 0.75},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.49},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.39},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.49},&#xD;&#xA;  { Date: 1640559600000, Close: 0.49},&#xD;&#xA;  { Date: 1644793200000, Close: 0.59},&#xD;&#xA;  { Date: 1646607600000, Close: 0.59},&#xD;&#xA;  { Date: 1647212400000, Close: 0.59},&#xD;&#xA;  { Date: 1647817200000, Close: 0.59},&#xD;&#xA;  { Date: 1648422000000, Close: 0.59},&#xD;&#xA;  { Date: 1650236400000, Close: 0.59},&#xD;&#xA;  { Date: 1650841200000, Close: 0.59},&#xD;&#xA;  { Date: 1651446000000, Close: 0.59},&#xD;&#xA;  { Date: 1652050800000, Close: 0.59},&#xD;&#xA;  { Date: 1652655600000, Close: 0.59},&#xD;&#xA;  { Date: 1662332400000, Close: 0.69},&#xD;&#xA;  { Date: 1663542000000, Close: 0.69},&#xD;&#xA;  { Date: 1664146800000, Close: 0.69},&#xD;&#xA;  { Date: 1664751600000, Close: 0.69},&#xD;&#xA;  { Date: 1665356400000, Close: 0.69},&#xD;&#xA;  { Date: 1665961200000, Close: 0.69},&#xD;&#xA;  { Date: 1666566000000, Close: 0.69},&#xD;&#xA;  { Date: 1667170800000, Close: 0.69},&#xD;&#xA;  { Date: 1667775600000, Close: 0.69},&#xD;&#xA;  { Date: 1668380400000, Close: 0.69},&#xD;&#xA;  { Date: 1668985200000, Close: 0.69},&#xD;&#xA;  { Date: 1669590000000, Close: 0.59},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1682290800000, Close: 0.69},&#xD;&#xA;  { Date: 1682895600000, Close: 0.59},&#xD;&#xA;  { Date: 1683500400000, Close: 0.59},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.39},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727650800000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Grass Energy</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/099---grass-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/099---grass-energy/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149096.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.35},&#xD;&#xA;  { Date: 1603666800000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.35},&#xD;&#xA;  { Date: 1605481200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.39},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1609714800000, Close: 0.39},&#xD;&#xA;  { Date: 1610233200000, Close: 0.39},&#xD;&#xA;  { Date: 1610924400000, Close: 0.39},&#xD;&#xA;  { Date: 1611529200000, Close: 0.39},&#xD;&#xA;  { Date: 1612134000000, Close: 0.39},&#xD;&#xA;  { Date: 1612738800000, Close: 0.39},&#xD;&#xA;  { Date: 1613343600000, Close: 0.39},&#xD;&#xA;  { Date: 1613948400000, Close: 0.39},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.49},&#xD;&#xA;  { Date: 1615762800000, Close: 0.49},&#xD;&#xA;  { Date: 1616367600000, Close: 0.49},&#xD;&#xA;  { Date: 1616972400000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.49},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.39},&#xD;&#xA;  { Date: 1630882800000, Close: 0.39},&#xD;&#xA;  { Date: 1631487600000, Close: 0.39},&#xD;&#xA;  { Date: 1632092400000, Close: 0.39},&#xD;&#xA;  { Date: 1632697200000, Close: 0.39},&#xD;&#xA;  { Date: 1633302000000, Close: 0.39},&#xD;&#xA;  { Date: 1633906800000, Close: 0.39},&#xD;&#xA;  { Date: 1634511600000, Close: 0.39},&#xD;&#xA;  { Date: 1635116400000, Close: 0.39},&#xD;&#xA;  { Date: 1635721200000, Close: 0.39},&#xD;&#xA;  { Date: 1636326000000, Close: 0.39},&#xD;&#xA;  { Date: 1636930800000, Close: 0.39},&#xD;&#xA;  { Date: 1637535600000, Close: 0.39},&#xD;&#xA;  { Date: 1638140400000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1639350000000, Close: 0.39},&#xD;&#xA;  { Date: 1639954800000, Close: 0.39},&#xD;&#xA;  { Date: 1640559600000, Close: 0.39},&#xD;&#xA;  { Date: 1641164400000, Close: 0.39},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.35},&#xD;&#xA;  { Date: 1670194800000, Close: 0.35},&#xD;&#xA;  { Date: 1670799600000, Close: 0.35},&#xD;&#xA;  { Date: 1671404400000, Close: 0.35},&#xD;&#xA;  { Date: 1672009200000, Close: 0.35},&#xD;&#xA;  { Date: 1672614000000, Close: 0.35},&#xD;&#xA;  { Date: 1673218800000, Close: 0.35},&#xD;&#xA;  { Date: 1673823600000, Close: 0.35},&#xD;&#xA;  { Date: 1674428400000, Close: 0.35},&#xD;&#xA;  { Date: 1675033200000, Close: 0.35},&#xD;&#xA;  { Date: 1675638000000, Close: 0.35},&#xD;&#xA;  { Date: 1676242800000, Close: 0.35},&#xD;&#xA;  { Date: 1676847600000, Close: 0.35},&#xD;&#xA;  { Date: 1677452400000, Close: 0.35},&#xD;&#xA;  { Date: 1678057200000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.35},&#xD;&#xA;  { Date: 1679266800000, Close: 0.35},&#xD;&#xA;  { Date: 1679871600000, Close: 0.35},&#xD;&#xA;  { Date: 1680476400000, Close: 0.35},&#xD;&#xA;  { Date: 1681081200000, Close: 0.35},&#xD;&#xA;  { Date: 1681686000000, Close: 0.35},&#xD;&#xA;  { Date: 1682290800000, Close: 0.35},&#xD;&#xA;  { Date: 1682895600000, Close: 0.35},&#xD;&#xA;  { Date: 1683500400000, Close: 0.35},&#xD;&#xA;  { Date: 1684105200000, Close: 0.35},&#xD;&#xA;  { Date: 1684710000000, Close: 0.35},&#xD;&#xA;  { Date: 1685314800000, Close: 0.35},&#xD;&#xA;  { Date: 1685919600000, Close: 0.35},&#xD;&#xA;  { Date: 1686524400000, Close: 0.35},&#xD;&#xA;  { Date: 1687129200000, Close: 0.35},&#xD;&#xA;  { Date: 1687734000000, Close: 0.35},&#xD;&#xA;  { Date: 1688338800000, Close: 0.35},&#xD;&#xA;  { Date: 1688943600000, Close: 0.35},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1697410800000, Close: 0.49},&#xD;&#xA;  { Date: 1698015600000, Close: 0.49},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1699225200000, Close: 0.49},&#xD;&#xA;  { Date: 1699830000000, Close: 0.49},&#xD;&#xA;  { Date: 1700434800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.49},&#xD;&#xA;  { Date: 1701644400000, Close: 0.49},&#xD;&#xA;  { Date: 1702249200000, Close: 0.49},&#xD;&#xA;  { Date: 1702854000000, Close: 0.49},&#xD;&#xA;  { Date: 1703458800000, Close: 0.49},&#xD;&#xA;  { Date: 1704063600000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1705273200000, Close: 0.49},&#xD;&#xA;  { Date: 1705878000000, Close: 0.49},&#xD;&#xA;  { Date: 1706482800000, Close: 0.49},&#xD;&#xA;  { Date: 1716159600000, Close: 0.49},&#xD;&#xA;  { Date: 1716764400000, Close: 0.49},&#xD;&#xA;  { Date: 1717369200000, Close: 0.49},&#xD;&#xA;  { Date: 1717974000000, Close: 0.49},&#xD;&#xA;  { Date: 1718578800000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Growlithe</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/028---growlithe/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/028---growlithe/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149103.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.65},&#xD;&#xA;  { Date: 1601247600000, Close: 0.65},&#xD;&#xA;  { Date: 1601852400000, Close: 0.65},&#xD;&#xA;  { Date: 1602457200000, Close: 0.65},&#xD;&#xA;  { Date: 1604271600000, Close: 3.49},&#xD;&#xA;  { Date: 1604876400000, Close: 3.99},&#xD;&#xA;  { Date: 1605481200000, Close: 3.99},&#xD;&#xA;  { Date: 1606086000000, Close: 3.99},&#xD;&#xA;  { Date: 1606690800000, Close: 3.99},&#xD;&#xA;  { Date: 1607295600000, Close: 3.99},&#xD;&#xA;  { Date: 1607900400000, Close: 3.99},&#xD;&#xA;  { Date: 1608505200000, Close: 3.49},&#xD;&#xA;  { Date: 1609110000000, Close: 2.99},&#xD;&#xA;  { Date: 1609714800000, Close: 1.99},&#xD;&#xA;  { Date: 1610233200000, Close: 1.99},&#xD;&#xA;  { Date: 1610924400000, Close: 1.89},&#xD;&#xA;  { Date: 1611529200000, Close: 1.89},&#xD;&#xA;  { Date: 1612134000000, Close: 1.89},&#xD;&#xA;  { Date: 1612738800000, Close: 1.89},&#xD;&#xA;  { Date: 1613343600000, Close: 1.89},&#xD;&#xA;  { Date: 1613948400000, Close: 1.79},&#xD;&#xA;  { Date: 1614553200000, Close: 1.85},&#xD;&#xA;  { Date: 1615158000000, Close: 1.79},&#xD;&#xA;  { Date: 1615762800000, Close: 1.69},&#xD;&#xA;  { Date: 1616367600000, Close: 1.69},&#xD;&#xA;  { Date: 1616972400000, Close: 1.69},&#xD;&#xA;  { Date: 1617577200000, Close: 1.69},&#xD;&#xA;  { Date: 1618182000000, Close: 1.49},&#xD;&#xA;  { Date: 1618786800000, Close: 1.49},&#xD;&#xA;  { Date: 1619391600000, Close: 1.49},&#xD;&#xA;  { Date: 1619996400000, Close: 1.29},&#xD;&#xA;  { Date: 1620601200000, Close: 1.09},&#xD;&#xA;  { Date: 1621206000000, Close: 1.09},&#xD;&#xA;  { Date: 1621810800000, Close: 1.09},&#xD;&#xA;  { Date: 1622415600000, Close: 1.09},&#xD;&#xA;  { Date: 1623020400000, Close: 1.09},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 1.09},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1628463600000, Close: 1.09},&#xD;&#xA;  { Date: 1629068400000, Close: 1.09},&#xD;&#xA;  { Date: 1629673200000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 1.09},&#xD;&#xA;  { Date: 1631487600000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.19},&#xD;&#xA;  { Date: 1635116400000, Close: 1.19},&#xD;&#xA;  { Date: 1635721200000, Close: 1.19},&#xD;&#xA;  { Date: 1636326000000, Close: 1.19},&#xD;&#xA;  { Date: 1637535600000, Close: 1.19},&#xD;&#xA;  { Date: 1639954800000, Close: 0.89},&#xD;&#xA;  { Date: 1640559600000, Close: 0.89},&#xD;&#xA;  { Date: 1641164400000, Close: 0.89},&#xD;&#xA;  { Date: 1641769200000, Close: 0.89},&#xD;&#xA;  { Date: 1642374000000, Close: 0.89},&#xD;&#xA;  { Date: 1642978800000, Close: 0.89},&#xD;&#xA;  { Date: 1643583600000, Close: 0.89},&#xD;&#xA;  { Date: 1644188400000, Close: 0.89},&#xD;&#xA;  { Date: 1644793200000, Close: 0.79},&#xD;&#xA;  { Date: 1645398000000, Close: 0.79},&#xD;&#xA;  { Date: 1646002800000, Close: 0.79},&#xD;&#xA;  { Date: 1646607600000, Close: 0.79},&#xD;&#xA;  { Date: 1647212400000, Close: 0.79},&#xD;&#xA;  { Date: 1647817200000, Close: 0.79},&#xD;&#xA;  { Date: 1648422000000, Close: 0.79},&#xD;&#xA;  { Date: 1649026800000, Close: 0.79},&#xD;&#xA;  { Date: 1649631600000, Close: 0.79},&#xD;&#xA;  { Date: 1655679600000, Close: 1.09},&#xD;&#xA;  { Date: 1656284400000, Close: 1.09},&#xD;&#xA;  { Date: 1656889200000, Close: 1.09},&#xD;&#xA;  { Date: 1657494000000, Close: 1.09},&#xD;&#xA;  { Date: 1658098800000, Close: 1.09},&#xD;&#xA;  { Date: 1662332400000, Close: 1.09},&#xD;&#xA;  { Date: 1662937200000, Close: 1.09},&#xD;&#xA;  { Date: 1663542000000, Close: 1.09},&#xD;&#xA;  { Date: 1664146800000, Close: 1.09},&#xD;&#xA;  { Date: 1664751600000, Close: 1.09},&#xD;&#xA;  { Date: 1665356400000, Close: 1.09},&#xD;&#xA;  { Date: 1665961200000, Close: 1.09},&#xD;&#xA;  { Date: 1666566000000, Close: 1.09},&#xD;&#xA;  { Date: 1667170800000, Close: 1.09},&#xD;&#xA;  { Date: 1667775600000, Close: 1.09},&#xD;&#xA;  { Date: 1668380400000, Close: 0.99},&#xD;&#xA;  { Date: 1668985200000, Close: 0.99},&#xD;&#xA;  { Date: 1669590000000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 0.89},&#xD;&#xA;  { Date: 1670799600000, Close: 0.79},&#xD;&#xA;  { Date: 1671404400000, Close: 0.79},&#xD;&#xA;  { Date: 1672009200000, Close: 0.79},&#xD;&#xA;  { Date: 1672614000000, Close: 0.79},&#xD;&#xA;  { Date: 1673218800000, Close: 0.79},&#xD;&#xA;  { Date: 1673823600000, Close: 0.79},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1679871600000, Close: 1.09},&#xD;&#xA;  { Date: 1688338800000, Close: 0.89},&#xD;&#xA;  { Date: 1688943600000, Close: 0.89},&#xD;&#xA;  { Date: 1693177200000, Close: 1.09},&#xD;&#xA;  { Date: 1695596400000, Close: 0.99},&#xD;&#xA;  { Date: 1696806000000, Close: 0.99},&#xD;&#xA;  { Date: 1697410800000, Close: 0.99},&#xD;&#xA;  { Date: 1698015600000, Close: 0.99},&#xD;&#xA;  { Date: 1698620400000, Close: 0.99},&#xD;&#xA;  { Date: 1699225200000, Close: 0.99},&#xD;&#xA;  { Date: 1701644400000, Close: 0.99},&#xD;&#xA;  { Date: 1704668400000, Close: 0.79},&#xD;&#xA;  { Date: 1708297200000, Close: 0.89},&#xD;&#xA;  { Date: 1708902000000, Close: 0.89},&#xD;&#xA;  { Date: 1709506800000, Close: 0.89},&#xD;&#xA;  { Date: 1710111600000, Close: 0.89},&#xD;&#xA;  { Date: 1710716400000, Close: 0.89},&#xD;&#xA;  { Date: 1714950000000, Close: 0.99},&#xD;&#xA;  { Date: 1716764400000, Close: 0.89},&#xD;&#xA;  { Date: 1727046000000, Close: 0.79},&#xD;&#xA;  { Date: 1727650800000, Close: 0.79},&#xD;&#xA;  { Date: 1728255600000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Gust of Wind</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/093---gust-of-wind/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/093---gust-of-wind/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149106.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.35},&#xD;&#xA;  { Date: 1603666800000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.35},&#xD;&#xA;  { Date: 1605481200000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1609714800000, Close: 0.39},&#xD;&#xA;  { Date: 1610233200000, Close: 0.35},&#xD;&#xA;  { Date: 1610924400000, Close: 0.35},&#xD;&#xA;  { Date: 1611529200000, Close: 0.35},&#xD;&#xA;  { Date: 1612134000000, Close: 0.35},&#xD;&#xA;  { Date: 1612738800000, Close: 0.35},&#xD;&#xA;  { Date: 1614553200000, Close: 0.40},&#xD;&#xA;  { Date: 1615158000000, Close: 0.49},&#xD;&#xA;  { Date: 1615762800000, Close: 0.49},&#xD;&#xA;  { Date: 1616367600000, Close: 0.49},&#xD;&#xA;  { Date: 1616972400000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.39},&#xD;&#xA;  { Date: 1618182000000, Close: 0.39},&#xD;&#xA;  { Date: 1618786800000, Close: 0.35},&#xD;&#xA;  { Date: 1619391600000, Close: 0.35},&#xD;&#xA;  { Date: 1619996400000, Close: 0.35},&#xD;&#xA;  { Date: 1620601200000, Close: 0.35},&#xD;&#xA;  { Date: 1621206000000, Close: 0.35},&#xD;&#xA;  { Date: 1621810800000, Close: 0.35},&#xD;&#xA;  { Date: 1622415600000, Close: 0.35},&#xD;&#xA;  { Date: 1623020400000, Close: 0.35},&#xD;&#xA;  { Date: 1623625200000, Close: 0.35},&#xD;&#xA;  { Date: 1624230000000, Close: 0.35},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1625439600000, Close: 0.35},&#xD;&#xA;  { Date: 1626044400000, Close: 0.35},&#xD;&#xA;  { Date: 1626649200000, Close: 0.35},&#xD;&#xA;  { Date: 1627254000000, Close: 0.35},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1629673200000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1630882800000, Close: 0.35},&#xD;&#xA;  { Date: 1631487600000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.35},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.35},&#xD;&#xA;  { Date: 1670194800000, Close: 0.35},&#xD;&#xA;  { Date: 1670799600000, Close: 0.35},&#xD;&#xA;  { Date: 1671404400000, Close: 0.35},&#xD;&#xA;  { Date: 1672009200000, Close: 0.35},&#xD;&#xA;  { Date: 1672614000000, Close: 0.35},&#xD;&#xA;  { Date: 1673218800000, Close: 0.35},&#xD;&#xA;  { Date: 1673823600000, Close: 0.35},&#xD;&#xA;  { Date: 1674428400000, Close: 0.35},&#xD;&#xA;  { Date: 1675033200000, Close: 0.35},&#xD;&#xA;  { Date: 1675638000000, Close: 0.35},&#xD;&#xA;  { Date: 1676242800000, Close: 0.35},&#xD;&#xA;  { Date: 1676847600000, Close: 0.35},&#xD;&#xA;  { Date: 1677452400000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.59},&#xD;&#xA;  { Date: 1680476400000, Close: 0.59},&#xD;&#xA;  { Date: 1681081200000, Close: 0.59},&#xD;&#xA;  { Date: 1682290800000, Close: 0.69},&#xD;&#xA;  { Date: 1682895600000, Close: 0.69},&#xD;&#xA;  { Date: 1683500400000, Close: 0.69},&#xD;&#xA;  { Date: 1686524400000, Close: 0.69},&#xD;&#xA;  { Date: 1687129200000, Close: 0.69},&#xD;&#xA;  { Date: 1687734000000, Close: 0.69},&#xD;&#xA;  { Date: 1688338800000, Close: 0.69},&#xD;&#xA;  { Date: 1688943600000, Close: 0.69},&#xD;&#xA;  { Date: 1689548400000, Close: 0.69},&#xD;&#xA;  { Date: 1690153200000, Close: 0.69},&#xD;&#xA;  { Date: 1690758000000, Close: 0.59},&#xD;&#xA;  { Date: 1691362800000, Close: 0.59},&#xD;&#xA;  { Date: 1691967600000, Close: 0.59},&#xD;&#xA;  { Date: 1692572400000, Close: 0.59},&#xD;&#xA;  { Date: 1693177200000, Close: 0.59},&#xD;&#xA;  { Date: 1693782000000, Close: 0.59},&#xD;&#xA;  { Date: 1694386800000, Close: 0.59},&#xD;&#xA;  { Date: 1694991600000, Close: 0.39},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1696806000000, Close: 0.39},&#xD;&#xA;  { Date: 1697410800000, Close: 0.39},&#xD;&#xA;  { Date: 1698015600000, Close: 0.39},&#xD;&#xA;  { Date: 1698620400000, Close: 0.39},&#xD;&#xA;  { Date: 1699225200000, Close: 0.39},&#xD;&#xA;  { Date: 1699830000000, Close: 0.39},&#xD;&#xA;  { Date: 1700434800000, Close: 0.39},&#xD;&#xA;  { Date: 1701039600000, Close: 0.39},&#xD;&#xA;  { Date: 1701644400000, Close: 0.35},&#xD;&#xA;  { Date: 1702249200000, Close: 0.35},&#xD;&#xA;  { Date: 1702854000000, Close: 0.35},&#xD;&#xA;  { Date: 1703458800000, Close: 0.35},&#xD;&#xA;  { Date: 1704063600000, Close: 0.35},&#xD;&#xA;  { Date: 1704668400000, Close: 0.35},&#xD;&#xA;  { Date: 1705273200000, Close: 0.35},&#xD;&#xA;  { Date: 1705878000000, Close: 0.35},&#xD;&#xA;  { Date: 1706482800000, Close: 0.35},&#xD;&#xA;  { Date: 1707087600000, Close: 0.35},&#xD;&#xA;  { Date: 1707692400000, Close: 0.35},&#xD;&#xA;  { Date: 1708297200000, Close: 0.35},&#xD;&#xA;  { Date: 1708902000000, Close: 0.35},&#xD;&#xA;  { Date: 1709506800000, Close: 0.35},&#xD;&#xA;  { Date: 1710111600000, Close: 0.35},&#xD;&#xA;  { Date: 1710716400000, Close: 0.35},&#xD;&#xA;  { Date: 1711321200000, Close: 0.35},&#xD;&#xA;  { Date: 1711926000000, Close: 0.35},&#xD;&#xA;  { Date: 1712530800000, Close: 0.35},&#xD;&#xA;  { Date: 1713135600000, Close: 0.35},&#xD;&#xA;  { Date: 1713740400000, Close: 0.49},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1715554800000, Close: 0.49},&#xD;&#xA;  { Date: 1716159600000, Close: 0.49},&#xD;&#xA;  { Date: 1716764400000, Close: 0.49},&#xD;&#xA;  { Date: 1717369200000, Close: 0.49},&#xD;&#xA;  { Date: 1717974000000, Close: 0.49},&#xD;&#xA;  { Date: 1718578800000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;  { Date: 1719788400000, Close: 0.39},&#xD;&#xA;  { Date: 1720393200000, Close: 0.39},&#xD;&#xA;  { Date: 1720998000000, Close: 0.39},&#xD;&#xA;  { Date: 1721602800000, Close: 0.35},&#xD;&#xA;  { Date: 1722207600000, Close: 0.35},&#xD;&#xA;  { Date: 1722812400000, Close: 0.40},&#xD;&#xA;  { Date: 1723417200000, Close: 0.49},&#xD;&#xA;  { Date: 1724022000000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727650800000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Gyarados</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/006---gyarados/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/006---gyarados/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149108.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1576882800000, Close: 6.99},&#xD;&#xA;  { Date: 1577142000000, Close: 7.99},&#xD;&#xA;  { Date: 1578524400000, Close: 7.99},&#xD;&#xA;  { Date: 1579042800000, Close: 8.99},&#xD;&#xA;  { Date: 1580252400000, Close: 8.99},&#xD;&#xA;  { Date: 1582239600000, Close: 9.49},&#xD;&#xA;  { Date: 1582671600000, Close: 8.99},&#xD;&#xA;  { Date: 1583276400000, Close: 8.99},&#xD;&#xA;  { Date: 1584745200000, Close: 9.49},&#xD;&#xA;  { Date: 1585177200000, Close: 9.99},&#xD;&#xA;  { Date: 1585609200000, Close: 9.99},&#xD;&#xA;  { Date: 1585695600000, Close: 10.99},&#xD;&#xA;  { Date: 1586646000000, Close: 11.99},&#xD;&#xA;  { Date: 1588633200000, Close: 13.99},&#xD;&#xA;  { Date: 1588806000000, Close: 13.49},&#xD;&#xA;  { Date: 1590620400000, Close: 14.99},&#xD;&#xA;  { Date: 1591311600000, Close: 15.99},&#xD;&#xA;  { Date: 1593471600000, Close: 17.99},&#xD;&#xA;  { Date: 1594767600000, Close: 17.99},&#xD;&#xA;  { Date: 1596236400000, Close: 19.99},&#xD;&#xA;  { Date: 1596754800000, Close: 19.99},&#xD;&#xA;  { Date: 1597705200000, Close: 20.99},&#xD;&#xA;  { Date: 1598310000000, Close: 19.99},&#xD;&#xA;  { Date: 1600297200000, Close: 18.99},&#xD;&#xA;  { Date: 1601593200000, Close: 19.49},&#xD;&#xA;  { Date: 1601852400000, Close: 18.49},&#xD;&#xA;  { Date: 1604444400000, Close: 36.99},&#xD;&#xA;  { Date: 1605049200000, Close: 39.99},&#xD;&#xA;  { Date: 1605654000000, Close: 34.99},&#xD;&#xA;  { Date: 1606950000000, Close: 31.99},&#xD;&#xA;  { Date: 1607554800000, Close: 33.99},&#xD;&#xA;  { Date: 1607986800000, Close: 33.99},&#xD;&#xA;  { Date: 1609282800000, Close: 29.49},&#xD;&#xA;  { Date: 1610146800000, Close: 29.49},&#xD;&#xA;  { Date: 1610406000000, Close: 29.49},&#xD;&#xA;  { Date: 1611183600000, Close: 29.89},&#xD;&#xA;  { Date: 1612306800000, Close: 30.99},&#xD;&#xA;  { Date: 1612998000000, Close: 33.99},&#xD;&#xA;  { Date: 1613602800000, Close: 34.99},&#xD;&#xA;  { Date: 1614985200000, Close: 34.99},&#xD;&#xA;  { Date: 1615244400000, Close: 34.99},&#xD;&#xA;  { Date: 1615935600000, Close: 39.99},&#xD;&#xA;  { Date: 1616540400000, Close: 44.99},&#xD;&#xA;  { Date: 1617058800000, Close: 49.99},&#xD;&#xA;  { Date: 1618009200000, Close: 44.99},&#xD;&#xA;  { Date: 1619650800000, Close: 44.99},&#xD;&#xA;  { Date: 1623884400000, Close: 41.99},&#xD;&#xA;  { Date: 1623970800000, Close: 39.99},&#xD;&#xA;  { Date: 1627081200000, Close: 34.99},&#xD;&#xA;  { Date: 1632438000000, Close: 34.99},&#xD;&#xA;  { Date: 1635548400000, Close: 33.99},&#xD;&#xA;  { Date: 1639090800000, Close: 35.99},&#xD;&#xA;  { Date: 1639522800000, Close: 35.99},&#xD;&#xA;  { Date: 1642633200000, Close: 37.99},&#xD;&#xA;  { Date: 1645052400000, Close: 34.99},&#xD;&#xA;  { Date: 1652396400000, Close: 34.99},&#xD;&#xA;  { Date: 1654210800000, Close: 36.99},&#xD;&#xA;  { Date: 1654902000000, Close: 36.99},&#xD;&#xA;  { Date: 1655334000000, Close: 36.99},&#xD;&#xA;  { Date: 1656543600000, Close: 36.99},&#xD;&#xA;  { Date: 1656716400000, Close: 29.99},&#xD;&#xA;  { Date: 1664233200000, Close: 29.99},&#xD;&#xA;  { Date: 1665788400000, Close: 28.89},&#xD;&#xA;  { Date: 1667343600000, Close: 28.89},&#xD;&#xA;  { Date: 1674255600000, Close: 26.89},&#xD;&#xA;  { Date: 1674860400000, Close: 22.99},&#xD;&#xA;  { Date: 1675983600000, Close: 19.99},&#xD;&#xA;  { Date: 1677798000000, Close: 23.79},&#xD;&#xA;  { Date: 1678143600000, Close: 21.99},&#xD;&#xA;  { Date: 1679785200000, Close: 24.49},&#xD;&#xA;  { Date: 1680217200000, Close: 24.49},&#xD;&#xA;  { Date: 1680649200000, Close: 22.99},&#xD;&#xA;  { Date: 1682722800000, Close: 27.29},&#xD;&#xA;  { Date: 1683932400000, Close: 29.39},&#xD;&#xA;  { Date: 1695942000000, Close: 29.99},&#xD;&#xA;  { Date: 1698879600000, Close: 29.99},&#xD;&#xA;  { Date: 1699570800000, Close: 29.99},&#xD;&#xA;  { Date: 1705100400000, Close: 31.99},&#xD;&#xA;  { Date: 1708642800000, Close: 31.99},&#xD;&#xA;  { Date: 1709074800000, Close: 31.99},&#xD;&#xA;  { Date: 1711062000000, Close: 31.99},&#xD;&#xA;  { Date: 1727737200000, Close: 34.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Haunter</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/029---haunter/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/029---haunter/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149110.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1593817200000, Close: 0.69},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1604876400000, Close: 5.49},&#xD;&#xA;  { Date: 1605481200000, Close: 4.99},&#xD;&#xA;  { Date: 1606086000000, Close: 4.99},&#xD;&#xA;  { Date: 1606690800000, Close: 4.99},&#xD;&#xA;  { Date: 1607295600000, Close: 4.99},&#xD;&#xA;  { Date: 1607900400000, Close: 4.99},&#xD;&#xA;  { Date: 1608505200000, Close: 4.49},&#xD;&#xA;  { Date: 1609110000000, Close: 4.49},&#xD;&#xA;  { Date: 1609714800000, Close: 3.49},&#xD;&#xA;  { Date: 1610233200000, Close: 3.49},&#xD;&#xA;  { Date: 1610924400000, Close: 3.59},&#xD;&#xA;  { Date: 1611529200000, Close: 3.59},&#xD;&#xA;  { Date: 1612134000000, Close: 3.59},&#xD;&#xA;  { Date: 1612738800000, Close: 3.59},&#xD;&#xA;  { Date: 1613343600000, Close: 3.59},&#xD;&#xA;  { Date: 1613948400000, Close: 3.59},&#xD;&#xA;  { Date: 1614553200000, Close: 3.49},&#xD;&#xA;  { Date: 1615158000000, Close: 2.99},&#xD;&#xA;  { Date: 1615762800000, Close: 2.99},&#xD;&#xA;  { Date: 1616367600000, Close: 2.99},&#xD;&#xA;  { Date: 1616972400000, Close: 2.99},&#xD;&#xA;  { Date: 1617577200000, Close: 2.99},&#xD;&#xA;  { Date: 1618182000000, Close: 2.49},&#xD;&#xA;  { Date: 1618786800000, Close: 2.29},&#xD;&#xA;  { Date: 1619391600000, Close: 2.29},&#xD;&#xA;  { Date: 1619996400000, Close: 1.99},&#xD;&#xA;  { Date: 1620601200000, Close: 1.99},&#xD;&#xA;  { Date: 1621206000000, Close: 1.49},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1622415600000, Close: 1.29},&#xD;&#xA;  { Date: 1623020400000, Close: 1.29},&#xD;&#xA;  { Date: 1623625200000, Close: 1.19},&#xD;&#xA;  { Date: 1624230000000, Close: 1.19},&#xD;&#xA;  { Date: 1624834800000, Close: 0.99},&#xD;&#xA;  { Date: 1625439600000, Close: 0.99},&#xD;&#xA;  { Date: 1626044400000, Close: 0.99},&#xD;&#xA;  { Date: 1626649200000, Close: 0.99},&#xD;&#xA;  { Date: 1627254000000, Close: 0.99},&#xD;&#xA;  { Date: 1627858800000, Close: 0.99},&#xD;&#xA;  { Date: 1628463600000, Close: 0.99},&#xD;&#xA;  { Date: 1629673200000, Close: 0.99},&#xD;&#xA;  { Date: 1630278000000, Close: 0.99},&#xD;&#xA;  { Date: 1633906800000, Close: 1.99},&#xD;&#xA;  { Date: 1634511600000, Close: 1.99},&#xD;&#xA;  { Date: 1635116400000, Close: 1.99},&#xD;&#xA;  { Date: 1635721200000, Close: 1.99},&#xD;&#xA;  { Date: 1636326000000, Close: 1.99},&#xD;&#xA;  { Date: 1636930800000, Close: 1.99},&#xD;&#xA;  { Date: 1637535600000, Close: 1.49},&#xD;&#xA;  { Date: 1638140400000, Close: 1.49},&#xD;&#xA;  { Date: 1638745200000, Close: 1.49},&#xD;&#xA;  { Date: 1639350000000, Close: 1.49},&#xD;&#xA;  { Date: 1642978800000, Close: 1.99},&#xD;&#xA;  { Date: 1643583600000, Close: 1.99},&#xD;&#xA;  { Date: 1644188400000, Close: 1.99},&#xD;&#xA;  { Date: 1644793200000, Close: 1.99},&#xD;&#xA;  { Date: 1645398000000, Close: 1.99},&#xD;&#xA;  { Date: 1646002800000, Close: 1.99},&#xD;&#xA;  { Date: 1646607600000, Close: 1.99},&#xD;&#xA;  { Date: 1647212400000, Close: 1.99},&#xD;&#xA;  { Date: 1655679600000, Close: 1.99},&#xD;&#xA;  { Date: 1656284400000, Close: 1.99},&#xD;&#xA;  { Date: 1656889200000, Close: 1.99},&#xD;&#xA;  { Date: 1657494000000, Close: 1.99},&#xD;&#xA;  { Date: 1658098800000, Close: 1.79},&#xD;&#xA;  { Date: 1658703600000, Close: 1.79},&#xD;&#xA;  { Date: 1659308400000, Close: 1.99},&#xD;&#xA;  { Date: 1659913200000, Close: 1.99},&#xD;&#xA;  { Date: 1660518000000, Close: 1.99},&#xD;&#xA;  { Date: 1661122800000, Close: 1.99},&#xD;&#xA;  { Date: 1661727600000, Close: 1.99},&#xD;&#xA;  { Date: 1662332400000, Close: 1.99},&#xD;&#xA;  { Date: 1662937200000, Close: 1.99},&#xD;&#xA;  { Date: 1663542000000, Close: 1.99},&#xD;&#xA;  { Date: 1664146800000, Close: 1.99},&#xD;&#xA;  { Date: 1664751600000, Close: 1.99},&#xD;&#xA;  { Date: 1665356400000, Close: 1.69},&#xD;&#xA;  { Date: 1665961200000, Close: 1.29},&#xD;&#xA;  { Date: 1666566000000, Close: 1.29},&#xD;&#xA;  { Date: 1667170800000, Close: 1.29},&#xD;&#xA;  { Date: 1667775600000, Close: 1.29},&#xD;&#xA;  { Date: 1668380400000, Close: 1.19},&#xD;&#xA;  { Date: 1668985200000, Close: 1.09},&#xD;&#xA;  { Date: 1669590000000, Close: 1.09},&#xD;&#xA;  { Date: 1670194800000, Close: 1.09},&#xD;&#xA;  { Date: 1670799600000, Close: 1.09},&#xD;&#xA;  { Date: 1671404400000, Close: 1.09},&#xD;&#xA;  { Date: 1672009200000, Close: 1.19},&#xD;&#xA;  { Date: 1672614000000, Close: 1.19},&#xD;&#xA;  { Date: 1678057200000, Close: 1.39},&#xD;&#xA;  { Date: 1681686000000, Close: 1.99},&#xD;&#xA;  { Date: 1682290800000, Close: 1.79},&#xD;&#xA;  { Date: 1682895600000, Close: 1.79},&#xD;&#xA;  { Date: 1683500400000, Close: 1.69},&#xD;&#xA;  { Date: 1684105200000, Close: 1.99},&#xD;&#xA;  { Date: 1684710000000, Close: 1.79},&#xD;&#xA;  { Date: 1685314800000, Close: 1.79},&#xD;&#xA;  { Date: 1685919600000, Close: 1.79},&#xD;&#xA;  { Date: 1686524400000, Close: 1.79},&#xD;&#xA;  { Date: 1687129200000, Close: 1.49},&#xD;&#xA;  { Date: 1687734000000, Close: 1.79},&#xD;&#xA;  { Date: 1690758000000, Close: 1.99},&#xD;&#xA;  { Date: 1691362800000, Close: 1.99},&#xD;&#xA;  { Date: 1695596400000, Close: 2.19},&#xD;&#xA;  { Date: 1696201200000, Close: 2.19},&#xD;&#xA;  { Date: 1696806000000, Close: 1.99},&#xD;&#xA;  { Date: 1697410800000, Close: 1.99},&#xD;&#xA;  { Date: 1698015600000, Close: 1.99},&#xD;&#xA;  { Date: 1698620400000, Close: 2.49},&#xD;&#xA;  { Date: 1701644400000, Close: 2.49},&#xD;&#xA;  { Date: 1702249200000, Close: 2.19},&#xD;&#xA;  { Date: 1702854000000, Close: 2.19},&#xD;&#xA;  { Date: 1703458800000, Close: 2.19},&#xD;&#xA;  { Date: 1704063600000, Close: 1.99},&#xD;&#xA;  { Date: 1706482800000, Close: 1.99},&#xD;&#xA;  { Date: 1707692400000, Close: 1.99},&#xD;&#xA;  { Date: 1708297200000, Close: 1.69},&#xD;&#xA;  { Date: 1708902000000, Close: 1.69},&#xD;&#xA;  { Date: 1709506800000, Close: 1.49},&#xD;&#xA;  { Date: 1710111600000, Close: 1.49},&#xD;&#xA;  { Date: 1710716400000, Close: 1.29},&#xD;&#xA;  { Date: 1711321200000, Close: 1.29},&#xD;&#xA;  { Date: 1713740400000, Close: 1.99},&#xD;&#xA;  { Date: 1714345200000, Close: 1.99},&#xD;&#xA;  { Date: 1714950000000, Close: 1.99},&#xD;&#xA;  { Date: 1715554800000, Close: 1.99},&#xD;&#xA;  { Date: 1716159600000, Close: 1.99},&#xD;&#xA;  { Date: 1716764400000, Close: 1.99},&#xD;&#xA;  { Date: 1717369200000, Close: 1.99},&#xD;&#xA;  { Date: 1717974000000, Close: 1.99},&#xD;&#xA;  { Date: 1718578800000, Close: 1.99},&#xD;&#xA;  { Date: 1719183600000, Close: 1.99},&#xD;&#xA;  { Date: 1719788400000, Close: 1.99},&#xD;&#xA;  { Date: 1727046000000, Close: 1.99},&#xD;&#xA;  { Date: 1727650800000, Close: 1.69},&#xD;&#xA;  { Date: 1728255600000, Close: 1.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Hitmonchan</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/007---hitmonchan/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/007---hitmonchan/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149115.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575586800000, Close: 4.39},&#xD;&#xA;  { Date: 1575932400000, Close: 4.39},&#xD;&#xA;  { Date: 1577228400000, Close: 4.99},&#xD;&#xA;  { Date: 1577487600000, Close: 4.99},&#xD;&#xA;  { Date: 1578524400000, Close: 4.99},&#xD;&#xA;  { Date: 1580943600000, Close: 6.99},&#xD;&#xA;  { Date: 1581375600000, Close: 6.99},&#xD;&#xA;  { Date: 1582239600000, Close: 6.99},&#xD;&#xA;  { Date: 1583276400000, Close: 6.99},&#xD;&#xA;  { Date: 1585609200000, Close: 7.99},&#xD;&#xA;  { Date: 1586559600000, Close: 8.49},&#xD;&#xA;  { Date: 1588460400000, Close: 8.99},&#xD;&#xA;  { Date: 1588633200000, Close: 9.99},&#xD;&#xA;  { Date: 1591138800000, Close: 12.99},&#xD;&#xA;  { Date: 1591398000000, Close: 13.99},&#xD;&#xA;  { Date: 1592434800000, Close: 13.49},&#xD;&#xA;  { Date: 1593558000000, Close: 12.99},&#xD;&#xA;  { Date: 1594249200000, Close: 11.99},&#xD;&#xA;  { Date: 1594854000000, Close: 12.99},&#xD;&#xA;  { Date: 1595286000000, Close: 13.49},&#xD;&#xA;  { Date: 1595890800000, Close: 13.99},&#xD;&#xA;  { Date: 1596754800000, Close: 15.49},&#xD;&#xA;  { Date: 1597705200000, Close: 14.99},&#xD;&#xA;  { Date: 1599001200000, Close: 15.99},&#xD;&#xA;  { Date: 1600124400000, Close: 15.49},&#xD;&#xA;  { Date: 1600815600000, Close: 14.99},&#xD;&#xA;  { Date: 1602543600000, Close: 15.99},&#xD;&#xA;  { Date: 1604098800000, Close: 19.99},&#xD;&#xA;  { Date: 1605135600000, Close: 24.99},&#xD;&#xA;  { Date: 1605222000000, Close: 29.99},&#xD;&#xA;  { Date: 1606345200000, Close: 27.99},&#xD;&#xA;  { Date: 1606863600000, Close: 23.99},&#xD;&#xA;  { Date: 1607036400000, Close: 22.99},&#xD;&#xA;  { Date: 1607382000000, Close: 27.99},&#xD;&#xA;  { Date: 1608073200000, Close: 26.99},&#xD;&#xA;  { Date: 1608246000000, Close: 24.99},&#xD;&#xA;  { Date: 1609282800000, Close: 21.99},&#xD;&#xA;  { Date: 1609887600000, Close: 20.99},&#xD;&#xA;  { Date: 1610578800000, Close: 21.49},&#xD;&#xA;  { Date: 1610665200000, Close: 19.99},&#xD;&#xA;  { Date: 1611183600000, Close: 20.99},&#xD;&#xA;  { Date: 1612911600000, Close: 19.99},&#xD;&#xA;  { Date: 1613775600000, Close: 19.99},&#xD;&#xA;  { Date: 1614380400000, Close: 22.99},&#xD;&#xA;  { Date: 1616022000000, Close: 23.99},&#xD;&#xA;  { Date: 1616540400000, Close: 22.99},&#xD;&#xA;  { Date: 1617145200000, Close: 21.99},&#xD;&#xA;  { Date: 1618354800000, Close: 22.99},&#xD;&#xA;  { Date: 1618614000000, Close: 19.99},&#xD;&#xA;  { Date: 1620082800000, Close: 18.99},&#xD;&#xA;  { Date: 1620860400000, Close: 15.99},&#xD;&#xA;  { Date: 1621378800000, Close: 16.99},&#xD;&#xA;  { Date: 1622674800000, Close: 15.49},&#xD;&#xA;  { Date: 1623193200000, Close: 15.59},&#xD;&#xA;  { Date: 1624489200000, Close: 14.99},&#xD;&#xA;  { Date: 1625266800000, Close: 13.99},&#xD;&#xA;  { Date: 1625785200000, Close: 14.49},&#xD;&#xA;  { Date: 1626908400000, Close: 13.99},&#xD;&#xA;  { Date: 1628722800000, Close: 14.99},&#xD;&#xA;  { Date: 1631314800000, Close: 15.99},&#xD;&#xA;  { Date: 1634252400000, Close: 14.99},&#xD;&#xA;  { Date: 1636671600000, Close: 14.99},&#xD;&#xA;  { Date: 1637362800000, Close: 13.99},&#xD;&#xA;  { Date: 1639436400000, Close: 13.99},&#xD;&#xA;  { Date: 1639782000000, Close: 14.99},&#xD;&#xA;  { Date: 1642633200000, Close: 14.99},&#xD;&#xA;  { Date: 1645830000000, Close: 14.99},&#xD;&#xA;  { Date: 1646866800000, Close: 14.69},&#xD;&#xA;  { Date: 1647903600000, Close: 16.99},&#xD;&#xA;  { Date: 1648422000000, Close: 14.89},&#xD;&#xA;  { Date: 1648940400000, Close: 14.09},&#xD;&#xA;  { Date: 1649372400000, Close: 13.99},&#xD;&#xA;  { Date: 1649890800000, Close: 13.49},&#xD;&#xA;  { Date: 1650322800000, Close: 14.39},&#xD;&#xA;  { Date: 1650754800000, Close: 13.89},&#xD;&#xA;  { Date: 1652137200000, Close: 13.79},&#xD;&#xA;  { Date: 1652223600000, Close: 12.99},&#xD;&#xA;  { Date: 1654210800000, Close: 12.69},&#xD;&#xA;  { Date: 1654815600000, Close: 12.39},&#xD;&#xA;  { Date: 1655334000000, Close: 12.39},&#xD;&#xA;  { Date: 1655420400000, Close: 14.99},&#xD;&#xA;  { Date: 1656025200000, Close: 13.99},&#xD;&#xA;  { Date: 1656198000000, Close: 11.99},&#xD;&#xA;  { Date: 1656543600000, Close: 11.69},&#xD;&#xA;  { Date: 1657234800000, Close: 10.59},&#xD;&#xA;  { Date: 1657321200000, Close: 10.49},&#xD;&#xA;  { Date: 1657839600000, Close: 11.99},&#xD;&#xA;  { Date: 1661900400000, Close: 19.99},&#xD;&#xA;  { Date: 1664233200000, Close: 19.99},&#xD;&#xA;  { Date: 1664492400000, Close: 19.99},&#xD;&#xA;  { Date: 1664578800000, Close: 21.99},&#xD;&#xA;  { Date: 1664838000000, Close: 21.99},&#xD;&#xA;  { Date: 1668726000000, Close: 20.49},&#xD;&#xA;  { Date: 1674255600000, Close: 21.99},&#xD;&#xA;  { Date: 1677279600000, Close: 18.69},&#xD;&#xA;  { Date: 1679353200000, Close: 21.99},&#xD;&#xA;  { Date: 1679439600000, Close: 21.19},&#xD;&#xA;  { Date: 1679785200000, Close: 21.19},&#xD;&#xA;  { Date: 1680217200000, Close: 21.99},&#xD;&#xA;  { Date: 1680649200000, Close: 20.99},&#xD;&#xA;  { Date: 1681167600000, Close: 19.99},&#xD;&#xA;  { Date: 1682204400000, Close: 19.99},&#xD;&#xA;  { Date: 1683932400000, Close: 21.99},&#xD;&#xA;  { Date: 1684364400000, Close: 21.79},&#xD;&#xA;  { Date: 1684710000000, Close: 21.09},&#xD;&#xA;  { Date: 1685574000000, Close: 20.99},&#xD;&#xA;  { Date: 1685660400000, Close: 20.79},&#xD;&#xA;  { Date: 1685746800000, Close: 20.99},&#xD;&#xA;  { Date: 1686092400000, Close: 20.39},&#xD;&#xA;  { Date: 1686697200000, Close: 20.19},&#xD;&#xA;  { Date: 1695769200000, Close: 17.69},&#xD;&#xA;  { Date: 1698361200000, Close: 19.99},&#xD;&#xA;  { Date: 1710889200000, Close: 19.99},&#xD;&#xA;  { Date: 1715814000000, Close: 19.99},&#xD;&#xA;  { Date: 1716332400000, Close: 19.99},&#xD;&#xA;  { Date: 1717714800000, Close: 20.99},&#xD;&#xA;  { Date: 1720652400000, Close: 20.99},&#xD;&#xA;  { Date: 1721948400000, Close: 20.99},&#xD;&#xA;  { Date: 1723676400000, Close: 20.99},&#xD;&#xA;  { Date: 1725663600000, Close: 20.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Impostor Professor Oak</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/073---impostor-professor-oak/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/073---impostor-professor-oak/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149126.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 1.69},&#xD;&#xA;  { Date: 1578524400000, Close: 1.69},&#xD;&#xA;  { Date: 1578870000000, Close: 1.39},&#xD;&#xA;  { Date: 1579129200000, Close: 0.99},&#xD;&#xA;  { Date: 1579820400000, Close: 1.29},&#xD;&#xA;  { Date: 1582066800000, Close: 1.69},&#xD;&#xA;  { Date: 1582758000000, Close: 1.79},&#xD;&#xA;  { Date: 1583967600000, Close: 1.49},&#xD;&#xA;  { Date: 1585004400000, Close: 1.29},&#xD;&#xA;  { Date: 1586646000000, Close: 1.59},&#xD;&#xA;  { Date: 1587164400000, Close: 1.69},&#xD;&#xA;  { Date: 1589929200000, Close: 1.79},&#xD;&#xA;  { Date: 1592521200000, Close: 1.79},&#xD;&#xA;  { Date: 1594249200000, Close: 1.89},&#xD;&#xA;  { Date: 1596495600000, Close: 2.19},&#xD;&#xA;  { Date: 1602802800000, Close: 3.49},&#xD;&#xA;  { Date: 1604444400000, Close: 5.99},&#xD;&#xA;  { Date: 1605049200000, Close: 6.99},&#xD;&#xA;  { Date: 1605567600000, Close: 6.99},&#xD;&#xA;  { Date: 1605654000000, Close: 7.49},&#xD;&#xA;  { Date: 1606258800000, Close: 6.99},&#xD;&#xA;  { Date: 1606863600000, Close: 7.99},&#xD;&#xA;  { Date: 1609282800000, Close: 4.99},&#xD;&#xA;  { Date: 1610665200000, Close: 4.49},&#xD;&#xA;  { Date: 1617750000000, Close: 3.99},&#xD;&#xA;  { Date: 1618354800000, Close: 4.29},&#xD;&#xA;  { Date: 1618614000000, Close: 3.99},&#xD;&#xA;  { Date: 1619218800000, Close: 4.49},&#xD;&#xA;  { Date: 1619737200000, Close: 4.99},&#xD;&#xA;  { Date: 1620946800000, Close: 9.99},&#xD;&#xA;  { Date: 1622070000000, Close: 9.99},&#xD;&#xA;  { Date: 1623884400000, Close: 10.99},&#xD;&#xA;  { Date: 1626908400000, Close: 9.99},&#xD;&#xA;  { Date: 1628204400000, Close: 9.39},&#xD;&#xA;  { Date: 1629932400000, Close: 8.99},&#xD;&#xA;  { Date: 1634252400000, Close: 8.39},&#xD;&#xA;  { Date: 1634943600000, Close: 8.49},&#xD;&#xA;  { Date: 1635980400000, Close: 8.99},&#xD;&#xA;  { Date: 1636930800000, Close: 8.39},&#xD;&#xA;  { Date: 1637362800000, Close: 7.99},&#xD;&#xA;  { Date: 1638658800000, Close: 7.39},&#xD;&#xA;  { Date: 1639782000000, Close: 6.99},&#xD;&#xA;  { Date: 1642633200000, Close: 6.99},&#xD;&#xA;  { Date: 1643065200000, Close: 7.39},&#xD;&#xA;  { Date: 1645138800000, Close: 10.99},&#xD;&#xA;  { Date: 1645743600000, Close: 10.99},&#xD;&#xA;  { Date: 1647471600000, Close: 9.99},&#xD;&#xA;  { Date: 1649199600000, Close: 9.39},&#xD;&#xA;  { Date: 1652482800000, Close: 8.79},&#xD;&#xA;  { Date: 1653692400000, Close: 8.19},&#xD;&#xA;  { Date: 1661295600000, Close: 9.99},&#xD;&#xA;  { Date: 1667430000000, Close: 9.99},&#xD;&#xA;  { Date: 1673391600000, Close: 9.99},&#xD;&#xA;  { Date: 1676415600000, Close: 9.99},&#xD;&#xA;  { Date: 1677625200000, Close: 9.99},&#xD;&#xA;  { Date: 1678748400000, Close: 9.99},&#xD;&#xA;  { Date: 1679353200000, Close: 10.49},&#xD;&#xA;  { Date: 1679785200000, Close: 10.49},&#xD;&#xA;  { Date: 1680217200000, Close: 10.99},&#xD;&#xA;  { Date: 1680649200000, Close: 9.99},&#xD;&#xA;  { Date: 1683154800000, Close: 10.49},&#xD;&#xA;  { Date: 1690412400000, Close: 9.99},&#xD;&#xA;  { Date: 1695078000000, Close: 9.99},&#xD;&#xA;  { Date: 1707519600000, Close: 9.99},&#xD;&#xA;  { Date: 1707865200000, Close: 9.99},&#xD;&#xA;  { Date: 1709334000000, Close: 9.99},&#xD;&#xA;  { Date: 1715986800000, Close: 9.99},&#xD;&#xA;  { Date: 1716764400000, Close: 9.99},&#xD;&#xA;  { Date: 1717714800000, Close: 9.99},&#xD;&#xA;  { Date: 1720134000000, Close: 8.79},&#xD;&#xA;  { Date: 1722898800000, Close: 8.79},&#xD;&#xA;  { Date: 1724108400000, Close: 8.99},&#xD;&#xA;  { Date: 1726527600000, Close: 8.99},&#xD;&#xA;  { Date: 1727737200000, Close: 8.99},&#xD;&#xA;  { Date: 1728428400000, Close: 8.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Item Finder</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/074---item-finder/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/074---item-finder/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149128.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 3.49},&#xD;&#xA;  { Date: 1578524400000, Close: 4.49},&#xD;&#xA;  { Date: 1578956400000, Close: 4.49},&#xD;&#xA;  { Date: 1579561200000, Close: 4.99},&#xD;&#xA;  { Date: 1579820400000, Close: 5.99},&#xD;&#xA;  { Date: 1580857200000, Close: 6.49},&#xD;&#xA;  { Date: 1581375600000, Close: 6.49},&#xD;&#xA;  { Date: 1583449200000, Close: 6.59},&#xD;&#xA;  { Date: 1583967600000, Close: 6.99},&#xD;&#xA;  { Date: 1584486000000, Close: 6.49},&#xD;&#xA;  { Date: 1585004400000, Close: 5.99},&#xD;&#xA;  { Date: 1585695600000, Close: 5.79},&#xD;&#xA;  { Date: 1586646000000, Close: 5.99},&#xD;&#xA;  { Date: 1588892400000, Close: 7.99},&#xD;&#xA;  { Date: 1589238000000, Close: 7.99},&#xD;&#xA;  { Date: 1589929200000, Close: 8.99},&#xD;&#xA;  { Date: 1591225200000, Close: 9.99},&#xD;&#xA;  { Date: 1591311600000, Close: 10.99},&#xD;&#xA;  { Date: 1592002800000, Close: 11.99},&#xD;&#xA;  { Date: 1592953200000, Close: 12.99},&#xD;&#xA;  { Date: 1593471600000, Close: 13.29},&#xD;&#xA;  { Date: 1593644400000, Close: 12.49},&#xD;&#xA;  { Date: 1594594800000, Close: 10.99},&#xD;&#xA;  { Date: 1594940400000, Close: 9.99},&#xD;&#xA;  { Date: 1595977200000, Close: 11.99},&#xD;&#xA;  { Date: 1596063600000, Close: 12.99},&#xD;&#xA;  { Date: 1596582000000, Close: 13.99},&#xD;&#xA;  { Date: 1596754800000, Close: 13.99},&#xD;&#xA;  { Date: 1597878000000, Close: 14.99},&#xD;&#xA;  { Date: 1598482800000, Close: 13.99},&#xD;&#xA;  { Date: 1600383600000, Close: 14.29},&#xD;&#xA;  { Date: 1600642800000, Close: 13.49},&#xD;&#xA;  { Date: 1602198000000, Close: 13.59},&#xD;&#xA;  { Date: 1602716400000, Close: 13.69},&#xD;&#xA;  { Date: 1604358000000, Close: 15.99},&#xD;&#xA;  { Date: 1605135600000, Close: 19.99},&#xD;&#xA;  { Date: 1607554800000, Close: 19.99},&#xD;&#xA;  { Date: 1608246000000, Close: 18.99},&#xD;&#xA;  { Date: 1608764400000, Close: 15.99},&#xD;&#xA;  { Date: 1609282800000, Close: 14.99},&#xD;&#xA;  { Date: 1610665200000, Close: 13.99},&#xD;&#xA;  { Date: 1612306800000, Close: 13.99},&#xD;&#xA;  { Date: 1614898800000, Close: 12.99},&#xD;&#xA;  { Date: 1616022000000, Close: 13.49},&#xD;&#xA;  { Date: 1618959600000, Close: 13.99},&#xD;&#xA;  { Date: 1619305200000, Close: 13.99},&#xD;&#xA;  { Date: 1620255600000, Close: 12.49},&#xD;&#xA;  { Date: 1620687600000, Close: 11.99},&#xD;&#xA;  { Date: 1621292400000, Close: 12.49},&#xD;&#xA;  { Date: 1622242800000, Close: 11.99},&#xD;&#xA;  { Date: 1622761200000, Close: 10.99},&#xD;&#xA;  { Date: 1624489200000, Close: 9.99},&#xD;&#xA;  { Date: 1625526000000, Close: 8.79},&#xD;&#xA;  { Date: 1625612400000, Close: 7.99},&#xD;&#xA;  { Date: 1626130800000, Close: 7.49},&#xD;&#xA;  { Date: 1626908400000, Close: 6.99},&#xD;&#xA;  { Date: 1627858800000, Close: 6.39},&#xD;&#xA;  { Date: 1628895600000, Close: 5.99},&#xD;&#xA;  { Date: 1629500400000, Close: 6.97},&#xD;&#xA;  { Date: 1631314800000, Close: 6.97},&#xD;&#xA;  { Date: 1631660400000, Close: 6.39},&#xD;&#xA;  { Date: 1632438000000, Close: 6.99},&#xD;&#xA;  { Date: 1633042800000, Close: 7.49},&#xD;&#xA;  { Date: 1634252400000, Close: 7.99},&#xD;&#xA;  { Date: 1634943600000, Close: 7.99},&#xD;&#xA;  { Date: 1635894000000, Close: 8.99},&#xD;&#xA;  { Date: 1636844400000, Close: 8.99},&#xD;&#xA;  { Date: 1637190000000, Close: 8.99},&#xD;&#xA;  { Date: 1638572400000, Close: 8.99},&#xD;&#xA;  { Date: 1639782000000, Close: 8.99},&#xD;&#xA;  { Date: 1640732400000, Close: 8.99},&#xD;&#xA;  { Date: 1641337200000, Close: 8.99},&#xD;&#xA;  { Date: 1643065200000, Close: 9.99},&#xD;&#xA;  { Date: 1643670000000, Close: 9.39},&#xD;&#xA;  { Date: 1645052400000, Close: 9.99},&#xD;&#xA;  { Date: 1646175600000, Close: 8.79},&#xD;&#xA;  { Date: 1646262000000, Close: 8.49},&#xD;&#xA;  { Date: 1647126000000, Close: 8.39},&#xD;&#xA;  { Date: 1647558000000, Close: 8.39},&#xD;&#xA;  { Date: 1647644400000, Close: 8.49},&#xD;&#xA;  { Date: 1648508400000, Close: 7.99},&#xD;&#xA;  { Date: 1649458800000, Close: 8.49},&#xD;&#xA;  { Date: 1649631600000, Close: 9.69},&#xD;&#xA;  { Date: 1650236400000, Close: 8.99},&#xD;&#xA;  { Date: 1652310000000, Close: 9.49},&#xD;&#xA;  { Date: 1652569200000, Close: 8.19},&#xD;&#xA;  { Date: 1653433200000, Close: 8.19},&#xD;&#xA;  { Date: 1654210800000, Close: 7.09},&#xD;&#xA;  { Date: 1655334000000, Close: 6.29},&#xD;&#xA;  { Date: 1657062000000, Close: 6.99},&#xD;&#xA;  { Date: 1657926000000, Close: 6.99},&#xD;&#xA;  { Date: 1661295600000, Close: 6.99},&#xD;&#xA;  { Date: 1661900400000, Close: 7.49},&#xD;&#xA;  { Date: 1663369200000, Close: 7.49},&#xD;&#xA;  { Date: 1664924400000, Close: 8.39},&#xD;&#xA;  { Date: 1665270000000, Close: 8.79},&#xD;&#xA;  { Date: 1667862000000, Close: 9.49},&#xD;&#xA;  { Date: 1668553200000, Close: 8.69},&#xD;&#xA;  { Date: 1668898800000, Close: 8.79},&#xD;&#xA;  { Date: 1669244400000, Close: 9.19},&#xD;&#xA;  { Date: 1669590000000, Close: 8.69},&#xD;&#xA;  { Date: 1672441200000, Close: 8.19},&#xD;&#xA;  { Date: 1675983600000, Close: 7.79},&#xD;&#xA;  { Date: 1677193200000, Close: 7.39},&#xD;&#xA;  { Date: 1677884400000, Close: 7.89},&#xD;&#xA;  { Date: 1678748400000, Close: 8.09},&#xD;&#xA;  { Date: 1679094000000, Close: 7.99},&#xD;&#xA;  { Date: 1680994800000, Close: 8.69},&#xD;&#xA;  { Date: 1681081200000, Close: 7.99},&#xD;&#xA;  { Date: 1681513200000, Close: 7.79},&#xD;&#xA;  { Date: 1681858800000, Close: 8.39},&#xD;&#xA;  { Date: 1684882800000, Close: 9.49},&#xD;&#xA;  { Date: 1686956400000, Close: 7.79},&#xD;&#xA;  { Date: 1695942000000, Close: 6.79},&#xD;&#xA;  { Date: 1701385200000, Close: 6.79},&#xD;&#xA;  { Date: 1702335600000, Close: 7.99},&#xD;&#xA;  { Date: 1702681200000, Close: 7.49},&#xD;&#xA;  { Date: 1703199600000, Close: 6.99},&#xD;&#xA;  { Date: 1703545200000, Close: 7.09},&#xD;&#xA;  { Date: 1707519600000, Close: 6.39},&#xD;&#xA;  { Date: 1707865200000, Close: 6.39},&#xD;&#xA;  { Date: 1708038000000, Close: 5.79},&#xD;&#xA;  { Date: 1708124400000, Close: 6.49},&#xD;&#xA;  { Date: 1709247600000, Close: 6.59},&#xD;&#xA;  { Date: 1709852400000, Close: 6.99},&#xD;&#xA;  { Date: 1710975600000, Close: 7.99},&#xD;&#xA;  { Date: 1711753200000, Close: 7.99},&#xD;&#xA;  { Date: 1715727600000, Close: 7.99},&#xD;&#xA;  { Date: 1717714800000, Close: 7.99},&#xD;&#xA;  { Date: 1718665200000, Close: 8.39},&#xD;&#xA;  { Date: 1719874800000, Close: 8.49},&#xD;&#xA;  { Date: 1722898800000, Close: 8.49},&#xD;&#xA;  { Date: 1724886000000, Close: 7.99},&#xD;&#xA;  { Date: 1725922800000, Close: 7.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Ivysaur</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/030---ivysaur/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/030---ivysaur/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149129.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.29},&#xD;&#xA;  { Date: 1591398000000, Close: 1.29},&#xD;&#xA;  { Date: 1593385200000, Close: 1.79},&#xD;&#xA;  { Date: 1600383600000, Close: 3.69},&#xD;&#xA;  { Date: 1601247600000, Close: 3.89},&#xD;&#xA;  { Date: 1601852400000, Close: 3.95},&#xD;&#xA;  { Date: 1604876400000, Close: 13.99},&#xD;&#xA;  { Date: 1605481200000, Close: 13.99},&#xD;&#xA;  { Date: 1606086000000, Close: 10.99},&#xD;&#xA;  { Date: 1606690800000, Close: 9.99},&#xD;&#xA;  { Date: 1607295600000, Close: 9.99},&#xD;&#xA;  { Date: 1607900400000, Close: 9.99},&#xD;&#xA;  { Date: 1608505200000, Close: 9.99},&#xD;&#xA;  { Date: 1609110000000, Close: 8.99},&#xD;&#xA;  { Date: 1609714800000, Close: 6.99},&#xD;&#xA;  { Date: 1610233200000, Close: 6.99},&#xD;&#xA;  { Date: 1610924400000, Close: 6.49},&#xD;&#xA;  { Date: 1611529200000, Close: 6.49},&#xD;&#xA;  { Date: 1612134000000, Close: 6.49},&#xD;&#xA;  { Date: 1612738800000, Close: 6.49},&#xD;&#xA;  { Date: 1613343600000, Close: 6.49},&#xD;&#xA;  { Date: 1613948400000, Close: 6.49},&#xD;&#xA;  { Date: 1614553200000, Close: 6.49},&#xD;&#xA;  { Date: 1615158000000, Close: 6.49},&#xD;&#xA;  { Date: 1615762800000, Close: 6.49},&#xD;&#xA;  { Date: 1616367600000, Close: 6.49},&#xD;&#xA;  { Date: 1616972400000, Close: 6.49},&#xD;&#xA;  { Date: 1617577200000, Close: 6.49},&#xD;&#xA;  { Date: 1618182000000, Close: 5.99},&#xD;&#xA;  { Date: 1618786800000, Close: 5.49},&#xD;&#xA;  { Date: 1619391600000, Close: 5.49},&#xD;&#xA;  { Date: 1619996400000, Close: 5.39},&#xD;&#xA;  { Date: 1620601200000, Close: 4.99},&#xD;&#xA;  { Date: 1621206000000, Close: 4.99},&#xD;&#xA;  { Date: 1621810800000, Close: 4.49},&#xD;&#xA;  { Date: 1622415600000, Close: 4.49},&#xD;&#xA;  { Date: 1623020400000, Close: 4.49},&#xD;&#xA;  { Date: 1623625200000, Close: 4.49},&#xD;&#xA;  { Date: 1624230000000, Close: 4.49},&#xD;&#xA;  { Date: 1624834800000, Close: 4.49},&#xD;&#xA;  { Date: 1625439600000, Close: 4.49},&#xD;&#xA;  { Date: 1626044400000, Close: 3.99},&#xD;&#xA;  { Date: 1626649200000, Close: 3.99},&#xD;&#xA;  { Date: 1627254000000, Close: 3.49},&#xD;&#xA;  { Date: 1627858800000, Close: 3.49},&#xD;&#xA;  { Date: 1628463600000, Close: 3.49},&#xD;&#xA;  { Date: 1629068400000, Close: 3.49},&#xD;&#xA;  { Date: 1629673200000, Close: 3.49},&#xD;&#xA;  { Date: 1630278000000, Close: 3.49},&#xD;&#xA;  { Date: 1630882800000, Close: 3.49},&#xD;&#xA;  { Date: 1631487600000, Close: 3.49},&#xD;&#xA;  { Date: 1632092400000, Close: 3.49},&#xD;&#xA;  { Date: 1632697200000, Close: 3.99},&#xD;&#xA;  { Date: 1635116400000, Close: 4.49},&#xD;&#xA;  { Date: 1635721200000, Close: 3.99},&#xD;&#xA;  { Date: 1636326000000, Close: 3.99},&#xD;&#xA;  { Date: 1636930800000, Close: 3.99},&#xD;&#xA;  { Date: 1637535600000, Close: 3.39},&#xD;&#xA;  { Date: 1638140400000, Close: 3.39},&#xD;&#xA;  { Date: 1638745200000, Close: 3.39},&#xD;&#xA;  { Date: 1639350000000, Close: 3.39},&#xD;&#xA;  { Date: 1639954800000, Close: 2.99},&#xD;&#xA;  { Date: 1643583600000, Close: 3.99},&#xD;&#xA;  { Date: 1644188400000, Close: 3.99},&#xD;&#xA;  { Date: 1644793200000, Close: 3.99},&#xD;&#xA;  { Date: 1645398000000, Close: 3.99},&#xD;&#xA;  { Date: 1646002800000, Close: 3.99},&#xD;&#xA;  { Date: 1646607600000, Close: 3.99},&#xD;&#xA;  { Date: 1647212400000, Close: 3.99},&#xD;&#xA;  { Date: 1647817200000, Close: 3.79},&#xD;&#xA;  { Date: 1648422000000, Close: 3.79},&#xD;&#xA;  { Date: 1649026800000, Close: 3.49},&#xD;&#xA;  { Date: 1663542000000, Close: 3.99},&#xD;&#xA;  { Date: 1664146800000, Close: 3.99},&#xD;&#xA;  { Date: 1664751600000, Close: 3.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.99},&#xD;&#xA;  { Date: 1665961200000, Close: 2.49},&#xD;&#xA;  { Date: 1666566000000, Close: 2.49},&#xD;&#xA;  { Date: 1667170800000, Close: 2.39},&#xD;&#xA;  { Date: 1667775600000, Close: 2.39},&#xD;&#xA;  { Date: 1668380400000, Close: 2.39},&#xD;&#xA;  { Date: 1668985200000, Close: 2.09},&#xD;&#xA;  { Date: 1669590000000, Close: 2.49},&#xD;&#xA;  { Date: 1670194800000, Close: 2.49},&#xD;&#xA;  { Date: 1670799600000, Close: 2.39},&#xD;&#xA;  { Date: 1678057200000, Close: 2.29},&#xD;&#xA;  { Date: 1681081200000, Close: 2.99},&#xD;&#xA;  { Date: 1681686000000, Close: 3.49},&#xD;&#xA;  { Date: 1682290800000, Close: 3.09},&#xD;&#xA;  { Date: 1688338800000, Close: 2.99},&#xD;&#xA;  { Date: 1690758000000, Close: 2.79},&#xD;&#xA;  { Date: 1691362800000, Close: 2.69},&#xD;&#xA;  { Date: 1702854000000, Close: 2.59},&#xD;&#xA;  { Date: 1704668400000, Close: 2.99},&#xD;&#xA;  { Date: 1706482800000, Close: 2.99},&#xD;&#xA;  { Date: 1709506800000, Close: 2.49},&#xD;&#xA;  { Date: 1710111600000, Close: 2.49},&#xD;&#xA;  { Date: 1714345200000, Close: 2.99},&#xD;&#xA;  { Date: 1714950000000, Close: 3.49},&#xD;&#xA;  { Date: 1716764400000, Close: 3.49},&#xD;&#xA;  { Date: 1718578800000, Close: 3.69},&#xD;&#xA;  { Date: 1720998000000, Close: 3.99},&#xD;&#xA;  { Date: 1725231600000, Close: 4.19},&#xD;&#xA;  { Date: 1725836400000, Close: 3.59},&#xD;&#xA;  { Date: 1726441200000, Close: 3.59},&#xD;&#xA;  { Date: 1727046000000, Close: 3.59},&#xD;&#xA;  { Date: 1727650800000, Close: 3.59},&#xD;&#xA;  { Date: 1728255600000, Close: 2.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Jynx</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/031---jynx/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/031---jynx/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149137.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.99},&#xD;&#xA;  { Date: 1591398000000, Close: 0.89},&#xD;&#xA;  { Date: 1593385200000, Close: 0.89},&#xD;&#xA;  { Date: 1593817200000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 0.79},&#xD;&#xA;  { Date: 1601247600000, Close: 0.79},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1602457200000, Close: 0.69},&#xD;&#xA;  { Date: 1603062000000, Close: 0.69},&#xD;&#xA;  { Date: 1603666800000, Close: 0.59},&#xD;&#xA;  { Date: 1605481200000, Close: 0.79},&#xD;&#xA;  { Date: 1606086000000, Close: 0.79},&#xD;&#xA;  { Date: 1607295600000, Close: 0.79},&#xD;&#xA;  { Date: 1607900400000, Close: 0.79},&#xD;&#xA;  { Date: 1608505200000, Close: 0.79},&#xD;&#xA;  { Date: 1609110000000, Close: 0.79},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.69},&#xD;&#xA;  { Date: 1613343600000, Close: 0.69},&#xD;&#xA;  { Date: 1613948400000, Close: 0.69},&#xD;&#xA;  { Date: 1614553200000, Close: 0.69},&#xD;&#xA;  { Date: 1615158000000, Close: 0.79},&#xD;&#xA;  { Date: 1615762800000, Close: 0.79},&#xD;&#xA;  { Date: 1616367600000, Close: 0.79},&#xD;&#xA;  { Date: 1616972400000, Close: 0.79},&#xD;&#xA;  { Date: 1617577200000, Close: 0.79},&#xD;&#xA;  { Date: 1618182000000, Close: 0.79},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.59},&#xD;&#xA;  { Date: 1623020400000, Close: 0.59},&#xD;&#xA;  { Date: 1623625200000, Close: 0.59},&#xD;&#xA;  { Date: 1624230000000, Close: 0.59},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.59},&#xD;&#xA;  { Date: 1626649200000, Close: 0.59},&#xD;&#xA;  { Date: 1627254000000, Close: 0.59},&#xD;&#xA;  { Date: 1627858800000, Close: 0.59},&#xD;&#xA;  { Date: 1628463600000, Close: 0.59},&#xD;&#xA;  { Date: 1629068400000, Close: 0.59},&#xD;&#xA;  { Date: 1629673200000, Close: 0.59},&#xD;&#xA;  { Date: 1630278000000, Close: 0.59},&#xD;&#xA;  { Date: 1632697200000, Close: 0.99},&#xD;&#xA;  { Date: 1633302000000, Close: 0.99},&#xD;&#xA;  { Date: 1633906800000, Close: 0.99},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1637535600000, Close: 0.99},&#xD;&#xA;  { Date: 1638140400000, Close: 0.99},&#xD;&#xA;  { Date: 1638745200000, Close: 0.99},&#xD;&#xA;  { Date: 1639350000000, Close: 0.99},&#xD;&#xA;  { Date: 1639954800000, Close: 0.99},&#xD;&#xA;  { Date: 1640559600000, Close: 0.99},&#xD;&#xA;  { Date: 1641164400000, Close: 0.99},&#xD;&#xA;  { Date: 1641769200000, Close: 0.99},&#xD;&#xA;  { Date: 1642374000000, Close: 0.99},&#xD;&#xA;  { Date: 1642978800000, Close: 0.99},&#xD;&#xA;  { Date: 1643583600000, Close: 0.99},&#xD;&#xA;  { Date: 1644188400000, Close: 0.99},&#xD;&#xA;  { Date: 1644793200000, Close: 0.99},&#xD;&#xA;  { Date: 1645398000000, Close: 0.99},&#xD;&#xA;  { Date: 1646002800000, Close: 0.99},&#xD;&#xA;  { Date: 1646607600000, Close: 0.99},&#xD;&#xA;  { Date: 1647212400000, Close: 0.99},&#xD;&#xA;  { Date: 1647817200000, Close: 0.89},&#xD;&#xA;  { Date: 1648422000000, Close: 0.89},&#xD;&#xA;  { Date: 1649026800000, Close: 0.89},&#xD;&#xA;  { Date: 1649631600000, Close: 0.89},&#xD;&#xA;  { Date: 1650236400000, Close: 0.89},&#xD;&#xA;  { Date: 1650841200000, Close: 0.89},&#xD;&#xA;  { Date: 1652655600000, Close: 0.99},&#xD;&#xA;  { Date: 1653260400000, Close: 0.99},&#xD;&#xA;  { Date: 1653865200000, Close: 0.99},&#xD;&#xA;  { Date: 1654470000000, Close: 0.99},&#xD;&#xA;  { Date: 1655074800000, Close: 0.99},&#xD;&#xA;  { Date: 1655679600000, Close: 0.99},&#xD;&#xA;  { Date: 1656284400000, Close: 0.99},&#xD;&#xA;  { Date: 1656889200000, Close: 0.99},&#xD;&#xA;  { Date: 1657494000000, Close: 0.99},&#xD;&#xA;  { Date: 1658098800000, Close: 0.99},&#xD;&#xA;  { Date: 1662332400000, Close: 0.99},&#xD;&#xA;  { Date: 1662937200000, Close: 0.99},&#xD;&#xA;  { Date: 1663542000000, Close: 0.99},&#xD;&#xA;  { Date: 1664146800000, Close: 0.99},&#xD;&#xA;  { Date: 1664751600000, Close: 0.99},&#xD;&#xA;  { Date: 1665356400000, Close: 0.89},&#xD;&#xA;  { Date: 1665961200000, Close: 0.89},&#xD;&#xA;  { Date: 1666566000000, Close: 0.89},&#xD;&#xA;  { Date: 1667170800000, Close: 0.89},&#xD;&#xA;  { Date: 1667775600000, Close: 0.89},&#xD;&#xA;  { Date: 1668380400000, Close: 0.89},&#xD;&#xA;  { Date: 1668985200000, Close: 0.89},&#xD;&#xA;  { Date: 1669590000000, Close: 0.79},&#xD;&#xA;  { Date: 1670194800000, Close: 0.59},&#xD;&#xA;  { Date: 1670799600000, Close: 0.59},&#xD;&#xA;  { Date: 1671404400000, Close: 0.59},&#xD;&#xA;  { Date: 1672009200000, Close: 0.59},&#xD;&#xA;  { Date: 1672614000000, Close: 0.59},&#xD;&#xA;  { Date: 1673218800000, Close: 0.79},&#xD;&#xA;  { Date: 1681081200000, Close: 0.79},&#xD;&#xA;  { Date: 1688338800000, Close: 0.59},&#xD;&#xA;  { Date: 1695596400000, Close: 0.59},&#xD;&#xA;  { Date: 1696201200000, Close: 0.59},&#xD;&#xA;  { Date: 1696806000000, Close: 0.59},&#xD;&#xA;  { Date: 1698620400000, Close: 0.59},&#xD;&#xA;  { Date: 1702854000000, Close: 0.59},&#xD;&#xA;  { Date: 1708297200000, Close: 0.59},&#xD;&#xA;  { Date: 1708902000000, Close: 0.59},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1713135600000, Close: 0.59},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;  { Date: 1728255600000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Kadabra</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/032---kadabra/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/032---kadabra/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149143.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.99},&#xD;&#xA;  { Date: 1593385200000, Close: 1.09},&#xD;&#xA;  { Date: 1593817200000, Close: 1.09},&#xD;&#xA;  { Date: 1600383600000, Close: 1.19},&#xD;&#xA;  { Date: 1601247600000, Close: 1.19},&#xD;&#xA;  { Date: 1601852400000, Close: 1.19},&#xD;&#xA;  { Date: 1607900400000, Close: 9.49},&#xD;&#xA;  { Date: 1608505200000, Close: 9.49},&#xD;&#xA;  { Date: 1609110000000, Close: 9.49},&#xD;&#xA;  { Date: 1609714800000, Close: 8.99},&#xD;&#xA;  { Date: 1610233200000, Close: 8.99},&#xD;&#xA;  { Date: 1610924400000, Close: 8.99},&#xD;&#xA;  { Date: 1611529200000, Close: 8.99},&#xD;&#xA;  { Date: 1612134000000, Close: 8.99},&#xD;&#xA;  { Date: 1612738800000, Close: 8.99},&#xD;&#xA;  { Date: 1613343600000, Close: 8.99},&#xD;&#xA;  { Date: 1613948400000, Close: 8.49},&#xD;&#xA;  { Date: 1614553200000, Close: 8.49},&#xD;&#xA;  { Date: 1615158000000, Close: 8.49},&#xD;&#xA;  { Date: 1615762800000, Close: 8.49},&#xD;&#xA;  { Date: 1616367600000, Close: 8.19},&#xD;&#xA;  { Date: 1616972400000, Close: 7.99},&#xD;&#xA;  { Date: 1617577200000, Close: 7.99},&#xD;&#xA;  { Date: 1618182000000, Close: 7.99},&#xD;&#xA;  { Date: 1618786800000, Close: 6.99},&#xD;&#xA;  { Date: 1619391600000, Close: 6.99},&#xD;&#xA;  { Date: 1619996400000, Close: 5.99},&#xD;&#xA;  { Date: 1620601200000, Close: 4.99},&#xD;&#xA;  { Date: 1621206000000, Close: 4.99},&#xD;&#xA;  { Date: 1621810800000, Close: 4.49},&#xD;&#xA;  { Date: 1622415600000, Close: 3.99},&#xD;&#xA;  { Date: 1623020400000, Close: 3.49},&#xD;&#xA;  { Date: 1623625200000, Close: 3.49},&#xD;&#xA;  { Date: 1624230000000, Close: 3.49},&#xD;&#xA;  { Date: 1624834800000, Close: 2.99},&#xD;&#xA;  { Date: 1625439600000, Close: 2.99},&#xD;&#xA;  { Date: 1626044400000, Close: 2.99},&#xD;&#xA;  { Date: 1626649200000, Close: 2.99},&#xD;&#xA;  { Date: 1627254000000, Close: 2.49},&#xD;&#xA;  { Date: 1627858800000, Close: 2.49},&#xD;&#xA;  { Date: 1628463600000, Close: 2.49},&#xD;&#xA;  { Date: 1629068400000, Close: 2.19},&#xD;&#xA;  { Date: 1629673200000, Close: 2.49},&#xD;&#xA;  { Date: 1630278000000, Close: 2.49},&#xD;&#xA;  { Date: 1630882800000, Close: 2.49},&#xD;&#xA;  { Date: 1631487600000, Close: 2.49},&#xD;&#xA;  { Date: 1632092400000, Close: 2.49},&#xD;&#xA;  { Date: 1632697200000, Close: 2.49},&#xD;&#xA;  { Date: 1633302000000, Close: 2.49},&#xD;&#xA;  { Date: 1633906800000, Close: 2.49},&#xD;&#xA;  { Date: 1634511600000, Close: 2.49},&#xD;&#xA;  { Date: 1635116400000, Close: 2.49},&#xD;&#xA;  { Date: 1635721200000, Close: 2.29},&#xD;&#xA;  { Date: 1636326000000, Close: 2.29},&#xD;&#xA;  { Date: 1636930800000, Close: 2.29},&#xD;&#xA;  { Date: 1637535600000, Close: 1.99},&#xD;&#xA;  { Date: 1639954800000, Close: 1.99},&#xD;&#xA;  { Date: 1640559600000, Close: 1.99},&#xD;&#xA;  { Date: 1641164400000, Close: 1.99},&#xD;&#xA;  { Date: 1641769200000, Close: 1.99},&#xD;&#xA;  { Date: 1642978800000, Close: 1.99},&#xD;&#xA;  { Date: 1643583600000, Close: 1.99},&#xD;&#xA;  { Date: 1644188400000, Close: 1.99},&#xD;&#xA;  { Date: 1644793200000, Close: 1.69},&#xD;&#xA;  { Date: 1646002800000, Close: 1.99},&#xD;&#xA;  { Date: 1646607600000, Close: 1.69},&#xD;&#xA;  { Date: 1647212400000, Close: 1.59},&#xD;&#xA;  { Date: 1647817200000, Close: 1.59},&#xD;&#xA;  { Date: 1648422000000, Close: 1.29},&#xD;&#xA;  { Date: 1649026800000, Close: 1.29},&#xD;&#xA;  { Date: 1649631600000, Close: 1.49},&#xD;&#xA;  { Date: 1650236400000, Close: 1.39},&#xD;&#xA;  { Date: 1652050800000, Close: 1.79},&#xD;&#xA;  { Date: 1652655600000, Close: 1.79},&#xD;&#xA;  { Date: 1653260400000, Close: 1.99},&#xD;&#xA;  { Date: 1653865200000, Close: 1.99},&#xD;&#xA;  { Date: 1654470000000, Close: 1.99},&#xD;&#xA;  { Date: 1662332400000, Close: 2.99},&#xD;&#xA;  { Date: 1662937200000, Close: 2.99},&#xD;&#xA;  { Date: 1663542000000, Close: 2.99},&#xD;&#xA;  { Date: 1664146800000, Close: 2.99},&#xD;&#xA;  { Date: 1664751600000, Close: 2.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.39},&#xD;&#xA;  { Date: 1665961200000, Close: 1.79},&#xD;&#xA;  { Date: 1666566000000, Close: 1.79},&#xD;&#xA;  { Date: 1667170800000, Close: 1.79},&#xD;&#xA;  { Date: 1667775600000, Close: 1.79},&#xD;&#xA;  { Date: 1668380400000, Close: 1.79},&#xD;&#xA;  { Date: 1668985200000, Close: 1.49},&#xD;&#xA;  { Date: 1669590000000, Close: 1.09},&#xD;&#xA;  { Date: 1670194800000, Close: 1.09},&#xD;&#xA;  { Date: 1670799600000, Close: 1.09},&#xD;&#xA;  { Date: 1671404400000, Close: 1.09},&#xD;&#xA;  { Date: 1672009200000, Close: 1.09},&#xD;&#xA;  { Date: 1672614000000, Close: 1.09},&#xD;&#xA;  { Date: 1673823600000, Close: 0.99},&#xD;&#xA;  { Date: 1674428400000, Close: 0.79},&#xD;&#xA;  { Date: 1675033200000, Close: 0.69},&#xD;&#xA;  { Date: 1693177200000, Close: 1.59},&#xD;&#xA;  { Date: 1702854000000, Close: 1.39},&#xD;&#xA;  { Date: 1706482800000, Close: 1.39},&#xD;&#xA;  { Date: 1707692400000, Close: 1.39},&#xD;&#xA;  { Date: 1708297200000, Close: 1.29},&#xD;&#xA;  { Date: 1710111600000, Close: 1.99},&#xD;&#xA;  { Date: 1710716400000, Close: 1.79},&#xD;&#xA;  { Date: 1714345200000, Close: 1.99},&#xD;&#xA;  { Date: 1714950000000, Close: 1.99},&#xD;&#xA;  { Date: 1715554800000, Close: 1.69},&#xD;&#xA;  { Date: 1724022000000, Close: 1.79},&#xD;&#xA;  { Date: 1724626800000, Close: 1.79},&#xD;&#xA;  { Date: 1727046000000, Close: 1.49},&#xD;&#xA;  { Date: 1727650800000, Close: 1.49},&#xD;&#xA;  { Date: 1728255600000, Close: 1.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Kakuna</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/033---kakuna/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/033---kakuna/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149145.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1591398000000, Close: 0.89},&#xD;&#xA;  { Date: 1593385200000, Close: 0.89},&#xD;&#xA;  { Date: 1593817200000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 0.69},&#xD;&#xA;  { Date: 1601247600000, Close: 0.69},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1602457200000, Close: 0.69},&#xD;&#xA;  { Date: 1605481200000, Close: 0.99},&#xD;&#xA;  { Date: 1606690800000, Close: 1.29},&#xD;&#xA;  { Date: 1607295600000, Close: 1.49},&#xD;&#xA;  { Date: 1607900400000, Close: 1.99},&#xD;&#xA;  { Date: 1608505200000, Close: 1.99},&#xD;&#xA;  { Date: 1609110000000, Close: 1.99},&#xD;&#xA;  { Date: 1609714800000, Close: 1.49},&#xD;&#xA;  { Date: 1610233200000, Close: 1.59},&#xD;&#xA;  { Date: 1610924400000, Close: 1.69},&#xD;&#xA;  { Date: 1611529200000, Close: 1.69},&#xD;&#xA;  { Date: 1612134000000, Close: 1.69},&#xD;&#xA;  { Date: 1612738800000, Close: 1.69},&#xD;&#xA;  { Date: 1613343600000, Close: 1.69},&#xD;&#xA;  { Date: 1613948400000, Close: 1.49},&#xD;&#xA;  { Date: 1614553200000, Close: 1.55},&#xD;&#xA;  { Date: 1615158000000, Close: 1.49},&#xD;&#xA;  { Date: 1615762800000, Close: 1.49},&#xD;&#xA;  { Date: 1616367600000, Close: 1.49},&#xD;&#xA;  { Date: 1616972400000, Close: 1.49},&#xD;&#xA;  { Date: 1617577200000, Close: 1.49},&#xD;&#xA;  { Date: 1618182000000, Close: 1.29},&#xD;&#xA;  { Date: 1618786800000, Close: 1.19},&#xD;&#xA;  { Date: 1619391600000, Close: 1.19},&#xD;&#xA;  { Date: 1619996400000, Close: 1.19},&#xD;&#xA;  { Date: 1620601200000, Close: 1.09},&#xD;&#xA;  { Date: 1621206000000, Close: 1.09},&#xD;&#xA;  { Date: 1621810800000, Close: 1.09},&#xD;&#xA;  { Date: 1622415600000, Close: 1.09},&#xD;&#xA;  { Date: 1623020400000, Close: 1.09},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 1.09},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 0.99},&#xD;&#xA;  { Date: 1626649200000, Close: 0.99},&#xD;&#xA;  { Date: 1627254000000, Close: 0.99},&#xD;&#xA;  { Date: 1627858800000, Close: 0.99},&#xD;&#xA;  { Date: 1628463600000, Close: 0.99},&#xD;&#xA;  { Date: 1629068400000, Close: 0.99},&#xD;&#xA;  { Date: 1629673200000, Close: 0.99},&#xD;&#xA;  { Date: 1630278000000, Close: 0.99},&#xD;&#xA;  { Date: 1630882800000, Close: 0.99},&#xD;&#xA;  { Date: 1631487600000, Close: 0.99},&#xD;&#xA;  { Date: 1632092400000, Close: 0.99},&#xD;&#xA;  { Date: 1632697200000, Close: 0.99},&#xD;&#xA;  { Date: 1633302000000, Close: 0.99},&#xD;&#xA;  { Date: 1633906800000, Close: 0.99},&#xD;&#xA;  { Date: 1634511600000, Close: 0.99},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1635721200000, Close: 0.99},&#xD;&#xA;  { Date: 1636326000000, Close: 0.99},&#xD;&#xA;  { Date: 1636930800000, Close: 0.99},&#xD;&#xA;  { Date: 1637535600000, Close: 0.99},&#xD;&#xA;  { Date: 1638140400000, Close: 0.99},&#xD;&#xA;  { Date: 1638745200000, Close: 0.99},&#xD;&#xA;  { Date: 1639350000000, Close: 0.99},&#xD;&#xA;  { Date: 1639954800000, Close: 0.99},&#xD;&#xA;  { Date: 1640559600000, Close: 0.99},&#xD;&#xA;  { Date: 1644793200000, Close: 1.09},&#xD;&#xA;  { Date: 1646002800000, Close: 1.09},&#xD;&#xA;  { Date: 1646607600000, Close: 1.09},&#xD;&#xA;  { Date: 1647212400000, Close: 1.09},&#xD;&#xA;  { Date: 1647817200000, Close: 1.09},&#xD;&#xA;  { Date: 1648422000000, Close: 1.09},&#xD;&#xA;  { Date: 1649026800000, Close: 0.99},&#xD;&#xA;  { Date: 1649631600000, Close: 0.99},&#xD;&#xA;  { Date: 1650236400000, Close: 0.99},&#xD;&#xA;  { Date: 1650841200000, Close: 0.99},&#xD;&#xA;  { Date: 1663542000000, Close: 0.99},&#xD;&#xA;  { Date: 1664146800000, Close: 0.99},&#xD;&#xA;  { Date: 1664751600000, Close: 0.99},&#xD;&#xA;  { Date: 1665356400000, Close: 0.99},&#xD;&#xA;  { Date: 1665961200000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 0.99},&#xD;&#xA;  { Date: 1667170800000, Close: 0.99},&#xD;&#xA;  { Date: 1667775600000, Close: 0.99},&#xD;&#xA;  { Date: 1668380400000, Close: 0.99},&#xD;&#xA;  { Date: 1668985200000, Close: 0.99},&#xD;&#xA;  { Date: 1672614000000, Close: 0.69},&#xD;&#xA;  { Date: 1681081200000, Close: 0.79},&#xD;&#xA;  { Date: 1682290800000, Close: 0.79},&#xD;&#xA;  { Date: 1685314800000, Close: 0.79},&#xD;&#xA;  { Date: 1685919600000, Close: 0.79},&#xD;&#xA;  { Date: 1688338800000, Close: 0.69},&#xD;&#xA;  { Date: 1689548400000, Close: 0.69},&#xD;&#xA;  { Date: 1690153200000, Close: 0.69},&#xD;&#xA;  { Date: 1704668400000, Close: 0.59},&#xD;&#xA;  { Date: 1708297200000, Close: 0.59},&#xD;&#xA;  { Date: 1708902000000, Close: 0.59},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1711321200000, Close: 0.49},&#xD;&#xA;  { Date: 1711926000000, Close: 0.49},&#xD;&#xA;  { Date: 1713135600000, Close: 0.49},&#xD;&#xA;  { Date: 1713740400000, Close: 0.59},&#xD;&#xA;  { Date: 1714345200000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Koffing</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/051---koffing/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/051---koffing/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149150.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.39},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.69},&#xD;&#xA;  { Date: 1606690800000, Close: 0.69},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 0.89},&#xD;&#xA;  { Date: 1608505200000, Close: 0.89},&#xD;&#xA;  { Date: 1609110000000, Close: 0.89},&#xD;&#xA;  { Date: 1609714800000, Close: 0.59},&#xD;&#xA;  { Date: 1610233200000, Close: 0.59},&#xD;&#xA;  { Date: 1610924400000, Close: 0.59},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.39},&#xD;&#xA;  { Date: 1625439600000, Close: 0.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1626649200000, Close: 0.39},&#xD;&#xA;  { Date: 1627254000000, Close: 0.39},&#xD;&#xA;  { Date: 1627858800000, Close: 0.39},&#xD;&#xA;  { Date: 1628463600000, Close: 0.39},&#xD;&#xA;  { Date: 1629068400000, Close: 0.39},&#xD;&#xA;  { Date: 1629673200000, Close: 0.39},&#xD;&#xA;  { Date: 1630278000000, Close: 0.39},&#xD;&#xA;  { Date: 1630882800000, Close: 0.39},&#xD;&#xA;  { Date: 1631487600000, Close: 0.39},&#xD;&#xA;  { Date: 1632092400000, Close: 0.39},&#xD;&#xA;  { Date: 1632697200000, Close: 0.39},&#xD;&#xA;  { Date: 1633302000000, Close: 0.39},&#xD;&#xA;  { Date: 1633906800000, Close: 0.39},&#xD;&#xA;  { Date: 1634511600000, Close: 0.39},&#xD;&#xA;  { Date: 1635116400000, Close: 0.39},&#xD;&#xA;  { Date: 1635721200000, Close: 0.39},&#xD;&#xA;  { Date: 1636326000000, Close: 0.39},&#xD;&#xA;  { Date: 1636930800000, Close: 0.39},&#xD;&#xA;  { Date: 1637535600000, Close: 0.39},&#xD;&#xA;  { Date: 1638140400000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1641769200000, Close: 0.49},&#xD;&#xA;  { Date: 1642374000000, Close: 0.49},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1644793200000, Close: 0.59},&#xD;&#xA;  { Date: 1645398000000, Close: 0.59},&#xD;&#xA;  { Date: 1646002800000, Close: 0.59},&#xD;&#xA;  { Date: 1646607600000, Close: 0.59},&#xD;&#xA;  { Date: 1647212400000, Close: 0.59},&#xD;&#xA;  { Date: 1647817200000, Close: 0.59},&#xD;&#xA;  { Date: 1648422000000, Close: 0.59},&#xD;&#xA;  { Date: 1649026800000, Close: 0.59},&#xD;&#xA;  { Date: 1649631600000, Close: 0.59},&#xD;&#xA;  { Date: 1650236400000, Close: 0.59},&#xD;&#xA;  { Date: 1650841200000, Close: 0.59},&#xD;&#xA;  { Date: 1651446000000, Close: 0.59},&#xD;&#xA;  { Date: 1652050800000, Close: 0.59},&#xD;&#xA;  { Date: 1652655600000, Close: 0.59},&#xD;&#xA;  { Date: 1653260400000, Close: 0.59},&#xD;&#xA;  { Date: 1653865200000, Close: 0.59},&#xD;&#xA;  { Date: 1654470000000, Close: 0.59},&#xD;&#xA;  { Date: 1655074800000, Close: 0.59},&#xD;&#xA;  { Date: 1655679600000, Close: 0.59},&#xD;&#xA;  { Date: 1656284400000, Close: 0.59},&#xD;&#xA;  { Date: 1656889200000, Close: 0.59},&#xD;&#xA;  { Date: 1657494000000, Close: 0.59},&#xD;&#xA;  { Date: 1662332400000, Close: 0.59},&#xD;&#xA;  { Date: 1662937200000, Close: 0.59},&#xD;&#xA;  { Date: 1663542000000, Close: 0.59},&#xD;&#xA;  { Date: 1664146800000, Close: 0.59},&#xD;&#xA;  { Date: 1664751600000, Close: 0.59},&#xD;&#xA;  { Date: 1665356400000, Close: 0.59},&#xD;&#xA;  { Date: 1665961200000, Close: 0.59},&#xD;&#xA;  { Date: 1666566000000, Close: 0.59},&#xD;&#xA;  { Date: 1667170800000, Close: 0.59},&#xD;&#xA;  { Date: 1667775600000, Close: 0.59},&#xD;&#xA;  { Date: 1668380400000, Close: 0.59},&#xD;&#xA;  { Date: 1668985200000, Close: 0.59},&#xD;&#xA;  { Date: 1669590000000, Close: 0.59},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1683500400000, Close: 0.49},&#xD;&#xA;  { Date: 1688338800000, Close: 0.49},&#xD;&#xA;  { Date: 1688943600000, Close: 0.39},&#xD;&#xA;  { Date: 1689548400000, Close: 0.39},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1696806000000, Close: 0.39},&#xD;&#xA;  { Date: 1697410800000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1705878000000, Close: 0.49},&#xD;&#xA;  { Date: 1707692400000, Close: 0.49},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.39},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;  { Date: 1710716400000, Close: 0.39},&#xD;&#xA;  { Date: 1711321200000, Close: 0.39},&#xD;&#xA;  { Date: 1711926000000, Close: 0.39},&#xD;&#xA;  { Date: 1712530800000, Close: 0.39},&#xD;&#xA;  { Date: 1714950000000, Close: 0.39},&#xD;&#xA;  { Date: 1719183600000, Close: 0.39},&#xD;&#xA;  { Date: 1719788400000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Lass</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/075---lass/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/075---lass/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1716441.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Lightning Energy</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/100---lightning-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/100---lightning-energy/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149189.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.49},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.59},&#xD;&#xA;  { Date: 1606086000000, Close: 0.59},&#xD;&#xA;  { Date: 1606690800000, Close: 0.59},&#xD;&#xA;  { Date: 1607295600000, Close: 0.59},&#xD;&#xA;  { Date: 1607900400000, Close: 0.59},&#xD;&#xA;  { Date: 1608505200000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1610233200000, Close: 0.39},&#xD;&#xA;  { Date: 1610924400000, Close: 0.29},&#xD;&#xA;  { Date: 1611529200000, Close: 0.29},&#xD;&#xA;  { Date: 1612134000000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.49},&#xD;&#xA;  { Date: 1613343600000, Close: 0.49},&#xD;&#xA;  { Date: 1613948400000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.49},&#xD;&#xA;  { Date: 1615762800000, Close: 0.49},&#xD;&#xA;  { Date: 1616367600000, Close: 0.49},&#xD;&#xA;  { Date: 1616972400000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.59},&#xD;&#xA;  { Date: 1625439600000, Close: 0.59},&#xD;&#xA;  { Date: 1626044400000, Close: 0.59},&#xD;&#xA;  { Date: 1626649200000, Close: 0.59},&#xD;&#xA;  { Date: 1627254000000, Close: 0.59},&#xD;&#xA;  { Date: 1627858800000, Close: 0.59},&#xD;&#xA;  { Date: 1628463600000, Close: 0.59},&#xD;&#xA;  { Date: 1629068400000, Close: 0.59},&#xD;&#xA;  { Date: 1629673200000, Close: 0.59},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.39},&#xD;&#xA;  { Date: 1633906800000, Close: 0.39},&#xD;&#xA;  { Date: 1634511600000, Close: 0.39},&#xD;&#xA;  { Date: 1635116400000, Close: 0.39},&#xD;&#xA;  { Date: 1635721200000, Close: 0.39},&#xD;&#xA;  { Date: 1636326000000, Close: 0.39},&#xD;&#xA;  { Date: 1636930800000, Close: 0.39},&#xD;&#xA;  { Date: 1637535600000, Close: 0.39},&#xD;&#xA;  { Date: 1638140400000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1673218800000, Close: 0.39},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.59},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1683500400000, Close: 0.49},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1690758000000, Close: 0.39},&#xD;&#xA;  { Date: 1691362800000, Close: 0.39},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1699225200000, Close: 0.49},&#xD;&#xA;  { Date: 1699830000000, Close: 0.49},&#xD;&#xA;  { Date: 1700434800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1715554800000, Close: 0.49},&#xD;&#xA;  { Date: 1716159600000, Close: 0.39},&#xD;&#xA;  { Date: 1716764400000, Close: 0.39},&#xD;&#xA;  { Date: 1727046000000, Close: 0.39},&#xD;&#xA;  { Date: 1727650800000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Machamp</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/008---machamp/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/008---machamp/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/1067877.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577228400000, Close: 6.99},&#xD;&#xA;  { Date: 1578524400000, Close: 6.99},&#xD;&#xA;  { Date: 1578697200000, Close: 6.99},&#xD;&#xA;  { Date: 1578956400000, Close: 6.99},&#xD;&#xA;  { Date: 1579129200000, Close: 7.99},&#xD;&#xA;  { Date: 1580252400000, Close: 7.99},&#xD;&#xA;  { Date: 1580943600000, Close: 7.99},&#xD;&#xA;  { Date: 1582066800000, Close: 8.09},&#xD;&#xA;  { Date: 1582585200000, Close: 8.29},&#xD;&#xA;  { Date: 1583276400000, Close: 8.29},&#xD;&#xA;  { Date: 1583967600000, Close: 8.79},&#xD;&#xA;  { Date: 1584486000000, Close: 7.99},&#xD;&#xA;  { Date: 1585004400000, Close: 7.49},&#xD;&#xA;  { Date: 1585695600000, Close: 6.99},&#xD;&#xA;  { Date: 1586818800000, Close: 7.49},&#xD;&#xA;  { Date: 1591311600000, Close: 8.99},&#xD;&#xA;  { Date: 1591743600000, Close: 9.99},&#xD;&#xA;  { Date: 1592434800000, Close: 9.99},&#xD;&#xA;  { Date: 1594249200000, Close: 10.49},&#xD;&#xA;  { Date: 1594767600000, Close: 10.99},&#xD;&#xA;  { Date: 1595372400000, Close: 9.99},&#xD;&#xA;  { Date: 1596150000000, Close: 10.99},&#xD;&#xA;  { Date: 1596754800000, Close: 10.99},&#xD;&#xA;  { Date: 1597446000000, Close: 11.99},&#xD;&#xA;  { Date: 1598050800000, Close: 12.99},&#xD;&#xA;  { Date: 1599001200000, Close: 14.99},&#xD;&#xA;  { Date: 1599692400000, Close: 14.99},&#xD;&#xA;  { Date: 1599865200000, Close: 17.99},&#xD;&#xA;  { Date: 1600210800000, Close: 16.99},&#xD;&#xA;  { Date: 1600470000000, Close: 17.99},&#xD;&#xA;  { Date: 1602543600000, Close: 21.99},&#xD;&#xA;  { Date: 1602802800000, Close: 24.99},&#xD;&#xA;  { Date: 1604098800000, Close: 34.99},&#xD;&#xA;  { Date: 1604962800000, Close: 44.99},&#xD;&#xA;  { Date: 1606345200000, Close: 49.99},&#xD;&#xA;  { Date: 1606863600000, Close: 54.99},&#xD;&#xA;  { Date: 1607382000000, Close: 54.99},&#xD;&#xA;  { Date: 1609887600000, Close: 52.99},&#xD;&#xA;  { Date: 1611097200000, Close: 49.99},&#xD;&#xA;  { Date: 1612393200000, Close: 48.99},&#xD;&#xA;  { Date: 1612479600000, Close: 45.99},&#xD;&#xA;  { Date: 1612998000000, Close: 46.99},&#xD;&#xA;  { Date: 1614380400000, Close: 47.99},&#xD;&#xA;  { Date: 1614726000000, Close: 47.99},&#xD;&#xA;  { Date: 1614898800000, Close: 51.99},&#xD;&#xA;  { Date: 1618009200000, Close: 49.99},&#xD;&#xA;  { Date: 1618614000000, Close: 44.99},&#xD;&#xA;  { Date: 1620428400000, Close: 41.99},&#xD;&#xA;  { Date: 1621292400000, Close: 39.99},&#xD;&#xA;  { Date: 1623884400000, Close: 47.99},&#xD;&#xA;  { Date: 1625180400000, Close: 49.99},&#xD;&#xA;  { Date: 1626390000000, Close: 46.99},&#xD;&#xA;  { Date: 1627686000000, Close: 43.99},&#xD;&#xA;  { Date: 1629932400000, Close: 44.99},&#xD;&#xA;  { Date: 1631574000000, Close: 41.99},&#xD;&#xA;  { Date: 1632870000000, Close: 38.99},&#xD;&#xA;  { Date: 1633734000000, Close: 34.99},&#xD;&#xA;  { Date: 1634943600000, Close: 29.99},&#xD;&#xA;  { Date: 1638918000000, Close: 29.99},&#xD;&#xA;  { Date: 1644620400000, Close: 29.99},&#xD;&#xA;  { Date: 1645225200000, Close: 34.99},&#xD;&#xA;  { Date: 1646866800000, Close: 34.99},&#xD;&#xA;  { Date: 1649890800000, Close: 37.99},&#xD;&#xA;  { Date: 1653346800000, Close: 37.99},&#xD;&#xA;  { Date: 1655334000000, Close: 37.99},&#xD;&#xA;  { Date: 1656630000000, Close: 37.99},&#xD;&#xA;  { Date: 1663887600000, Close: 39.99},&#xD;&#xA;  { Date: 1664492400000, Close: 39.99},&#xD;&#xA;  { Date: 1665788400000, Close: 34.99},&#xD;&#xA;  { Date: 1671577200000, Close: 34.99},&#xD;&#xA;  { Date: 1671836400000, Close: 32.99},&#xD;&#xA;  { Date: 1673391600000, Close: 32.99},&#xD;&#xA;  { Date: 1678143600000, Close: 32.99},&#xD;&#xA;  { Date: 1678316400000, Close: 32.99},&#xD;&#xA;  { Date: 1680822000000, Close: 32.99},&#xD;&#xA;  { Date: 1682463600000, Close: 34.99},&#xD;&#xA;  { Date: 1686092400000, Close: 34.99},&#xD;&#xA;  { Date: 1687215600000, Close: 34.99},&#xD;&#xA;  { Date: 1693609200000, Close: 34.99},&#xD;&#xA;  { Date: 1697842800000, Close: 32.99},&#xD;&#xA;  { Date: 1699398000000, Close: 32.99},&#xD;&#xA;  { Date: 1701903600000, Close: 34.99},&#xD;&#xA;  { Date: 1706914800000, Close: 34.99},&#xD;&#xA;  { Date: 1709334000000, Close: 34.99},&#xD;&#xA;  { Date: 1713222000000, Close: 34.99},&#xD;&#xA;  { Date: 1715295600000, Close: 39.99},&#xD;&#xA;  { Date: 1724886000000, Close: 39.99},&#xD;&#xA;  { Date: 1727218800000, Close: 39.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Machoke</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/034---machoke/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/034---machoke/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149228.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.59},&#xD;&#xA;  { Date: 1606086000000, Close: 0.59},&#xD;&#xA;  { Date: 1608505200000, Close: 1.99},&#xD;&#xA;  { Date: 1609110000000, Close: 1.79},&#xD;&#xA;  { Date: 1609714800000, Close: 1.49},&#xD;&#xA;  { Date: 1610233200000, Close: 1.79},&#xD;&#xA;  { Date: 1610924400000, Close: 1.79},&#xD;&#xA;  { Date: 1611529200000, Close: 1.79},&#xD;&#xA;  { Date: 1612134000000, Close: 1.79},&#xD;&#xA;  { Date: 1612738800000, Close: 1.49},&#xD;&#xA;  { Date: 1613343600000, Close: 1.39},&#xD;&#xA;  { Date: 1613948400000, Close: 0.99},&#xD;&#xA;  { Date: 1614553200000, Close: 0.99},&#xD;&#xA;  { Date: 1615158000000, Close: 0.99},&#xD;&#xA;  { Date: 1615762800000, Close: 0.99},&#xD;&#xA;  { Date: 1616367600000, Close: 0.99},&#xD;&#xA;  { Date: 1616972400000, Close: 0.99},&#xD;&#xA;  { Date: 1617577200000, Close: 0.99},&#xD;&#xA;  { Date: 1618182000000, Close: 0.89},&#xD;&#xA;  { Date: 1618786800000, Close: 0.89},&#xD;&#xA;  { Date: 1619391600000, Close: 0.89},&#xD;&#xA;  { Date: 1619996400000, Close: 0.89},&#xD;&#xA;  { Date: 1620601200000, Close: 0.89},&#xD;&#xA;  { Date: 1621206000000, Close: 0.89},&#xD;&#xA;  { Date: 1621810800000, Close: 0.89},&#xD;&#xA;  { Date: 1622415600000, Close: 0.79},&#xD;&#xA;  { Date: 1623020400000, Close: 0.79},&#xD;&#xA;  { Date: 1623625200000, Close: 0.79},&#xD;&#xA;  { Date: 1624230000000, Close: 0.79},&#xD;&#xA;  { Date: 1624834800000, Close: 0.69},&#xD;&#xA;  { Date: 1625439600000, Close: 0.69},&#xD;&#xA;  { Date: 1626044400000, Close: 0.69},&#xD;&#xA;  { Date: 1626649200000, Close: 0.69},&#xD;&#xA;  { Date: 1627254000000, Close: 0.69},&#xD;&#xA;  { Date: 1627858800000, Close: 0.69},&#xD;&#xA;  { Date: 1628463600000, Close: 0.69},&#xD;&#xA;  { Date: 1630278000000, Close: 0.69},&#xD;&#xA;  { Date: 1630882800000, Close: 0.69},&#xD;&#xA;  { Date: 1631487600000, Close: 0.69},&#xD;&#xA;  { Date: 1632092400000, Close: 0.69},&#xD;&#xA;  { Date: 1632697200000, Close: 0.69},&#xD;&#xA;  { Date: 1633302000000, Close: 0.69},&#xD;&#xA;  { Date: 1633906800000, Close: 0.69},&#xD;&#xA;  { Date: 1634511600000, Close: 0.69},&#xD;&#xA;  { Date: 1635116400000, Close: 0.69},&#xD;&#xA;  { Date: 1636326000000, Close: 0.79},&#xD;&#xA;  { Date: 1643583600000, Close: 0.79},&#xD;&#xA;  { Date: 1644188400000, Close: 0.79},&#xD;&#xA;  { Date: 1644793200000, Close: 0.79},&#xD;&#xA;  { Date: 1646002800000, Close: 0.89},&#xD;&#xA;  { Date: 1646607600000, Close: 0.89},&#xD;&#xA;  { Date: 1647212400000, Close: 0.89},&#xD;&#xA;  { Date: 1647817200000, Close: 0.89},&#xD;&#xA;  { Date: 1648422000000, Close: 0.89},&#xD;&#xA;  { Date: 1649026800000, Close: 0.89},&#xD;&#xA;  { Date: 1649631600000, Close: 0.89},&#xD;&#xA;  { Date: 1650236400000, Close: 0.89},&#xD;&#xA;  { Date: 1650841200000, Close: 0.89},&#xD;&#xA;  { Date: 1651446000000, Close: 0.89},&#xD;&#xA;  { Date: 1652050800000, Close: 0.89},&#xD;&#xA;  { Date: 1652655600000, Close: 0.89},&#xD;&#xA;  { Date: 1653260400000, Close: 0.89},&#xD;&#xA;  { Date: 1653865200000, Close: 0.89},&#xD;&#xA;  { Date: 1654470000000, Close: 0.89},&#xD;&#xA;  { Date: 1655074800000, Close: 0.79},&#xD;&#xA;  { Date: 1655679600000, Close: 0.79},&#xD;&#xA;  { Date: 1656284400000, Close: 0.79},&#xD;&#xA;  { Date: 1656889200000, Close: 0.79},&#xD;&#xA;  { Date: 1657494000000, Close: 0.79},&#xD;&#xA;  { Date: 1663542000000, Close: 0.79},&#xD;&#xA;  { Date: 1664146800000, Close: 0.79},&#xD;&#xA;  { Date: 1664751600000, Close: 0.79},&#xD;&#xA;  { Date: 1665356400000, Close: 0.69},&#xD;&#xA;  { Date: 1665961200000, Close: 0.69},&#xD;&#xA;  { Date: 1666566000000, Close: 0.79},&#xD;&#xA;  { Date: 1667170800000, Close: 0.79},&#xD;&#xA;  { Date: 1667775600000, Close: 0.79},&#xD;&#xA;  { Date: 1668380400000, Close: 0.69},&#xD;&#xA;  { Date: 1668985200000, Close: 0.69},&#xD;&#xA;  { Date: 1669590000000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.59},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.59},&#xD;&#xA;  { Date: 1681686000000, Close: 0.59},&#xD;&#xA;  { Date: 1682290800000, Close: 0.59},&#xD;&#xA;  { Date: 1682895600000, Close: 0.59},&#xD;&#xA;  { Date: 1695596400000, Close: 0.69},&#xD;&#xA;  { Date: 1696201200000, Close: 0.69},&#xD;&#xA;  { Date: 1708297200000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1711321200000, Close: 0.49},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.59},&#xD;&#xA;  { Date: 1727650800000, Close: 0.59},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Machop</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/052---machop/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/052---machop/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149230.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.35},&#xD;&#xA;  { Date: 1593817200000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1610233200000, Close: 0.49},&#xD;&#xA;  { Date: 1610924400000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.49},&#xD;&#xA;  { Date: 1615762800000, Close: 0.49},&#xD;&#xA;  { Date: 1616367600000, Close: 0.49},&#xD;&#xA;  { Date: 1616972400000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.39},&#xD;&#xA;  { Date: 1625439600000, Close: 0.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1626649200000, Close: 0.39},&#xD;&#xA;  { Date: 1627254000000, Close: 0.39},&#xD;&#xA;  { Date: 1627858800000, Close: 0.39},&#xD;&#xA;  { Date: 1628463600000, Close: 0.39},&#xD;&#xA;  { Date: 1629068400000, Close: 0.39},&#xD;&#xA;  { Date: 1629673200000, Close: 0.39},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1630882800000, Close: 0.35},&#xD;&#xA;  { Date: 1631487600000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.35},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1641769200000, Close: 0.49},&#xD;&#xA;  { Date: 1642374000000, Close: 0.49},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1644188400000, Close: 0.49},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1645398000000, Close: 0.59},&#xD;&#xA;  { Date: 1646002800000, Close: 0.59},&#xD;&#xA;  { Date: 1646607600000, Close: 0.59},&#xD;&#xA;  { Date: 1647212400000, Close: 0.59},&#xD;&#xA;  { Date: 1647817200000, Close: 0.59},&#xD;&#xA;  { Date: 1648422000000, Close: 0.59},&#xD;&#xA;  { Date: 1649026800000, Close: 0.59},&#xD;&#xA;  { Date: 1649631600000, Close: 0.59},&#xD;&#xA;  { Date: 1650236400000, Close: 0.59},&#xD;&#xA;  { Date: 1650841200000, Close: 0.59},&#xD;&#xA;  { Date: 1651446000000, Close: 0.59},&#xD;&#xA;  { Date: 1652050800000, Close: 0.59},&#xD;&#xA;  { Date: 1652655600000, Close: 0.59},&#xD;&#xA;  { Date: 1653260400000, Close: 0.59},&#xD;&#xA;  { Date: 1653865200000, Close: 0.59},&#xD;&#xA;  { Date: 1654470000000, Close: 0.59},&#xD;&#xA;  { Date: 1655074800000, Close: 0.59},&#xD;&#xA;  { Date: 1655679600000, Close: 0.59},&#xD;&#xA;  { Date: 1656284400000, Close: 0.49},&#xD;&#xA;  { Date: 1656889200000, Close: 0.49},&#xD;&#xA;  { Date: 1657494000000, Close: 0.49},&#xD;&#xA;  { Date: 1658098800000, Close: 0.49},&#xD;&#xA;  { Date: 1658703600000, Close: 0.49},&#xD;&#xA;  { Date: 1659308400000, Close: 0.49},&#xD;&#xA;  { Date: 1659913200000, Close: 0.49},&#xD;&#xA;  { Date: 1660518000000, Close: 0.49},&#xD;&#xA;  { Date: 1661122800000, Close: 0.49},&#xD;&#xA;  { Date: 1661727600000, Close: 0.49},&#xD;&#xA;  { Date: 1662332400000, Close: 0.49},&#xD;&#xA;  { Date: 1663542000000, Close: 0.49},&#xD;&#xA;  { Date: 1664146800000, Close: 0.49},&#xD;&#xA;  { Date: 1664751600000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.39},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.39},&#xD;&#xA;  { Date: 1682895600000, Close: 0.39},&#xD;&#xA;  { Date: 1683500400000, Close: 0.39},&#xD;&#xA;  { Date: 1686524400000, Close: 0.49},&#xD;&#xA;  { Date: 1689548400000, Close: 0.39},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1696806000000, Close: 0.39},&#xD;&#xA;  { Date: 1703458800000, Close: 0.49},&#xD;&#xA;  { Date: 1704063600000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1707692400000, Close: 0.49},&#xD;&#xA;  { Date: 1708297200000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;  { Date: 1710716400000, Close: 0.39},&#xD;&#xA;  { Date: 1711321200000, Close: 0.39},&#xD;&#xA;  { Date: 1711926000000, Close: 0.49},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1715554800000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Magikarp</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/035---magikarp/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/035---magikarp/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149233.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.89},&#xD;&#xA;  { Date: 1593817200000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 0.89},&#xD;&#xA;  { Date: 1601247600000, Close: 0.89},&#xD;&#xA;  { Date: 1603062000000, Close: 0.89},&#xD;&#xA;  { Date: 1605481200000, Close: 1.09},&#xD;&#xA;  { Date: 1607295600000, Close: 1.99},&#xD;&#xA;  { Date: 1608505200000, Close: 2.59},&#xD;&#xA;  { Date: 1609110000000, Close: 2.59},&#xD;&#xA;  { Date: 1609714800000, Close: 2.29},&#xD;&#xA;  { Date: 1610233200000, Close: 2.29},&#xD;&#xA;  { Date: 1610924400000, Close: 1.99},&#xD;&#xA;  { Date: 1611529200000, Close: 1.99},&#xD;&#xA;  { Date: 1612134000000, Close: 1.99},&#xD;&#xA;  { Date: 1613343600000, Close: 1.99},&#xD;&#xA;  { Date: 1613948400000, Close: 1.99},&#xD;&#xA;  { Date: 1614553200000, Close: 1.99},&#xD;&#xA;  { Date: 1615158000000, Close: 1.99},&#xD;&#xA;  { Date: 1615762800000, Close: 1.99},&#xD;&#xA;  { Date: 1616367600000, Close: 1.99},&#xD;&#xA;  { Date: 1616972400000, Close: 1.99},&#xD;&#xA;  { Date: 1618182000000, Close: 1.99},&#xD;&#xA;  { Date: 1618786800000, Close: 1.99},&#xD;&#xA;  { Date: 1619391600000, Close: 1.99},&#xD;&#xA;  { Date: 1619996400000, Close: 1.99},&#xD;&#xA;  { Date: 1620601200000, Close: 1.99},&#xD;&#xA;  { Date: 1621206000000, Close: 1.49},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1622415600000, Close: 1.39},&#xD;&#xA;  { Date: 1623020400000, Close: 1.49},&#xD;&#xA;  { Date: 1623625200000, Close: 1.49},&#xD;&#xA;  { Date: 1624230000000, Close: 1.29},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1628463600000, Close: 1.09},&#xD;&#xA;  { Date: 1629068400000, Close: 1.09},&#xD;&#xA;  { Date: 1629673200000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.29},&#xD;&#xA;  { Date: 1634511600000, Close: 1.49},&#xD;&#xA;  { Date: 1635116400000, Close: 1.49},&#xD;&#xA;  { Date: 1635721200000, Close: 1.29},&#xD;&#xA;  { Date: 1636326000000, Close: 1.29},&#xD;&#xA;  { Date: 1637535600000, Close: 1.49},&#xD;&#xA;  { Date: 1639350000000, Close: 1.49},&#xD;&#xA;  { Date: 1639954800000, Close: 1.19},&#xD;&#xA;  { Date: 1640559600000, Close: 1.19},&#xD;&#xA;  { Date: 1642978800000, Close: 0.89},&#xD;&#xA;  { Date: 1643583600000, Close: 0.89},&#xD;&#xA;  { Date: 1644188400000, Close: 0.89},&#xD;&#xA;  { Date: 1644793200000, Close: 0.89},&#xD;&#xA;  { Date: 1646002800000, Close: 1.29},&#xD;&#xA;  { Date: 1646607600000, Close: 1.29},&#xD;&#xA;  { Date: 1647212400000, Close: 0.99},&#xD;&#xA;  { Date: 1647817200000, Close: 0.99},&#xD;&#xA;  { Date: 1648422000000, Close: 0.99},&#xD;&#xA;  { Date: 1649026800000, Close: 0.99},&#xD;&#xA;  { Date: 1650236400000, Close: 0.99},&#xD;&#xA;  { Date: 1650841200000, Close: 0.99},&#xD;&#xA;  { Date: 1651446000000, Close: 0.99},&#xD;&#xA;  { Date: 1652050800000, Close: 0.99},&#xD;&#xA;  { Date: 1652655600000, Close: 0.99},&#xD;&#xA;  { Date: 1653260400000, Close: 1.09},&#xD;&#xA;  { Date: 1655074800000, Close: 1.09},&#xD;&#xA;  { Date: 1655679600000, Close: 1.09},&#xD;&#xA;  { Date: 1656284400000, Close: 1.09},&#xD;&#xA;  { Date: 1656889200000, Close: 1.09},&#xD;&#xA;  { Date: 1657494000000, Close: 1.09},&#xD;&#xA;  { Date: 1663542000000, Close: 1.19},&#xD;&#xA;  { Date: 1664146800000, Close: 1.19},&#xD;&#xA;  { Date: 1664751600000, Close: 1.19},&#xD;&#xA;  { Date: 1665356400000, Close: 0.89},&#xD;&#xA;  { Date: 1665961200000, Close: 0.89},&#xD;&#xA;  { Date: 1670799600000, Close: 1.49},&#xD;&#xA;  { Date: 1671404400000, Close: 1.39},&#xD;&#xA;  { Date: 1672009200000, Close: 1.49},&#xD;&#xA;  { Date: 1674428400000, Close: 1.19},&#xD;&#xA;  { Date: 1678057200000, Close: 1.79},&#xD;&#xA;  { Date: 1681081200000, Close: 1.49},&#xD;&#xA;  { Date: 1681686000000, Close: 1.49},&#xD;&#xA;  { Date: 1682290800000, Close: 1.49},&#xD;&#xA;  { Date: 1682895600000, Close: 1.69},&#xD;&#xA;  { Date: 1684710000000, Close: 1.59},&#xD;&#xA;  { Date: 1685314800000, Close: 1.39},&#xD;&#xA;  { Date: 1685919600000, Close: 1.39},&#xD;&#xA;  { Date: 1689548400000, Close: 1.49},&#xD;&#xA;  { Date: 1690153200000, Close: 1.29},&#xD;&#xA;  { Date: 1690758000000, Close: 1.49},&#xD;&#xA;  { Date: 1692572400000, Close: 1.89},&#xD;&#xA;  { Date: 1696201200000, Close: 1.99},&#xD;&#xA;  { Date: 1696806000000, Close: 1.99},&#xD;&#xA;  { Date: 1697410800000, Close: 1.99},&#xD;&#xA;  { Date: 1698015600000, Close: 1.99},&#xD;&#xA;  { Date: 1698620400000, Close: 1.99},&#xD;&#xA;  { Date: 1699225200000, Close: 1.99},&#xD;&#xA;  { Date: 1702854000000, Close: 1.99},&#xD;&#xA;  { Date: 1703458800000, Close: 1.69},&#xD;&#xA;  { Date: 1704063600000, Close: 1.49},&#xD;&#xA;  { Date: 1707692400000, Close: 1.59},&#xD;&#xA;  { Date: 1708297200000, Close: 1.49},&#xD;&#xA;  { Date: 1708902000000, Close: 1.29},&#xD;&#xA;  { Date: 1709506800000, Close: 1.29},&#xD;&#xA;  { Date: 1710111600000, Close: 1.49},&#xD;&#xA;  { Date: 1710716400000, Close: 1.49},&#xD;&#xA;  { Date: 1714345200000, Close: 2.29},&#xD;&#xA;  { Date: 1714950000000, Close: 1.99},&#xD;&#xA;  { Date: 1716764400000, Close: 1.59},&#xD;&#xA;  { Date: 1725231600000, Close: 2.29},&#xD;&#xA;  { Date: 1725836400000, Close: 1.99},&#xD;&#xA;  { Date: 1727046000000, Close: 1.69},&#xD;&#xA;  { Date: 1727650800000, Close: 1.69},&#xD;&#xA;  { Date: 1728255600000, Close: 1.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Magmar</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/036---magmar/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/036---magmar/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149235.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.09},&#xD;&#xA;  { Date: 1600383600000, Close: 2.19},&#xD;&#xA;  { Date: 1601247600000, Close: 2.19},&#xD;&#xA;  { Date: 1601852400000, Close: 2.19},&#xD;&#xA;  { Date: 1602457200000, Close: 2.29},&#xD;&#xA;  { Date: 1606086000000, Close: 3.99},&#xD;&#xA;  { Date: 1606690800000, Close: 4.99},&#xD;&#xA;  { Date: 1607295600000, Close: 4.99},&#xD;&#xA;  { Date: 1607900400000, Close: 4.99},&#xD;&#xA;  { Date: 1608505200000, Close: 4.99},&#xD;&#xA;  { Date: 1609110000000, Close: 4.99},&#xD;&#xA;  { Date: 1609714800000, Close: 4.49},&#xD;&#xA;  { Date: 1610233200000, Close: 4.99},&#xD;&#xA;  { Date: 1610924400000, Close: 4.99},&#xD;&#xA;  { Date: 1611529200000, Close: 4.99},&#xD;&#xA;  { Date: 1612134000000, Close: 4.99},&#xD;&#xA;  { Date: 1612738800000, Close: 4.99},&#xD;&#xA;  { Date: 1613343600000, Close: 4.99},&#xD;&#xA;  { Date: 1613948400000, Close: 4.49},&#xD;&#xA;  { Date: 1614553200000, Close: 4.79},&#xD;&#xA;  { Date: 1615158000000, Close: 4.49},&#xD;&#xA;  { Date: 1615762800000, Close: 4.49},&#xD;&#xA;  { Date: 1616367600000, Close: 4.49},&#xD;&#xA;  { Date: 1616972400000, Close: 4.49},&#xD;&#xA;  { Date: 1617577200000, Close: 3.99},&#xD;&#xA;  { Date: 1618182000000, Close: 3.99},&#xD;&#xA;  { Date: 1618786800000, Close: 3.49},&#xD;&#xA;  { Date: 1619391600000, Close: 3.89},&#xD;&#xA;  { Date: 1619996400000, Close: 3.89},&#xD;&#xA;  { Date: 1620601200000, Close: 3.59},&#xD;&#xA;  { Date: 1621206000000, Close: 2.99},&#xD;&#xA;  { Date: 1621810800000, Close: 3.29},&#xD;&#xA;  { Date: 1622415600000, Close: 3.28},&#xD;&#xA;  { Date: 1623020400000, Close: 3.28},&#xD;&#xA;  { Date: 1623625200000, Close: 3.28},&#xD;&#xA;  { Date: 1624230000000, Close: 2.99},&#xD;&#xA;  { Date: 1624834800000, Close: 2.49},&#xD;&#xA;  { Date: 1625439600000, Close: 2.69},&#xD;&#xA;  { Date: 1626044400000, Close: 3.19},&#xD;&#xA;  { Date: 1626649200000, Close: 2.99},&#xD;&#xA;  { Date: 1627254000000, Close: 2.49},&#xD;&#xA;  { Date: 1627858800000, Close: 2.49},&#xD;&#xA;  { Date: 1628463600000, Close: 2.49},&#xD;&#xA;  { Date: 1629068400000, Close: 2.29},&#xD;&#xA;  { Date: 1629673200000, Close: 2.29},&#xD;&#xA;  { Date: 1630278000000, Close: 2.29},&#xD;&#xA;  { Date: 1630882800000, Close: 2.29},&#xD;&#xA;  { Date: 1631487600000, Close: 2.29},&#xD;&#xA;  { Date: 1632092400000, Close: 2.29},&#xD;&#xA;  { Date: 1632697200000, Close: 2.29},&#xD;&#xA;  { Date: 1633906800000, Close: 2.49},&#xD;&#xA;  { Date: 1635116400000, Close: 2.99},&#xD;&#xA;  { Date: 1635721200000, Close: 2.49},&#xD;&#xA;  { Date: 1636326000000, Close: 2.49},&#xD;&#xA;  { Date: 1636930800000, Close: 2.49},&#xD;&#xA;  { Date: 1637535600000, Close: 1.99},&#xD;&#xA;  { Date: 1638140400000, Close: 1.99},&#xD;&#xA;  { Date: 1638745200000, Close: 1.99},&#xD;&#xA;  { Date: 1639350000000, Close: 1.69},&#xD;&#xA;  { Date: 1639954800000, Close: 1.99},&#xD;&#xA;  { Date: 1640559600000, Close: 1.99},&#xD;&#xA;  { Date: 1643583600000, Close: 2.99},&#xD;&#xA;  { Date: 1644188400000, Close: 2.99},&#xD;&#xA;  { Date: 1644793200000, Close: 2.39},&#xD;&#xA;  { Date: 1645398000000, Close: 2.29},&#xD;&#xA;  { Date: 1646002800000, Close: 2.29},&#xD;&#xA;  { Date: 1646607600000, Close: 1.99},&#xD;&#xA;  { Date: 1647212400000, Close: 2.09},&#xD;&#xA;  { Date: 1647817200000, Close: 2.09},&#xD;&#xA;  { Date: 1648422000000, Close: 2.09},&#xD;&#xA;  { Date: 1649026800000, Close: 1.99},&#xD;&#xA;  { Date: 1649631600000, Close: 1.99},&#xD;&#xA;  { Date: 1650236400000, Close: 1.99},&#xD;&#xA;  { Date: 1650841200000, Close: 1.89},&#xD;&#xA;  { Date: 1651446000000, Close: 1.79},&#xD;&#xA;  { Date: 1652050800000, Close: 1.89},&#xD;&#xA;  { Date: 1652655600000, Close: 1.89},&#xD;&#xA;  { Date: 1653260400000, Close: 1.99},&#xD;&#xA;  { Date: 1653865200000, Close: 1.99},&#xD;&#xA;  { Date: 1654470000000, Close: 1.99},&#xD;&#xA;  { Date: 1655074800000, Close: 1.99},&#xD;&#xA;  { Date: 1655679600000, Close: 1.99},&#xD;&#xA;  { Date: 1656284400000, Close: 1.99},&#xD;&#xA;  { Date: 1656889200000, Close: 1.59},&#xD;&#xA;  { Date: 1663542000000, Close: 1.99},&#xD;&#xA;  { Date: 1664146800000, Close: 1.99},&#xD;&#xA;  { Date: 1664751600000, Close: 1.99},&#xD;&#xA;  { Date: 1665356400000, Close: 1.79},&#xD;&#xA;  { Date: 1665961200000, Close: 1.99},&#xD;&#xA;  { Date: 1666566000000, Close: 1.99},&#xD;&#xA;  { Date: 1667170800000, Close: 2.29},&#xD;&#xA;  { Date: 1667775600000, Close: 2.29},&#xD;&#xA;  { Date: 1668380400000, Close: 2.29},&#xD;&#xA;  { Date: 1668985200000, Close: 2.19},&#xD;&#xA;  { Date: 1669590000000, Close: 1.99},&#xD;&#xA;  { Date: 1670194800000, Close: 2.09},&#xD;&#xA;  { Date: 1670799600000, Close: 1.99},&#xD;&#xA;  { Date: 1672614000000, Close: 2.29},&#xD;&#xA;  { Date: 1678057200000, Close: 1.49},&#xD;&#xA;  { Date: 1679266800000, Close: 1.49},&#xD;&#xA;  { Date: 1694991600000, Close: 2.79},&#xD;&#xA;  { Date: 1695596400000, Close: 2.79},&#xD;&#xA;  { Date: 1696201200000, Close: 2.79},&#xD;&#xA;  { Date: 1697410800000, Close: 2.79},&#xD;&#xA;  { Date: 1702854000000, Close: 2.49},&#xD;&#xA;  { Date: 1706482800000, Close: 3.29},&#xD;&#xA;  { Date: 1708297200000, Close: 3.29},&#xD;&#xA;  { Date: 1708902000000, Close: 3.29},&#xD;&#xA;  { Date: 1709506800000, Close: 2.99},&#xD;&#xA;  { Date: 1710111600000, Close: 2.99},&#xD;&#xA;  { Date: 1717974000000, Close: 3.49},&#xD;&#xA;  { Date: 1720393200000, Close: 2.89},&#xD;&#xA;  { Date: 1720998000000, Close: 2.89},&#xD;&#xA;  { Date: 1723417200000, Close: 2.89},&#xD;&#xA;  { Date: 1724022000000, Close: 2.89},&#xD;&#xA;  { Date: 1724626800000, Close: 2.59},&#xD;&#xA;  { Date: 1725231600000, Close: 2.59},&#xD;&#xA;  { Date: 1726441200000, Close: 2.29},&#xD;&#xA;  { Date: 1727046000000, Close: 2.29},&#xD;&#xA;  { Date: 1727650800000, Close: 1.99},&#xD;&#xA;  { Date: 1728255600000, Close: 1.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Magnemite</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/053---magnemite/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/053---magnemite/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149237.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1610233200000, Close: 0.49},&#xD;&#xA;  { Date: 1610924400000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1612134000000, Close: 0.49},&#xD;&#xA;  { Date: 1613948400000, Close: 0.95},&#xD;&#xA;  { Date: 1614553200000, Close: 0.89},&#xD;&#xA;  { Date: 1615158000000, Close: 0.99},&#xD;&#xA;  { Date: 1615762800000, Close: 0.99},&#xD;&#xA;  { Date: 1616367600000, Close: 0.99},&#xD;&#xA;  { Date: 1616972400000, Close: 0.99},&#xD;&#xA;  { Date: 1617577200000, Close: 0.89},&#xD;&#xA;  { Date: 1618182000000, Close: 0.89},&#xD;&#xA;  { Date: 1618786800000, Close: 0.89},&#xD;&#xA;  { Date: 1619391600000, Close: 0.89},&#xD;&#xA;  { Date: 1619996400000, Close: 0.89},&#xD;&#xA;  { Date: 1620601200000, Close: 0.89},&#xD;&#xA;  { Date: 1621206000000, Close: 0.89},&#xD;&#xA;  { Date: 1621810800000, Close: 0.89},&#xD;&#xA;  { Date: 1622415600000, Close: 0.89},&#xD;&#xA;  { Date: 1623020400000, Close: 0.89},&#xD;&#xA;  { Date: 1623625200000, Close: 0.89},&#xD;&#xA;  { Date: 1624230000000, Close: 0.89},&#xD;&#xA;  { Date: 1624834800000, Close: 0.89},&#xD;&#xA;  { Date: 1625439600000, Close: 0.89},&#xD;&#xA;  { Date: 1626044400000, Close: 0.79},&#xD;&#xA;  { Date: 1626649200000, Close: 0.79},&#xD;&#xA;  { Date: 1627254000000, Close: 0.79},&#xD;&#xA;  { Date: 1627858800000, Close: 0.79},&#xD;&#xA;  { Date: 1628463600000, Close: 0.79},&#xD;&#xA;  { Date: 1629068400000, Close: 0.79},&#xD;&#xA;  { Date: 1629673200000, Close: 0.79},&#xD;&#xA;  { Date: 1630278000000, Close: 0.79},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1635721200000, Close: 0.99},&#xD;&#xA;  { Date: 1636326000000, Close: 0.99},&#xD;&#xA;  { Date: 1636930800000, Close: 0.99},&#xD;&#xA;  { Date: 1637535600000, Close: 0.99},&#xD;&#xA;  { Date: 1638140400000, Close: 0.99},&#xD;&#xA;  { Date: 1638745200000, Close: 0.99},&#xD;&#xA;  { Date: 1639350000000, Close: 0.99},&#xD;&#xA;  { Date: 1639954800000, Close: 0.99},&#xD;&#xA;  { Date: 1640559600000, Close: 0.99},&#xD;&#xA;  { Date: 1641164400000, Close: 0.99},&#xD;&#xA;  { Date: 1641769200000, Close: 0.99},&#xD;&#xA;  { Date: 1642374000000, Close: 0.99},&#xD;&#xA;  { Date: 1642978800000, Close: 0.99},&#xD;&#xA;  { Date: 1643583600000, Close: 0.99},&#xD;&#xA;  { Date: 1644188400000, Close: 0.99},&#xD;&#xA;  { Date: 1644793200000, Close: 0.99},&#xD;&#xA;  { Date: 1645398000000, Close: 0.99},&#xD;&#xA;  { Date: 1646002800000, Close: 0.99},&#xD;&#xA;  { Date: 1646607600000, Close: 0.89},&#xD;&#xA;  { Date: 1647212400000, Close: 0.89},&#xD;&#xA;  { Date: 1647817200000, Close: 0.89},&#xD;&#xA;  { Date: 1648422000000, Close: 0.79},&#xD;&#xA;  { Date: 1649026800000, Close: 0.79},&#xD;&#xA;  { Date: 1649631600000, Close: 0.79},&#xD;&#xA;  { Date: 1650236400000, Close: 0.79},&#xD;&#xA;  { Date: 1650841200000, Close: 0.79},&#xD;&#xA;  { Date: 1651446000000, Close: 0.69},&#xD;&#xA;  { Date: 1652050800000, Close: 0.69},&#xD;&#xA;  { Date: 1652655600000, Close: 0.69},&#xD;&#xA;  { Date: 1653260400000, Close: 0.59},&#xD;&#xA;  { Date: 1653865200000, Close: 0.59},&#xD;&#xA;  { Date: 1654470000000, Close: 0.59},&#xD;&#xA;  { Date: 1662332400000, Close: 0.49},&#xD;&#xA;  { Date: 1662937200000, Close: 0.49},&#xD;&#xA;  { Date: 1663542000000, Close: 0.49},&#xD;&#xA;  { Date: 1664146800000, Close: 0.49},&#xD;&#xA;  { Date: 1664751600000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1673218800000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.59},&#xD;&#xA;  { Date: 1674428400000, Close: 0.59},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.59},&#xD;&#xA;  { Date: 1680476400000, Close: 0.59},&#xD;&#xA;  { Date: 1682290800000, Close: 0.69},&#xD;&#xA;  { Date: 1682895600000, Close: 0.59},&#xD;&#xA;  { Date: 1683500400000, Close: 0.59},&#xD;&#xA;  { Date: 1684105200000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1685919600000, Close: 0.49},&#xD;&#xA;  { Date: 1686524400000, Close: 0.49},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1708297200000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1710111600000, Close: 0.59},&#xD;&#xA;  { Date: 1710716400000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Magneton</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/009---magneton/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/009---magneton/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149242.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575586800000, Close: 5.99},&#xD;&#xA;  { Date: 1575932400000, Close: 5.99},&#xD;&#xA;  { Date: 1576537200000, Close: 5.99},&#xD;&#xA;  { Date: 1576882800000, Close: 5.99},&#xD;&#xA;  { Date: 1577228400000, Close: 6.49},&#xD;&#xA;  { Date: 1577487600000, Close: 6.49},&#xD;&#xA;  { Date: 1578524400000, Close: 6.49},&#xD;&#xA;  { Date: 1579042800000, Close: 6.99},&#xD;&#xA;  { Date: 1580166000000, Close: 6.99},&#xD;&#xA;  { Date: 1580943600000, Close: 7.49},&#xD;&#xA;  { Date: 1581375600000, Close: 7.49},&#xD;&#xA;  { Date: 1581980400000, Close: 7.49},&#xD;&#xA;  { Date: 1582585200000, Close: 7.99},&#xD;&#xA;  { Date: 1583449200000, Close: 7.99},&#xD;&#xA;  { Date: 1584745200000, Close: 8.99},&#xD;&#xA;  { Date: 1587682800000, Close: 9.49},&#xD;&#xA;  { Date: 1588633200000, Close: 10.99},&#xD;&#xA;  { Date: 1590620400000, Close: 11.99},&#xD;&#xA;  { Date: 1590706800000, Close: 12.99},&#xD;&#xA;  { Date: 1591311600000, Close: 13.99},&#xD;&#xA;  { Date: 1591743600000, Close: 14.99},&#xD;&#xA;  { Date: 1593558000000, Close: 16.99},&#xD;&#xA;  { Date: 1594767600000, Close: 17.99},&#xD;&#xA;  { Date: 1595286000000, Close: 17.49},&#xD;&#xA;  { Date: 1596754800000, Close: 17.49},&#xD;&#xA;  { Date: 1597186800000, Close: 16.99},&#xD;&#xA;  { Date: 1598310000000, Close: 17.39},&#xD;&#xA;  { Date: 1599001200000, Close: 17.49},&#xD;&#xA;  { Date: 1602543600000, Close: 19.99},&#xD;&#xA;  { Date: 1603407600000, Close: 23.99},&#xD;&#xA;  { Date: 1604444400000, Close: 25.99},&#xD;&#xA;  { Date: 1605654000000, Close: 26.99},&#xD;&#xA;  { Date: 1606345200000, Close: 29.99},&#xD;&#xA;  { Date: 1609282800000, Close: 22.95},&#xD;&#xA;  { Date: 1611183600000, Close: 27.99},&#xD;&#xA;  { Date: 1611961200000, Close: 29.99},&#xD;&#xA;  { Date: 1612911600000, Close: 29.99},&#xD;&#xA;  { Date: 1614812400000, Close: 39.99},&#xD;&#xA;  { Date: 1615503600000, Close: 41.99},&#xD;&#xA;  { Date: 1618614000000, Close: 39.99},&#xD;&#xA;  { Date: 1621206000000, Close: 36.99},&#xD;&#xA;  { Date: 1621292400000, Close: 34.99},&#xD;&#xA;  { Date: 1622761200000, Close: 33.99},&#xD;&#xA;  { Date: 1624057200000, Close: 29.99},&#xD;&#xA;  { Date: 1626735600000, Close: 24.99},&#xD;&#xA;  { Date: 1629500400000, Close: 22.99},&#xD;&#xA;  { Date: 1631574000000, Close: 22.99},&#xD;&#xA;  { Date: 1633993200000, Close: 21.49},&#xD;&#xA;  { Date: 1634598000000, Close: 19.99},&#xD;&#xA;  { Date: 1639090800000, Close: 21.99},&#xD;&#xA;  { Date: 1639782000000, Close: 23.99},&#xD;&#xA;  { Date: 1641510000000, Close: 23.99},&#xD;&#xA;  { Date: 1647903600000, Close: 23.99},&#xD;&#xA;  { Date: 1651964400000, Close: 22.49},&#xD;&#xA;  { Date: 1656025200000, Close: 19.99},&#xD;&#xA;  { Date: 1657839600000, Close: 17.99},&#xD;&#xA;  { Date: 1658271600000, Close: 16.99},&#xD;&#xA;  { Date: 1660345200000, Close: 16.49},&#xD;&#xA;  { Date: 1664924400000, Close: 16.29},&#xD;&#xA;  { Date: 1665615600000, Close: 15.69},&#xD;&#xA;  { Date: 1666393200000, Close: 15.49},&#xD;&#xA;  { Date: 1666738800000, Close: 15.19},&#xD;&#xA;  { Date: 1667084400000, Close: 14.79},&#xD;&#xA;  { Date: 1667775600000, Close: 15.49},&#xD;&#xA;  { Date: 1668121200000, Close: 16.09},&#xD;&#xA;  { Date: 1668553200000, Close: 15.89},&#xD;&#xA;  { Date: 1670886000000, Close: 14.99},&#xD;&#xA;  { Date: 1677970800000, Close: 24.99},&#xD;&#xA;  { Date: 1678057200000, Close: 24.09},&#xD;&#xA;  { Date: 1679007600000, Close: 22.29},&#xD;&#xA;  { Date: 1680217200000, Close: 22.69},&#xD;&#xA;  { Date: 1680303600000, Close: 24.99},&#xD;&#xA;  { Date: 1681081200000, Close: 21.89},&#xD;&#xA;  { Date: 1681426800000, Close: 21.79},&#xD;&#xA;  { Date: 1684278000000, Close: 25.99},&#xD;&#xA;  { Date: 1684364400000, Close: 23.49},&#xD;&#xA;  { Date: 1684882800000, Close: 23.99},&#xD;&#xA;  { Date: 1685228400000, Close: 21.69},&#xD;&#xA;  { Date: 1685746800000, Close: 20.99},&#xD;&#xA;  { Date: 1686956400000, Close: 21.79},&#xD;&#xA;  { Date: 1687215600000, Close: 22.59},&#xD;&#xA;  { Date: 1692054000000, Close: 32.29},&#xD;&#xA;  { Date: 1693090800000, Close: 28.29},&#xD;&#xA;  { Date: 1693436400000, Close: 27.29},&#xD;&#xA;  { Date: 1693782000000, Close: 26.39},&#xD;&#xA;  { Date: 1695942000000, Close: 20.79},&#xD;&#xA;  { Date: 1697324400000, Close: 21.99},&#xD;&#xA;  { Date: 1698879600000, Close: 21.99},&#xD;&#xA;  { Date: 1699570800000, Close: 21.99},&#xD;&#xA;  { Date: 1700434800000, Close: 21.99},&#xD;&#xA;  { Date: 1700694000000, Close: 15.99},&#xD;&#xA;  { Date: 1712962800000, Close: 21.99},&#xD;&#xA;  { Date: 1717714800000, Close: 21.99},&#xD;&#xA;  { Date: 1725404400000, Close: 21.99},&#xD;&#xA;  { Date: 1727737200000, Close: 21.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Maintenance</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/083---maintenance/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/083---maintenance/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149245.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1600383600000, Close: 1.89},&#xD;&#xA;  { Date: 1601247600000, Close: 2.19},&#xD;&#xA;  { Date: 1601852400000, Close: 2.19},&#xD;&#xA;  { Date: 1602457200000, Close: 2.19},&#xD;&#xA;  { Date: 1603062000000, Close: 2.49},&#xD;&#xA;  { Date: 1603666800000, Close: 2.99},&#xD;&#xA;  { Date: 1604271600000, Close: 3.49},&#xD;&#xA;  { Date: 1604876400000, Close: 3.49},&#xD;&#xA;  { Date: 1605481200000, Close: 3.49},&#xD;&#xA;  { Date: 1606086000000, Close: 3.49},&#xD;&#xA;  { Date: 1606690800000, Close: 3.49},&#xD;&#xA;  { Date: 1607295600000, Close: 3.99},&#xD;&#xA;  { Date: 1607900400000, Close: 3.99},&#xD;&#xA;  { Date: 1608505200000, Close: 3.49},&#xD;&#xA;  { Date: 1609110000000, Close: 3.49},&#xD;&#xA;  { Date: 1609714800000, Close: 2.49},&#xD;&#xA;  { Date: 1610233200000, Close: 2.99},&#xD;&#xA;  { Date: 1610924400000, Close: 3.49},&#xD;&#xA;  { Date: 1611529200000, Close: 3.49},&#xD;&#xA;  { Date: 1612134000000, Close: 2.99},&#xD;&#xA;  { Date: 1612738800000, Close: 2.99},&#xD;&#xA;  { Date: 1613343600000, Close: 2.99},&#xD;&#xA;  { Date: 1613948400000, Close: 2.99},&#xD;&#xA;  { Date: 1614553200000, Close: 2.99},&#xD;&#xA;  { Date: 1615158000000, Close: 2.49},&#xD;&#xA;  { Date: 1615762800000, Close: 2.49},&#xD;&#xA;  { Date: 1616367600000, Close: 2.49},&#xD;&#xA;  { Date: 1616972400000, Close: 2.49},&#xD;&#xA;  { Date: 1617577200000, Close: 2.49},&#xD;&#xA;  { Date: 1618182000000, Close: 2.29},&#xD;&#xA;  { Date: 1618786800000, Close: 2.29},&#xD;&#xA;  { Date: 1619391600000, Close: 2.29},&#xD;&#xA;  { Date: 1619996400000, Close: 2.29},&#xD;&#xA;  { Date: 1620601200000, Close: 2.29},&#xD;&#xA;  { Date: 1621206000000, Close: 1.99},&#xD;&#xA;  { Date: 1621810800000, Close: 2.19},&#xD;&#xA;  { Date: 1622415600000, Close: 1.99},&#xD;&#xA;  { Date: 1623020400000, Close: 1.99},&#xD;&#xA;  { Date: 1623625200000, Close: 1.99},&#xD;&#xA;  { Date: 1624230000000, Close: 1.99},&#xD;&#xA;  { Date: 1624834800000, Close: 1.79},&#xD;&#xA;  { Date: 1625439600000, Close: 1.79},&#xD;&#xA;  { Date: 1626044400000, Close: 1.79},&#xD;&#xA;  { Date: 1626649200000, Close: 1.79},&#xD;&#xA;  { Date: 1627254000000, Close: 1.49},&#xD;&#xA;  { Date: 1627858800000, Close: 1.49},&#xD;&#xA;  { Date: 1628463600000, Close: 1.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.99},&#xD;&#xA;  { Date: 1629673200000, Close: 0.99},&#xD;&#xA;  { Date: 1630278000000, Close: 0.99},&#xD;&#xA;  { Date: 1630882800000, Close: 0.99},&#xD;&#xA;  { Date: 1631487600000, Close: 0.99},&#xD;&#xA;  { Date: 1632092400000, Close: 0.99},&#xD;&#xA;  { Date: 1632697200000, Close: 0.89},&#xD;&#xA;  { Date: 1633302000000, Close: 0.89},&#xD;&#xA;  { Date: 1633906800000, Close: 0.89},&#xD;&#xA;  { Date: 1634511600000, Close: 0.89},&#xD;&#xA;  { Date: 1635116400000, Close: 0.89},&#xD;&#xA;  { Date: 1635721200000, Close: 0.89},&#xD;&#xA;  { Date: 1636326000000, Close: 0.89},&#xD;&#xA;  { Date: 1636930800000, Close: 0.89},&#xD;&#xA;  { Date: 1637535600000, Close: 0.89},&#xD;&#xA;  { Date: 1638140400000, Close: 0.89},&#xD;&#xA;  { Date: 1638745200000, Close: 0.89},&#xD;&#xA;  { Date: 1639350000000, Close: 0.89},&#xD;&#xA;  { Date: 1639954800000, Close: 0.89},&#xD;&#xA;  { Date: 1640559600000, Close: 0.89},&#xD;&#xA;  { Date: 1641164400000, Close: 0.89},&#xD;&#xA;  { Date: 1641769200000, Close: 0.89},&#xD;&#xA;  { Date: 1642374000000, Close: 0.89},&#xD;&#xA;  { Date: 1642978800000, Close: 0.89},&#xD;&#xA;  { Date: 1643583600000, Close: 0.89},&#xD;&#xA;  { Date: 1644188400000, Close: 0.89},&#xD;&#xA;  { Date: 1644793200000, Close: 0.89},&#xD;&#xA;  { Date: 1645398000000, Close: 0.89},&#xD;&#xA;  { Date: 1646002800000, Close: 0.89},&#xD;&#xA;  { Date: 1649026800000, Close: 1.49},&#xD;&#xA;  { Date: 1662332400000, Close: 2.49},&#xD;&#xA;  { Date: 1662937200000, Close: 2.49},&#xD;&#xA;  { Date: 1663542000000, Close: 2.49},&#xD;&#xA;  { Date: 1664146800000, Close: 2.49},&#xD;&#xA;  { Date: 1664751600000, Close: 2.49},&#xD;&#xA;  { Date: 1665356400000, Close: 2.19},&#xD;&#xA;  { Date: 1665961200000, Close: 2.19},&#xD;&#xA;  { Date: 1666566000000, Close: 2.19},&#xD;&#xA;  { Date: 1667170800000, Close: 2.19},&#xD;&#xA;  { Date: 1667775600000, Close: 1.59},&#xD;&#xA;  { Date: 1668380400000, Close: 1.49},&#xD;&#xA;  { Date: 1668985200000, Close: 1.49},&#xD;&#xA;  { Date: 1669590000000, Close: 1.49},&#xD;&#xA;  { Date: 1670194800000, Close: 1.19},&#xD;&#xA;  { Date: 1670799600000, Close: 1.19},&#xD;&#xA;  { Date: 1671404400000, Close: 1.19},&#xD;&#xA;  { Date: 1672009200000, Close: 1.19},&#xD;&#xA;  { Date: 1672614000000, Close: 1.19},&#xD;&#xA;  { Date: 1678057200000, Close: 1.39},&#xD;&#xA;  { Date: 1678662000000, Close: 1.39},&#xD;&#xA;  { Date: 1679266800000, Close: 1.39},&#xD;&#xA;  { Date: 1681081200000, Close: 1.99},&#xD;&#xA;  { Date: 1681686000000, Close: 1.99},&#xD;&#xA;  { Date: 1682290800000, Close: 1.99},&#xD;&#xA;  { Date: 1682895600000, Close: 1.99},&#xD;&#xA;  { Date: 1683500400000, Close: 1.99},&#xD;&#xA;  { Date: 1689548400000, Close: 2.99},&#xD;&#xA;  { Date: 1690153200000, Close: 3.49},&#xD;&#xA;  { Date: 1691967600000, Close: 3.49},&#xD;&#xA;  { Date: 1692572400000, Close: 3.49},&#xD;&#xA;  { Date: 1693177200000, Close: 3.49},&#xD;&#xA;  { Date: 1693782000000, Close: 3.49},&#xD;&#xA;  { Date: 1694386800000, Close: 3.49},&#xD;&#xA;  { Date: 1696201200000, Close: 3.49},&#xD;&#xA;  { Date: 1696806000000, Close: 3.49},&#xD;&#xA;  { Date: 1697410800000, Close: 3.49},&#xD;&#xA;  { Date: 1698015600000, Close: 3.49},&#xD;&#xA;  { Date: 1698620400000, Close: 3.49},&#xD;&#xA;  { Date: 1699225200000, Close: 3.49},&#xD;&#xA;  { Date: 1699830000000, Close: 3.49},&#xD;&#xA;  { Date: 1700434800000, Close: 3.49},&#xD;&#xA;  { Date: 1701039600000, Close: 3.49},&#xD;&#xA;  { Date: 1701644400000, Close: 3.49},&#xD;&#xA;  { Date: 1702249200000, Close: 3.49},&#xD;&#xA;  { Date: 1702854000000, Close: 2.89},&#xD;&#xA;  { Date: 1703458800000, Close: 2.49},&#xD;&#xA;  { Date: 1704063600000, Close: 2.49},&#xD;&#xA;  { Date: 1704668400000, Close: 2.49},&#xD;&#xA;  { Date: 1705273200000, Close: 2.49},&#xD;&#xA;  { Date: 1708297200000, Close: 2.99},&#xD;&#xA;  { Date: 1708902000000, Close: 2.49},&#xD;&#xA;  { Date: 1709506800000, Close: 2.49},&#xD;&#xA;  { Date: 1710111600000, Close: 2.29},&#xD;&#xA;  { Date: 1710716400000, Close: 2.29},&#xD;&#xA;  { Date: 1711321200000, Close: 2.29},&#xD;&#xA;  { Date: 1713740400000, Close: 2.49},&#xD;&#xA;  { Date: 1714345200000, Close: 2.49},&#xD;&#xA;  { Date: 1714950000000, Close: 2.29},&#xD;&#xA;  { Date: 1716764400000, Close: 1.99},&#xD;&#xA;  { Date: 1719183600000, Close: 1.69},&#xD;&#xA;  { Date: 1719788400000, Close: 1.69},&#xD;&#xA;  { Date: 1720393200000, Close: 1.69},&#xD;&#xA;  { Date: 1727046000000, Close: 1.69},&#xD;&#xA;  { Date: 1727650800000, Close: 1.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Metapod</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/054---metapod/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/054---metapod/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149256.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1593817200000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1601247600000, Close: 0.59},&#xD;&#xA;  { Date: 1601852400000, Close: 0.59},&#xD;&#xA;  { Date: 1602457200000, Close: 0.59},&#xD;&#xA;  { Date: 1603062000000, Close: 0.59},&#xD;&#xA;  { Date: 1605481200000, Close: 0.99},&#xD;&#xA;  { Date: 1606086000000, Close: 0.99},&#xD;&#xA;  { Date: 1606690800000, Close: 0.99},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 0.99},&#xD;&#xA;  { Date: 1608505200000, Close: 0.99},&#xD;&#xA;  { Date: 1609110000000, Close: 0.89},&#xD;&#xA;  { Date: 1609714800000, Close: 0.59},&#xD;&#xA;  { Date: 1610233200000, Close: 0.59},&#xD;&#xA;  { Date: 1610924400000, Close: 0.59},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.69},&#xD;&#xA;  { Date: 1615762800000, Close: 0.69},&#xD;&#xA;  { Date: 1616367600000, Close: 0.69},&#xD;&#xA;  { Date: 1616972400000, Close: 0.69},&#xD;&#xA;  { Date: 1617577200000, Close: 0.69},&#xD;&#xA;  { Date: 1618182000000, Close: 0.69},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.49},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.49},&#xD;&#xA;  { Date: 1640559600000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1641769200000, Close: 0.49},&#xD;&#xA;  { Date: 1642374000000, Close: 0.49},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1644188400000, Close: 0.49},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.49},&#xD;&#xA;  { Date: 1650841200000, Close: 0.49},&#xD;&#xA;  { Date: 1651446000000, Close: 0.49},&#xD;&#xA;  { Date: 1652050800000, Close: 0.49},&#xD;&#xA;  { Date: 1655074800000, Close: 0.59},&#xD;&#xA;  { Date: 1655679600000, Close: 0.59},&#xD;&#xA;  { Date: 1656284400000, Close: 0.59},&#xD;&#xA;  { Date: 1662332400000, Close: 0.69},&#xD;&#xA;  { Date: 1663542000000, Close: 0.69},&#xD;&#xA;  { Date: 1664146800000, Close: 0.69},&#xD;&#xA;  { Date: 1664751600000, Close: 0.69},&#xD;&#xA;  { Date: 1665356400000, Close: 0.69},&#xD;&#xA;  { Date: 1665961200000, Close: 0.69},&#xD;&#xA;  { Date: 1666566000000, Close: 0.69},&#xD;&#xA;  { Date: 1667170800000, Close: 0.69},&#xD;&#xA;  { Date: 1667775600000, Close: 0.69},&#xD;&#xA;  { Date: 1668380400000, Close: 0.69},&#xD;&#xA;  { Date: 1668985200000, Close: 0.69},&#xD;&#xA;  { Date: 1669590000000, Close: 0.69},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.69},&#xD;&#xA;  { Date: 1678057200000, Close: 0.79},&#xD;&#xA;  { Date: 1678662000000, Close: 0.79},&#xD;&#xA;  { Date: 1679266800000, Close: 0.59},&#xD;&#xA;  { Date: 1679871600000, Close: 0.59},&#xD;&#xA;  { Date: 1682895600000, Close: 0.69},&#xD;&#xA;  { Date: 1683500400000, Close: 0.69},&#xD;&#xA;  { Date: 1686524400000, Close: 0.59},&#xD;&#xA;  { Date: 1704668400000, Close: 0.69},&#xD;&#xA;  { Date: 1708297200000, Close: 0.69},&#xD;&#xA;  { Date: 1708902000000, Close: 0.69},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1715554800000, Close: 0.49},&#xD;&#xA;  { Date: 1716764400000, Close: 0.49},&#xD;&#xA;  { Date: 1717369200000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.89},&#xD;&#xA;  { Date: 1727650800000, Close: 0.79},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Mewtwo</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/010---mewtwo/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/010---mewtwo/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149258.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575586800000, Close: 7.99},&#xD;&#xA;  { Date: 1576018800000, Close: 7.99},&#xD;&#xA;  { Date: 1576278000000, Close: 7.99},&#xD;&#xA;  { Date: 1577228400000, Close: 8.99},&#xD;&#xA;  { Date: 1577487600000, Close: 8.99},&#xD;&#xA;  { Date: 1578524400000, Close: 8.99},&#xD;&#xA;  { Date: 1580770800000, Close: 9.99},&#xD;&#xA;  { Date: 1580943600000, Close: 9.99},&#xD;&#xA;  { Date: 1582326000000, Close: 13.99},&#xD;&#xA;  { Date: 1583276400000, Close: 13.99},&#xD;&#xA;  { Date: 1583881200000, Close: 14.99},&#xD;&#xA;  { Date: 1585004400000, Close: 14.99},&#xD;&#xA;  { Date: 1585609200000, Close: 16.99},&#xD;&#xA;  { Date: 1586473200000, Close: 15.99},&#xD;&#xA;  { Date: 1588633200000, Close: 16.29},&#xD;&#xA;  { Date: 1588892400000, Close: 16.99},&#xD;&#xA;  { Date: 1590620400000, Close: 17.99},&#xD;&#xA;  { Date: 1590706800000, Close: 18.99},&#xD;&#xA;  { Date: 1591138800000, Close: 19.99},&#xD;&#xA;  { Date: 1591743600000, Close: 21.99},&#xD;&#xA;  { Date: 1592521200000, Close: 23.99},&#xD;&#xA;  { Date: 1592953200000, Close: 24.99},&#xD;&#xA;  { Date: 1593212400000, Close: 23.99},&#xD;&#xA;  { Date: 1594249200000, Close: 24.99},&#xD;&#xA;  { Date: 1594681200000, Close: 27.99},&#xD;&#xA;  { Date: 1595286000000, Close: 29.99},&#xD;&#xA;  { Date: 1595977200000, Close: 34.99},&#xD;&#xA;  { Date: 1596495600000, Close: 32.99},&#xD;&#xA;  { Date: 1596754800000, Close: 32.99},&#xD;&#xA;  { Date: 1597100400000, Close: 29.99},&#xD;&#xA;  { Date: 1598482800000, Close: 31.99},&#xD;&#xA;  { Date: 1599606000000, Close: 32.99},&#xD;&#xA;  { Date: 1599865200000, Close: 30.99},&#xD;&#xA;  { Date: 1601679600000, Close: 31.99},&#xD;&#xA;  { Date: 1602025200000, Close: 29.99},&#xD;&#xA;  { Date: 1604530800000, Close: 68.99},&#xD;&#xA;  { Date: 1605049200000, Close: 69.99},&#xD;&#xA;  { Date: 1607727600000, Close: 69.99},&#xD;&#xA;  { Date: 1607986800000, Close: 69.99},&#xD;&#xA;  { Date: 1609282800000, Close: 59.99},&#xD;&#xA;  { Date: 1610665200000, Close: 54.99},&#xD;&#xA;  { Date: 1612393200000, Close: 49.99},&#xD;&#xA;  { Date: 1613170800000, Close: 47.99},&#xD;&#xA;  { Date: 1613775600000, Close: 48.99},&#xD;&#xA;  { Date: 1614034800000, Close: 48.99},&#xD;&#xA;  { Date: 1614898800000, Close: 49.99},&#xD;&#xA;  { Date: 1616540400000, Close: 47.99},&#xD;&#xA;  { Date: 1617750000000, Close: 46.99},&#xD;&#xA;  { Date: 1618614000000, Close: 39.99},&#xD;&#xA;  { Date: 1619650800000, Close: 44.99},&#xD;&#xA;  { Date: 1619823600000, Close: 39.99},&#xD;&#xA;  { Date: 1620428400000, Close: 34.99},&#xD;&#xA;  { Date: 1622156400000, Close: 37.99},&#xD;&#xA;  { Date: 1622674800000, Close: 34.99},&#xD;&#xA;  { Date: 1625698800000, Close: 32.99},&#xD;&#xA;  { Date: 1626476400000, Close: 32.99},&#xD;&#xA;  { Date: 1628031600000, Close: 32.99},&#xD;&#xA;  { Date: 1629500400000, Close: 34.99},&#xD;&#xA;  { Date: 1631314800000, Close: 34.99},&#xD;&#xA;  { Date: 1636844400000, Close: 39.99},&#xD;&#xA;  { Date: 1638572400000, Close: 39.99},&#xD;&#xA;  { Date: 1640905200000, Close: 39.99},&#xD;&#xA;  { Date: 1641337200000, Close: 39.99},&#xD;&#xA;  { Date: 1643756400000, Close: 39.99},&#xD;&#xA;  { Date: 1645830000000, Close: 39.99},&#xD;&#xA;  { Date: 1646866800000, Close: 39.99},&#xD;&#xA;  { Date: 1649286000000, Close: 36.99},&#xD;&#xA;  { Date: 1652396400000, Close: 37.99},&#xD;&#xA;  { Date: 1654902000000, Close: 39.99},&#xD;&#xA;  { Date: 1655506800000, Close: 36.99},&#xD;&#xA;  { Date: 1657839600000, Close: 34.99},&#xD;&#xA;  { Date: 1658271600000, Close: 32.99},&#xD;&#xA;  { Date: 1660345200000, Close: 32.99},&#xD;&#xA;  { Date: 1665010800000, Close: 28.79},&#xD;&#xA;  { Date: 1665356400000, Close: 27.99},&#xD;&#xA;  { Date: 1667343600000, Close: 24.69},&#xD;&#xA;  { Date: 1667516400000, Close: 25.19},&#xD;&#xA;  { Date: 1667948400000, Close: 26.29},&#xD;&#xA;  { Date: 1668812400000, Close: 26.09},&#xD;&#xA;  { Date: 1669244400000, Close: 26.09},&#xD;&#xA;  { Date: 1669417200000, Close: 27.99},&#xD;&#xA;  { Date: 1669503600000, Close: 27.39},&#xD;&#xA;  { Date: 1670281200000, Close: 26.69},&#xD;&#xA;  { Date: 1674255600000, Close: 25.19},&#xD;&#xA;  { Date: 1674342000000, Close: 24.99},&#xD;&#xA;  { Date: 1674774000000, Close: 25.99},&#xD;&#xA;  { Date: 1677970800000, Close: 29.99},&#xD;&#xA;  { Date: 1678230000000, Close: 27.99},&#xD;&#xA;  { Date: 1681426800000, Close: 37.99},&#xD;&#xA;  { Date: 1682722800000, Close: 37.99},&#xD;&#xA;  { Date: 1686870000000, Close: 39.99},&#xD;&#xA;  { Date: 1688166000000, Close: 39.99},&#xD;&#xA;  { Date: 1690498800000, Close: 31.49},&#xD;&#xA;  { Date: 1691103600000, Close: 31.19},&#xD;&#xA;  { Date: 1691449200000, Close: 30.69},&#xD;&#xA;  { Date: 1691708400000, Close: 29.99},&#xD;&#xA;  { Date: 1695942000000, Close: 34.99},&#xD;&#xA;  { Date: 1697324400000, Close: 39.99},&#xD;&#xA;  { Date: 1698102000000, Close: 39.99},&#xD;&#xA;  { Date: 1699570800000, Close: 39.99},&#xD;&#xA;  { Date: 1700694000000, Close: 29.99},&#xD;&#xA;  { Date: 1701212400000, Close: 39.99},&#xD;&#xA;  { Date: 1707346800000, Close: 39.99},&#xD;&#xA;  { Date: 1715209200000, Close: 39.99},&#xD;&#xA;  { Date: 1722034800000, Close: 39.99},&#xD;&#xA;  { Date: 1724886000000, Close: 39.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Nidoking</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/011---nidoking/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/011---nidoking/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149307.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1576105200000, Close: 8.99},&#xD;&#xA;  { Date: 1577228400000, Close: 8.99},&#xD;&#xA;  { Date: 1578092400000, Close: 9.99},&#xD;&#xA;  { Date: 1578524400000, Close: 10.99},&#xD;&#xA;  { Date: 1578956400000, Close: 10.99},&#xD;&#xA;  { Date: 1579129200000, Close: 11.99},&#xD;&#xA;  { Date: 1580338800000, Close: 13.99},&#xD;&#xA;  { Date: 1580943600000, Close: 13.99},&#xD;&#xA;  { Date: 1581462000000, Close: 15.99},&#xD;&#xA;  { Date: 1583967600000, Close: 14.99},&#xD;&#xA;  { Date: 1584486000000, Close: 13.99},&#xD;&#xA;  { Date: 1585004400000, Close: 13.49},&#xD;&#xA;  { Date: 1585695600000, Close: 11.99},&#xD;&#xA;  { Date: 1586646000000, Close: 12.49},&#xD;&#xA;  { Date: 1587164400000, Close: 12.99},&#xD;&#xA;  { Date: 1587682800000, Close: 13.99},&#xD;&#xA;  { Date: 1588028400000, Close: 14.99},&#xD;&#xA;  { Date: 1588633200000, Close: 15.99},&#xD;&#xA;  { Date: 1590620400000, Close: 17.99},&#xD;&#xA;  { Date: 1591311600000, Close: 21.99},&#xD;&#xA;  { Date: 1593730800000, Close: 29.99},&#xD;&#xA;  { Date: 1594767600000, Close: 39.99},&#xD;&#xA;  { Date: 1595977200000, Close: 47.99},&#xD;&#xA;  { Date: 1596754800000, Close: 47.99},&#xD;&#xA;  { Date: 1597100400000, Close: 44.99},&#xD;&#xA;  { Date: 1597446000000, Close: 41.99},&#xD;&#xA;  { Date: 1598396400000, Close: 38.99},&#xD;&#xA;  { Date: 1599606000000, Close: 39.99},&#xD;&#xA;  { Date: 1602543600000, Close: 41.99},&#xD;&#xA;  { Date: 1603407600000, Close: 49.99},&#xD;&#xA;  { Date: 1604444400000, Close: 44.99},&#xD;&#xA;  { Date: 1605049200000, Close: 41.99},&#xD;&#xA;  { Date: 1606431600000, Close: 37.99},&#xD;&#xA;  { Date: 1606518000000, Close: 34.99},&#xD;&#xA;  { Date: 1606690800000, Close: 41.99},&#xD;&#xA;  { Date: 1606777200000, Close: 37.99},&#xD;&#xA;  { Date: 1606863600000, Close: 31.99},&#xD;&#xA;  { Date: 1606950000000, Close: 29.99},&#xD;&#xA;  { Date: 1607382000000, Close: 41.99},&#xD;&#xA;  { Date: 1608073200000, Close: 39.99},&#xD;&#xA;  { Date: 1608764400000, Close: 39.99},&#xD;&#xA;  { Date: 1609282800000, Close: 29.99},&#xD;&#xA;  { Date: 1610751600000, Close: 31.99},&#xD;&#xA;  { Date: 1611183600000, Close: 31.99},&#xD;&#xA;  { Date: 1611961200000, Close: 34.99},&#xD;&#xA;  { Date: 1612306800000, Close: 34.99},&#xD;&#xA;  { Date: 1612393200000, Close: 37.99},&#xD;&#xA;  { Date: 1612738800000, Close: 39.99},&#xD;&#xA;  { Date: 1614898800000, Close: 34.99},&#xD;&#xA;  { Date: 1617922800000, Close: 31.99},&#xD;&#xA;  { Date: 1618614000000, Close: 29.99},&#xD;&#xA;  { Date: 1620428400000, Close: 27.99},&#xD;&#xA;  { Date: 1621292400000, Close: 29.99},&#xD;&#xA;  { Date: 1621897200000, Close: 29.99},&#xD;&#xA;  { Date: 1624489200000, Close: 24.99},&#xD;&#xA;  { Date: 1626994800000, Close: 21.99},&#xD;&#xA;  { Date: 1629414000000, Close: 24.99},&#xD;&#xA;  { Date: 1631314800000, Close: 24.99},&#xD;&#xA;  { Date: 1631574000000, Close: 26.49},&#xD;&#xA;  { Date: 1632438000000, Close: 27.99},&#xD;&#xA;  { Date: 1633129200000, Close: 25.99},&#xD;&#xA;  { Date: 1634252400000, Close: 24.99},&#xD;&#xA;  { Date: 1634943600000, Close: 23.99},&#xD;&#xA;  { Date: 1635548400000, Close: 22.99},&#xD;&#xA;  { Date: 1639782000000, Close: 24.99},&#xD;&#xA;  { Date: 1642633200000, Close: 24.99},&#xD;&#xA;  { Date: 1645484400000, Close: 26.99},&#xD;&#xA;  { Date: 1645916400000, Close: 23.59},&#xD;&#xA;  { Date: 1646434800000, Close: 24.39},&#xD;&#xA;  { Date: 1647471600000, Close: 23.99},&#xD;&#xA;  { Date: 1647903600000, Close: 24.29},&#xD;&#xA;  { Date: 1649890800000, Close: 24.89},&#xD;&#xA;  { Date: 1652396400000, Close: 24.89},&#xD;&#xA;  { Date: 1653606000000, Close: 24.89},&#xD;&#xA;  { Date: 1654210800000, Close: 26.49},&#xD;&#xA;  { Date: 1654902000000, Close: 26.49},&#xD;&#xA;  { Date: 1655334000000, Close: 26.49},&#xD;&#xA;  { Date: 1656025200000, Close: 26.99},&#xD;&#xA;  { Date: 1657666800000, Close: 26.99},&#xD;&#xA;  { Date: 1659740400000, Close: 26.99},&#xD;&#xA;  { Date: 1660690800000, Close: 29.99},&#xD;&#xA;  { Date: 1661900400000, Close: 29.99},&#xD;&#xA;  { Date: 1664492400000, Close: 29.99},&#xD;&#xA;  { Date: 1666306800000, Close: 29.99},&#xD;&#xA;  { Date: 1672441200000, Close: 29.99},&#xD;&#xA;  { Date: 1674082800000, Close: 29.99},&#xD;&#xA;  { Date: 1676415600000, Close: 29.99},&#xD;&#xA;  { Date: 1677970800000, Close: 31.99},&#xD;&#xA;  { Date: 1678748400000, Close: 28.79},&#xD;&#xA;  { Date: 1682722800000, Close: 34.99},&#xD;&#xA;  { Date: 1683932400000, Close: 34.99},&#xD;&#xA;  { Date: 1684278000000, Close: 34.99},&#xD;&#xA;  { Date: 1686870000000, Close: 39.99},&#xD;&#xA;  { Date: 1688684400000, Close: 41.99},&#xD;&#xA;  { Date: 1695769200000, Close: 41.99},&#xD;&#xA;  { Date: 1700694000000, Close: 39.99},&#xD;&#xA;  { Date: 1700866800000, Close: 34.99},&#xD;&#xA;  { Date: 1701212400000, Close: 41.99},&#xD;&#xA;  { Date: 1702594800000, Close: 41.99},&#xD;&#xA;  { Date: 1706742000000, Close: 41.99},&#xD;&#xA;  { Date: 1706914800000, Close: 39.99},&#xD;&#xA;  { Date: 1709074800000, Close: 39.99},&#xD;&#xA;  { Date: 1711062000000, Close: 39.99},&#xD;&#xA;  { Date: 1711753200000, Close: 39.99},&#xD;&#xA;  { Date: 1718665200000, Close: 39.99},&#xD;&#xA;  { Date: 1722898800000, Close: 41.99},&#xD;&#xA;  { Date: 1727737200000, Close: 41.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Nidoran(M)</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/055---nidoranm/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/055---nidoranm/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149314.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.39},&#xD;&#xA;  { Date: 1602457200000, Close: 0.39},&#xD;&#xA;  { Date: 1606086000000, Close: 0.59},&#xD;&#xA;  { Date: 1606690800000, Close: 0.59},&#xD;&#xA;  { Date: 1607295600000, Close: 0.59},&#xD;&#xA;  { Date: 1607900400000, Close: 0.59},&#xD;&#xA;  { Date: 1608505200000, Close: 0.59},&#xD;&#xA;  { Date: 1609110000000, Close: 0.59},&#xD;&#xA;  { Date: 1609714800000, Close: 0.59},&#xD;&#xA;  { Date: 1610233200000, Close: 0.59},&#xD;&#xA;  { Date: 1610924400000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.59},&#xD;&#xA;  { Date: 1620601200000, Close: 0.59},&#xD;&#xA;  { Date: 1621206000000, Close: 0.59},&#xD;&#xA;  { Date: 1621810800000, Close: 0.59},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.49},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.39},&#xD;&#xA;  { Date: 1633906800000, Close: 0.39},&#xD;&#xA;  { Date: 1634511600000, Close: 0.39},&#xD;&#xA;  { Date: 1635116400000, Close: 0.39},&#xD;&#xA;  { Date: 1635721200000, Close: 0.39},&#xD;&#xA;  { Date: 1636326000000, Close: 0.39},&#xD;&#xA;  { Date: 1636930800000, Close: 0.39},&#xD;&#xA;  { Date: 1637535600000, Close: 0.39},&#xD;&#xA;  { Date: 1638140400000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1639350000000, Close: 0.39},&#xD;&#xA;  { Date: 1639954800000, Close: 0.39},&#xD;&#xA;  { Date: 1640559600000, Close: 0.39},&#xD;&#xA;  { Date: 1641164400000, Close: 0.39},&#xD;&#xA;  { Date: 1641769200000, Close: 0.39},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1645398000000, Close: 0.49},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.39},&#xD;&#xA;  { Date: 1648422000000, Close: 0.39},&#xD;&#xA;  { Date: 1649026800000, Close: 0.39},&#xD;&#xA;  { Date: 1649631600000, Close: 0.39},&#xD;&#xA;  { Date: 1650236400000, Close: 0.39},&#xD;&#xA;  { Date: 1650841200000, Close: 0.39},&#xD;&#xA;  { Date: 1651446000000, Close: 0.39},&#xD;&#xA;  { Date: 1652050800000, Close: 0.39},&#xD;&#xA;  { Date: 1652655600000, Close: 0.39},&#xD;&#xA;  { Date: 1653260400000, Close: 0.39},&#xD;&#xA;  { Date: 1653865200000, Close: 0.39},&#xD;&#xA;  { Date: 1654470000000, Close: 0.39},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.39},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1675638000000, Close: 0.39},&#xD;&#xA;  { Date: 1676242800000, Close: 0.39},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1680476400000, Close: 0.69},&#xD;&#xA;  { Date: 1681081200000, Close: 0.59},&#xD;&#xA;  { Date: 1681686000000, Close: 0.59},&#xD;&#xA;  { Date: 1691967600000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1697410800000, Close: 0.49},&#xD;&#xA;  { Date: 1703458800000, Close: 0.49},&#xD;&#xA;  { Date: 1704063600000, Close: 0.39},&#xD;&#xA;  { Date: 1716764400000, Close: 0.39},&#xD;&#xA;  { Date: 1727046000000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Nidorino</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/037---nidorino/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/037---nidorino/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149318.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.39},&#xD;&#xA;  { Date: 1591398000000, Close: 1.59},&#xD;&#xA;  { Date: 1593385200000, Close: 1.49},&#xD;&#xA;  { Date: 1593817200000, Close: 1.49},&#xD;&#xA;  { Date: 1600383600000, Close: 1.59},&#xD;&#xA;  { Date: 1601247600000, Close: 1.59},&#xD;&#xA;  { Date: 1603062000000, Close: 1.69},&#xD;&#xA;  { Date: 1606086000000, Close: 3.99},&#xD;&#xA;  { Date: 1606690800000, Close: 3.99},&#xD;&#xA;  { Date: 1607295600000, Close: 3.99},&#xD;&#xA;  { Date: 1607900400000, Close: 3.99},&#xD;&#xA;  { Date: 1608505200000, Close: 3.99},&#xD;&#xA;  { Date: 1609110000000, Close: 4.49},&#xD;&#xA;  { Date: 1609714800000, Close: 3.99},&#xD;&#xA;  { Date: 1610233200000, Close: 4.49},&#xD;&#xA;  { Date: 1610924400000, Close: 3.99},&#xD;&#xA;  { Date: 1611529200000, Close: 3.79},&#xD;&#xA;  { Date: 1612134000000, Close: 3.79},&#xD;&#xA;  { Date: 1612738800000, Close: 3.79},&#xD;&#xA;  { Date: 1613343600000, Close: 3.79},&#xD;&#xA;  { Date: 1613948400000, Close: 3.49},&#xD;&#xA;  { Date: 1614553200000, Close: 3.69},&#xD;&#xA;  { Date: 1615158000000, Close: 3.69},&#xD;&#xA;  { Date: 1615762800000, Close: 3.69},&#xD;&#xA;  { Date: 1616367600000, Close: 3.69},&#xD;&#xA;  { Date: 1616972400000, Close: 3.69},&#xD;&#xA;  { Date: 1617577200000, Close: 3.49},&#xD;&#xA;  { Date: 1618182000000, Close: 3.49},&#xD;&#xA;  { Date: 1618786800000, Close: 2.79},&#xD;&#xA;  { Date: 1619391600000, Close: 2.79},&#xD;&#xA;  { Date: 1619996400000, Close: 2.79},&#xD;&#xA;  { Date: 1620601200000, Close: 2.99},&#xD;&#xA;  { Date: 1621206000000, Close: 2.49},&#xD;&#xA;  { Date: 1621810800000, Close: 2.49},&#xD;&#xA;  { Date: 1622415600000, Close: 2.29},&#xD;&#xA;  { Date: 1623020400000, Close: 2.29},&#xD;&#xA;  { Date: 1623625200000, Close: 2.29},&#xD;&#xA;  { Date: 1624230000000, Close: 1.99},&#xD;&#xA;  { Date: 1624834800000, Close: 1.79},&#xD;&#xA;  { Date: 1625439600000, Close: 1.99},&#xD;&#xA;  { Date: 1626044400000, Close: 1.99},&#xD;&#xA;  { Date: 1626649200000, Close: 1.99},&#xD;&#xA;  { Date: 1627254000000, Close: 1.79},&#xD;&#xA;  { Date: 1627858800000, Close: 1.79},&#xD;&#xA;  { Date: 1628463600000, Close: 1.79},&#xD;&#xA;  { Date: 1629068400000, Close: 1.79},&#xD;&#xA;  { Date: 1629673200000, Close: 2.29},&#xD;&#xA;  { Date: 1630278000000, Close: 2.29},&#xD;&#xA;  { Date: 1630882800000, Close: 2.29},&#xD;&#xA;  { Date: 1631487600000, Close: 2.29},&#xD;&#xA;  { Date: 1632092400000, Close: 2.29},&#xD;&#xA;  { Date: 1632697200000, Close: 2.29},&#xD;&#xA;  { Date: 1633302000000, Close: 2.29},&#xD;&#xA;  { Date: 1633906800000, Close: 2.29},&#xD;&#xA;  { Date: 1634511600000, Close: 2.29},&#xD;&#xA;  { Date: 1635116400000, Close: 2.29},&#xD;&#xA;  { Date: 1635721200000, Close: 2.29},&#xD;&#xA;  { Date: 1636326000000, Close: 2.29},&#xD;&#xA;  { Date: 1636930800000, Close: 2.29},&#xD;&#xA;  { Date: 1637535600000, Close: 2.29},&#xD;&#xA;  { Date: 1638140400000, Close: 2.29},&#xD;&#xA;  { Date: 1638745200000, Close: 2.29},&#xD;&#xA;  { Date: 1639350000000, Close: 2.29},&#xD;&#xA;  { Date: 1639954800000, Close: 2.29},&#xD;&#xA;  { Date: 1640559600000, Close: 2.29},&#xD;&#xA;  { Date: 1642978800000, Close: 2.99},&#xD;&#xA;  { Date: 1643583600000, Close: 2.99},&#xD;&#xA;  { Date: 1644793200000, Close: 2.99},&#xD;&#xA;  { Date: 1645398000000, Close: 2.99},&#xD;&#xA;  { Date: 1646002800000, Close: 2.99},&#xD;&#xA;  { Date: 1646607600000, Close: 2.59},&#xD;&#xA;  { Date: 1647212400000, Close: 2.59},&#xD;&#xA;  { Date: 1647817200000, Close: 2.49},&#xD;&#xA;  { Date: 1648422000000, Close: 2.39},&#xD;&#xA;  { Date: 1649026800000, Close: 1.99},&#xD;&#xA;  { Date: 1649631600000, Close: 1.99},&#xD;&#xA;  { Date: 1650236400000, Close: 1.99},&#xD;&#xA;  { Date: 1650841200000, Close: 1.99},&#xD;&#xA;  { Date: 1651446000000, Close: 1.99},&#xD;&#xA;  { Date: 1652050800000, Close: 1.89},&#xD;&#xA;  { Date: 1652655600000, Close: 1.79},&#xD;&#xA;  { Date: 1653260400000, Close: 1.99},&#xD;&#xA;  { Date: 1653865200000, Close: 1.99},&#xD;&#xA;  { Date: 1654470000000, Close: 1.99},&#xD;&#xA;  { Date: 1655074800000, Close: 1.99},&#xD;&#xA;  { Date: 1662332400000, Close: 2.49},&#xD;&#xA;  { Date: 1662937200000, Close: 2.49},&#xD;&#xA;  { Date: 1663542000000, Close: 2.49},&#xD;&#xA;  { Date: 1664146800000, Close: 2.49},&#xD;&#xA;  { Date: 1664751600000, Close: 2.49},&#xD;&#xA;  { Date: 1665356400000, Close: 1.79},&#xD;&#xA;  { Date: 1665961200000, Close: 1.79},&#xD;&#xA;  { Date: 1666566000000, Close: 1.79},&#xD;&#xA;  { Date: 1667170800000, Close: 1.79},&#xD;&#xA;  { Date: 1667775600000, Close: 1.79},&#xD;&#xA;  { Date: 1668380400000, Close: 1.79},&#xD;&#xA;  { Date: 1674428400000, Close: 1.89},&#xD;&#xA;  { Date: 1675033200000, Close: 1.89},&#xD;&#xA;  { Date: 1675638000000, Close: 1.89},&#xD;&#xA;  { Date: 1676242800000, Close: 1.59},&#xD;&#xA;  { Date: 1682895600000, Close: 1.59},&#xD;&#xA;  { Date: 1685919600000, Close: 1.99},&#xD;&#xA;  { Date: 1702854000000, Close: 2.29},&#xD;&#xA;  { Date: 1703458800000, Close: 2.29},&#xD;&#xA;  { Date: 1708297200000, Close: 2.49},&#xD;&#xA;  { Date: 1708902000000, Close: 2.49},&#xD;&#xA;  { Date: 1712530800000, Close: 3.99},&#xD;&#xA;  { Date: 1713135600000, Close: 3.99},&#xD;&#xA;  { Date: 1713740400000, Close: 3.99},&#xD;&#xA;  { Date: 1714345200000, Close: 3.99},&#xD;&#xA;  { Date: 1714950000000, Close: 3.99},&#xD;&#xA;  { Date: 1716764400000, Close: 3.99},&#xD;&#xA;  { Date: 1717369200000, Close: 3.99},&#xD;&#xA;  { Date: 1717974000000, Close: 3.39},&#xD;&#xA;  { Date: 1718578800000, Close: 3.39},&#xD;&#xA;  { Date: 1719183600000, Close: 3.39},&#xD;&#xA;  { Date: 1719788400000, Close: 2.99},&#xD;&#xA;  { Date: 1720998000000, Close: 2.99},&#xD;&#xA;  { Date: 1724022000000, Close: 2.99},&#xD;&#xA;  { Date: 1724626800000, Close: 2.99},&#xD;&#xA;  { Date: 1727046000000, Close: 2.99},&#xD;&#xA;  { Date: 1727650800000, Close: 2.39},&#xD;&#xA;  { Date: 1728255600000, Close: 2.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Ninetales</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/012---ninetales/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/012---ninetales/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149320.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575673200000, Close: 5.99},&#xD;&#xA;  { Date: 1576018800000, Close: 5.99},&#xD;&#xA;  { Date: 1576450800000, Close: 5.99},&#xD;&#xA;  { Date: 1577228400000, Close: 5.99},&#xD;&#xA;  { Date: 1578524400000, Close: 5.99},&#xD;&#xA;  { Date: 1579302000000, Close: 5.39},&#xD;&#xA;  { Date: 1581375600000, Close: 5.39},&#xD;&#xA;  { Date: 1581462000000, Close: 5.99},&#xD;&#xA;  { Date: 1582239600000, Close: 5.99},&#xD;&#xA;  { Date: 1582585200000, Close: 6.29},&#xD;&#xA;  { Date: 1583449200000, Close: 6.29},&#xD;&#xA;  { Date: 1583881200000, Close: 6.49},&#xD;&#xA;  { Date: 1585004400000, Close: 5.99},&#xD;&#xA;  { Date: 1585609200000, Close: 6.49},&#xD;&#xA;  { Date: 1585868400000, Close: 6.69},&#xD;&#xA;  { Date: 1586559600000, Close: 6.69},&#xD;&#xA;  { Date: 1586646000000, Close: 7.99},&#xD;&#xA;  { Date: 1588892400000, Close: 10.99},&#xD;&#xA;  { Date: 1590620400000, Close: 11.99},&#xD;&#xA;  { Date: 1591311600000, Close: 12.99},&#xD;&#xA;  { Date: 1593558000000, Close: 15.99},&#xD;&#xA;  { Date: 1594767600000, Close: 16.99},&#xD;&#xA;  { Date: 1595890800000, Close: 17.99},&#xD;&#xA;  { Date: 1596236400000, Close: 16.99},&#xD;&#xA;  { Date: 1596754800000, Close: 16.99},&#xD;&#xA;  { Date: 1598396400000, Close: 15.99},&#xD;&#xA;  { Date: 1599001200000, Close: 16.99},&#xD;&#xA;  { Date: 1599606000000, Close: 17.49},&#xD;&#xA;  { Date: 1600815600000, Close: 16.99},&#xD;&#xA;  { Date: 1601334000000, Close: 16.49},&#xD;&#xA;  { Date: 1601938800000, Close: 16.99},&#xD;&#xA;  { Date: 1604444400000, Close: 39.99},&#xD;&#xA;  { Date: 1605913200000, Close: 41.99},&#xD;&#xA;  { Date: 1606863600000, Close: 39.99},&#xD;&#xA;  { Date: 1607382000000, Close: 44.99},&#xD;&#xA;  { Date: 1608678000000, Close: 41.99},&#xD;&#xA;  { Date: 1609282800000, Close: 39.99},&#xD;&#xA;  { Date: 1610665200000, Close: 37.99},&#xD;&#xA;  { Date: 1611183600000, Close: 36.99},&#xD;&#xA;  { Date: 1611702000000, Close: 34.99},&#xD;&#xA;  { Date: 1614898800000, Close: 31.99},&#xD;&#xA;  { Date: 1618614000000, Close: 29.99},&#xD;&#xA;  { Date: 1619910000000, Close: 27.99},&#xD;&#xA;  { Date: 1620082800000, Close: 24.99},&#xD;&#xA;  { Date: 1622761200000, Close: 22.99},&#xD;&#xA;  { Date: 1625266800000, Close: 22.49},&#xD;&#xA;  { Date: 1625785200000, Close: 22.99},&#xD;&#xA;  { Date: 1625958000000, Close: 21.49},&#xD;&#xA;  { Date: 1626476400000, Close: 18.99},&#xD;&#xA;  { Date: 1626994800000, Close: 17.99},&#xD;&#xA;  { Date: 1628290800000, Close: 16.99},&#xD;&#xA;  { Date: 1628722800000, Close: 17.99},&#xD;&#xA;  { Date: 1631055600000, Close: 20.99},&#xD;&#xA;  { Date: 1631314800000, Close: 22.99},&#xD;&#xA;  { Date: 1632524400000, Close: 19.99},&#xD;&#xA;  { Date: 1633993200000, Close: 18.49},&#xD;&#xA;  { Date: 1634857200000, Close: 17.99},&#xD;&#xA;  { Date: 1642633200000, Close: 19.99},&#xD;&#xA;  { Date: 1646089200000, Close: 24.39},&#xD;&#xA;  { Date: 1646434800000, Close: 24.39},&#xD;&#xA;  { Date: 1647039600000, Close: 24.99},&#xD;&#xA;  { Date: 1647385200000, Close: 24.59},&#xD;&#xA;  { Date: 1647817200000, Close: 24.69},&#xD;&#xA;  { Date: 1648422000000, Close: 24.29},&#xD;&#xA;  { Date: 1648767600000, Close: 21.89},&#xD;&#xA;  { Date: 1649199600000, Close: 20.49},&#xD;&#xA;  { Date: 1649631600000, Close: 19.89},&#xD;&#xA;  { Date: 1650409200000, Close: 18.69},&#xD;&#xA;  { Date: 1652396400000, Close: 21.99},&#xD;&#xA;  { Date: 1654210800000, Close: 21.99},&#xD;&#xA;  { Date: 1655334000000, Close: 21.99},&#xD;&#xA;  { Date: 1655420400000, Close: 24.99},&#xD;&#xA;  { Date: 1656716400000, Close: 23.49},&#xD;&#xA;  { Date: 1657321200000, Close: 19.99},&#xD;&#xA;  { Date: 1659740400000, Close: 20.99},&#xD;&#xA;  { Date: 1661554800000, Close: 24.99},&#xD;&#xA;  { Date: 1661900400000, Close: 24.99},&#xD;&#xA;  { Date: 1663628400000, Close: 24.99},&#xD;&#xA;  { Date: 1665788400000, Close: 22.99},&#xD;&#xA;  { Date: 1667343600000, Close: 22.99},&#xD;&#xA;  { Date: 1669762800000, Close: 21.49},&#xD;&#xA;  { Date: 1670972400000, Close: 19.99},&#xD;&#xA;  { Date: 1671058800000, Close: 17.29},&#xD;&#xA;  { Date: 1672354800000, Close: 16.89},&#xD;&#xA;  { Date: 1674774000000, Close: 19.99},&#xD;&#xA;  { Date: 1675119600000, Close: 19.49},&#xD;&#xA;  { Date: 1675465200000, Close: 19.49},&#xD;&#xA;  { Date: 1677970800000, Close: 22.99},&#xD;&#xA;  { Date: 1678316400000, Close: 23.29},&#xD;&#xA;  { Date: 1678748400000, Close: 22.99},&#xD;&#xA;  { Date: 1679094000000, Close: 22.09},&#xD;&#xA;  { Date: 1680217200000, Close: 22.39},&#xD;&#xA;  { Date: 1680303600000, Close: 23.99},&#xD;&#xA;  { Date: 1681081200000, Close: 23.29},&#xD;&#xA;  { Date: 1682204400000, Close: 23.29},&#xD;&#xA;  { Date: 1682463600000, Close: 23.99},&#xD;&#xA;  { Date: 1682722800000, Close: 23.99},&#xD;&#xA;  { Date: 1683932400000, Close: 23.99},&#xD;&#xA;  { Date: 1684796400000, Close: 22.99},&#xD;&#xA;  { Date: 1685574000000, Close: 22.89},&#xD;&#xA;  { Date: 1686870000000, Close: 22.99},&#xD;&#xA;  { Date: 1689721200000, Close: 24.99},&#xD;&#xA;  { Date: 1690239600000, Close: 24.29},&#xD;&#xA;  { Date: 1690758000000, Close: 23.99},&#xD;&#xA;  { Date: 1691190000000, Close: 23.89},&#xD;&#xA;  { Date: 1695942000000, Close: 19.99},&#xD;&#xA;  { Date: 1709074800000, Close: 22.99},&#xD;&#xA;  { Date: 1709334000000, Close: 22.99},&#xD;&#xA;  { Date: 1711062000000, Close: 22.99},&#xD;&#xA;  { Date: 1712358000000, Close: 24.99},&#xD;&#xA;  { Date: 1714604400000, Close: 24.99},&#xD;&#xA;  { Date: 1718751600000, Close: 24.99},&#xD;&#xA;  { Date: 1724713200000, Close: 24.99},&#xD;&#xA;  { Date: 1725663600000, Close: 26.49},&#xD;&#xA;  { Date: 1727996400000, Close: 26.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Onix</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/056---onix/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/056---onix/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149327.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.55},&#xD;&#xA;  { Date: 1593817200000, Close: 0.55},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.39},&#xD;&#xA;  { Date: 1602457200000, Close: 0.39},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.59},&#xD;&#xA;  { Date: 1609714800000, Close: 0.59},&#xD;&#xA;  { Date: 1610233200000, Close: 0.59},&#xD;&#xA;  { Date: 1610924400000, Close: 0.59},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.59},&#xD;&#xA;  { Date: 1620601200000, Close: 0.59},&#xD;&#xA;  { Date: 1621206000000, Close: 0.59},&#xD;&#xA;  { Date: 1621810800000, Close: 0.59},&#xD;&#xA;  { Date: 1622415600000, Close: 0.59},&#xD;&#xA;  { Date: 1623020400000, Close: 0.59},&#xD;&#xA;  { Date: 1623625200000, Close: 0.59},&#xD;&#xA;  { Date: 1624230000000, Close: 0.59},&#xD;&#xA;  { Date: 1624834800000, Close: 0.59},&#xD;&#xA;  { Date: 1625439600000, Close: 0.59},&#xD;&#xA;  { Date: 1626044400000, Close: 0.59},&#xD;&#xA;  { Date: 1626649200000, Close: 0.59},&#xD;&#xA;  { Date: 1627254000000, Close: 0.59},&#xD;&#xA;  { Date: 1627858800000, Close: 0.59},&#xD;&#xA;  { Date: 1628463600000, Close: 0.59},&#xD;&#xA;  { Date: 1629068400000, Close: 0.59},&#xD;&#xA;  { Date: 1629673200000, Close: 0.59},&#xD;&#xA;  { Date: 1630278000000, Close: 0.59},&#xD;&#xA;  { Date: 1630882800000, Close: 0.59},&#xD;&#xA;  { Date: 1631487600000, Close: 0.59},&#xD;&#xA;  { Date: 1632092400000, Close: 0.59},&#xD;&#xA;  { Date: 1632697200000, Close: 0.59},&#xD;&#xA;  { Date: 1633302000000, Close: 0.59},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1639350000000, Close: 0.39},&#xD;&#xA;  { Date: 1641769200000, Close: 0.49},&#xD;&#xA;  { Date: 1642374000000, Close: 0.49},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1644188400000, Close: 0.49},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1645398000000, Close: 0.49},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.39},&#xD;&#xA;  { Date: 1647212400000, Close: 0.39},&#xD;&#xA;  { Date: 1647817200000, Close: 0.39},&#xD;&#xA;  { Date: 1648422000000, Close: 0.39},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.35},&#xD;&#xA;  { Date: 1670194800000, Close: 0.35},&#xD;&#xA;  { Date: 1670799600000, Close: 0.35},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1680476400000, Close: 0.59},&#xD;&#xA;  { Date: 1681686000000, Close: 0.79},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1696806000000, Close: 0.39},&#xD;&#xA;  { Date: 1697410800000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1710111600000, Close: 0.59},&#xD;&#xA;  { Date: 1710716400000, Close: 0.59},&#xD;&#xA;  { Date: 1713740400000, Close: 0.59},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1715554800000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.89},&#xD;&#xA;  { Date: 1727650800000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pidgeotto</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/022---pidgeotto/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/022---pidgeotto/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149338.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 2.49},&#xD;&#xA;  { Date: 1578524400000, Close: 2.49},&#xD;&#xA;  { Date: 1580943600000, Close: 3.49},&#xD;&#xA;  { Date: 1582066800000, Close: 4.29},&#xD;&#xA;  { Date: 1584486000000, Close: 3.99},&#xD;&#xA;  { Date: 1585004400000, Close: 3.49},&#xD;&#xA;  { Date: 1585782000000, Close: 3.69},&#xD;&#xA;  { Date: 1587164400000, Close: 3.99},&#xD;&#xA;  { Date: 1588719600000, Close: 5.49},&#xD;&#xA;  { Date: 1588806000000, Close: 5.89},&#xD;&#xA;  { Date: 1589583600000, Close: 5.99},&#xD;&#xA;  { Date: 1591830000000, Close: 6.09},&#xD;&#xA;  { Date: 1592521200000, Close: 6.49},&#xD;&#xA;  { Date: 1592953200000, Close: 6.99},&#xD;&#xA;  { Date: 1596063600000, Close: 6.99},&#xD;&#xA;  { Date: 1596754800000, Close: 6.99},&#xD;&#xA;  { Date: 1597532400000, Close: 6.59},&#xD;&#xA;  { Date: 1598050800000, Close: 6.49},&#xD;&#xA;  { Date: 1599692400000, Close: 6.29},&#xD;&#xA;  { Date: 1600210800000, Close: 6.19},&#xD;&#xA;  { Date: 1600297200000, Close: 6.29},&#xD;&#xA;  { Date: 1600815600000, Close: 5.99},&#xD;&#xA;  { Date: 1604444400000, Close: 6.09},&#xD;&#xA;  { Date: 1605049200000, Close: 5.99},&#xD;&#xA;  { Date: 1608073200000, Close: 4.99},&#xD;&#xA;  { Date: 1611010800000, Close: 5.49},&#xD;&#xA;  { Date: 1611097200000, Close: 4.99},&#xD;&#xA;  { Date: 1612306800000, Close: 4.99},&#xD;&#xA;  { Date: 1614207600000, Close: 5.99},&#xD;&#xA;  { Date: 1614380400000, Close: 5.99},&#xD;&#xA;  { Date: 1614812400000, Close: 6.49},&#xD;&#xA;  { Date: 1615244400000, Close: 6.49},&#xD;&#xA;  { Date: 1615503600000, Close: 6.99},&#xD;&#xA;  { Date: 1616108400000, Close: 7.99},&#xD;&#xA;  { Date: 1617058800000, Close: 8.99},&#xD;&#xA;  { Date: 1618009200000, Close: 9.99},&#xD;&#xA;  { Date: 1618268400000, Close: 9.99},&#xD;&#xA;  { Date: 1619218800000, Close: 11.99},&#xD;&#xA;  { Date: 1619564400000, Close: 11.99},&#xD;&#xA;  { Date: 1621465200000, Close: 10.99},&#xD;&#xA;  { Date: 1623970800000, Close: 10.49},&#xD;&#xA;  { Date: 1624489200000, Close: 9.99},&#xD;&#xA;  { Date: 1626994800000, Close: 8.99},&#xD;&#xA;  { Date: 1628377200000, Close: 8.39},&#xD;&#xA;  { Date: 1628895600000, Close: 7.99},&#xD;&#xA;  { Date: 1631401200000, Close: 7.39},&#xD;&#xA;  { Date: 1633042800000, Close: 6.49},&#xD;&#xA;  { Date: 1634857200000, Close: 7.99},&#xD;&#xA;  { Date: 1636758000000, Close: 7.99},&#xD;&#xA;  { Date: 1638572400000, Close: 7.99},&#xD;&#xA;  { Date: 1639177200000, Close: 7.99},&#xD;&#xA;  { Date: 1639782000000, Close: 7.99},&#xD;&#xA;  { Date: 1640127600000, Close: 7.99},&#xD;&#xA;  { Date: 1641337200000, Close: 7.99},&#xD;&#xA;  { Date: 1643151600000, Close: 8.39},&#xD;&#xA;  { Date: 1645052400000, Close: 7.99},&#xD;&#xA;  { Date: 1646521200000, Close: 7.39},&#xD;&#xA;  { Date: 1646866800000, Close: 6.99},&#xD;&#xA;  { Date: 1646953200000, Close: 6.49},&#xD;&#xA;  { Date: 1648076400000, Close: 6.39},&#xD;&#xA;  { Date: 1649199600000, Close: 6.99},&#xD;&#xA;  { Date: 1649977200000, Close: 6.99},&#xD;&#xA;  { Date: 1650754800000, Close: 6.39},&#xD;&#xA;  { Date: 1651532400000, Close: 6.09},&#xD;&#xA;  { Date: 1652396400000, Close: 6.79},&#xD;&#xA;  { Date: 1652914800000, Close: 6.49},&#xD;&#xA;  { Date: 1654210800000, Close: 6.49},&#xD;&#xA;  { Date: 1654815600000, Close: 6.49},&#xD;&#xA;  { Date: 1655852400000, Close: 6.49},&#xD;&#xA;  { Date: 1656025200000, Close: 6.99},&#xD;&#xA;  { Date: 1660086000000, Close: 7.99},&#xD;&#xA;  { Date: 1661900400000, Close: 9.99},&#xD;&#xA;  { Date: 1666047600000, Close: 11.99},&#xD;&#xA;  { Date: 1666393200000, Close: 11.99},&#xD;&#xA;  { Date: 1670799600000, Close: 10.49},&#xD;&#xA;  { Date: 1673910000000, Close: 10.99},&#xD;&#xA;  { Date: 1675119600000, Close: 9.99},&#xD;&#xA;  { Date: 1676415600000, Close: 9.99},&#xD;&#xA;  { Date: 1678748400000, Close: 9.99},&#xD;&#xA;  { Date: 1679785200000, Close: 9.99},&#xD;&#xA;  { Date: 1681426800000, Close: 10.99},&#xD;&#xA;  { Date: 1682722800000, Close: 10.99},&#xD;&#xA;  { Date: 1688166000000, Close: 10.99},&#xD;&#xA;  { Date: 1695942000000, Close: 10.99},&#xD;&#xA;  { Date: 1697151600000, Close: 11.99},&#xD;&#xA;  { Date: 1698879600000, Close: 11.99},&#xD;&#xA;  { Date: 1700694000000, Close: 7.99},&#xD;&#xA;  { Date: 1701212400000, Close: 11.99},&#xD;&#xA;  { Date: 1702422000000, Close: 10.49},&#xD;&#xA;  { Date: 1709334000000, Close: 10.99},&#xD;&#xA;  { Date: 1715209200000, Close: 10.99},&#xD;&#xA;  { Date: 1720825200000, Close: 10.99},&#xD;&#xA;  { Date: 1722898800000, Close: 10.99},&#xD;&#xA;  { Date: 1725490800000, Close: 9.79},&#xD;&#xA;  { Date: 1726786800000, Close: 9.19},&#xD;&#xA;  { Date: 1727996400000, Close: 8.99},&#xD;&#xA;  { Date: 1728428400000, Close: 8.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pidgey</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/057---pidgey/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/057---pidgey/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149340.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.59},&#xD;&#xA;  { Date: 1593817200000, Close: 0.59},&#xD;&#xA;  { Date: 1600383600000, Close: 0.59},&#xD;&#xA;  { Date: 1601247600000, Close: 0.59},&#xD;&#xA;  { Date: 1601852400000, Close: 0.59},&#xD;&#xA;  { Date: 1602457200000, Close: 0.59},&#xD;&#xA;  { Date: 1604271600000, Close: 2.99},&#xD;&#xA;  { Date: 1604876400000, Close: 2.99},&#xD;&#xA;  { Date: 1605481200000, Close: 2.99},&#xD;&#xA;  { Date: 1606086000000, Close: 2.99},&#xD;&#xA;  { Date: 1606690800000, Close: 2.99},&#xD;&#xA;  { Date: 1607295600000, Close: 2.99},&#xD;&#xA;  { Date: 1607900400000, Close: 2.99},&#xD;&#xA;  { Date: 1608505200000, Close: 2.49},&#xD;&#xA;  { Date: 1609110000000, Close: 2.49},&#xD;&#xA;  { Date: 1609714800000, Close: 2.29},&#xD;&#xA;  { Date: 1610233200000, Close: 2.29},&#xD;&#xA;  { Date: 1610924400000, Close: 2.39},&#xD;&#xA;  { Date: 1611529200000, Close: 2.45},&#xD;&#xA;  { Date: 1612134000000, Close: 2.39},&#xD;&#xA;  { Date: 1612738800000, Close: 2.19},&#xD;&#xA;  { Date: 1613343600000, Close: 2.19},&#xD;&#xA;  { Date: 1613948400000, Close: 2.19},&#xD;&#xA;  { Date: 1614553200000, Close: 2.19},&#xD;&#xA;  { Date: 1615158000000, Close: 1.99},&#xD;&#xA;  { Date: 1615762800000, Close: 1.99},&#xD;&#xA;  { Date: 1616367600000, Close: 1.99},&#xD;&#xA;  { Date: 1616972400000, Close: 1.79},&#xD;&#xA;  { Date: 1617577200000, Close: 1.49},&#xD;&#xA;  { Date: 1618182000000, Close: 1.29},&#xD;&#xA;  { Date: 1618786800000, Close: 1.29},&#xD;&#xA;  { Date: 1619391600000, Close: 1.29},&#xD;&#xA;  { Date: 1619996400000, Close: 1.29},&#xD;&#xA;  { Date: 1620601200000, Close: 1.09},&#xD;&#xA;  { Date: 1621206000000, Close: 1.09},&#xD;&#xA;  { Date: 1621810800000, Close: 1.09},&#xD;&#xA;  { Date: 1622415600000, Close: 1.09},&#xD;&#xA;  { Date: 1623020400000, Close: 1.09},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 1.09},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 0.99},&#xD;&#xA;  { Date: 1627254000000, Close: 0.99},&#xD;&#xA;  { Date: 1627858800000, Close: 0.99},&#xD;&#xA;  { Date: 1628463600000, Close: 0.99},&#xD;&#xA;  { Date: 1629068400000, Close: 0.99},&#xD;&#xA;  { Date: 1629673200000, Close: 0.99},&#xD;&#xA;  { Date: 1630278000000, Close: 0.99},&#xD;&#xA;  { Date: 1630882800000, Close: 0.99},&#xD;&#xA;  { Date: 1631487600000, Close: 0.99},&#xD;&#xA;  { Date: 1632092400000, Close: 0.99},&#xD;&#xA;  { Date: 1632697200000, Close: 0.99},&#xD;&#xA;  { Date: 1633302000000, Close: 0.99},&#xD;&#xA;  { Date: 1633906800000, Close: 0.99},&#xD;&#xA;  { Date: 1634511600000, Close: 0.99},&#xD;&#xA;  { Date: 1635116400000, Close: 0.99},&#xD;&#xA;  { Date: 1635721200000, Close: 0.99},&#xD;&#xA;  { Date: 1636326000000, Close: 0.99},&#xD;&#xA;  { Date: 1636930800000, Close: 0.99},&#xD;&#xA;  { Date: 1637535600000, Close: 0.99},&#xD;&#xA;  { Date: 1638140400000, Close: 0.99},&#xD;&#xA;  { Date: 1638745200000, Close: 0.89},&#xD;&#xA;  { Date: 1639350000000, Close: 0.89},&#xD;&#xA;  { Date: 1639954800000, Close: 0.89},&#xD;&#xA;  { Date: 1640559600000, Close: 0.89},&#xD;&#xA;  { Date: 1641164400000, Close: 0.89},&#xD;&#xA;  { Date: 1641769200000, Close: 0.79},&#xD;&#xA;  { Date: 1642374000000, Close: 0.79},&#xD;&#xA;  { Date: 1642978800000, Close: 0.79},&#xD;&#xA;  { Date: 1643583600000, Close: 0.79},&#xD;&#xA;  { Date: 1644188400000, Close: 0.79},&#xD;&#xA;  { Date: 1644793200000, Close: 0.79},&#xD;&#xA;  { Date: 1645398000000, Close: 0.79},&#xD;&#xA;  { Date: 1646002800000, Close: 0.79},&#xD;&#xA;  { Date: 1646607600000, Close: 0.79},&#xD;&#xA;  { Date: 1647212400000, Close: 0.79},&#xD;&#xA;  { Date: 1647817200000, Close: 0.79},&#xD;&#xA;  { Date: 1648422000000, Close: 0.79},&#xD;&#xA;  { Date: 1649026800000, Close: 0.69},&#xD;&#xA;  { Date: 1649631600000, Close: 0.69},&#xD;&#xA;  { Date: 1650236400000, Close: 0.69},&#xD;&#xA;  { Date: 1650841200000, Close: 0.69},&#xD;&#xA;  { Date: 1651446000000, Close: 0.69},&#xD;&#xA;  { Date: 1652050800000, Close: 0.69},&#xD;&#xA;  { Date: 1652655600000, Close: 0.69},&#xD;&#xA;  { Date: 1653260400000, Close: 0.69},&#xD;&#xA;  { Date: 1653865200000, Close: 0.69},&#xD;&#xA;  { Date: 1654470000000, Close: 0.69},&#xD;&#xA;  { Date: 1655074800000, Close: 0.69},&#xD;&#xA;  { Date: 1655679600000, Close: 0.69},&#xD;&#xA;  { Date: 1656284400000, Close: 0.69},&#xD;&#xA;  { Date: 1656889200000, Close: 0.49},&#xD;&#xA;  { Date: 1657494000000, Close: 0.49},&#xD;&#xA;  { Date: 1658098800000, Close: 0.49},&#xD;&#xA;  { Date: 1661727600000, Close: 0.49},&#xD;&#xA;  { Date: 1663542000000, Close: 0.49},&#xD;&#xA;  { Date: 1664146800000, Close: 0.49},&#xD;&#xA;  { Date: 1664751600000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.69},&#xD;&#xA;  { Date: 1672009200000, Close: 0.79},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.99},&#xD;&#xA;  { Date: 1682895600000, Close: 0.99},&#xD;&#xA;  { Date: 1695596400000, Close: 0.79},&#xD;&#xA;  { Date: 1698620400000, Close: 0.79},&#xD;&#xA;  { Date: 1701644400000, Close: 0.79},&#xD;&#xA;  { Date: 1702249200000, Close: 0.79},&#xD;&#xA;  { Date: 1702854000000, Close: 0.79},&#xD;&#xA;  { Date: 1704668400000, Close: 0.69},&#xD;&#xA;  { Date: 1705878000000, Close: 0.69},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.59},&#xD;&#xA;  { Date: 1727650800000, Close: 0.59},&#xD;&#xA;  { Date: 1728255600000, Close: 0.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pikachu</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/058---pikachu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/058---pikachu/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149342.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.09},&#xD;&#xA;  { Date: 1591398000000, Close: 2.99},&#xD;&#xA;  { Date: 1593385200000, Close: 3.09},&#xD;&#xA;  { Date: 1593817200000, Close: 3.09},&#xD;&#xA;  { Date: 1600383600000, Close: 3.49},&#xD;&#xA;  { Date: 1604876400000, Close: 8.49},&#xD;&#xA;  { Date: 1605481200000, Close: 8.49},&#xD;&#xA;  { Date: 1606086000000, Close: 7.99},&#xD;&#xA;  { Date: 1606690800000, Close: 7.99},&#xD;&#xA;  { Date: 1607295600000, Close: 7.99},&#xD;&#xA;  { Date: 1607900400000, Close: 8.99},&#xD;&#xA;  { Date: 1608505200000, Close: 5.99},&#xD;&#xA;  { Date: 1609110000000, Close: 5.99},&#xD;&#xA;  { Date: 1609714800000, Close: 7.99},&#xD;&#xA;  { Date: 1610233200000, Close: 6.99},&#xD;&#xA;  { Date: 1610924400000, Close: 6.99},&#xD;&#xA;  { Date: 1611529200000, Close: 6.99},&#xD;&#xA;  { Date: 1612134000000, Close: 6.49},&#xD;&#xA;  { Date: 1619391600000, Close: 8.49},&#xD;&#xA;  { Date: 1619996400000, Close: 8.49},&#xD;&#xA;  { Date: 1620601200000, Close: 8.49},&#xD;&#xA;  { Date: 1621206000000, Close: 7.99},&#xD;&#xA;  { Date: 1621810800000, Close: 7.99},&#xD;&#xA;  { Date: 1622415600000, Close: 7.99},&#xD;&#xA;  { Date: 1623020400000, Close: 7.99},&#xD;&#xA;  { Date: 1623625200000, Close: 7.99},&#xD;&#xA;  { Date: 1624230000000, Close: 7.99},&#xD;&#xA;  { Date: 1624834800000, Close: 6.99},&#xD;&#xA;  { Date: 1625439600000, Close: 6.99},&#xD;&#xA;  { Date: 1626044400000, Close: 6.49},&#xD;&#xA;  { Date: 1626649200000, Close: 6.49},&#xD;&#xA;  { Date: 1627254000000, Close: 5.99},&#xD;&#xA;  { Date: 1627858800000, Close: 5.99},&#xD;&#xA;  { Date: 1628463600000, Close: 5.59},&#xD;&#xA;  { Date: 1629068400000, Close: 5.49},&#xD;&#xA;  { Date: 1629673200000, Close: 5.49},&#xD;&#xA;  { Date: 1630278000000, Close: 5.49},&#xD;&#xA;  { Date: 1630882800000, Close: 5.47},&#xD;&#xA;  { Date: 1631487600000, Close: 5.47},&#xD;&#xA;  { Date: 1632092400000, Close: 4.99},&#xD;&#xA;  { Date: 1632697200000, Close: 4.49},&#xD;&#xA;  { Date: 1633302000000, Close: 4.49},&#xD;&#xA;  { Date: 1633906800000, Close: 4.49},&#xD;&#xA;  { Date: 1634511600000, Close: 4.49},&#xD;&#xA;  { Date: 1635116400000, Close: 3.99},&#xD;&#xA;  { Date: 1635721200000, Close: 3.49},&#xD;&#xA;  { Date: 1636326000000, Close: 3.49},&#xD;&#xA;  { Date: 1638140400000, Close: 6.99},&#xD;&#xA;  { Date: 1638745200000, Close: 6.99},&#xD;&#xA;  { Date: 1639350000000, Close: 6.99},&#xD;&#xA;  { Date: 1639954800000, Close: 6.99},&#xD;&#xA;  { Date: 1640559600000, Close: 6.99},&#xD;&#xA;  { Date: 1641164400000, Close: 6.39},&#xD;&#xA;  { Date: 1641769200000, Close: 6.39},&#xD;&#xA;  { Date: 1642978800000, Close: 5.99},&#xD;&#xA;  { Date: 1643583600000, Close: 5.99},&#xD;&#xA;  { Date: 1644188400000, Close: 5.99},&#xD;&#xA;  { Date: 1644793200000, Close: 5.39},&#xD;&#xA;  { Date: 1645398000000, Close: 4.99},&#xD;&#xA;  { Date: 1646002800000, Close: 4.99},&#xD;&#xA;  { Date: 1646607600000, Close: 4.39},&#xD;&#xA;  { Date: 1647212400000, Close: 4.39},&#xD;&#xA;  { Date: 1647817200000, Close: 3.99},&#xD;&#xA;  { Date: 1648422000000, Close: 3.99},&#xD;&#xA;  { Date: 1649026800000, Close: 2.89},&#xD;&#xA;  { Date: 1649631600000, Close: 2.79},&#xD;&#xA;  { Date: 1650236400000, Close: 2.59},&#xD;&#xA;  { Date: 1650841200000, Close: 2.59},&#xD;&#xA;  { Date: 1651446000000, Close: 2.59},&#xD;&#xA;  { Date: 1653865200000, Close: 3.49},&#xD;&#xA;  { Date: 1655074800000, Close: 2.49},&#xD;&#xA;  { Date: 1655679600000, Close: 2.49},&#xD;&#xA;  { Date: 1656284400000, Close: 2.39},&#xD;&#xA;  { Date: 1656889200000, Close: 2.29},&#xD;&#xA;  { Date: 1657494000000, Close: 1.89},&#xD;&#xA;  { Date: 1661122800000, Close: 2.99},&#xD;&#xA;  { Date: 1662332400000, Close: 3.99},&#xD;&#xA;  { Date: 1663542000000, Close: 3.99},&#xD;&#xA;  { Date: 1664146800000, Close: 3.99},&#xD;&#xA;  { Date: 1664751600000, Close: 3.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.49},&#xD;&#xA;  { Date: 1665961200000, Close: 2.29},&#xD;&#xA;  { Date: 1666566000000, Close: 2.29},&#xD;&#xA;  { Date: 1667170800000, Close: 2.29},&#xD;&#xA;  { Date: 1667775600000, Close: 2.29},&#xD;&#xA;  { Date: 1668380400000, Close: 2.29},&#xD;&#xA;  { Date: 1668985200000, Close: 2.29},&#xD;&#xA;  { Date: 1669590000000, Close: 1.79},&#xD;&#xA;  { Date: 1670799600000, Close: 1.99},&#xD;&#xA;  { Date: 1671404400000, Close: 1.99},&#xD;&#xA;  { Date: 1672614000000, Close: 2.09},&#xD;&#xA;  { Date: 1673823600000, Close: 1.79},&#xD;&#xA;  { Date: 1676847600000, Close: 1.99},&#xD;&#xA;  { Date: 1678057200000, Close: 2.29},&#xD;&#xA;  { Date: 1678662000000, Close: 2.29},&#xD;&#xA;  { Date: 1679266800000, Close: 1.99},&#xD;&#xA;  { Date: 1679871600000, Close: 1.99},&#xD;&#xA;  { Date: 1680476400000, Close: 2.49},&#xD;&#xA;  { Date: 1681686000000, Close: 3.49},&#xD;&#xA;  { Date: 1682290800000, Close: 3.99},&#xD;&#xA;  { Date: 1696201200000, Close: 2.69},&#xD;&#xA;  { Date: 1696806000000, Close: 2.69},&#xD;&#xA;  { Date: 1697410800000, Close: 2.69},&#xD;&#xA;  { Date: 1698015600000, Close: 2.49},&#xD;&#xA;  { Date: 1699225200000, Close: 2.49},&#xD;&#xA;  { Date: 1701644400000, Close: 2.79},&#xD;&#xA;  { Date: 1702249200000, Close: 2.79},&#xD;&#xA;  { Date: 1702854000000, Close: 2.79},&#xD;&#xA;  { Date: 1705878000000, Close: 2.99},&#xD;&#xA;  { Date: 1706482800000, Close: 2.99},&#xD;&#xA;  { Date: 1707087600000, Close: 2.99},&#xD;&#xA;  { Date: 1707692400000, Close: 2.69},&#xD;&#xA;  { Date: 1708297200000, Close: 2.69},&#xD;&#xA;  { Date: 1708902000000, Close: 2.39},&#xD;&#xA;  { Date: 1709506800000, Close: 2.19},&#xD;&#xA;  { Date: 1710111600000, Close: 1.89},&#xD;&#xA;  { Date: 1710716400000, Close: 1.89},&#xD;&#xA;  { Date: 1714950000000, Close: 2.49},&#xD;&#xA;  { Date: 1718578800000, Close: 3.49},&#xD;&#xA;  { Date: 1719183600000, Close: 3.49},&#xD;&#xA;  { Date: 1719788400000, Close: 2.99},&#xD;&#xA;  { Date: 1727046000000, Close: 3.69},&#xD;&#xA;  { Date: 1728255600000, Close: 3.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>PlusPower</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/084---pluspower/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/084---pluspower/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149348.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1593817200000, Close: 0.69},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1602457200000, Close: 0.69},&#xD;&#xA;  { Date: 1603062000000, Close: 0.79},&#xD;&#xA;  { Date: 1606086000000, Close: 1.29},&#xD;&#xA;  { Date: 1606690800000, Close: 1.49},&#xD;&#xA;  { Date: 1607900400000, Close: 2.49},&#xD;&#xA;  { Date: 1608505200000, Close: 2.39},&#xD;&#xA;  { Date: 1609110000000, Close: 2.39},&#xD;&#xA;  { Date: 1609714800000, Close: 1.99},&#xD;&#xA;  { Date: 1610233200000, Close: 1.99},&#xD;&#xA;  { Date: 1610924400000, Close: 1.79},&#xD;&#xA;  { Date: 1611529200000, Close: 1.79},&#xD;&#xA;  { Date: 1612134000000, Close: 1.49},&#xD;&#xA;  { Date: 1612738800000, Close: 1.49},&#xD;&#xA;  { Date: 1613343600000, Close: 1.59},&#xD;&#xA;  { Date: 1613948400000, Close: 1.49},&#xD;&#xA;  { Date: 1614553200000, Close: 1.49},&#xD;&#xA;  { Date: 1615158000000, Close: 1.29},&#xD;&#xA;  { Date: 1615762800000, Close: 1.29},&#xD;&#xA;  { Date: 1616367600000, Close: 1.29},&#xD;&#xA;  { Date: 1616972400000, Close: 1.29},&#xD;&#xA;  { Date: 1617577200000, Close: 1.29},&#xD;&#xA;  { Date: 1618182000000, Close: 1.29},&#xD;&#xA;  { Date: 1618786800000, Close: 1.09},&#xD;&#xA;  { Date: 1619391600000, Close: 1.09},&#xD;&#xA;  { Date: 1619996400000, Close: 1.09},&#xD;&#xA;  { Date: 1620601200000, Close: 1.09},&#xD;&#xA;  { Date: 1621206000000, Close: 1.09},&#xD;&#xA;  { Date: 1621810800000, Close: 1.09},&#xD;&#xA;  { Date: 1622415600000, Close: 1.09},&#xD;&#xA;  { Date: 1623020400000, Close: 1.09},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 1.09},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 0.99},&#xD;&#xA;  { Date: 1627254000000, Close: 0.99},&#xD;&#xA;  { Date: 1627858800000, Close: 0.99},&#xD;&#xA;  { Date: 1628463600000, Close: 0.99},&#xD;&#xA;  { Date: 1629068400000, Close: 0.99},&#xD;&#xA;  { Date: 1629673200000, Close: 0.99},&#xD;&#xA;  { Date: 1630278000000, Close: 0.99},&#xD;&#xA;  { Date: 1630882800000, Close: 0.99},&#xD;&#xA;  { Date: 1631487600000, Close: 0.99},&#xD;&#xA;  { Date: 1632092400000, Close: 0.99},&#xD;&#xA;  { Date: 1632697200000, Close: 0.99},&#xD;&#xA;  { Date: 1633302000000, Close: 0.99},&#xD;&#xA;  { Date: 1633906800000, Close: 0.89},&#xD;&#xA;  { Date: 1634511600000, Close: 0.89},&#xD;&#xA;  { Date: 1635116400000, Close: 0.89},&#xD;&#xA;  { Date: 1635721200000, Close: 0.89},&#xD;&#xA;  { Date: 1636326000000, Close: 0.89},&#xD;&#xA;  { Date: 1636930800000, Close: 0.89},&#xD;&#xA;  { Date: 1637535600000, Close: 0.89},&#xD;&#xA;  { Date: 1638140400000, Close: 0.89},&#xD;&#xA;  { Date: 1638745200000, Close: 0.89},&#xD;&#xA;  { Date: 1639350000000, Close: 0.89},&#xD;&#xA;  { Date: 1639954800000, Close: 0.89},&#xD;&#xA;  { Date: 1640559600000, Close: 0.79},&#xD;&#xA;  { Date: 1641164400000, Close: 0.79},&#xD;&#xA;  { Date: 1641769200000, Close: 0.79},&#xD;&#xA;  { Date: 1642374000000, Close: 0.79},&#xD;&#xA;  { Date: 1642978800000, Close: 0.79},&#xD;&#xA;  { Date: 1643583600000, Close: 0.79},&#xD;&#xA;  { Date: 1644188400000, Close: 0.79},&#xD;&#xA;  { Date: 1644793200000, Close: 0.79},&#xD;&#xA;  { Date: 1645398000000, Close: 0.79},&#xD;&#xA;  { Date: 1646002800000, Close: 0.79},&#xD;&#xA;  { Date: 1646607600000, Close: 0.79},&#xD;&#xA;  { Date: 1647212400000, Close: 0.69},&#xD;&#xA;  { Date: 1647817200000, Close: 0.69},&#xD;&#xA;  { Date: 1648422000000, Close: 0.69},&#xD;&#xA;  { Date: 1649026800000, Close: 0.69},&#xD;&#xA;  { Date: 1649631600000, Close: 0.69},&#xD;&#xA;  { Date: 1650236400000, Close: 0.69},&#xD;&#xA;  { Date: 1650841200000, Close: 0.69},&#xD;&#xA;  { Date: 1651446000000, Close: 0.69},&#xD;&#xA;  { Date: 1652050800000, Close: 0.69},&#xD;&#xA;  { Date: 1652655600000, Close: 0.59},&#xD;&#xA;  { Date: 1653260400000, Close: 0.59},&#xD;&#xA;  { Date: 1653865200000, Close: 0.59},&#xD;&#xA;  { Date: 1654470000000, Close: 0.59},&#xD;&#xA;  { Date: 1655074800000, Close: 0.59},&#xD;&#xA;  { Date: 1655679600000, Close: 0.49},&#xD;&#xA;  { Date: 1656284400000, Close: 0.49},&#xD;&#xA;  { Date: 1656889200000, Close: 0.49},&#xD;&#xA;  { Date: 1657494000000, Close: 0.49},&#xD;&#xA;  { Date: 1658098800000, Close: 0.49},&#xD;&#xA;  { Date: 1658703600000, Close: 0.49},&#xD;&#xA;  { Date: 1659308400000, Close: 0.49},&#xD;&#xA;  { Date: 1659913200000, Close: 0.49},&#xD;&#xA;  { Date: 1660518000000, Close: 0.49},&#xD;&#xA;  { Date: 1661122800000, Close: 0.49},&#xD;&#xA;  { Date: 1661727600000, Close: 0.49},&#xD;&#xA;  { Date: 1662332400000, Close: 0.49},&#xD;&#xA;  { Date: 1662937200000, Close: 0.49},&#xD;&#xA;  { Date: 1663542000000, Close: 0.49},&#xD;&#xA;  { Date: 1664146800000, Close: 0.49},&#xD;&#xA;  { Date: 1664751600000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.39},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1699225200000, Close: 0.49},&#xD;&#xA;  { Date: 1699830000000, Close: 0.49},&#xD;&#xA;  { Date: 1700434800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.49},&#xD;&#xA;  { Date: 1701644400000, Close: 0.49},&#xD;&#xA;  { Date: 1702249200000, Close: 0.39},&#xD;&#xA;  { Date: 1702854000000, Close: 0.39},&#xD;&#xA;  { Date: 1703458800000, Close: 0.39},&#xD;&#xA;  { Date: 1704063600000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.39},&#xD;&#xA;  { Date: 1705273200000, Close: 0.39},&#xD;&#xA;  { Date: 1705878000000, Close: 0.39},&#xD;&#xA;  { Date: 1706482800000, Close: 0.39},&#xD;&#xA;  { Date: 1707087600000, Close: 0.39},&#xD;&#xA;  { Date: 1707692400000, Close: 0.39},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.39},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1711321200000, Close: 0.49},&#xD;&#xA;  { Date: 1717369200000, Close: 0.49},&#xD;&#xA;  { Date: 1717974000000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727650800000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pokedex</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/087---pokedex/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/087---pokedex/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149350.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.39},&#xD;&#xA;  { Date: 1602457200000, Close: 0.39},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.89},&#xD;&#xA;  { Date: 1606690800000, Close: 0.89},&#xD;&#xA;  { Date: 1607295600000, Close: 0.89},&#xD;&#xA;  { Date: 1607900400000, Close: 0.89},&#xD;&#xA;  { Date: 1608505200000, Close: 0.89},&#xD;&#xA;  { Date: 1609110000000, Close: 0.89},&#xD;&#xA;  { Date: 1609714800000, Close: 0.59},&#xD;&#xA;  { Date: 1610233200000, Close: 0.59},&#xD;&#xA;  { Date: 1610924400000, Close: 0.59},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.69},&#xD;&#xA;  { Date: 1615762800000, Close: 0.69},&#xD;&#xA;  { Date: 1616367600000, Close: 0.69},&#xD;&#xA;  { Date: 1616972400000, Close: 0.69},&#xD;&#xA;  { Date: 1617577200000, Close: 0.69},&#xD;&#xA;  { Date: 1618182000000, Close: 0.69},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.49},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.39},&#xD;&#xA;  { Date: 1640559600000, Close: 0.39},&#xD;&#xA;  { Date: 1641164400000, Close: 0.39},&#xD;&#xA;  { Date: 1641769200000, Close: 0.39},&#xD;&#xA;  { Date: 1642374000000, Close: 0.39},&#xD;&#xA;  { Date: 1642978800000, Close: 0.39},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.39},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1675638000000, Close: 0.39},&#xD;&#xA;  { Date: 1676242800000, Close: 0.39},&#xD;&#xA;  { Date: 1676847600000, Close: 0.39},&#xD;&#xA;  { Date: 1677452400000, Close: 0.39},&#xD;&#xA;  { Date: 1678057200000, Close: 0.39},&#xD;&#xA;  { Date: 1678662000000, Close: 0.39},&#xD;&#xA;  { Date: 1679266800000, Close: 0.39},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.39},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.35},&#xD;&#xA;  { Date: 1682290800000, Close: 0.35},&#xD;&#xA;  { Date: 1682895600000, Close: 0.35},&#xD;&#xA;  { Date: 1683500400000, Close: 0.35},&#xD;&#xA;  { Date: 1684105200000, Close: 0.35},&#xD;&#xA;  { Date: 1684710000000, Close: 0.35},&#xD;&#xA;  { Date: 1685314800000, Close: 0.35},&#xD;&#xA;  { Date: 1685919600000, Close: 0.35},&#xD;&#xA;  { Date: 1686524400000, Close: 0.35},&#xD;&#xA;  { Date: 1687129200000, Close: 0.35},&#xD;&#xA;  { Date: 1687734000000, Close: 0.35},&#xD;&#xA;  { Date: 1688338800000, Close: 0.35},&#xD;&#xA;  { Date: 1688943600000, Close: 0.35},&#xD;&#xA;  { Date: 1689548400000, Close: 0.35},&#xD;&#xA;  { Date: 1690153200000, Close: 0.35},&#xD;&#xA;  { Date: 1690758000000, Close: 0.35},&#xD;&#xA;  { Date: 1691362800000, Close: 0.35},&#xD;&#xA;  { Date: 1691967600000, Close: 0.49},&#xD;&#xA;  { Date: 1698015600000, Close: 0.49},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1699225200000, Close: 0.49},&#xD;&#xA;  { Date: 1699830000000, Close: 0.49},&#xD;&#xA;  { Date: 1700434800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.39},&#xD;&#xA;  { Date: 1701644400000, Close: 0.39},&#xD;&#xA;  { Date: 1702249200000, Close: 0.39},&#xD;&#xA;  { Date: 1702854000000, Close: 0.35},&#xD;&#xA;  { Date: 1703458800000, Close: 0.35},&#xD;&#xA;  { Date: 1704063600000, Close: 0.35},&#xD;&#xA;  { Date: 1704668400000, Close: 0.35},&#xD;&#xA;  { Date: 1705273200000, Close: 0.35},&#xD;&#xA;  { Date: 1705878000000, Close: 0.35},&#xD;&#xA;  { Date: 1706482800000, Close: 0.35},&#xD;&#xA;  { Date: 1707087600000, Close: 0.35},&#xD;&#xA;  { Date: 1707692400000, Close: 0.35},&#xD;&#xA;  { Date: 1708297200000, Close: 0.35},&#xD;&#xA;  { Date: 1708902000000, Close: 0.35},&#xD;&#xA;  { Date: 1709506800000, Close: 0.35},&#xD;&#xA;  { Date: 1710111600000, Close: 0.35},&#xD;&#xA;  { Date: 1710716400000, Close: 0.35},&#xD;&#xA;  { Date: 1711321200000, Close: 0.35},&#xD;&#xA;  { Date: 1711926000000, Close: 0.39},&#xD;&#xA;  { Date: 1721602800000, Close: 0.39},&#xD;&#xA;  { Date: 1722207600000, Close: 0.39},&#xD;&#xA;  { Date: 1722812400000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.39},&#xD;&#xA;  { Date: 1727650800000, Close: 0.39},&#xD;&#xA;  { Date: 1728255600000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pokemon Breeder</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/076---pokemon-breeder/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/076---pokemon-breeder/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149351.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577660400000, Close: 1.89},&#xD;&#xA;  { Date: 1578351600000, Close: 1.89},&#xD;&#xA;  { Date: 1578524400000, Close: 2.49},&#xD;&#xA;  { Date: 1579561200000, Close: 2.99},&#xD;&#xA;  { Date: 1579820400000, Close: 3.49},&#xD;&#xA;  { Date: 1580511600000, Close: 3.49},&#xD;&#xA;  { Date: 1580857200000, Close: 3.99},&#xD;&#xA;  { Date: 1582239600000, Close: 4.89},&#xD;&#xA;  { Date: 1582758000000, Close: 5.09},&#xD;&#xA;  { Date: 1583967600000, Close: 4.99},&#xD;&#xA;  { Date: 1584486000000, Close: 4.49},&#xD;&#xA;  { Date: 1585004400000, Close: 3.99},&#xD;&#xA;  { Date: 1585695600000, Close: 3.49},&#xD;&#xA;  { Date: 1586646000000, Close: 3.89},&#xD;&#xA;  { Date: 1587164400000, Close: 3.99},&#xD;&#xA;  { Date: 1588287600000, Close: 4.49},&#xD;&#xA;  { Date: 1589497200000, Close: 4.49},&#xD;&#xA;  { Date: 1591225200000, Close: 4.99},&#xD;&#xA;  { Date: 1591311600000, Close: 5.49},&#xD;&#xA;  { Date: 1591743600000, Close: 5.49},&#xD;&#xA;  { Date: 1592521200000, Close: 5.99},&#xD;&#xA;  { Date: 1593471600000, Close: 6.99},&#xD;&#xA;  { Date: 1594767600000, Close: 6.99},&#xD;&#xA;  { Date: 1595890800000, Close: 6.49},&#xD;&#xA;  { Date: 1596495600000, Close: 6.59},&#xD;&#xA;  { Date: 1596754800000, Close: 6.59},&#xD;&#xA;  { Date: 1597100400000, Close: 6.99},&#xD;&#xA;  { Date: 1597186800000, Close: 6.59},&#xD;&#xA;  { Date: 1597705200000, Close: 6.49},&#xD;&#xA;  { Date: 1599174000000, Close: 6.59},&#xD;&#xA;  { Date: 1599778800000, Close: 5.99},&#xD;&#xA;  { Date: 1600297200000, Close: 6.49},&#xD;&#xA;  { Date: 1601334000000, Close: 6.29},&#xD;&#xA;  { Date: 1601938800000, Close: 6.99},&#xD;&#xA;  { Date: 1602457200000, Close: 6.59},&#xD;&#xA;  { Date: 1602889200000, Close: 6.49},&#xD;&#xA;  { Date: 1603407600000, Close: 6.99},&#xD;&#xA;  { Date: 1604962800000, Close: 13.99},&#xD;&#xA;  { Date: 1605049200000, Close: 14.99},&#xD;&#xA;  { Date: 1605740400000, Close: 15.99},&#xD;&#xA;  { Date: 1606863600000, Close: 16.99},&#xD;&#xA;  { Date: 1608073200000, Close: 15.99},&#xD;&#xA;  { Date: 1609023600000, Close: 14.49},&#xD;&#xA;  { Date: 1609196400000, Close: 12.99},&#xD;&#xA;  { Date: 1609282800000, Close: 11.99},&#xD;&#xA;  { Date: 1610665200000, Close: 10.99},&#xD;&#xA;  { Date: 1612911600000, Close: 10.99},&#xD;&#xA;  { Date: 1617750000000, Close: 9.99},&#xD;&#xA;  { Date: 1618614000000, Close: 8.99},&#xD;&#xA;  { Date: 1620255600000, Close: 8.39},&#xD;&#xA;  { Date: 1620342000000, Close: 7.49},&#xD;&#xA;  { Date: 1620860400000, Close: 6.99},&#xD;&#xA;  { Date: 1621378800000, Close: 7.49},&#xD;&#xA;  { Date: 1621551600000, Close: 6.99},&#xD;&#xA;  { Date: 1622242800000, Close: 6.49},&#xD;&#xA;  { Date: 1624489200000, Close: 5.99},&#xD;&#xA;  { Date: 1625266800000, Close: 6.39},&#xD;&#xA;  { Date: 1626303600000, Close: 6.45},&#xD;&#xA;  { Date: 1626476400000, Close: 5.99},&#xD;&#xA;  { Date: 1626994800000, Close: 5.49},&#xD;&#xA;  { Date: 1627945200000, Close: 4.89},&#xD;&#xA;  { Date: 1628031600000, Close: 4.49},&#xD;&#xA;  { Date: 1628895600000, Close: 3.99},&#xD;&#xA;  { Date: 1629414000000, Close: 3.99},&#xD;&#xA;  { Date: 1629500400000, Close: 5.49},&#xD;&#xA;  { Date: 1630191600000, Close: 5.19},&#xD;&#xA;  { Date: 1630710000000, Close: 5.49},&#xD;&#xA;  { Date: 1631401200000, Close: 5.19},&#xD;&#xA;  { Date: 1632438000000, Close: 4.59},&#xD;&#xA;  { Date: 1632956400000, Close: 4.99},&#xD;&#xA;  { Date: 1633734000000, Close: 4.99},&#xD;&#xA;  { Date: 1634857200000, Close: 6.99},&#xD;&#xA;  { Date: 1636930800000, Close: 6.39},&#xD;&#xA;  { Date: 1637362800000, Close: 5.99},&#xD;&#xA;  { Date: 1639090800000, Close: 5.99},&#xD;&#xA;  { Date: 1639177200000, Close: 5.39},&#xD;&#xA;  { Date: 1639436400000, Close: 5.39},&#xD;&#xA;  { Date: 1639782000000, Close: 5.99},&#xD;&#xA;  { Date: 1640300400000, Close: 5.99},&#xD;&#xA;  { Date: 1642633200000, Close: 5.99},&#xD;&#xA;  { Date: 1644620400000, Close: 6.39},&#xD;&#xA;  { Date: 1645743600000, Close: 7.99},&#xD;&#xA;  { Date: 1646348400000, Close: 7.99},&#xD;&#xA;  { Date: 1647212400000, Close: 7.39},&#xD;&#xA;  { Date: 1647903600000, Close: 6.29},&#xD;&#xA;  { Date: 1648249200000, Close: 5.59},&#xD;&#xA;  { Date: 1649804400000, Close: 6.99},&#xD;&#xA;  { Date: 1650668400000, Close: 6.79},&#xD;&#xA;  { Date: 1651014000000, Close: 6.59},&#xD;&#xA;  { Date: 1651446000000, Close: 6.39},&#xD;&#xA;  { Date: 1651791600000, Close: 6.09},&#xD;&#xA;  { Date: 1652223600000, Close: 5.69},&#xD;&#xA;  { Date: 1652828400000, Close: 5.59},&#xD;&#xA;  { Date: 1653174000000, Close: 5.29},&#xD;&#xA;  { Date: 1653606000000, Close: 4.89},&#xD;&#xA;  { Date: 1653951600000, Close: 4.59},&#xD;&#xA;  { Date: 1654297200000, Close: 4.49},&#xD;&#xA;  { Date: 1654729200000, Close: 4.39},&#xD;&#xA;  { Date: 1655420400000, Close: 4.99},&#xD;&#xA;  { Date: 1655852400000, Close: 4.49},&#xD;&#xA;  { Date: 1656198000000, Close: 4.69},&#xD;&#xA;  { Date: 1657926000000, Close: 4.49},&#xD;&#xA;  { Date: 1661900400000, Close: 5.99},&#xD;&#xA;  { Date: 1662505200000, Close: 5.99},&#xD;&#xA;  { Date: 1664492400000, Close: 5.99},&#xD;&#xA;  { Date: 1672441200000, Close: 6.49},&#xD;&#xA;  { Date: 1672527600000, Close: 6.29},&#xD;&#xA;  { Date: 1673910000000, Close: 6.29},&#xD;&#xA;  { Date: 1674255600000, Close: 6.59},&#xD;&#xA;  { Date: 1678748400000, Close: 6.39},&#xD;&#xA;  { Date: 1679526000000, Close: 6.39},&#xD;&#xA;  { Date: 1680994800000, Close: 6.39},&#xD;&#xA;  { Date: 1681426800000, Close: 6.39},&#xD;&#xA;  { Date: 1683154800000, Close: 6.39},&#xD;&#xA;  { Date: 1683327600000, Close: 6.49},&#xD;&#xA;  { Date: 1691535600000, Close: 5.09},&#xD;&#xA;  { Date: 1692226800000, Close: 4.99},&#xD;&#xA;  { Date: 1692658800000, Close: 4.99},&#xD;&#xA;  { Date: 1692918000000, Close: 4.99},&#xD;&#xA;  { Date: 1698966000000, Close: 5.99},&#xD;&#xA;  { Date: 1700089200000, Close: 5.99},&#xD;&#xA;  { Date: 1702767600000, Close: 5.39},&#xD;&#xA;  { Date: 1703286000000, Close: 4.99},&#xD;&#xA;  { Date: 1703804400000, Close: 4.49},&#xD;&#xA;  { Date: 1704063600000, Close: 4.49},&#xD;&#xA;  { Date: 1707865200000, Close: 4.49},&#xD;&#xA;  { Date: 1708556400000, Close: 4.09},&#xD;&#xA;  { Date: 1709334000000, Close: 4.49},&#xD;&#xA;  { Date: 1719874800000, Close: 5.99},&#xD;&#xA;  { Date: 1722898800000, Close: 5.99},&#xD;&#xA;  { Date: 1725922800000, Close: 5.99},&#xD;&#xA;  { Date: 1727737200000, Close: 5.99},&#xD;&#xA;  { Date: 1728428400000, Close: 5.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pokemon Center</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/085---pokemon-center/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/085---pokemon-center/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149353.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.89},&#xD;&#xA;  { Date: 1591398000000, Close: 1.29},&#xD;&#xA;  { Date: 1600383600000, Close: 2.09},&#xD;&#xA;  { Date: 1601247600000, Close: 2.09},&#xD;&#xA;  { Date: 1601852400000, Close: 1.99},&#xD;&#xA;  { Date: 1602457200000, Close: 1.99},&#xD;&#xA;  { Date: 1603062000000, Close: 2.09},&#xD;&#xA;  { Date: 1603666800000, Close: 2.09},&#xD;&#xA;  { Date: 1604876400000, Close: 3.49},&#xD;&#xA;  { Date: 1605481200000, Close: 3.49},&#xD;&#xA;  { Date: 1606086000000, Close: 3.69},&#xD;&#xA;  { Date: 1606690800000, Close: 3.49},&#xD;&#xA;  { Date: 1607295600000, Close: 3.49},&#xD;&#xA;  { Date: 1607900400000, Close: 3.49},&#xD;&#xA;  { Date: 1608505200000, Close: 3.49},&#xD;&#xA;  { Date: 1609110000000, Close: 3.49},&#xD;&#xA;  { Date: 1609714800000, Close: 2.49},&#xD;&#xA;  { Date: 1610233200000, Close: 2.89},&#xD;&#xA;  { Date: 1610924400000, Close: 2.49},&#xD;&#xA;  { Date: 1611529200000, Close: 2.49},&#xD;&#xA;  { Date: 1612134000000, Close: 2.49},&#xD;&#xA;  { Date: 1612738800000, Close: 2.49},&#xD;&#xA;  { Date: 1613343600000, Close: 2.49},&#xD;&#xA;  { Date: 1613948400000, Close: 2.49},&#xD;&#xA;  { Date: 1614553200000, Close: 2.49},&#xD;&#xA;  { Date: 1615158000000, Close: 2.49},&#xD;&#xA;  { Date: 1615762800000, Close: 2.49},&#xD;&#xA;  { Date: 1616367600000, Close: 2.49},&#xD;&#xA;  { Date: 1616972400000, Close: 2.49},&#xD;&#xA;  { Date: 1617577200000, Close: 2.49},&#xD;&#xA;  { Date: 1618182000000, Close: 1.99},&#xD;&#xA;  { Date: 1618786800000, Close: 1.79},&#xD;&#xA;  { Date: 1619391600000, Close: 1.69},&#xD;&#xA;  { Date: 1619996400000, Close: 1.69},&#xD;&#xA;  { Date: 1620601200000, Close: 1.69},&#xD;&#xA;  { Date: 1621206000000, Close: 1.49},&#xD;&#xA;  { Date: 1621810800000, Close: 1.49},&#xD;&#xA;  { Date: 1622415600000, Close: 1.29},&#xD;&#xA;  { Date: 1623020400000, Close: 1.29},&#xD;&#xA;  { Date: 1623625200000, Close: 1.29},&#xD;&#xA;  { Date: 1624230000000, Close: 1.09},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1628463600000, Close: 0.99},&#xD;&#xA;  { Date: 1629068400000, Close: 0.99},&#xD;&#xA;  { Date: 1629673200000, Close: 0.99},&#xD;&#xA;  { Date: 1630278000000, Close: 0.99},&#xD;&#xA;  { Date: 1630882800000, Close: 0.99},&#xD;&#xA;  { Date: 1631487600000, Close: 0.99},&#xD;&#xA;  { Date: 1632092400000, Close: 0.99},&#xD;&#xA;  { Date: 1632697200000, Close: 0.99},&#xD;&#xA;  { Date: 1633302000000, Close: 1.29},&#xD;&#xA;  { Date: 1633906800000, Close: 1.29},&#xD;&#xA;  { Date: 1634511600000, Close: 1.29},&#xD;&#xA;  { Date: 1635116400000, Close: 1.29},&#xD;&#xA;  { Date: 1635721200000, Close: 1.29},&#xD;&#xA;  { Date: 1636326000000, Close: 1.29},&#xD;&#xA;  { Date: 1636930800000, Close: 1.29},&#xD;&#xA;  { Date: 1637535600000, Close: 0.99},&#xD;&#xA;  { Date: 1638140400000, Close: 0.99},&#xD;&#xA;  { Date: 1638745200000, Close: 0.99},&#xD;&#xA;  { Date: 1642978800000, Close: 0.99},&#xD;&#xA;  { Date: 1643583600000, Close: 0.99},&#xD;&#xA;  { Date: 1644188400000, Close: 0.99},&#xD;&#xA;  { Date: 1644793200000, Close: 0.99},&#xD;&#xA;  { Date: 1649026800000, Close: 1.69},&#xD;&#xA;  { Date: 1649631600000, Close: 1.59},&#xD;&#xA;  { Date: 1650236400000, Close: 1.59},&#xD;&#xA;  { Date: 1650841200000, Close: 1.59},&#xD;&#xA;  { Date: 1651446000000, Close: 1.49},&#xD;&#xA;  { Date: 1652050800000, Close: 1.49},&#xD;&#xA;  { Date: 1652655600000, Close: 1.39},&#xD;&#xA;  { Date: 1653260400000, Close: 1.29},&#xD;&#xA;  { Date: 1653865200000, Close: 1.29},&#xD;&#xA;  { Date: 1654470000000, Close: 1.19},&#xD;&#xA;  { Date: 1655074800000, Close: 1.09},&#xD;&#xA;  { Date: 1655679600000, Close: 0.99},&#xD;&#xA;  { Date: 1656284400000, Close: 0.99},&#xD;&#xA;  { Date: 1664751600000, Close: 0.99},&#xD;&#xA;  { Date: 1665356400000, Close: 0.99},&#xD;&#xA;  { Date: 1668380400000, Close: 1.09},&#xD;&#xA;  { Date: 1668985200000, Close: 1.09},&#xD;&#xA;  { Date: 1669590000000, Close: 1.09},&#xD;&#xA;  { Date: 1670194800000, Close: 1.09},&#xD;&#xA;  { Date: 1670799600000, Close: 1.09},&#xD;&#xA;  { Date: 1671404400000, Close: 1.09},&#xD;&#xA;  { Date: 1672009200000, Close: 1.09},&#xD;&#xA;  { Date: 1672614000000, Close: 1.09},&#xD;&#xA;  { Date: 1673218800000, Close: 1.09},&#xD;&#xA;  { Date: 1673823600000, Close: 1.09},&#xD;&#xA;  { Date: 1674428400000, Close: 1.09},&#xD;&#xA;  { Date: 1675033200000, Close: 1.09},&#xD;&#xA;  { Date: 1675638000000, Close: 1.09},&#xD;&#xA;  { Date: 1680476400000, Close: 1.69},&#xD;&#xA;  { Date: 1681686000000, Close: 1.59},&#xD;&#xA;  { Date: 1682290800000, Close: 1.79},&#xD;&#xA;  { Date: 1685314800000, Close: 1.59},&#xD;&#xA;  { Date: 1699225200000, Close: 1.09},&#xD;&#xA;  { Date: 1699830000000, Close: 1.09},&#xD;&#xA;  { Date: 1700434800000, Close: 1.09},&#xD;&#xA;  { Date: 1701039600000, Close: 1.09},&#xD;&#xA;  { Date: 1701644400000, Close: 1.09},&#xD;&#xA;  { Date: 1702249200000, Close: 1.09},&#xD;&#xA;  { Date: 1714950000000, Close: 1.99},&#xD;&#xA;  { Date: 1716764400000, Close: 1.99},&#xD;&#xA;  { Date: 1717369200000, Close: 1.99},&#xD;&#xA;  { Date: 1717974000000, Close: 1.69},&#xD;&#xA;  { Date: 1718578800000, Close: 1.69},&#xD;&#xA;  { Date: 1719183600000, Close: 1.69},&#xD;&#xA;  { Date: 1719788400000, Close: 1.69},&#xD;&#xA;  { Date: 1720393200000, Close: 1.69},&#xD;&#xA;  { Date: 1720998000000, Close: 1.69},&#xD;&#xA;  { Date: 1727046000000, Close: 1.79},&#xD;&#xA;  { Date: 1727650800000, Close: 1.79},&#xD;&#xA;  { Date: 1728255600000, Close: 1.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pokemon Flute</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/086---pokemon-flute/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/086---pokemon-flute/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149354.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.89},&#xD;&#xA;  { Date: 1593385200000, Close: 2.99},&#xD;&#xA;  { Date: 1593817200000, Close: 2.99},&#xD;&#xA;  { Date: 1600383600000, Close: 2.99},&#xD;&#xA;  { Date: 1601247600000, Close: 2.99},&#xD;&#xA;  { Date: 1601852400000, Close: 2.99},&#xD;&#xA;  { Date: 1603062000000, Close: 3.09},&#xD;&#xA;  { Date: 1606086000000, Close: 4.49},&#xD;&#xA;  { Date: 1606690800000, Close: 4.99},&#xD;&#xA;  { Date: 1607295600000, Close: 4.99},&#xD;&#xA;  { Date: 1607900400000, Close: 4.99},&#xD;&#xA;  { Date: 1608505200000, Close: 4.99},&#xD;&#xA;  { Date: 1609110000000, Close: 4.99},&#xD;&#xA;  { Date: 1609714800000, Close: 3.49},&#xD;&#xA;  { Date: 1610233200000, Close: 3.49},&#xD;&#xA;  { Date: 1610924400000, Close: 2.99},&#xD;&#xA;  { Date: 1611529200000, Close: 2.99},&#xD;&#xA;  { Date: 1612134000000, Close: 2.99},&#xD;&#xA;  { Date: 1612738800000, Close: 2.99},&#xD;&#xA;  { Date: 1613343600000, Close: 2.99},&#xD;&#xA;  { Date: 1613948400000, Close: 2.99},&#xD;&#xA;  { Date: 1614553200000, Close: 2.99},&#xD;&#xA;  { Date: 1615158000000, Close: 2.99},&#xD;&#xA;  { Date: 1615762800000, Close: 2.99},&#xD;&#xA;  { Date: 1616367600000, Close: 2.99},&#xD;&#xA;  { Date: 1616972400000, Close: 2.99},&#xD;&#xA;  { Date: 1617577200000, Close: 2.79},&#xD;&#xA;  { Date: 1618182000000, Close: 2.79},&#xD;&#xA;  { Date: 1618786800000, Close: 2.49},&#xD;&#xA;  { Date: 1619391600000, Close: 2.49},&#xD;&#xA;  { Date: 1619996400000, Close: 2.49},&#xD;&#xA;  { Date: 1620601200000, Close: 2.49},&#xD;&#xA;  { Date: 1621206000000, Close: 2.29},&#xD;&#xA;  { Date: 1621810800000, Close: 2.45},&#xD;&#xA;  { Date: 1622415600000, Close: 2.39},&#xD;&#xA;  { Date: 1623020400000, Close: 2.49},&#xD;&#xA;  { Date: 1623625200000, Close: 2.49},&#xD;&#xA;  { Date: 1624230000000, Close: 2.49},&#xD;&#xA;  { Date: 1624834800000, Close: 2.29},&#xD;&#xA;  { Date: 1625439600000, Close: 1.99},&#xD;&#xA;  { Date: 1626044400000, Close: 1.79},&#xD;&#xA;  { Date: 1626649200000, Close: 1.49},&#xD;&#xA;  { Date: 1627254000000, Close: 1.29},&#xD;&#xA;  { Date: 1627858800000, Close: 1.29},&#xD;&#xA;  { Date: 1628463600000, Close: 1.29},&#xD;&#xA;  { Date: 1629068400000, Close: 1.09},&#xD;&#xA;  { Date: 1629673200000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 1.09},&#xD;&#xA;  { Date: 1631487600000, Close: 1.09},&#xD;&#xA;  { Date: 1632092400000, Close: 1.09},&#xD;&#xA;  { Date: 1632697200000, Close: 1.09},&#xD;&#xA;  { Date: 1633302000000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.09},&#xD;&#xA;  { Date: 1634511600000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 1.09},&#xD;&#xA;  { Date: 1635721200000, Close: 1.09},&#xD;&#xA;  { Date: 1636930800000, Close: 1.09},&#xD;&#xA;  { Date: 1637535600000, Close: 1.09},&#xD;&#xA;  { Date: 1638140400000, Close: 1.09},&#xD;&#xA;  { Date: 1638745200000, Close: 1.09},&#xD;&#xA;  { Date: 1639350000000, Close: 1.09},&#xD;&#xA;  { Date: 1639954800000, Close: 1.09},&#xD;&#xA;  { Date: 1640559600000, Close: 1.09},&#xD;&#xA;  { Date: 1641164400000, Close: 1.09},&#xD;&#xA;  { Date: 1641769200000, Close: 1.09},&#xD;&#xA;  { Date: 1644793200000, Close: 1.09},&#xD;&#xA;  { Date: 1650236400000, Close: 1.59},&#xD;&#xA;  { Date: 1650841200000, Close: 1.59},&#xD;&#xA;  { Date: 1651446000000, Close: 1.59},&#xD;&#xA;  { Date: 1652050800000, Close: 1.59},&#xD;&#xA;  { Date: 1652655600000, Close: 1.49},&#xD;&#xA;  { Date: 1653260400000, Close: 1.39},&#xD;&#xA;  { Date: 1653865200000, Close: 1.49},&#xD;&#xA;  { Date: 1654470000000, Close: 1.49},&#xD;&#xA;  { Date: 1655074800000, Close: 1.49},&#xD;&#xA;  { Date: 1655679600000, Close: 1.49},&#xD;&#xA;  { Date: 1656284400000, Close: 1.39},&#xD;&#xA;  { Date: 1656889200000, Close: 1.39},&#xD;&#xA;  { Date: 1657494000000, Close: 1.39},&#xD;&#xA;  { Date: 1664751600000, Close: 1.49},&#xD;&#xA;  { Date: 1665356400000, Close: 1.19},&#xD;&#xA;  { Date: 1665961200000, Close: 1.19},&#xD;&#xA;  { Date: 1666566000000, Close: 1.19},&#xD;&#xA;  { Date: 1667170800000, Close: 1.19},&#xD;&#xA;  { Date: 1667775600000, Close: 1.19},&#xD;&#xA;  { Date: 1668380400000, Close: 1.19},&#xD;&#xA;  { Date: 1672614000000, Close: 1.29},&#xD;&#xA;  { Date: 1682895600000, Close: 1.79},&#xD;&#xA;  { Date: 1696201200000, Close: 1.99},&#xD;&#xA;  { Date: 1701644400000, Close: 1.99},&#xD;&#xA;  { Date: 1702249200000, Close: 1.99},&#xD;&#xA;  { Date: 1702854000000, Close: 1.99},&#xD;&#xA;  { Date: 1703458800000, Close: 1.99},&#xD;&#xA;  { Date: 1704063600000, Close: 1.99},&#xD;&#xA;  { Date: 1708297200000, Close: 1.99},&#xD;&#xA;  { Date: 1708902000000, Close: 1.99},&#xD;&#xA;  { Date: 1709506800000, Close: 1.99},&#xD;&#xA;  { Date: 1710111600000, Close: 1.99},&#xD;&#xA;  { Date: 1710716400000, Close: 1.79},&#xD;&#xA;  { Date: 1711321200000, Close: 1.49},&#xD;&#xA;  { Date: 1711926000000, Close: 1.49},&#xD;&#xA;  { Date: 1712530800000, Close: 1.79},&#xD;&#xA;  { Date: 1714345200000, Close: 1.99},&#xD;&#xA;  { Date: 1714950000000, Close: 1.99},&#xD;&#xA;  { Date: 1716764400000, Close: 2.29},&#xD;&#xA;  { Date: 1724626800000, Close: 1.99},&#xD;&#xA;  { Date: 1726441200000, Close: 1.69},&#xD;&#xA;  { Date: 1727046000000, Close: 1.59},&#xD;&#xA;  { Date: 1727650800000, Close: 1.59},&#xD;&#xA;  { Date: 1728255600000, Close: 1.59},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Pokemon Trader</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/077---pokemon-trader/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/077---pokemon-trader/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149356.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 1.49},&#xD;&#xA;  { Date: 1578524400000, Close: 1.49},&#xD;&#xA;  { Date: 1581462000000, Close: 1.59},&#xD;&#xA;  { Date: 1582066800000, Close: 1.49},&#xD;&#xA;  { Date: 1582671600000, Close: 1.59},&#xD;&#xA;  { Date: 1583967600000, Close: 1.09},&#xD;&#xA;  { Date: 1588287600000, Close: 1.19},&#xD;&#xA;  { Date: 1589583600000, Close: 1.99},&#xD;&#xA;  { Date: 1589929200000, Close: 1.99},&#xD;&#xA;  { Date: 1591225200000, Close: 1.99},&#xD;&#xA;  { Date: 1591398000000, Close: 2.49},&#xD;&#xA;  { Date: 1591743600000, Close: 2.49},&#xD;&#xA;  { Date: 1592434800000, Close: 2.99},&#xD;&#xA;  { Date: 1592866800000, Close: 3.09},&#xD;&#xA;  { Date: 1595286000000, Close: 2.49},&#xD;&#xA;  { Date: 1596063600000, Close: 2.99},&#xD;&#xA;  { Date: 1596754800000, Close: 2.99},&#xD;&#xA;  { Date: 1597100400000, Close: 3.49},&#xD;&#xA;  { Date: 1598310000000, Close: 3.99},&#xD;&#xA;  { Date: 1599087600000, Close: 4.49},&#xD;&#xA;  { Date: 1599606000000, Close: 4.99},&#xD;&#xA;  { Date: 1602802800000, Close: 5.09},&#xD;&#xA;  { Date: 1603321200000, Close: 5.49},&#xD;&#xA;  { Date: 1605222000000, Close: 6.99},&#xD;&#xA;  { Date: 1605567600000, Close: 6.99},&#xD;&#xA;  { Date: 1605654000000, Close: 7.99},&#xD;&#xA;  { Date: 1608591600000, Close: 6.99},&#xD;&#xA;  { Date: 1609282800000, Close: 4.49},&#xD;&#xA;  { Date: 1610578800000, Close: 4.29},&#xD;&#xA;  { Date: 1610665200000, Close: 3.99},&#xD;&#xA;  { Date: 1613602800000, Close: 3.49},&#xD;&#xA;  { Date: 1614121200000, Close: 3.49},&#xD;&#xA;  { Date: 1614207600000, Close: 3.89},&#xD;&#xA;  { Date: 1614639600000, Close: 3.89},&#xD;&#xA;  { Date: 1614812400000, Close: 3.89},&#xD;&#xA;  { Date: 1614985200000, Close: 3.99},&#xD;&#xA;  { Date: 1615244400000, Close: 3.99},&#xD;&#xA;  { Date: 1620169200000, Close: 3.39},&#xD;&#xA;  { Date: 1620860400000, Close: 3.49},&#xD;&#xA;  { Date: 1621378800000, Close: 3.89},&#xD;&#xA;  { Date: 1622156400000, Close: 3.49},&#xD;&#xA;  { Date: 1624489200000, Close: 2.99},&#xD;&#xA;  { Date: 1625266800000, Close: 3.39},&#xD;&#xA;  { Date: 1627945200000, Close: 2.49},&#xD;&#xA;  { Date: 1630623600000, Close: 2.99},&#xD;&#xA;  { Date: 1631660400000, Close: 2.39},&#xD;&#xA;  { Date: 1633388400000, Close: 2.99},&#xD;&#xA;  { Date: 1634166000000, Close: 2.99},&#xD;&#xA;  { Date: 1634943600000, Close: 3.49},&#xD;&#xA;  { Date: 1636844400000, Close: 3.49},&#xD;&#xA;  { Date: 1637362800000, Close: 3.99},&#xD;&#xA;  { Date: 1638572400000, Close: 4.19},&#xD;&#xA;  { Date: 1639782000000, Close: 4.49},&#xD;&#xA;  { Date: 1642633200000, Close: 4.49},&#xD;&#xA;  { Date: 1642806000000, Close: 4.79},&#xD;&#xA;  { Date: 1643410800000, Close: 4.49},&#xD;&#xA;  { Date: 1645570800000, Close: 4.99},&#xD;&#xA;  { Date: 1647558000000, Close: 4.79},&#xD;&#xA;  { Date: 1647903600000, Close: 5.49},&#xD;&#xA;  { Date: 1650582000000, Close: 4.89},&#xD;&#xA;  { Date: 1651532400000, Close: 4.29},&#xD;&#xA;  { Date: 1654038000000, Close: 3.69},&#xD;&#xA;  { Date: 1655852400000, Close: 3.79},&#xD;&#xA;  { Date: 1656025200000, Close: 3.99},&#xD;&#xA;  { Date: 1656457200000, Close: 3.99},&#xD;&#xA;  { Date: 1656716400000, Close: 3.79},&#xD;&#xA;  { Date: 1661814000000, Close: 4.99},&#xD;&#xA;  { Date: 1664406000000, Close: 4.99},&#xD;&#xA;  { Date: 1664924400000, Close: 4.99},&#xD;&#xA;  { Date: 1668121200000, Close: 4.99},&#xD;&#xA;  { Date: 1670367600000, Close: 5.39},&#xD;&#xA;  { Date: 1671836400000, Close: 4.99},&#xD;&#xA;  { Date: 1672441200000, Close: 4.99},&#xD;&#xA;  { Date: 1674774000000, Close: 5.39},&#xD;&#xA;  { Date: 1675983600000, Close: 5.39},&#xD;&#xA;  { Date: 1676415600000, Close: 5.39},&#xD;&#xA;  { Date: 1677625200000, Close: 5.99},&#xD;&#xA;  { Date: 1677884400000, Close: 5.99},&#xD;&#xA;  { Date: 1678748400000, Close: 5.99},&#xD;&#xA;  { Date: 1679094000000, Close: 5.39},&#xD;&#xA;  { Date: 1680994800000, Close: 5.39},&#xD;&#xA;  { Date: 1681340400000, Close: 4.79},&#xD;&#xA;  { Date: 1682722800000, Close: 4.79},&#xD;&#xA;  { Date: 1685142000000, Close: 4.99},&#xD;&#xA;  { Date: 1686956400000, Close: 4.99},&#xD;&#xA;  { Date: 1691535600000, Close: 6.49},&#xD;&#xA;  { Date: 1692140400000, Close: 5.79},&#xD;&#xA;  { Date: 1693522800000, Close: 5.49},&#xD;&#xA;  { Date: 1694473200000, Close: 4.99},&#xD;&#xA;  { Date: 1698966000000, Close: 4.99},&#xD;&#xA;  { Date: 1701558000000, Close: 4.99},&#xD;&#xA;  { Date: 1702681200000, Close: 4.39},&#xD;&#xA;  { Date: 1703718000000, Close: 3.79},&#xD;&#xA;  { Date: 1707519600000, Close: 3.99},&#xD;&#xA;  { Date: 1709334000000, Close: 3.99},&#xD;&#xA;  { Date: 1715986800000, Close: 3.99},&#xD;&#xA;  { Date: 1718751600000, Close: 4.09},&#xD;&#xA;  { Date: 1719874800000, Close: 3.99},&#xD;&#xA;  { Date: 1724108400000, Close: 4.39},&#xD;&#xA;  { Date: 1725922800000, Close: 4.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Poliwag</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/059---poliwag/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/059---poliwag/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149358.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.39},&#xD;&#xA;  { Date: 1602457200000, Close: 0.39},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1604271600000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.79},&#xD;&#xA;  { Date: 1606690800000, Close: 0.79},&#xD;&#xA;  { Date: 1608505200000, Close: 0.89},&#xD;&#xA;  { Date: 1609110000000, Close: 0.89},&#xD;&#xA;  { Date: 1609714800000, Close: 0.79},&#xD;&#xA;  { Date: 1610233200000, Close: 0.79},&#xD;&#xA;  { Date: 1610924400000, Close: 0.79},&#xD;&#xA;  { Date: 1611529200000, Close: 0.79},&#xD;&#xA;  { Date: 1612134000000, Close: 0.69},&#xD;&#xA;  { Date: 1612738800000, Close: 0.69},&#xD;&#xA;  { Date: 1613343600000, Close: 0.69},&#xD;&#xA;  { Date: 1613948400000, Close: 0.69},&#xD;&#xA;  { Date: 1614553200000, Close: 0.69},&#xD;&#xA;  { Date: 1615158000000, Close: 0.69},&#xD;&#xA;  { Date: 1615762800000, Close: 0.69},&#xD;&#xA;  { Date: 1616367600000, Close: 0.69},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.59},&#xD;&#xA;  { Date: 1620601200000, Close: 0.59},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.49},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.39},&#xD;&#xA;  { Date: 1639954800000, Close: 0.39},&#xD;&#xA;  { Date: 1640559600000, Close: 0.39},&#xD;&#xA;  { Date: 1641164400000, Close: 0.39},&#xD;&#xA;  { Date: 1641769200000, Close: 0.39},&#xD;&#xA;  { Date: 1642374000000, Close: 0.39},&#xD;&#xA;  { Date: 1642978800000, Close: 0.39},&#xD;&#xA;  { Date: 1643583600000, Close: 0.39},&#xD;&#xA;  { Date: 1644188400000, Close: 0.39},&#xD;&#xA;  { Date: 1644793200000, Close: 0.39},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.49},&#xD;&#xA;  { Date: 1649631600000, Close: 0.49},&#xD;&#xA;  { Date: 1650236400000, Close: 0.49},&#xD;&#xA;  { Date: 1650841200000, Close: 0.49},&#xD;&#xA;  { Date: 1651446000000, Close: 0.49},&#xD;&#xA;  { Date: 1652050800000, Close: 0.49},&#xD;&#xA;  { Date: 1652655600000, Close: 0.49},&#xD;&#xA;  { Date: 1653260400000, Close: 0.49},&#xD;&#xA;  { Date: 1653865200000, Close: 0.49},&#xD;&#xA;  { Date: 1663542000000, Close: 0.49},&#xD;&#xA;  { Date: 1664146800000, Close: 0.49},&#xD;&#xA;  { Date: 1664751600000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1688338800000, Close: 0.39},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.59},&#xD;&#xA;  { Date: 1707692400000, Close: 0.39},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;  { Date: 1727650800000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Poliwhirl</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/038---poliwhirl/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/038---poliwhirl/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149359.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.69},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1593817200000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 0.69},&#xD;&#xA;  { Date: 1601247600000, Close: 0.69},&#xD;&#xA;  { Date: 1601852400000, Close: 0.69},&#xD;&#xA;  { Date: 1602457200000, Close: 0.69},&#xD;&#xA;  { Date: 1603062000000, Close: 0.69},&#xD;&#xA;  { Date: 1606086000000, Close: 0.89},&#xD;&#xA;  { Date: 1607295600000, Close: 2.49},&#xD;&#xA;  { Date: 1607900400000, Close: 2.39},&#xD;&#xA;  { Date: 1608505200000, Close: 2.29},&#xD;&#xA;  { Date: 1609110000000, Close: 2.29},&#xD;&#xA;  { Date: 1609714800000, Close: 1.99},&#xD;&#xA;  { Date: 1610233200000, Close: 1.99},&#xD;&#xA;  { Date: 1610924400000, Close: 1.89},&#xD;&#xA;  { Date: 1611529200000, Close: 1.89},&#xD;&#xA;  { Date: 1612134000000, Close: 1.79},&#xD;&#xA;  { Date: 1612738800000, Close: 1.79},&#xD;&#xA;  { Date: 1613343600000, Close: 1.79},&#xD;&#xA;  { Date: 1613948400000, Close: 1.59},&#xD;&#xA;  { Date: 1614553200000, Close: 1.65},&#xD;&#xA;  { Date: 1615158000000, Close: 1.65},&#xD;&#xA;  { Date: 1615762800000, Close: 1.65},&#xD;&#xA;  { Date: 1616367600000, Close: 1.65},&#xD;&#xA;  { Date: 1616972400000, Close: 1.65},&#xD;&#xA;  { Date: 1617577200000, Close: 1.65},&#xD;&#xA;  { Date: 1618182000000, Close: 1.49},&#xD;&#xA;  { Date: 1618786800000, Close: 1.29},&#xD;&#xA;  { Date: 1619391600000, Close: 1.29},&#xD;&#xA;  { Date: 1619996400000, Close: 1.09},&#xD;&#xA;  { Date: 1620601200000, Close: 1.09},&#xD;&#xA;  { Date: 1621206000000, Close: 1.09},&#xD;&#xA;  { Date: 1621810800000, Close: 1.09},&#xD;&#xA;  { Date: 1622415600000, Close: 1.09},&#xD;&#xA;  { Date: 1623020400000, Close: 1.09},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 1.09},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1628463600000, Close: 1.09},&#xD;&#xA;  { Date: 1629068400000, Close: 1.09},&#xD;&#xA;  { Date: 1629673200000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 1.09},&#xD;&#xA;  { Date: 1631487600000, Close: 1.09},&#xD;&#xA;  { Date: 1632092400000, Close: 1.09},&#xD;&#xA;  { Date: 1632697200000, Close: 1.09},&#xD;&#xA;  { Date: 1633302000000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.09},&#xD;&#xA;  { Date: 1634511600000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 1.09},&#xD;&#xA;  { Date: 1635721200000, Close: 1.09},&#xD;&#xA;  { Date: 1636326000000, Close: 1.09},&#xD;&#xA;  { Date: 1637535600000, Close: 1.19},&#xD;&#xA;  { Date: 1639350000000, Close: 0.89},&#xD;&#xA;  { Date: 1639954800000, Close: 0.89},&#xD;&#xA;  { Date: 1642374000000, Close: 0.99},&#xD;&#xA;  { Date: 1642978800000, Close: 0.99},&#xD;&#xA;  { Date: 1643583600000, Close: 0.99},&#xD;&#xA;  { Date: 1644188400000, Close: 0.99},&#xD;&#xA;  { Date: 1644793200000, Close: 0.99},&#xD;&#xA;  { Date: 1645398000000, Close: 1.29},&#xD;&#xA;  { Date: 1646002800000, Close: 1.29},&#xD;&#xA;  { Date: 1646607600000, Close: 1.19},&#xD;&#xA;  { Date: 1647212400000, Close: 1.19},&#xD;&#xA;  { Date: 1647817200000, Close: 1.49},&#xD;&#xA;  { Date: 1648422000000, Close: 1.29},&#xD;&#xA;  { Date: 1649026800000, Close: 1.19},&#xD;&#xA;  { Date: 1649631600000, Close: 1.09},&#xD;&#xA;  { Date: 1650236400000, Close: 1.09},&#xD;&#xA;  { Date: 1650841200000, Close: 1.09},&#xD;&#xA;  { Date: 1651446000000, Close: 1.09},&#xD;&#xA;  { Date: 1652050800000, Close: 1.09},&#xD;&#xA;  { Date: 1652655600000, Close: 0.99},&#xD;&#xA;  { Date: 1653260400000, Close: 0.99},&#xD;&#xA;  { Date: 1653865200000, Close: 0.99},&#xD;&#xA;  { Date: 1654470000000, Close: 0.99},&#xD;&#xA;  { Date: 1655074800000, Close: 1.09},&#xD;&#xA;  { Date: 1655679600000, Close: 1.09},&#xD;&#xA;  { Date: 1656284400000, Close: 1.09},&#xD;&#xA;  { Date: 1656889200000, Close: 1.09},&#xD;&#xA;  { Date: 1657494000000, Close: 1.09},&#xD;&#xA;  { Date: 1663542000000, Close: 1.09},&#xD;&#xA;  { Date: 1664146800000, Close: 1.09},&#xD;&#xA;  { Date: 1664751600000, Close: 1.09},&#xD;&#xA;  { Date: 1665356400000, Close: 1.09},&#xD;&#xA;  { Date: 1665961200000, Close: 0.99},&#xD;&#xA;  { Date: 1666566000000, Close: 0.99},&#xD;&#xA;  { Date: 1670194800000, Close: 1.09},&#xD;&#xA;  { Date: 1672614000000, Close: 0.89},&#xD;&#xA;  { Date: 1673823600000, Close: 0.89},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.59},&#xD;&#xA;  { Date: 1679871600000, Close: 0.59},&#xD;&#xA;  { Date: 1685919600000, Close: 0.69},&#xD;&#xA;  { Date: 1688338800000, Close: 0.79},&#xD;&#xA;  { Date: 1697410800000, Close: 0.99},&#xD;&#xA;  { Date: 1702854000000, Close: 1.09},&#xD;&#xA;  { Date: 1703458800000, Close: 1.09},&#xD;&#xA;  { Date: 1704063600000, Close: 1.09},&#xD;&#xA;  { Date: 1704668400000, Close: 0.99},&#xD;&#xA;  { Date: 1706482800000, Close: 0.89},&#xD;&#xA;  { Date: 1707692400000, Close: 0.79},&#xD;&#xA;  { Date: 1708297200000, Close: 0.69},&#xD;&#xA;  { Date: 1708902000000, Close: 0.69},&#xD;&#xA;  { Date: 1709506800000, Close: 0.69},&#xD;&#xA;  { Date: 1710111600000, Close: 0.99},&#xD;&#xA;  { Date: 1710716400000, Close: 0.99},&#xD;&#xA;  { Date: 1724022000000, Close: 0.99},&#xD;&#xA;  { Date: 1726441200000, Close: 1.09},&#xD;&#xA;  { Date: 1727046000000, Close: 0.99},&#xD;&#xA;  { Date: 1727650800000, Close: 0.99},&#xD;&#xA;  { Date: 1728255600000, Close: 1.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Poliwrath</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/013---poliwrath/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/013---poliwrath/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149360.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575586800000, Close: 5.99},&#xD;&#xA;  { Date: 1577228400000, Close: 5.99},&#xD;&#xA;  { Date: 1578524400000, Close: 5.99},&#xD;&#xA;  { Date: 1579302000000, Close: 6.99},&#xD;&#xA;  { Date: 1580252400000, Close: 6.99},&#xD;&#xA;  { Date: 1580943600000, Close: 7.99},&#xD;&#xA;  { Date: 1582239600000, Close: 9.99},&#xD;&#xA;  { Date: 1583449200000, Close: 9.99},&#xD;&#xA;  { Date: 1583881200000, Close: 10.49},&#xD;&#xA;  { Date: 1584745200000, Close: 10.99},&#xD;&#xA;  { Date: 1585350000000, Close: 10.99},&#xD;&#xA;  { Date: 1585782000000, Close: 11.99},&#xD;&#xA;  { Date: 1588892400000, Close: 13.99},&#xD;&#xA;  { Date: 1589065200000, Close: 13.99},&#xD;&#xA;  { Date: 1590620400000, Close: 14.99},&#xD;&#xA;  { Date: 1590706800000, Close: 15.99},&#xD;&#xA;  { Date: 1591311600000, Close: 16.49},&#xD;&#xA;  { Date: 1592866800000, Close: 17.99},&#xD;&#xA;  { Date: 1594249200000, Close: 18.99},&#xD;&#xA;  { Date: 1595286000000, Close: 17.99},&#xD;&#xA;  { Date: 1596236400000, Close: 18.99},&#xD;&#xA;  { Date: 1596754800000, Close: 18.99},&#xD;&#xA;  { Date: 1597273200000, Close: 17.99},&#xD;&#xA;  { Date: 1599001200000, Close: 18.99},&#xD;&#xA;  { Date: 1600815600000, Close: 29.99},&#xD;&#xA;  { Date: 1601420400000, Close: 24.99},&#xD;&#xA;  { Date: 1601679600000, Close: 19.99},&#xD;&#xA;  { Date: 1602543600000, Close: 19.99},&#xD;&#xA;  { Date: 1603926000000, Close: 20.99},&#xD;&#xA;  { Date: 1605135600000, Close: 34.99},&#xD;&#xA;  { Date: 1605913200000, Close: 34.99},&#xD;&#xA;  { Date: 1609282800000, Close: 29.99},&#xD;&#xA;  { Date: 1610665200000, Close: 27.99},&#xD;&#xA;  { Date: 1612393200000, Close: 27.99},&#xD;&#xA;  { Date: 1613775600000, Close: 27.99},&#xD;&#xA;  { Date: 1614380400000, Close: 27.99},&#xD;&#xA;  { Date: 1617750000000, Close: 26.99},&#xD;&#xA;  { Date: 1618354800000, Close: 27.99},&#xD;&#xA;  { Date: 1618614000000, Close: 24.99},&#xD;&#xA;  { Date: 1619478000000, Close: 24.99},&#xD;&#xA;  { Date: 1622588400000, Close: 24.99},&#xD;&#xA;  { Date: 1625785200000, Close: 21.99},&#xD;&#xA;  { Date: 1627513200000, Close: 19.99},&#xD;&#xA;  { Date: 1628895600000, Close: 20.99},&#xD;&#xA;  { Date: 1629500400000, Close: 19.99},&#xD;&#xA;  { Date: 1631055600000, Close: 19.99},&#xD;&#xA;  { Date: 1631228400000, Close: 19.99},&#xD;&#xA;  { Date: 1631314800000, Close: 21.99},&#xD;&#xA;  { Date: 1631574000000, Close: 21.99},&#xD;&#xA;  { Date: 1632870000000, Close: 20.49},&#xD;&#xA;  { Date: 1634943600000, Close: 20.99},&#xD;&#xA;  { Date: 1638831600000, Close: 21.99},&#xD;&#xA;  { Date: 1639090800000, Close: 21.99},&#xD;&#xA;  { Date: 1640905200000, Close: 23.49},&#xD;&#xA;  { Date: 1641596400000, Close: 21.99},&#xD;&#xA;  { Date: 1642633200000, Close: 21.99},&#xD;&#xA;  { Date: 1646089200000, Close: 21.99},&#xD;&#xA;  { Date: 1646175600000, Close: 18.79},&#xD;&#xA;  { Date: 1647903600000, Close: 21.99},&#xD;&#xA;  { Date: 1648940400000, Close: 19.49},&#xD;&#xA;  { Date: 1649977200000, Close: 20.59},&#xD;&#xA;  { Date: 1652396400000, Close: 22.99},&#xD;&#xA;  { Date: 1653001200000, Close: 24.99},&#xD;&#xA;  { Date: 1653346800000, Close: 24.99},&#xD;&#xA;  { Date: 1654210800000, Close: 24.99},&#xD;&#xA;  { Date: 1657839600000, Close: 22.99},&#xD;&#xA;  { Date: 1658271600000, Close: 19.99},&#xD;&#xA;  { Date: 1659740400000, Close: 21.99},&#xD;&#xA;  { Date: 1661468400000, Close: 22.99},&#xD;&#xA;  { Date: 1661554800000, Close: 29.99},&#xD;&#xA;  { Date: 1661900400000, Close: 29.99},&#xD;&#xA;  { Date: 1670367600000, Close: 27.99},&#xD;&#xA;  { Date: 1672441200000, Close: 26.49},&#xD;&#xA;  { Date: 1673478000000, Close: 22.59},&#xD;&#xA;  { Date: 1673910000000, Close: 22.09},&#xD;&#xA;  { Date: 1674946800000, Close: 19.99},&#xD;&#xA;  { Date: 1675378800000, Close: 18.69},&#xD;&#xA;  { Date: 1677711600000, Close: 18.79},&#xD;&#xA;  { Date: 1679094000000, Close: 19.99},&#xD;&#xA;  { Date: 1685574000000, Close: 24.29},&#xD;&#xA;  { Date: 1686956400000, Close: 24.99},&#xD;&#xA;  { Date: 1691535600000, Close: 29.99},&#xD;&#xA;  { Date: 1695942000000, Close: 29.99},&#xD;&#xA;  { Date: 1700694000000, Close: 20.99},&#xD;&#xA;  { Date: 1708642800000, Close: 29.99},&#xD;&#xA;  { Date: 1711407600000, Close: 29.99},&#xD;&#xA;  { Date: 1713222000000, Close: 29.99},&#xD;&#xA;  { Date: 1715209200000, Close: 29.99},&#xD;&#xA;  { Date: 1717542000000, Close: 29.99},&#xD;&#xA;  { Date: 1717714800000, Close: 29.99},&#xD;&#xA;  { Date: 1720825200000, Close: 29.99},&#xD;&#xA;  { Date: 1722898800000, Close: 29.99},&#xD;&#xA;  { Date: 1725663600000, Close: 29.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Ponyta</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/060---ponyta/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/060---ponyta/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149361.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1610924400000, Close: 0.59},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.59},&#xD;&#xA;  { Date: 1620601200000, Close: 0.59},&#xD;&#xA;  { Date: 1621206000000, Close: 0.59},&#xD;&#xA;  { Date: 1621810800000, Close: 0.59},&#xD;&#xA;  { Date: 1622415600000, Close: 0.59},&#xD;&#xA;  { Date: 1623020400000, Close: 0.59},&#xD;&#xA;  { Date: 1623625200000, Close: 0.59},&#xD;&#xA;  { Date: 1624230000000, Close: 0.59},&#xD;&#xA;  { Date: 1624834800000, Close: 0.59},&#xD;&#xA;  { Date: 1625439600000, Close: 0.49},&#xD;&#xA;  { Date: 1626044400000, Close: 0.49},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.39},&#xD;&#xA;  { Date: 1635116400000, Close: 0.39},&#xD;&#xA;  { Date: 1635721200000, Close: 0.39},&#xD;&#xA;  { Date: 1636326000000, Close: 0.39},&#xD;&#xA;  { Date: 1639350000000, Close: 0.39},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1644188400000, Close: 0.49},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1645398000000, Close: 0.49},&#xD;&#xA;  { Date: 1646002800000, Close: 0.59},&#xD;&#xA;  { Date: 1646607600000, Close: 0.59},&#xD;&#xA;  { Date: 1647212400000, Close: 0.59},&#xD;&#xA;  { Date: 1647817200000, Close: 0.59},&#xD;&#xA;  { Date: 1648422000000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.49},&#xD;&#xA;  { Date: 1649631600000, Close: 0.49},&#xD;&#xA;  { Date: 1650236400000, Close: 0.49},&#xD;&#xA;  { Date: 1650841200000, Close: 0.49},&#xD;&#xA;  { Date: 1651446000000, Close: 0.49},&#xD;&#xA;  { Date: 1652050800000, Close: 0.49},&#xD;&#xA;  { Date: 1652655600000, Close: 0.39},&#xD;&#xA;  { Date: 1653260400000, Close: 0.39},&#xD;&#xA;  { Date: 1653865200000, Close: 0.39},&#xD;&#xA;  { Date: 1654470000000, Close: 0.39},&#xD;&#xA;  { Date: 1655074800000, Close: 0.39},&#xD;&#xA;  { Date: 1655679600000, Close: 0.39},&#xD;&#xA;  { Date: 1656284400000, Close: 0.39},&#xD;&#xA;  { Date: 1656889200000, Close: 0.39},&#xD;&#xA;  { Date: 1657494000000, Close: 0.39},&#xD;&#xA;  { Date: 1658098800000, Close: 0.39},&#xD;&#xA;  { Date: 1662332400000, Close: 0.39},&#xD;&#xA;  { Date: 1663542000000, Close: 0.39},&#xD;&#xA;  { Date: 1664146800000, Close: 0.39},&#xD;&#xA;  { Date: 1664751600000, Close: 0.39},&#xD;&#xA;  { Date: 1665356400000, Close: 0.39},&#xD;&#xA;  { Date: 1665961200000, Close: 0.39},&#xD;&#xA;  { Date: 1666566000000, Close: 0.39},&#xD;&#xA;  { Date: 1667170800000, Close: 0.39},&#xD;&#xA;  { Date: 1667775600000, Close: 0.39},&#xD;&#xA;  { Date: 1668380400000, Close: 0.39},&#xD;&#xA;  { Date: 1668985200000, Close: 0.39},&#xD;&#xA;  { Date: 1669590000000, Close: 0.39},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1673218800000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.49},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1688338800000, Close: 0.39},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;  { Date: 1693782000000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1696806000000, Close: 0.39},&#xD;&#xA;  { Date: 1698620400000, Close: 0.39},&#xD;&#xA;  { Date: 1699225200000, Close: 0.39},&#xD;&#xA;  { Date: 1703458800000, Close: 0.39},&#xD;&#xA;  { Date: 1704063600000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.39},&#xD;&#xA;  { Date: 1706482800000, Close: 0.39},&#xD;&#xA;  { Date: 1707087600000, Close: 0.49},&#xD;&#xA;  { Date: 1707692400000, Close: 0.39},&#xD;&#xA;  { Date: 1708297200000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1716764400000, Close: 0.39},&#xD;&#xA;  { Date: 1727046000000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Porygon</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/039---porygon/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/039---porygon/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149363.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.09},&#xD;&#xA;  { Date: 1591398000000, Close: 2.99},&#xD;&#xA;  { Date: 1600383600000, Close: 2.99},&#xD;&#xA;  { Date: 1601247600000, Close: 2.99},&#xD;&#xA;  { Date: 1601852400000, Close: 2.99},&#xD;&#xA;  { Date: 1602457200000, Close: 2.99},&#xD;&#xA;  { Date: 1603062000000, Close: 2.99},&#xD;&#xA;  { Date: 1603666800000, Close: 3.09},&#xD;&#xA;  { Date: 1604271600000, Close: 3.09},&#xD;&#xA;  { Date: 1604876400000, Close: 3.09},&#xD;&#xA;  { Date: 1605481200000, Close: 3.09},&#xD;&#xA;  { Date: 1606086000000, Close: 3.09},&#xD;&#xA;  { Date: 1606690800000, Close: 3.29},&#xD;&#xA;  { Date: 1607295600000, Close: 3.49},&#xD;&#xA;  { Date: 1607900400000, Close: 3.49},&#xD;&#xA;  { Date: 1608505200000, Close: 3.49},&#xD;&#xA;  { Date: 1609110000000, Close: 3.49},&#xD;&#xA;  { Date: 1609714800000, Close: 2.99},&#xD;&#xA;  { Date: 1610233200000, Close: 3.09},&#xD;&#xA;  { Date: 1610924400000, Close: 3.19},&#xD;&#xA;  { Date: 1611529200000, Close: 2.99},&#xD;&#xA;  { Date: 1612134000000, Close: 2.99},&#xD;&#xA;  { Date: 1612738800000, Close: 2.99},&#xD;&#xA;  { Date: 1613343600000, Close: 2.99},&#xD;&#xA;  { Date: 1613948400000, Close: 2.99},&#xD;&#xA;  { Date: 1615158000000, Close: 2.99},&#xD;&#xA;  { Date: 1615762800000, Close: 2.99},&#xD;&#xA;  { Date: 1616367600000, Close: 2.99},&#xD;&#xA;  { Date: 1616972400000, Close: 2.99},&#xD;&#xA;  { Date: 1617577200000, Close: 2.99},&#xD;&#xA;  { Date: 1618182000000, Close: 2.49},&#xD;&#xA;  { Date: 1618786800000, Close: 2.49},&#xD;&#xA;  { Date: 1619391600000, Close: 2.89},&#xD;&#xA;  { Date: 1619996400000, Close: 2.49},&#xD;&#xA;  { Date: 1620601200000, Close: 2.45},&#xD;&#xA;  { Date: 1621206000000, Close: 2.45},&#xD;&#xA;  { Date: 1621810800000, Close: 2.45},&#xD;&#xA;  { Date: 1622415600000, Close: 2.29},&#xD;&#xA;  { Date: 1623020400000, Close: 2.29},&#xD;&#xA;  { Date: 1623625200000, Close: 1.99},&#xD;&#xA;  { Date: 1624230000000, Close: 1.89},&#xD;&#xA;  { Date: 1624834800000, Close: 1.79},&#xD;&#xA;  { Date: 1625439600000, Close: 1.49},&#xD;&#xA;  { Date: 1626044400000, Close: 1.99},&#xD;&#xA;  { Date: 1626649200000, Close: 2.19},&#xD;&#xA;  { Date: 1627254000000, Close: 1.99},&#xD;&#xA;  { Date: 1627858800000, Close: 1.99},&#xD;&#xA;  { Date: 1628463600000, Close: 1.99},&#xD;&#xA;  { Date: 1630278000000, Close: 2.49},&#xD;&#xA;  { Date: 1630882800000, Close: 2.49},&#xD;&#xA;  { Date: 1631487600000, Close: 2.49},&#xD;&#xA;  { Date: 1632092400000, Close: 2.49},&#xD;&#xA;  { Date: 1632697200000, Close: 2.49},&#xD;&#xA;  { Date: 1633302000000, Close: 2.49},&#xD;&#xA;  { Date: 1633906800000, Close: 2.49},&#xD;&#xA;  { Date: 1634511600000, Close: 2.99},&#xD;&#xA;  { Date: 1635116400000, Close: 2.99},&#xD;&#xA;  { Date: 1635721200000, Close: 2.99},&#xD;&#xA;  { Date: 1636326000000, Close: 2.99},&#xD;&#xA;  { Date: 1636930800000, Close: 2.99},&#xD;&#xA;  { Date: 1637535600000, Close: 2.99},&#xD;&#xA;  { Date: 1638140400000, Close: 2.99},&#xD;&#xA;  { Date: 1638745200000, Close: 2.99},&#xD;&#xA;  { Date: 1639350000000, Close: 2.99},&#xD;&#xA;  { Date: 1639954800000, Close: 3.49},&#xD;&#xA;  { Date: 1640559600000, Close: 3.49},&#xD;&#xA;  { Date: 1641164400000, Close: 3.49},&#xD;&#xA;  { Date: 1641769200000, Close: 3.49},&#xD;&#xA;  { Date: 1642374000000, Close: 3.49},&#xD;&#xA;  { Date: 1642978800000, Close: 3.49},&#xD;&#xA;  { Date: 1643583600000, Close: 3.49},&#xD;&#xA;  { Date: 1644188400000, Close: 3.49},&#xD;&#xA;  { Date: 1644793200000, Close: 2.89},&#xD;&#xA;  { Date: 1645398000000, Close: 2.89},&#xD;&#xA;  { Date: 1646002800000, Close: 2.89},&#xD;&#xA;  { Date: 1646607600000, Close: 2.49},&#xD;&#xA;  { Date: 1647212400000, Close: 2.49},&#xD;&#xA;  { Date: 1647817200000, Close: 2.29},&#xD;&#xA;  { Date: 1648422000000, Close: 2.29},&#xD;&#xA;  { Date: 1649026800000, Close: 2.29},&#xD;&#xA;  { Date: 1649631600000, Close: 2.29},&#xD;&#xA;  { Date: 1650236400000, Close: 2.29},&#xD;&#xA;  { Date: 1650841200000, Close: 2.29},&#xD;&#xA;  { Date: 1651446000000, Close: 2.29},&#xD;&#xA;  { Date: 1659308400000, Close: 1.99},&#xD;&#xA;  { Date: 1659913200000, Close: 1.99},&#xD;&#xA;  { Date: 1660518000000, Close: 1.99},&#xD;&#xA;  { Date: 1661122800000, Close: 1.99},&#xD;&#xA;  { Date: 1661727600000, Close: 1.99},&#xD;&#xA;  { Date: 1662332400000, Close: 1.99},&#xD;&#xA;  { Date: 1663542000000, Close: 1.99},&#xD;&#xA;  { Date: 1664146800000, Close: 1.99},&#xD;&#xA;  { Date: 1664751600000, Close: 1.99},&#xD;&#xA;  { Date: 1665356400000, Close: 1.99},&#xD;&#xA;  { Date: 1665961200000, Close: 1.99},&#xD;&#xA;  { Date: 1666566000000, Close: 1.99},&#xD;&#xA;  { Date: 1667170800000, Close: 1.99},&#xD;&#xA;  { Date: 1667775600000, Close: 1.89},&#xD;&#xA;  { Date: 1668380400000, Close: 1.89},&#xD;&#xA;  { Date: 1668985200000, Close: 1.89},&#xD;&#xA;  { Date: 1669590000000, Close: 1.49},&#xD;&#xA;  { Date: 1670194800000, Close: 1.49},&#xD;&#xA;  { Date: 1670799600000, Close: 1.29},&#xD;&#xA;  { Date: 1671404400000, Close: 1.29},&#xD;&#xA;  { Date: 1672009200000, Close: 1.49},&#xD;&#xA;  { Date: 1672614000000, Close: 1.49},&#xD;&#xA;  { Date: 1673218800000, Close: 1.49},&#xD;&#xA;  { Date: 1673823600000, Close: 1.19},&#xD;&#xA;  { Date: 1674428400000, Close: 1.09},&#xD;&#xA;  { Date: 1676847600000, Close: 1.19},&#xD;&#xA;  { Date: 1679871600000, Close: 1.19},&#xD;&#xA;  { Date: 1681686000000, Close: 1.19},&#xD;&#xA;  { Date: 1682895600000, Close: 0.89},&#xD;&#xA;  { Date: 1683500400000, Close: 0.89},&#xD;&#xA;  { Date: 1691362800000, Close: 0.99},&#xD;&#xA;  { Date: 1693177200000, Close: 0.99},&#xD;&#xA;  { Date: 1693782000000, Close: 1.29},&#xD;&#xA;  { Date: 1694386800000, Close: 1.29},&#xD;&#xA;  { Date: 1696201200000, Close: 1.29},&#xD;&#xA;  { Date: 1702854000000, Close: 2.19},&#xD;&#xA;  { Date: 1704668400000, Close: 1.99},&#xD;&#xA;  { Date: 1707692400000, Close: 2.69},&#xD;&#xA;  { Date: 1708297200000, Close: 2.49},&#xD;&#xA;  { Date: 1708902000000, Close: 2.49},&#xD;&#xA;  { Date: 1709506800000, Close: 2.49},&#xD;&#xA;  { Date: 1714950000000, Close: 2.99},&#xD;&#xA;  { Date: 1715554800000, Close: 2.99},&#xD;&#xA;  { Date: 1720393200000, Close: 2.99},&#xD;&#xA;  { Date: 1720998000000, Close: 2.99},&#xD;&#xA;  { Date: 1723417200000, Close: 2.99},&#xD;&#xA;  { Date: 1724022000000, Close: 2.99},&#xD;&#xA;  { Date: 1724626800000, Close: 2.99},&#xD;&#xA;  { Date: 1727046000000, Close: 2.39},&#xD;&#xA;  { Date: 1728255600000, Close: 2.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Potion</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/094---potion/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/094---potion/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149366.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.35},&#xD;&#xA;  { Date: 1603666800000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.35},&#xD;&#xA;  { Date: 1605481200000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.35},&#xD;&#xA;  { Date: 1607295600000, Close: 0.35},&#xD;&#xA;  { Date: 1607900400000, Close: 0.35},&#xD;&#xA;  { Date: 1608505200000, Close: 0.35},&#xD;&#xA;  { Date: 1609110000000, Close: 0.35},&#xD;&#xA;  { Date: 1609714800000, Close: 0.35},&#xD;&#xA;  { Date: 1610233200000, Close: 0.35},&#xD;&#xA;  { Date: 1610924400000, Close: 0.35},&#xD;&#xA;  { Date: 1611529200000, Close: 0.35},&#xD;&#xA;  { Date: 1612134000000, Close: 0.35},&#xD;&#xA;  { Date: 1612738800000, Close: 0.35},&#xD;&#xA;  { Date: 1613343600000, Close: 0.35},&#xD;&#xA;  { Date: 1613948400000, Close: 0.35},&#xD;&#xA;  { Date: 1614553200000, Close: 0.35},&#xD;&#xA;  { Date: 1615158000000, Close: 0.35},&#xD;&#xA;  { Date: 1615762800000, Close: 0.35},&#xD;&#xA;  { Date: 1616367600000, Close: 0.35},&#xD;&#xA;  { Date: 1616972400000, Close: 0.35},&#xD;&#xA;  { Date: 1617577200000, Close: 0.35},&#xD;&#xA;  { Date: 1618182000000, Close: 0.35},&#xD;&#xA;  { Date: 1618786800000, Close: 0.35},&#xD;&#xA;  { Date: 1619391600000, Close: 0.35},&#xD;&#xA;  { Date: 1619996400000, Close: 0.35},&#xD;&#xA;  { Date: 1620601200000, Close: 0.35},&#xD;&#xA;  { Date: 1621206000000, Close: 0.35},&#xD;&#xA;  { Date: 1621810800000, Close: 0.35},&#xD;&#xA;  { Date: 1622415600000, Close: 0.35},&#xD;&#xA;  { Date: 1623020400000, Close: 0.35},&#xD;&#xA;  { Date: 1623625200000, Close: 0.35},&#xD;&#xA;  { Date: 1624230000000, Close: 0.35},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1625439600000, Close: 0.35},&#xD;&#xA;  { Date: 1626044400000, Close: 0.35},&#xD;&#xA;  { Date: 1626649200000, Close: 0.35},&#xD;&#xA;  { Date: 1627254000000, Close: 0.35},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1629068400000, Close: 0.35},&#xD;&#xA;  { Date: 1629673200000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1630882800000, Close: 0.35},&#xD;&#xA;  { Date: 1631487600000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.35},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.35},&#xD;&#xA;  { Date: 1670194800000, Close: 0.35},&#xD;&#xA;  { Date: 1670799600000, Close: 0.35},&#xD;&#xA;  { Date: 1671404400000, Close: 0.35},&#xD;&#xA;  { Date: 1672009200000, Close: 0.35},&#xD;&#xA;  { Date: 1672614000000, Close: 0.35},&#xD;&#xA;  { Date: 1673218800000, Close: 0.35},&#xD;&#xA;  { Date: 1673823600000, Close: 0.35},&#xD;&#xA;  { Date: 1674428400000, Close: 0.35},&#xD;&#xA;  { Date: 1675033200000, Close: 0.35},&#xD;&#xA;  { Date: 1675638000000, Close: 0.35},&#xD;&#xA;  { Date: 1676242800000, Close: 0.35},&#xD;&#xA;  { Date: 1676847600000, Close: 0.35},&#xD;&#xA;  { Date: 1677452400000, Close: 0.35},&#xD;&#xA;  { Date: 1678057200000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.35},&#xD;&#xA;  { Date: 1679266800000, Close: 0.35},&#xD;&#xA;  { Date: 1679871600000, Close: 0.35},&#xD;&#xA;  { Date: 1680476400000, Close: 0.35},&#xD;&#xA;  { Date: 1681081200000, Close: 0.35},&#xD;&#xA;  { Date: 1681686000000, Close: 0.35},&#xD;&#xA;  { Date: 1682290800000, Close: 0.35},&#xD;&#xA;  { Date: 1682895600000, Close: 0.35},&#xD;&#xA;  { Date: 1683500400000, Close: 0.35},&#xD;&#xA;  { Date: 1684105200000, Close: 0.35},&#xD;&#xA;  { Date: 1684710000000, Close: 0.35},&#xD;&#xA;  { Date: 1685314800000, Close: 0.35},&#xD;&#xA;  { Date: 1685919600000, Close: 0.35},&#xD;&#xA;  { Date: 1686524400000, Close: 0.35},&#xD;&#xA;  { Date: 1687129200000, Close: 0.35},&#xD;&#xA;  { Date: 1687734000000, Close: 0.35},&#xD;&#xA;  { Date: 1688338800000, Close: 0.35},&#xD;&#xA;  { Date: 1688943600000, Close: 0.35},&#xD;&#xA;  { Date: 1689548400000, Close: 0.35},&#xD;&#xA;  { Date: 1690153200000, Close: 0.35},&#xD;&#xA;  { Date: 1690758000000, Close: 0.35},&#xD;&#xA;  { Date: 1691362800000, Close: 0.35},&#xD;&#xA;  { Date: 1691967600000, Close: 0.35},&#xD;&#xA;  { Date: 1692572400000, Close: 0.35},&#xD;&#xA;  { Date: 1693177200000, Close: 0.35},&#xD;&#xA;  { Date: 1693782000000, Close: 0.49},&#xD;&#xA;  { Date: 1694386800000, Close: 0.49},&#xD;&#xA;  { Date: 1694991600000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1697410800000, Close: 0.49},&#xD;&#xA;  { Date: 1698015600000, Close: 0.49},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1699225200000, Close: 0.49},&#xD;&#xA;  { Date: 1699830000000, Close: 0.49},&#xD;&#xA;  { Date: 1700434800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.39},&#xD;&#xA;  { Date: 1701644400000, Close: 0.39},&#xD;&#xA;  { Date: 1702249200000, Close: 0.39},&#xD;&#xA;  { Date: 1702854000000, Close: 0.35},&#xD;&#xA;  { Date: 1703458800000, Close: 0.35},&#xD;&#xA;  { Date: 1704063600000, Close: 0.35},&#xD;&#xA;  { Date: 1704668400000, Close: 0.35},&#xD;&#xA;  { Date: 1705273200000, Close: 0.35},&#xD;&#xA;  { Date: 1705878000000, Close: 0.35},&#xD;&#xA;  { Date: 1706482800000, Close: 0.35},&#xD;&#xA;  { Date: 1707087600000, Close: 0.35},&#xD;&#xA;  { Date: 1707692400000, Close: 0.35},&#xD;&#xA;  { Date: 1708297200000, Close: 0.35},&#xD;&#xA;  { Date: 1708902000000, Close: 0.35},&#xD;&#xA;  { Date: 1709506800000, Close: 0.35},&#xD;&#xA;  { Date: 1710111600000, Close: 0.35},&#xD;&#xA;  { Date: 1710716400000, Close: 0.35},&#xD;&#xA;  { Date: 1711321200000, Close: 0.35},&#xD;&#xA;  { Date: 1711926000000, Close: 0.35},&#xD;&#xA;  { Date: 1712530800000, Close: 0.35},&#xD;&#xA;  { Date: 1713135600000, Close: 0.35},&#xD;&#xA;  { Date: 1713740400000, Close: 0.35},&#xD;&#xA;  { Date: 1714345200000, Close: 0.35},&#xD;&#xA;  { Date: 1714950000000, Close: 0.35},&#xD;&#xA;  { Date: 1715554800000, Close: 0.35},&#xD;&#xA;  { Date: 1716159600000, Close: 0.35},&#xD;&#xA;  { Date: 1716764400000, Close: 0.49},&#xD;&#xA;  { Date: 1717369200000, Close: 0.49},&#xD;&#xA;  { Date: 1717974000000, Close: 0.49},&#xD;&#xA;  { Date: 1718578800000, Close: 0.49},&#xD;&#xA;  { Date: 1719183600000, Close: 0.49},&#xD;&#xA;  { Date: 1719788400000, Close: 0.49},&#xD;&#xA;  { Date: 1720393200000, Close: 0.49},&#xD;&#xA;  { Date: 1721602800000, Close: 0.49},&#xD;&#xA;  { Date: 1722207600000, Close: 0.49},&#xD;&#xA;  { Date: 1722812400000, Close: 0.49},&#xD;&#xA;  { Date: 1723417200000, Close: 0.49},&#xD;&#xA;  { Date: 1724022000000, Close: 0.49},&#xD;&#xA;  { Date: 1724626800000, Close: 0.49},&#xD;&#xA;  { Date: 1725231600000, Close: 0.49},&#xD;&#xA;  { Date: 1725836400000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727650800000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Professor Oak</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/088---professor-oak/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/088---professor-oak/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149370.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1593817200000, Close: 1.09},&#xD;&#xA;  { Date: 1600383600000, Close: 1.99},&#xD;&#xA;  { Date: 1601247600000, Close: 1.99},&#xD;&#xA;  { Date: 1601852400000, Close: 1.99},&#xD;&#xA;  { Date: 1602457200000, Close: 1.99},&#xD;&#xA;  { Date: 1603062000000, Close: 1.99},&#xD;&#xA;  { Date: 1603666800000, Close: 1.99},&#xD;&#xA;  { Date: 1604271600000, Close: 2.29},&#xD;&#xA;  { Date: 1604876400000, Close: 2.49},&#xD;&#xA;  { Date: 1606086000000, Close: 2.99},&#xD;&#xA;  { Date: 1606690800000, Close: 3.29},&#xD;&#xA;  { Date: 1607295600000, Close: 3.29},&#xD;&#xA;  { Date: 1607900400000, Close: 3.49},&#xD;&#xA;  { Date: 1608505200000, Close: 3.29},&#xD;&#xA;  { Date: 1609110000000, Close: 2.99},&#xD;&#xA;  { Date: 1609714800000, Close: 2.29},&#xD;&#xA;  { Date: 1610233200000, Close: 2.29},&#xD;&#xA;  { Date: 1610924400000, Close: 1.99},&#xD;&#xA;  { Date: 1612134000000, Close: 1.99},&#xD;&#xA;  { Date: 1612738800000, Close: 1.99},&#xD;&#xA;  { Date: 1613343600000, Close: 1.79},&#xD;&#xA;  { Date: 1613948400000, Close: 1.79},&#xD;&#xA;  { Date: 1614553200000, Close: 1.79},&#xD;&#xA;  { Date: 1615158000000, Close: 1.49},&#xD;&#xA;  { Date: 1615762800000, Close: 1.49},&#xD;&#xA;  { Date: 1616367600000, Close: 1.59},&#xD;&#xA;  { Date: 1616972400000, Close: 1.59},&#xD;&#xA;  { Date: 1618182000000, Close: 1.59},&#xD;&#xA;  { Date: 1618786800000, Close: 1.49},&#xD;&#xA;  { Date: 1619391600000, Close: 1.49},&#xD;&#xA;  { Date: 1619996400000, Close: 1.29},&#xD;&#xA;  { Date: 1620601200000, Close: 1.59},&#xD;&#xA;  { Date: 1621206000000, Close: 1.49},&#xD;&#xA;  { Date: 1623020400000, Close: 1.49},&#xD;&#xA;  { Date: 1623625200000, Close: 1.49},&#xD;&#xA;  { Date: 1624230000000, Close: 1.89},&#xD;&#xA;  { Date: 1624834800000, Close: 1.79},&#xD;&#xA;  { Date: 1625439600000, Close: 1.99},&#xD;&#xA;  { Date: 1626044400000, Close: 2.29},&#xD;&#xA;  { Date: 1626649200000, Close: 2.29},&#xD;&#xA;  { Date: 1627254000000, Close: 2.29},&#xD;&#xA;  { Date: 1627858800000, Close: 2.29},&#xD;&#xA;  { Date: 1628463600000, Close: 1.79},&#xD;&#xA;  { Date: 1629068400000, Close: 1.79},&#xD;&#xA;  { Date: 1629673200000, Close: 1.79},&#xD;&#xA;  { Date: 1630278000000, Close: 1.79},&#xD;&#xA;  { Date: 1630882800000, Close: 1.79},&#xD;&#xA;  { Date: 1631487600000, Close: 1.79},&#xD;&#xA;  { Date: 1632092400000, Close: 1.49},&#xD;&#xA;  { Date: 1632697200000, Close: 1.29},&#xD;&#xA;  { Date: 1633302000000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.09},&#xD;&#xA;  { Date: 1634511600000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 1.49},&#xD;&#xA;  { Date: 1635721200000, Close: 1.49},&#xD;&#xA;  { Date: 1636326000000, Close: 1.49},&#xD;&#xA;  { Date: 1636930800000, Close: 1.49},&#xD;&#xA;  { Date: 1637535600000, Close: 1.79},&#xD;&#xA;  { Date: 1638140400000, Close: 1.79},&#xD;&#xA;  { Date: 1638745200000, Close: 1.49},&#xD;&#xA;  { Date: 1639350000000, Close: 1.49},&#xD;&#xA;  { Date: 1639954800000, Close: 1.79},&#xD;&#xA;  { Date: 1640559600000, Close: 1.79},&#xD;&#xA;  { Date: 1641164400000, Close: 1.79},&#xD;&#xA;  { Date: 1641769200000, Close: 1.79},&#xD;&#xA;  { Date: 1644188400000, Close: 1.99},&#xD;&#xA;  { Date: 1644793200000, Close: 1.99},&#xD;&#xA;  { Date: 1645398000000, Close: 1.99},&#xD;&#xA;  { Date: 1646002800000, Close: 1.99},&#xD;&#xA;  { Date: 1646607600000, Close: 1.49},&#xD;&#xA;  { Date: 1647212400000, Close: 1.49},&#xD;&#xA;  { Date: 1647817200000, Close: 1.49},&#xD;&#xA;  { Date: 1648422000000, Close: 1.39},&#xD;&#xA;  { Date: 1649026800000, Close: 1.39},&#xD;&#xA;  { Date: 1649631600000, Close: 1.39},&#xD;&#xA;  { Date: 1652655600000, Close: 1.39},&#xD;&#xA;  { Date: 1653260400000, Close: 1.29},&#xD;&#xA;  { Date: 1653865200000, Close: 1.19},&#xD;&#xA;  { Date: 1654470000000, Close: 1.09},&#xD;&#xA;  { Date: 1655074800000, Close: 1.09},&#xD;&#xA;  { Date: 1656889200000, Close: 0.99},&#xD;&#xA;  { Date: 1657494000000, Close: 0.99},&#xD;&#xA;  { Date: 1662332400000, Close: 0.99},&#xD;&#xA;  { Date: 1663542000000, Close: 0.99},&#xD;&#xA;  { Date: 1664146800000, Close: 0.99},&#xD;&#xA;  { Date: 1664751600000, Close: 0.99},&#xD;&#xA;  { Date: 1667775600000, Close: 1.39},&#xD;&#xA;  { Date: 1668380400000, Close: 1.39},&#xD;&#xA;  { Date: 1668985200000, Close: 1.29},&#xD;&#xA;  { Date: 1669590000000, Close: 1.39},&#xD;&#xA;  { Date: 1670194800000, Close: 1.29},&#xD;&#xA;  { Date: 1672614000000, Close: 1.09},&#xD;&#xA;  { Date: 1673823600000, Close: 1.09},&#xD;&#xA;  { Date: 1679871600000, Close: 1.49},&#xD;&#xA;  { Date: 1681081200000, Close: 1.79},&#xD;&#xA;  { Date: 1681686000000, Close: 1.49},&#xD;&#xA;  { Date: 1682895600000, Close: 1.49},&#xD;&#xA;  { Date: 1690758000000, Close: 0.79},&#xD;&#xA;  { Date: 1696201200000, Close: 0.89},&#xD;&#xA;  { Date: 1698015600000, Close: 0.89},&#xD;&#xA;  { Date: 1698620400000, Close: 0.89},&#xD;&#xA;  { Date: 1701644400000, Close: 0.89},&#xD;&#xA;  { Date: 1702249200000, Close: 0.89},&#xD;&#xA;  { Date: 1702854000000, Close: 0.89},&#xD;&#xA;  { Date: 1703458800000, Close: 0.89},&#xD;&#xA;  { Date: 1704063600000, Close: 0.89},&#xD;&#xA;  { Date: 1704668400000, Close: 0.89},&#xD;&#xA;  { Date: 1705273200000, Close: 0.79},&#xD;&#xA;  { Date: 1705878000000, Close: 0.79},&#xD;&#xA;  { Date: 1706482800000, Close: 0.79},&#xD;&#xA;  { Date: 1709506800000, Close: 0.69},&#xD;&#xA;  { Date: 1710716400000, Close: 0.59},&#xD;&#xA;  { Date: 1714345200000, Close: 0.69},&#xD;&#xA;  { Date: 1719183600000, Close: 0.59},&#xD;&#xA;  { Date: 1719788400000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.89},&#xD;&#xA;  { Date: 1727650800000, Close: 0.89},&#xD;&#xA;  { Date: 1728255600000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Psychic Energy</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/101---psychic-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/101---psychic-energy/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149371.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.35},&#xD;&#xA;  { Date: 1603666800000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.35},&#xD;&#xA;  { Date: 1605481200000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.35},&#xD;&#xA;  { Date: 1607295600000, Close: 0.35},&#xD;&#xA;  { Date: 1607900400000, Close: 0.35},&#xD;&#xA;  { Date: 1608505200000, Close: 0.35},&#xD;&#xA;  { Date: 1609110000000, Close: 0.35},&#xD;&#xA;  { Date: 1609714800000, Close: 0.35},&#xD;&#xA;  { Date: 1610233200000, Close: 0.35},&#xD;&#xA;  { Date: 1610924400000, Close: 0.49},&#xD;&#xA;  { Date: 1611529200000, Close: 0.49},&#xD;&#xA;  { Date: 1612134000000, Close: 0.49},&#xD;&#xA;  { Date: 1612738800000, Close: 0.49},&#xD;&#xA;  { Date: 1613343600000, Close: 0.49},&#xD;&#xA;  { Date: 1613948400000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.39},&#xD;&#xA;  { Date: 1625439600000, Close: 0.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1639350000000, Close: 0.39},&#xD;&#xA;  { Date: 1639954800000, Close: 0.39},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.59},&#xD;&#xA;  { Date: 1677452400000, Close: 0.59},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.39},&#xD;&#xA;  { Date: 1682895600000, Close: 0.39},&#xD;&#xA;  { Date: 1683500400000, Close: 0.49},&#xD;&#xA;  { Date: 1689548400000, Close: 0.59},&#xD;&#xA;  { Date: 1690758000000, Close: 0.59},&#xD;&#xA;  { Date: 1691362800000, Close: 0.59},&#xD;&#xA;  { Date: 1691967600000, Close: 0.59},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1698620400000, Close: 0.39},&#xD;&#xA;  { Date: 1699225200000, Close: 0.39},&#xD;&#xA;  { Date: 1699830000000, Close: 0.39},&#xD;&#xA;  { Date: 1700434800000, Close: 0.39},&#xD;&#xA;  { Date: 1706482800000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Raichu</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/014---raichu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/014---raichu/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149378.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577833200000, Close: 12.99},&#xD;&#xA;  { Date: 1578524400000, Close: 12.99},&#xD;&#xA;  { Date: 1579734000000, Close: 13.99},&#xD;&#xA;  { Date: 1580166000000, Close: 13.99},&#xD;&#xA;  { Date: 1580943600000, Close: 14.99},&#xD;&#xA;  { Date: 1582239600000, Close: 17.99},&#xD;&#xA;  { Date: 1583967600000, Close: 16.99},&#xD;&#xA;  { Date: 1585004400000, Close: 19.99},&#xD;&#xA;  { Date: 1585695600000, Close: 18.99},&#xD;&#xA;  { Date: 1587250800000, Close: 19.99},&#xD;&#xA;  { Date: 1587596400000, Close: 21.99},&#xD;&#xA;  { Date: 1588114800000, Close: 22.99},&#xD;&#xA;  { Date: 1588633200000, Close: 23.99},&#xD;&#xA;  { Date: 1589324400000, Close: 22.99},&#xD;&#xA;  { Date: 1590620400000, Close: 23.99},&#xD;&#xA;  { Date: 1590793200000, Close: 24.99},&#xD;&#xA;  { Date: 1591311600000, Close: 27.99},&#xD;&#xA;  { Date: 1591398000000, Close: 29.99},&#xD;&#xA;  { Date: 1593558000000, Close: 34.99},&#xD;&#xA;  { Date: 1594767600000, Close: 35.99},&#xD;&#xA;  { Date: 1596754800000, Close: 35.99},&#xD;&#xA;  { Date: 1598310000000, Close: 34.99},&#xD;&#xA;  { Date: 1599001200000, Close: 35.99},&#xD;&#xA;  { Date: 1599692400000, Close: 36.99},&#xD;&#xA;  { Date: 1600815600000, Close: 37.99},&#xD;&#xA;  { Date: 1602716400000, Close: 38.99},&#xD;&#xA;  { Date: 1603926000000, Close: 44.99},&#xD;&#xA;  { Date: 1605567600000, Close: 49.99},&#xD;&#xA;  { Date: 1605826800000, Close: 59.99},&#xD;&#xA;  { Date: 1606345200000, Close: 64.99},&#xD;&#xA;  { Date: 1606863600000, Close: 69.99},&#xD;&#xA;  { Date: 1607468400000, Close: 74.99},&#xD;&#xA;  { Date: 1608073200000, Close: 71.99},&#xD;&#xA;  { Date: 1608246000000, Close: 64.99},&#xD;&#xA;  { Date: 1608764400000, Close: 59.99},&#xD;&#xA;  { Date: 1609282800000, Close: 49.99},&#xD;&#xA;  { Date: 1609974000000, Close: 54.99},&#xD;&#xA;  { Date: 1610578800000, Close: 58.99},&#xD;&#xA;  { Date: 1614898800000, Close: 57.99},&#xD;&#xA;  { Date: 1617145200000, Close: 54.99},&#xD;&#xA;  { Date: 1617750000000, Close: 57.99},&#xD;&#xA;  { Date: 1618614000000, Close: 57.95},&#xD;&#xA;  { Date: 1621292400000, Close: 54.99},&#xD;&#xA;  { Date: 1623106800000, Close: 51.99},&#xD;&#xA;  { Date: 1624316400000, Close: 44.99},&#xD;&#xA;  { Date: 1626130800000, Close: 39.99},&#xD;&#xA;  { Date: 1626390000000, Close: 39.99},&#xD;&#xA;  { Date: 1627858800000, Close: 36.99},&#xD;&#xA;  { Date: 1627945200000, Close: 35.99},&#xD;&#xA;  { Date: 1632438000000, Close: 35.99},&#xD;&#xA;  { Date: 1633129200000, Close: 33.99},&#xD;&#xA;  { Date: 1634943600000, Close: 34.99},&#xD;&#xA;  { Date: 1637276400000, Close: 32.99},&#xD;&#xA;  { Date: 1637794800000, Close: 29.99},&#xD;&#xA;  { Date: 1643410800000, Close: 29.99},&#xD;&#xA;  { Date: 1645484400000, Close: 31.99},&#xD;&#xA;  { Date: 1646348400000, Close: 34.79},&#xD;&#xA;  { Date: 1646434800000, Close: 36.19},&#xD;&#xA;  { Date: 1647471600000, Close: 37.99},&#xD;&#xA;  { Date: 1649113200000, Close: 39.99},&#xD;&#xA;  { Date: 1649804400000, Close: 39.99},&#xD;&#xA;  { Date: 1649977200000, Close: 39.99},&#xD;&#xA;  { Date: 1652396400000, Close: 41.99},&#xD;&#xA;  { Date: 1653346800000, Close: 41.99},&#xD;&#xA;  { Date: 1654210800000, Close: 41.99},&#xD;&#xA;  { Date: 1654556400000, Close: 44.99},&#xD;&#xA;  { Date: 1654902000000, Close: 44.99},&#xD;&#xA;  { Date: 1655334000000, Close: 44.99},&#xD;&#xA;  { Date: 1655420400000, Close: 49.99},&#xD;&#xA;  { Date: 1657839600000, Close: 44.99},&#xD;&#xA;  { Date: 1658271600000, Close: 39.99},&#xD;&#xA;  { Date: 1659740400000, Close: 39.99},&#xD;&#xA;  { Date: 1661900400000, Close: 39.99},&#xD;&#xA;  { Date: 1663628400000, Close: 39.99},&#xD;&#xA;  { Date: 1664233200000, Close: 39.99},&#xD;&#xA;  { Date: 1667343600000, Close: 44.99},&#xD;&#xA;  { Date: 1671231600000, Close: 47.99},&#xD;&#xA;  { Date: 1674342000000, Close: 44.99},&#xD;&#xA;  { Date: 1676070000000, Close: 41.99},&#xD;&#xA;  { Date: 1676415600000, Close: 41.99},&#xD;&#xA;  { Date: 1677279600000, Close: 42.99},&#xD;&#xA;  { Date: 1680217200000, Close: 44.99},&#xD;&#xA;  { Date: 1682377200000, Close: 47.99},&#xD;&#xA;  { Date: 1695942000000, Close: 49.99},&#xD;&#xA;  { Date: 1699657200000, Close: 49.99},&#xD;&#xA;  { Date: 1705014000000, Close: 49.99},&#xD;&#xA;  { Date: 1706137200000, Close: 49.99},&#xD;&#xA;  { Date: 1725058800000, Close: 49.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Raticate</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/040---raticate/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/040---raticate/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149383.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.09},&#xD;&#xA;  { Date: 1591398000000, Close: 1.29},&#xD;&#xA;  { Date: 1600383600000, Close: 2.99},&#xD;&#xA;  { Date: 1601247600000, Close: 2.99},&#xD;&#xA;  { Date: 1601852400000, Close: 2.99},&#xD;&#xA;  { Date: 1602457200000, Close: 2.99},&#xD;&#xA;  { Date: 1603062000000, Close: 2.99},&#xD;&#xA;  { Date: 1605481200000, Close: 4.99},&#xD;&#xA;  { Date: 1606086000000, Close: 4.99},&#xD;&#xA;  { Date: 1606690800000, Close: 5.29},&#xD;&#xA;  { Date: 1607295600000, Close: 5.29},&#xD;&#xA;  { Date: 1607900400000, Close: 5.29},&#xD;&#xA;  { Date: 1608505200000, Close: 4.99},&#xD;&#xA;  { Date: 1609110000000, Close: 4.99},&#xD;&#xA;  { Date: 1609714800000, Close: 4.79},&#xD;&#xA;  { Date: 1610233200000, Close: 4.95},&#xD;&#xA;  { Date: 1610924400000, Close: 4.49},&#xD;&#xA;  { Date: 1611529200000, Close: 4.49},&#xD;&#xA;  { Date: 1612134000000, Close: 3.99},&#xD;&#xA;  { Date: 1612738800000, Close: 4.09},&#xD;&#xA;  { Date: 1613343600000, Close: 4.09},&#xD;&#xA;  { Date: 1613948400000, Close: 3.99},&#xD;&#xA;  { Date: 1614553200000, Close: 3.99},&#xD;&#xA;  { Date: 1615158000000, Close: 3.99},&#xD;&#xA;  { Date: 1615762800000, Close: 3.99},&#xD;&#xA;  { Date: 1616367600000, Close: 3.99},&#xD;&#xA;  { Date: 1616972400000, Close: 3.99},&#xD;&#xA;  { Date: 1617577200000, Close: 3.49},&#xD;&#xA;  { Date: 1618182000000, Close: 3.49},&#xD;&#xA;  { Date: 1618786800000, Close: 3.99},&#xD;&#xA;  { Date: 1619391600000, Close: 3.99},&#xD;&#xA;  { Date: 1619996400000, Close: 3.99},&#xD;&#xA;  { Date: 1620601200000, Close: 3.99},&#xD;&#xA;  { Date: 1621206000000, Close: 3.45},&#xD;&#xA;  { Date: 1621810800000, Close: 3.45},&#xD;&#xA;  { Date: 1622415600000, Close: 2.99},&#xD;&#xA;  { Date: 1623020400000, Close: 2.99},&#xD;&#xA;  { Date: 1623625200000, Close: 2.49},&#xD;&#xA;  { Date: 1624230000000, Close: 2.29},&#xD;&#xA;  { Date: 1624834800000, Close: 1.99},&#xD;&#xA;  { Date: 1625439600000, Close: 1.79},&#xD;&#xA;  { Date: 1626044400000, Close: 1.99},&#xD;&#xA;  { Date: 1626649200000, Close: 1.99},&#xD;&#xA;  { Date: 1627254000000, Close: 1.79},&#xD;&#xA;  { Date: 1627858800000, Close: 1.79},&#xD;&#xA;  { Date: 1628463600000, Close: 1.79},&#xD;&#xA;  { Date: 1629068400000, Close: 1.79},&#xD;&#xA;  { Date: 1629673200000, Close: 1.79},&#xD;&#xA;  { Date: 1630278000000, Close: 1.79},&#xD;&#xA;  { Date: 1630882800000, Close: 1.79},&#xD;&#xA;  { Date: 1631487600000, Close: 1.79},&#xD;&#xA;  { Date: 1632092400000, Close: 1.79},&#xD;&#xA;  { Date: 1632697200000, Close: 1.79},&#xD;&#xA;  { Date: 1633302000000, Close: 1.79},&#xD;&#xA;  { Date: 1633906800000, Close: 1.79},&#xD;&#xA;  { Date: 1635116400000, Close: 2.29},&#xD;&#xA;  { Date: 1635721200000, Close: 2.29},&#xD;&#xA;  { Date: 1636326000000, Close: 2.29},&#xD;&#xA;  { Date: 1636930800000, Close: 2.29},&#xD;&#xA;  { Date: 1637535600000, Close: 2.29},&#xD;&#xA;  { Date: 1638140400000, Close: 2.29},&#xD;&#xA;  { Date: 1638745200000, Close: 2.29},&#xD;&#xA;  { Date: 1639350000000, Close: 2.29},&#xD;&#xA;  { Date: 1639954800000, Close: 2.29},&#xD;&#xA;  { Date: 1640559600000, Close: 2.29},&#xD;&#xA;  { Date: 1641164400000, Close: 2.29},&#xD;&#xA;  { Date: 1641769200000, Close: 2.29},&#xD;&#xA;  { Date: 1646607600000, Close: 2.49},&#xD;&#xA;  { Date: 1647212400000, Close: 2.49},&#xD;&#xA;  { Date: 1647817200000, Close: 2.49},&#xD;&#xA;  { Date: 1648422000000, Close: 2.49},&#xD;&#xA;  { Date: 1649026800000, Close: 2.49},&#xD;&#xA;  { Date: 1649631600000, Close: 2.49},&#xD;&#xA;  { Date: 1650236400000, Close: 2.49},&#xD;&#xA;  { Date: 1650841200000, Close: 2.49},&#xD;&#xA;  { Date: 1651446000000, Close: 2.49},&#xD;&#xA;  { Date: 1652050800000, Close: 2.49},&#xD;&#xA;  { Date: 1652655600000, Close: 2.49},&#xD;&#xA;  { Date: 1653260400000, Close: 2.49},&#xD;&#xA;  { Date: 1653865200000, Close: 2.49},&#xD;&#xA;  { Date: 1654470000000, Close: 2.49},&#xD;&#xA;  { Date: 1655074800000, Close: 2.19},&#xD;&#xA;  { Date: 1655679600000, Close: 2.19},&#xD;&#xA;  { Date: 1662332400000, Close: 2.29},&#xD;&#xA;  { Date: 1662937200000, Close: 2.29},&#xD;&#xA;  { Date: 1663542000000, Close: 2.29},&#xD;&#xA;  { Date: 1664146800000, Close: 2.29},&#xD;&#xA;  { Date: 1664751600000, Close: 2.29},&#xD;&#xA;  { Date: 1665356400000, Close: 1.79},&#xD;&#xA;  { Date: 1665961200000, Close: 1.49},&#xD;&#xA;  { Date: 1666566000000, Close: 1.49},&#xD;&#xA;  { Date: 1667170800000, Close: 1.49},&#xD;&#xA;  { Date: 1667775600000, Close: 1.19},&#xD;&#xA;  { Date: 1668380400000, Close: 1.19},&#xD;&#xA;  { Date: 1668985200000, Close: 1.19},&#xD;&#xA;  { Date: 1669590000000, Close: 1.19},&#xD;&#xA;  { Date: 1670194800000, Close: 1.19},&#xD;&#xA;  { Date: 1670799600000, Close: 1.19},&#xD;&#xA;  { Date: 1671404400000, Close: 1.19},&#xD;&#xA;  { Date: 1672009200000, Close: 1.19},&#xD;&#xA;  { Date: 1672614000000, Close: 1.19},&#xD;&#xA;  { Date: 1673823600000, Close: 1.19},&#xD;&#xA;  { Date: 1674428400000, Close: 0.89},&#xD;&#xA;  { Date: 1685314800000, Close: 1.09},&#xD;&#xA;  { Date: 1688338800000, Close: 1.29},&#xD;&#xA;  { Date: 1688943600000, Close: 1.19},&#xD;&#xA;  { Date: 1701644400000, Close: 1.49},&#xD;&#xA;  { Date: 1702249200000, Close: 1.49},&#xD;&#xA;  { Date: 1702854000000, Close: 1.49},&#xD;&#xA;  { Date: 1703458800000, Close: 1.49},&#xD;&#xA;  { Date: 1704063600000, Close: 1.49},&#xD;&#xA;  { Date: 1704668400000, Close: 1.49},&#xD;&#xA;  { Date: 1707692400000, Close: 1.29},&#xD;&#xA;  { Date: 1708297200000, Close: 0.99},&#xD;&#xA;  { Date: 1708902000000, Close: 0.99},&#xD;&#xA;  { Date: 1709506800000, Close: 0.99},&#xD;&#xA;  { Date: 1710111600000, Close: 0.99},&#xD;&#xA;  { Date: 1710716400000, Close: 0.99},&#xD;&#xA;  { Date: 1711321200000, Close: 0.99},&#xD;&#xA;  { Date: 1726441200000, Close: 1.69},&#xD;&#xA;  { Date: 1727046000000, Close: 1.29},&#xD;&#xA;  { Date: 1727650800000, Close: 1.29},&#xD;&#xA;  { Date: 1728255600000, Close: 1.29},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Rattata</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/061---rattata/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/061---rattata/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149385.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.35},&#xD;&#xA;  { Date: 1593817200000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.99},&#xD;&#xA;  { Date: 1606690800000, Close: 0.99},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 0.99},&#xD;&#xA;  { Date: 1608505200000, Close: 0.99},&#xD;&#xA;  { Date: 1609110000000, Close: 0.99},&#xD;&#xA;  { Date: 1609714800000, Close: 0.79},&#xD;&#xA;  { Date: 1610233200000, Close: 0.79},&#xD;&#xA;  { Date: 1610924400000, Close: 0.79},&#xD;&#xA;  { Date: 1611529200000, Close: 0.79},&#xD;&#xA;  { Date: 1612134000000, Close: 0.69},&#xD;&#xA;  { Date: 1612738800000, Close: 0.69},&#xD;&#xA;  { Date: 1613343600000, Close: 0.69},&#xD;&#xA;  { Date: 1613948400000, Close: 0.69},&#xD;&#xA;  { Date: 1614553200000, Close: 0.69},&#xD;&#xA;  { Date: 1615158000000, Close: 0.69},&#xD;&#xA;  { Date: 1615762800000, Close: 0.69},&#xD;&#xA;  { Date: 1616367600000, Close: 0.69},&#xD;&#xA;  { Date: 1616972400000, Close: 0.69},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.59},&#xD;&#xA;  { Date: 1620601200000, Close: 0.59},&#xD;&#xA;  { Date: 1621206000000, Close: 0.59},&#xD;&#xA;  { Date: 1621810800000, Close: 0.59},&#xD;&#xA;  { Date: 1622415600000, Close: 0.59},&#xD;&#xA;  { Date: 1623020400000, Close: 0.59},&#xD;&#xA;  { Date: 1623625200000, Close: 0.59},&#xD;&#xA;  { Date: 1624230000000, Close: 0.59},&#xD;&#xA;  { Date: 1624834800000, Close: 0.59},&#xD;&#xA;  { Date: 1625439600000, Close: 0.59},&#xD;&#xA;  { Date: 1626044400000, Close: 0.59},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.49},&#xD;&#xA;  { Date: 1640559600000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1641769200000, Close: 0.39},&#xD;&#xA;  { Date: 1642374000000, Close: 0.39},&#xD;&#xA;  { Date: 1642978800000, Close: 0.39},&#xD;&#xA;  { Date: 1643583600000, Close: 0.39},&#xD;&#xA;  { Date: 1644188400000, Close: 0.39},&#xD;&#xA;  { Date: 1644793200000, Close: 0.39},&#xD;&#xA;  { Date: 1645398000000, Close: 0.39},&#xD;&#xA;  { Date: 1646002800000, Close: 0.39},&#xD;&#xA;  { Date: 1646607600000, Close: 0.39},&#xD;&#xA;  { Date: 1647212400000, Close: 0.39},&#xD;&#xA;  { Date: 1647817200000, Close: 0.39},&#xD;&#xA;  { Date: 1648422000000, Close: 0.39},&#xD;&#xA;  { Date: 1649026800000, Close: 0.39},&#xD;&#xA;  { Date: 1649631600000, Close: 0.39},&#xD;&#xA;  { Date: 1650236400000, Close: 0.39},&#xD;&#xA;  { Date: 1650841200000, Close: 0.39},&#xD;&#xA;  { Date: 1651446000000, Close: 0.39},&#xD;&#xA;  { Date: 1652050800000, Close: 0.39},&#xD;&#xA;  { Date: 1652655600000, Close: 0.39},&#xD;&#xA;  { Date: 1653260400000, Close: 0.39},&#xD;&#xA;  { Date: 1653865200000, Close: 0.39},&#xD;&#xA;  { Date: 1654470000000, Close: 0.39},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.39},&#xD;&#xA;  { Date: 1679266800000, Close: 0.39},&#xD;&#xA;  { Date: 1679871600000, Close: 0.39},&#xD;&#xA;  { Date: 1680476400000, Close: 0.39},&#xD;&#xA;  { Date: 1681081200000, Close: 0.39},&#xD;&#xA;  { Date: 1681686000000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.39},&#xD;&#xA;  { Date: 1682895600000, Close: 0.39},&#xD;&#xA;  { Date: 1683500400000, Close: 0.39},&#xD;&#xA;  { Date: 1684105200000, Close: 0.39},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1685314800000, Close: 0.39},&#xD;&#xA;  { Date: 1685919600000, Close: 0.39},&#xD;&#xA;  { Date: 1686524400000, Close: 0.39},&#xD;&#xA;  { Date: 1689548400000, Close: 0.39},&#xD;&#xA;  { Date: 1691967600000, Close: 0.39},&#xD;&#xA;  { Date: 1692572400000, Close: 0.39},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1703458800000, Close: 0.39},&#xD;&#xA;  { Date: 1704063600000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.39},&#xD;&#xA;  { Date: 1705273200000, Close: 0.39},&#xD;&#xA;  { Date: 1705878000000, Close: 0.39},&#xD;&#xA;  { Date: 1706482800000, Close: 0.49},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Revive</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/089---revive/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/089---revive/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149390.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.99},&#xD;&#xA;  { Date: 1591398000000, Close: 2.09},&#xD;&#xA;  { Date: 1593385200000, Close: 2.09},&#xD;&#xA;  { Date: 1593817200000, Close: 2.09},&#xD;&#xA;  { Date: 1600383600000, Close: 2.99},&#xD;&#xA;  { Date: 1601247600000, Close: 2.99},&#xD;&#xA;  { Date: 1601852400000, Close: 2.99},&#xD;&#xA;  { Date: 1602457200000, Close: 2.99},&#xD;&#xA;  { Date: 1603062000000, Close: 3.09},&#xD;&#xA;  { Date: 1603666800000, Close: 3.09},&#xD;&#xA;  { Date: 1604271600000, Close: 3.19},&#xD;&#xA;  { Date: 1604876400000, Close: 3.19},&#xD;&#xA;  { Date: 1606086000000, Close: 4.49},&#xD;&#xA;  { Date: 1606690800000, Close: 4.49},&#xD;&#xA;  { Date: 1607295600000, Close: 4.99},&#xD;&#xA;  { Date: 1607900400000, Close: 4.99},&#xD;&#xA;  { Date: 1608505200000, Close: 4.99},&#xD;&#xA;  { Date: 1609110000000, Close: 4.99},&#xD;&#xA;  { Date: 1609714800000, Close: 3.99},&#xD;&#xA;  { Date: 1610233200000, Close: 4.89},&#xD;&#xA;  { Date: 1610924400000, Close: 4.99},&#xD;&#xA;  { Date: 1611529200000, Close: 4.99},&#xD;&#xA;  { Date: 1612134000000, Close: 4.99},&#xD;&#xA;  { Date: 1612738800000, Close: 4.99},&#xD;&#xA;  { Date: 1613343600000, Close: 4.99},&#xD;&#xA;  { Date: 1613948400000, Close: 4.99},&#xD;&#xA;  { Date: 1614553200000, Close: 4.99},&#xD;&#xA;  { Date: 1615158000000, Close: 4.99},&#xD;&#xA;  { Date: 1615762800000, Close: 4.99},&#xD;&#xA;  { Date: 1616367600000, Close: 4.99},&#xD;&#xA;  { Date: 1616972400000, Close: 4.99},&#xD;&#xA;  { Date: 1617577200000, Close: 4.49},&#xD;&#xA;  { Date: 1618182000000, Close: 3.99},&#xD;&#xA;  { Date: 1618786800000, Close: 3.99},&#xD;&#xA;  { Date: 1619391600000, Close: 3.99},&#xD;&#xA;  { Date: 1619996400000, Close: 3.99},&#xD;&#xA;  { Date: 1620601200000, Close: 3.99},&#xD;&#xA;  { Date: 1621206000000, Close: 3.49},&#xD;&#xA;  { Date: 1621810800000, Close: 3.79},&#xD;&#xA;  { Date: 1622415600000, Close: 3.79},&#xD;&#xA;  { Date: 1623020400000, Close: 3.79},&#xD;&#xA;  { Date: 1623625200000, Close: 3.79},&#xD;&#xA;  { Date: 1624230000000, Close: 3.79},&#xD;&#xA;  { Date: 1624834800000, Close: 2.99},&#xD;&#xA;  { Date: 1625439600000, Close: 2.99},&#xD;&#xA;  { Date: 1626044400000, Close: 2.99},&#xD;&#xA;  { Date: 1626649200000, Close: 2.49},&#xD;&#xA;  { Date: 1627254000000, Close: 1.99},&#xD;&#xA;  { Date: 1627858800000, Close: 1.99},&#xD;&#xA;  { Date: 1628463600000, Close: 1.99},&#xD;&#xA;  { Date: 1629068400000, Close: 1.79},&#xD;&#xA;  { Date: 1629673200000, Close: 1.69},&#xD;&#xA;  { Date: 1630278000000, Close: 1.69},&#xD;&#xA;  { Date: 1630882800000, Close: 1.49},&#xD;&#xA;  { Date: 1631487600000, Close: 1.49},&#xD;&#xA;  { Date: 1632092400000, Close: 1.49},&#xD;&#xA;  { Date: 1632697200000, Close: 1.19},&#xD;&#xA;  { Date: 1633302000000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.09},&#xD;&#xA;  { Date: 1634511600000, Close: 1.09},&#xD;&#xA;  { Date: 1635116400000, Close: 1.09},&#xD;&#xA;  { Date: 1635721200000, Close: 1.09},&#xD;&#xA;  { Date: 1636326000000, Close: 1.09},&#xD;&#xA;  { Date: 1636930800000, Close: 1.09},&#xD;&#xA;  { Date: 1637535600000, Close: 1.09},&#xD;&#xA;  { Date: 1638140400000, Close: 1.09},&#xD;&#xA;  { Date: 1638745200000, Close: 0.99},&#xD;&#xA;  { Date: 1639350000000, Close: 0.99},&#xD;&#xA;  { Date: 1639954800000, Close: 0.99},&#xD;&#xA;  { Date: 1640559600000, Close: 0.99},&#xD;&#xA;  { Date: 1641164400000, Close: 0.99},&#xD;&#xA;  { Date: 1641769200000, Close: 0.99},&#xD;&#xA;  { Date: 1642374000000, Close: 0.99},&#xD;&#xA;  { Date: 1642978800000, Close: 0.99},&#xD;&#xA;  { Date: 1643583600000, Close: 0.99},&#xD;&#xA;  { Date: 1644188400000, Close: 0.99},&#xD;&#xA;  { Date: 1644793200000, Close: 0.99},&#xD;&#xA;  { Date: 1645398000000, Close: 0.99},&#xD;&#xA;  { Date: 1646002800000, Close: 0.99},&#xD;&#xA;  { Date: 1646607600000, Close: 0.99},&#xD;&#xA;  { Date: 1647212400000, Close: 0.99},&#xD;&#xA;  { Date: 1647817200000, Close: 0.99},&#xD;&#xA;  { Date: 1648422000000, Close: 0.99},&#xD;&#xA;  { Date: 1649026800000, Close: 1.49},&#xD;&#xA;  { Date: 1649631600000, Close: 1.49},&#xD;&#xA;  { Date: 1650236400000, Close: 1.39},&#xD;&#xA;  { Date: 1650841200000, Close: 1.39},&#xD;&#xA;  { Date: 1651446000000, Close: 1.39},&#xD;&#xA;  { Date: 1652050800000, Close: 0.99},&#xD;&#xA;  { Date: 1652655600000, Close: 0.99},&#xD;&#xA;  { Date: 1653260400000, Close: 0.99},&#xD;&#xA;  { Date: 1653865200000, Close: 0.99},&#xD;&#xA;  { Date: 1654470000000, Close: 0.99},&#xD;&#xA;  { Date: 1655074800000, Close: 0.99},&#xD;&#xA;  { Date: 1655679600000, Close: 0.99},&#xD;&#xA;  { Date: 1656889200000, Close: 1.29},&#xD;&#xA;  { Date: 1657494000000, Close: 1.29},&#xD;&#xA;  { Date: 1658098800000, Close: 1.29},&#xD;&#xA;  { Date: 1658703600000, Close: 1.29},&#xD;&#xA;  { Date: 1659308400000, Close: 1.49},&#xD;&#xA;  { Date: 1659913200000, Close: 1.49},&#xD;&#xA;  { Date: 1660518000000, Close: 1.49},&#xD;&#xA;  { Date: 1661122800000, Close: 1.49},&#xD;&#xA;  { Date: 1662332400000, Close: 1.99},&#xD;&#xA;  { Date: 1663542000000, Close: 1.99},&#xD;&#xA;  { Date: 1664146800000, Close: 1.99},&#xD;&#xA;  { Date: 1664751600000, Close: 1.99},&#xD;&#xA;  { Date: 1665356400000, Close: 1.79},&#xD;&#xA;  { Date: 1666566000000, Close: 1.89},&#xD;&#xA;  { Date: 1667170800000, Close: 1.99},&#xD;&#xA;  { Date: 1667775600000, Close: 2.09},&#xD;&#xA;  { Date: 1668380400000, Close: 2.09},&#xD;&#xA;  { Date: 1668985200000, Close: 2.09},&#xD;&#xA;  { Date: 1669590000000, Close: 2.09},&#xD;&#xA;  { Date: 1670194800000, Close: 1.79},&#xD;&#xA;  { Date: 1670799600000, Close: 1.49},&#xD;&#xA;  { Date: 1671404400000, Close: 1.49},&#xD;&#xA;  { Date: 1672009200000, Close: 1.49},&#xD;&#xA;  { Date: 1672614000000, Close: 1.49},&#xD;&#xA;  { Date: 1674428400000, Close: 1.49},&#xD;&#xA;  { Date: 1681081200000, Close: 1.79},&#xD;&#xA;  { Date: 1681686000000, Close: 1.99},&#xD;&#xA;  { Date: 1682895600000, Close: 1.99},&#xD;&#xA;  { Date: 1683500400000, Close: 1.69},&#xD;&#xA;  { Date: 1688338800000, Close: 2.99},&#xD;&#xA;  { Date: 1693177200000, Close: 2.79},&#xD;&#xA;  { Date: 1693782000000, Close: 2.69},&#xD;&#xA;  { Date: 1695596400000, Close: 1.99},&#xD;&#xA;  { Date: 1696201200000, Close: 1.99},&#xD;&#xA;  { Date: 1696806000000, Close: 1.99},&#xD;&#xA;  { Date: 1697410800000, Close: 1.99},&#xD;&#xA;  { Date: 1698015600000, Close: 1.99},&#xD;&#xA;  { Date: 1698620400000, Close: 1.99},&#xD;&#xA;  { Date: 1699225200000, Close: 1.99},&#xD;&#xA;  { Date: 1699830000000, Close: 1.99},&#xD;&#xA;  { Date: 1700434800000, Close: 1.99},&#xD;&#xA;  { Date: 1701039600000, Close: 1.99},&#xD;&#xA;  { Date: 1701644400000, Close: 1.99},&#xD;&#xA;  { Date: 1702249200000, Close: 1.89},&#xD;&#xA;  { Date: 1702854000000, Close: 1.69},&#xD;&#xA;  { Date: 1703458800000, Close: 1.49},&#xD;&#xA;  { Date: 1704063600000, Close: 1.39},&#xD;&#xA;  { Date: 1706482800000, Close: 1.99},&#xD;&#xA;  { Date: 1708297200000, Close: 1.79},&#xD;&#xA;  { Date: 1708902000000, Close: 1.79},&#xD;&#xA;  { Date: 1709506800000, Close: 1.79},&#xD;&#xA;  { Date: 1710111600000, Close: 1.49},&#xD;&#xA;  { Date: 1710716400000, Close: 1.29},&#xD;&#xA;  { Date: 1711321200000, Close: 1.09},&#xD;&#xA;  { Date: 1711926000000, Close: 1.09},&#xD;&#xA;  { Date: 1714345200000, Close: 1.09},&#xD;&#xA;  { Date: 1719183600000, Close: 1.19},&#xD;&#xA;  { Date: 1727046000000, Close: 0.89},&#xD;&#xA;  { Date: 1727650800000, Close: 0.89},&#xD;&#xA;  { Date: 1728255600000, Close: 0.89},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Sandshrew</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/062---sandshrew/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/062---sandshrew/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149435.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.49},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601247600000, Close: 0.39},&#xD;&#xA;  { Date: 1601852400000, Close: 0.39},&#xD;&#xA;  { Date: 1602457200000, Close: 0.39},&#xD;&#xA;  { Date: 1606690800000, Close: 0.69},&#xD;&#xA;  { Date: 1608505200000, Close: 0.69},&#xD;&#xA;  { Date: 1609110000000, Close: 0.69},&#xD;&#xA;  { Date: 1609714800000, Close: 0.69},&#xD;&#xA;  { Date: 1610233200000, Close: 0.69},&#xD;&#xA;  { Date: 1610924400000, Close: 0.69},&#xD;&#xA;  { Date: 1611529200000, Close: 0.69},&#xD;&#xA;  { Date: 1612134000000, Close: 0.69},&#xD;&#xA;  { Date: 1612738800000, Close: 0.69},&#xD;&#xA;  { Date: 1613343600000, Close: 0.69},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.69},&#xD;&#xA;  { Date: 1615158000000, Close: 0.69},&#xD;&#xA;  { Date: 1615762800000, Close: 0.69},&#xD;&#xA;  { Date: 1616367600000, Close: 0.69},&#xD;&#xA;  { Date: 1616972400000, Close: 0.69},&#xD;&#xA;  { Date: 1617577200000, Close: 0.69},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.59},&#xD;&#xA;  { Date: 1620601200000, Close: 0.59},&#xD;&#xA;  { Date: 1621206000000, Close: 0.59},&#xD;&#xA;  { Date: 1621810800000, Close: 0.59},&#xD;&#xA;  { Date: 1622415600000, Close: 0.59},&#xD;&#xA;  { Date: 1623020400000, Close: 0.59},&#xD;&#xA;  { Date: 1623625200000, Close: 0.59},&#xD;&#xA;  { Date: 1624230000000, Close: 0.59},&#xD;&#xA;  { Date: 1624834800000, Close: 0.59},&#xD;&#xA;  { Date: 1625439600000, Close: 0.59},&#xD;&#xA;  { Date: 1626044400000, Close: 0.49},&#xD;&#xA;  { Date: 1626649200000, Close: 0.49},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.39},&#xD;&#xA;  { Date: 1636930800000, Close: 0.39},&#xD;&#xA;  { Date: 1637535600000, Close: 0.39},&#xD;&#xA;  { Date: 1638140400000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.40},&#xD;&#xA;  { Date: 1645398000000, Close: 0.49},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.49},&#xD;&#xA;  { Date: 1649631600000, Close: 0.49},&#xD;&#xA;  { Date: 1650236400000, Close: 0.49},&#xD;&#xA;  { Date: 1650841200000, Close: 0.49},&#xD;&#xA;  { Date: 1651446000000, Close: 0.49},&#xD;&#xA;  { Date: 1652050800000, Close: 0.39},&#xD;&#xA;  { Date: 1652655600000, Close: 0.39},&#xD;&#xA;  { Date: 1653260400000, Close: 0.39},&#xD;&#xA;  { Date: 1653865200000, Close: 0.39},&#xD;&#xA;  { Date: 1654470000000, Close: 0.39},&#xD;&#xA;  { Date: 1655074800000, Close: 0.39},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.49},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.49},&#xD;&#xA;  { Date: 1683500400000, Close: 0.59},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1700434800000, Close: 0.49},&#xD;&#xA;  { Date: 1701039600000, Close: 0.49},&#xD;&#xA;  { Date: 1701644400000, Close: 0.49},&#xD;&#xA;  { Date: 1702249200000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1710111600000, Close: 0.59},&#xD;&#xA;  { Date: 1710716400000, Close: 0.59},&#xD;&#xA;  { Date: 1711321200000, Close: 0.59},&#xD;&#xA;  { Date: 1713740400000, Close: 0.69},&#xD;&#xA;  { Date: 1714950000000, Close: 0.59},&#xD;&#xA;  { Date: 1725231600000, Close: 0.79},&#xD;&#xA;  { Date: 1728255600000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Scoop Up</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/078---scoop-up/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/078---scoop-up/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149440.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 2.49},&#xD;&#xA;  { Date: 1578524400000, Close: 2.99},&#xD;&#xA;  { Date: 1579215600000, Close: 2.99},&#xD;&#xA;  { Date: 1579820400000, Close: 3.49},&#xD;&#xA;  { Date: 1581030000000, Close: 3.99},&#xD;&#xA;  { Date: 1581375600000, Close: 3.99},&#xD;&#xA;  { Date: 1582066800000, Close: 4.99},&#xD;&#xA;  { Date: 1584486000000, Close: 4.49},&#xD;&#xA;  { Date: 1585695600000, Close: 3.99},&#xD;&#xA;  { Date: 1586646000000, Close: 4.29},&#xD;&#xA;  { Date: 1587164400000, Close: 3.99},&#xD;&#xA;  { Date: 1587423600000, Close: 3.99},&#xD;&#xA;  { Date: 1587682800000, Close: 4.29},&#xD;&#xA;  { Date: 1588201200000, Close: 4.49},&#xD;&#xA;  { Date: 1589238000000, Close: 4.99},&#xD;&#xA;  { Date: 1589583600000, Close: 5.99},&#xD;&#xA;  { Date: 1589929200000, Close: 6.49},&#xD;&#xA;  { Date: 1591398000000, Close: 6.99},&#xD;&#xA;  { Date: 1592521200000, Close: 8.99},&#xD;&#xA;  { Date: 1594767600000, Close: 9.19},&#xD;&#xA;  { Date: 1595286000000, Close: 8.99},&#xD;&#xA;  { Date: 1596754800000, Close: 10.49},&#xD;&#xA;  { Date: 1597791600000, Close: 9.99},&#xD;&#xA;  { Date: 1598482800000, Close: 9.99},&#xD;&#xA;  { Date: 1599087600000, Close: 9.99},&#xD;&#xA;  { Date: 1599606000000, Close: 10.49},&#xD;&#xA;  { Date: 1600124400000, Close: 9.99},&#xD;&#xA;  { Date: 1605135600000, Close: 12.99},&#xD;&#xA;  { Date: 1605567600000, Close: 12.99},&#xD;&#xA;  { Date: 1605654000000, Close: 13.99},&#xD;&#xA;  { Date: 1608073200000, Close: 12.49},&#xD;&#xA;  { Date: 1608159600000, Close: 11.99},&#xD;&#xA;  { Date: 1609196400000, Close: 10.99},&#xD;&#xA;  { Date: 1609282800000, Close: 9.99},&#xD;&#xA;  { Date: 1610578800000, Close: 9.89},&#xD;&#xA;  { Date: 1611788400000, Close: 9.99},&#xD;&#xA;  { Date: 1612306800000, Close: 10.49},&#xD;&#xA;  { Date: 1614207600000, Close: 10.99},&#xD;&#xA;  { Date: 1614812400000, Close: 9.99},&#xD;&#xA;  { Date: 1615503600000, Close: 8.99},&#xD;&#xA;  { Date: 1615849200000, Close: 9.59},&#xD;&#xA;  { Date: 1617750000000, Close: 8.99},&#xD;&#xA;  { Date: 1618354800000, Close: 9.49},&#xD;&#xA;  { Date: 1618614000000, Close: 8.99},&#xD;&#xA;  { Date: 1619218800000, Close: 9.39},&#xD;&#xA;  { Date: 1620082800000, Close: 9.39},&#xD;&#xA;  { Date: 1620169200000, Close: 9.45},&#xD;&#xA;  { Date: 1620860400000, Close: 8.99},&#xD;&#xA;  { Date: 1621378800000, Close: 9.29},&#xD;&#xA;  { Date: 1622761200000, Close: 8.99},&#xD;&#xA;  { Date: 1626908400000, Close: 8.49},&#xD;&#xA;  { Date: 1627945200000, Close: 6.99},&#xD;&#xA;  { Date: 1628895600000, Close: 6.49},&#xD;&#xA;  { Date: 1630710000000, Close: 6.99},&#xD;&#xA;  { Date: 1632178800000, Close: 6.39},&#xD;&#xA;  { Date: 1634252400000, Close: 5.99},&#xD;&#xA;  { Date: 1634943600000, Close: 6.49},&#xD;&#xA;  { Date: 1636153200000, Close: 7.99},&#xD;&#xA;  { Date: 1636498800000, Close: 7.99},&#xD;&#xA;  { Date: 1637190000000, Close: 7.99},&#xD;&#xA;  { Date: 1638572400000, Close: 7.99},&#xD;&#xA;  { Date: 1639177200000, Close: 7.99},&#xD;&#xA;  { Date: 1639782000000, Close: 8.39},&#xD;&#xA;  { Date: 1640732400000, Close: 8.39},&#xD;&#xA;  { Date: 1641337200000, Close: 8.39},&#xD;&#xA;  { Date: 1641510000000, Close: 8.99},&#xD;&#xA;  { Date: 1642633200000, Close: 8.99},&#xD;&#xA;  { Date: 1643151600000, Close: 8.39},&#xD;&#xA;  { Date: 1645052400000, Close: 8.99},&#xD;&#xA;  { Date: 1646089200000, Close: 8.39},&#xD;&#xA;  { Date: 1646348400000, Close: 7.49},&#xD;&#xA;  { Date: 1649890800000, Close: 7.99},&#xD;&#xA;  { Date: 1652482800000, Close: 8.49},&#xD;&#xA;  { Date: 1653433200000, Close: 8.49},&#xD;&#xA;  { Date: 1655334000000, Close: 8.99},&#xD;&#xA;  { Date: 1655852400000, Close: 8.99},&#xD;&#xA;  { Date: 1657321200000, Close: 8.99},&#xD;&#xA;  { Date: 1661814000000, Close: 9.99},&#xD;&#xA;  { Date: 1662505200000, Close: 9.99},&#xD;&#xA;  { Date: 1666393200000, Close: 12.99},&#xD;&#xA;  { Date: 1666738800000, Close: 11.49},&#xD;&#xA;  { Date: 1668121200000, Close: 9.99},&#xD;&#xA;  { Date: 1669071600000, Close: 8.79},&#xD;&#xA;  { Date: 1670022000000, Close: 8.19},&#xD;&#xA;  { Date: 1670540400000, Close: 6.99},&#xD;&#xA;  { Date: 1671490800000, Close: 6.39},&#xD;&#xA;  { Date: 1672527600000, Close: 5.79},&#xD;&#xA;  { Date: 1672614000000, Close: 4.99},&#xD;&#xA;  { Date: 1673564400000, Close: 4.39},&#xD;&#xA;  { Date: 1677625200000, Close: 4.39},&#xD;&#xA;  { Date: 1682722800000, Close: 4.69},&#xD;&#xA;  { Date: 1688166000000, Close: 5.59},&#xD;&#xA;  { Date: 1692658800000, Close: 5.89},&#xD;&#xA;  { Date: 1692918000000, Close: 6.99},&#xD;&#xA;  { Date: 1693609200000, Close: 7.99},&#xD;&#xA;  { Date: 1698966000000, Close: 8.99},&#xD;&#xA;  { Date: 1700089200000, Close: 8.99},&#xD;&#xA;  { Date: 1702335600000, Close: 9.99},&#xD;&#xA;  { Date: 1702854000000, Close: 8.79},&#xD;&#xA;  { Date: 1703199600000, Close: 7.99},&#xD;&#xA;  { Date: 1706396400000, Close: 7.99},&#xD;&#xA;  { Date: 1707174000000, Close: 7.99},&#xD;&#xA;  { Date: 1709161200000, Close: 7.99},&#xD;&#xA;  { Date: 1714172400000, Close: 8.99},&#xD;&#xA;  { Date: 1718751600000, Close: 8.99},&#xD;&#xA;  { Date: 1727737200000, Close: 9.99},&#xD;&#xA;  { Date: 1728428400000, Close: 9.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Seel</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/041---seel/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/041---seel/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149448.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.79},&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.89},&#xD;&#xA;  { Date: 1593817200000, Close: 0.89},&#xD;&#xA;  { Date: 1600383600000, Close: 0.99},&#xD;&#xA;  { Date: 1601247600000, Close: 0.99},&#xD;&#xA;  { Date: 1601852400000, Close: 0.99},&#xD;&#xA;  { Date: 1602457200000, Close: 0.99},&#xD;&#xA;  { Date: 1603062000000, Close: 1.09},&#xD;&#xA;  { Date: 1604876400000, Close: 1.09},&#xD;&#xA;  { Date: 1606086000000, Close: 1.19},&#xD;&#xA;  { Date: 1607295600000, Close: 1.49},&#xD;&#xA;  { Date: 1607900400000, Close: 1.49},&#xD;&#xA;  { Date: 1608505200000, Close: 1.49},&#xD;&#xA;  { Date: 1609110000000, Close: 1.49},&#xD;&#xA;  { Date: 1609714800000, Close: 1.29},&#xD;&#xA;  { Date: 1610233200000, Close: 1.29},&#xD;&#xA;  { Date: 1610924400000, Close: 1.29},&#xD;&#xA;  { Date: 1611529200000, Close: 1.29},&#xD;&#xA;  { Date: 1612134000000, Close: 1.29},&#xD;&#xA;  { Date: 1612738800000, Close: 1.29},&#xD;&#xA;  { Date: 1613343600000, Close: 1.29},&#xD;&#xA;  { Date: 1613948400000, Close: 1.29},&#xD;&#xA;  { Date: 1614553200000, Close: 1.29},&#xD;&#xA;  { Date: 1615158000000, Close: 1.09},&#xD;&#xA;  { Date: 1615762800000, Close: 1.09},&#xD;&#xA;  { Date: 1616367600000, Close: 1.09},&#xD;&#xA;  { Date: 1616972400000, Close: 1.09},&#xD;&#xA;  { Date: 1617577200000, Close: 1.09},&#xD;&#xA;  { Date: 1618182000000, Close: 1.09},&#xD;&#xA;  { Date: 1618786800000, Close: 0.99},&#xD;&#xA;  { Date: 1619391600000, Close: 0.99},&#xD;&#xA;  { Date: 1619996400000, Close: 0.99},&#xD;&#xA;  { Date: 1620601200000, Close: 0.99},&#xD;&#xA;  { Date: 1621206000000, Close: 0.99},&#xD;&#xA;  { Date: 1621810800000, Close: 0.99},&#xD;&#xA;  { Date: 1622415600000, Close: 0.99},&#xD;&#xA;  { Date: 1623020400000, Close: 0.99},&#xD;&#xA;  { Date: 1623625200000, Close: 0.99},&#xD;&#xA;  { Date: 1624230000000, Close: 0.99},&#xD;&#xA;  { Date: 1624834800000, Close: 0.99},&#xD;&#xA;  { Date: 1625439600000, Close: 0.99},&#xD;&#xA;  { Date: 1626044400000, Close: 0.99},&#xD;&#xA;  { Date: 1626649200000, Close: 0.99},&#xD;&#xA;  { Date: 1627254000000, Close: 0.99},&#xD;&#xA;  { Date: 1627858800000, Close: 0.99},&#xD;&#xA;  { Date: 1628463600000, Close: 0.99},&#xD;&#xA;  { Date: 1629068400000, Close: 0.99},&#xD;&#xA;  { Date: 1629673200000, Close: 0.89},&#xD;&#xA;  { Date: 1630278000000, Close: 0.89},&#xD;&#xA;  { Date: 1633906800000, Close: 1.29},&#xD;&#xA;  { Date: 1634511600000, Close: 1.29},&#xD;&#xA;  { Date: 1635116400000, Close: 1.29},&#xD;&#xA;  { Date: 1635721200000, Close: 1.49},&#xD;&#xA;  { Date: 1636326000000, Close: 1.49},&#xD;&#xA;  { Date: 1639954800000, Close: 1.49},&#xD;&#xA;  { Date: 1640559600000, Close: 1.49},&#xD;&#xA;  { Date: 1641769200000, Close: 1.59},&#xD;&#xA;  { Date: 1643583600000, Close: 1.99},&#xD;&#xA;  { Date: 1644188400000, Close: 1.99},&#xD;&#xA;  { Date: 1644793200000, Close: 1.99},&#xD;&#xA;  { Date: 1645398000000, Close: 1.79},&#xD;&#xA;  { Date: 1646002800000, Close: 1.79},&#xD;&#xA;  { Date: 1646607600000, Close: 1.79},&#xD;&#xA;  { Date: 1647212400000, Close: 1.29},&#xD;&#xA;  { Date: 1647817200000, Close: 1.29},&#xD;&#xA;  { Date: 1648422000000, Close: 1.19},&#xD;&#xA;  { Date: 1649026800000, Close: 1.19},&#xD;&#xA;  { Date: 1649631600000, Close: 1.09},&#xD;&#xA;  { Date: 1650236400000, Close: 1.09},&#xD;&#xA;  { Date: 1650841200000, Close: 1.09},&#xD;&#xA;  { Date: 1651446000000, Close: 1.09},&#xD;&#xA;  { Date: 1652050800000, Close: 1.09},&#xD;&#xA;  { Date: 1652655600000, Close: 1.09},&#xD;&#xA;  { Date: 1653260400000, Close: 1.19},&#xD;&#xA;  { Date: 1653865200000, Close: 1.19},&#xD;&#xA;  { Date: 1654470000000, Close: 1.19},&#xD;&#xA;  { Date: 1655074800000, Close: 1.19},&#xD;&#xA;  { Date: 1655679600000, Close: 1.19},&#xD;&#xA;  { Date: 1656284400000, Close: 1.09},&#xD;&#xA;  { Date: 1656889200000, Close: 1.09},&#xD;&#xA;  { Date: 1663542000000, Close: 1.09},&#xD;&#xA;  { Date: 1664146800000, Close: 1.09},&#xD;&#xA;  { Date: 1664751600000, Close: 1.09},&#xD;&#xA;  { Date: 1665356400000, Close: 1.09},&#xD;&#xA;  { Date: 1665961200000, Close: 1.09},&#xD;&#xA;  { Date: 1666566000000, Close: 1.09},&#xD;&#xA;  { Date: 1667170800000, Close: 1.09},&#xD;&#xA;  { Date: 1667775600000, Close: 1.09},&#xD;&#xA;  { Date: 1668380400000, Close: 1.09},&#xD;&#xA;  { Date: 1668985200000, Close: 1.09},&#xD;&#xA;  { Date: 1669590000000, Close: 1.19},&#xD;&#xA;  { Date: 1670194800000, Close: 1.19},&#xD;&#xA;  { Date: 1670799600000, Close: 1.29},&#xD;&#xA;  { Date: 1671404400000, Close: 1.29},&#xD;&#xA;  { Date: 1672009200000, Close: 1.49},&#xD;&#xA;  { Date: 1673823600000, Close: 1.29},&#xD;&#xA;  { Date: 1675033200000, Close: 1.29},&#xD;&#xA;  { Date: 1678662000000, Close: 1.49},&#xD;&#xA;  { Date: 1679266800000, Close: 1.19},&#xD;&#xA;  { Date: 1679871600000, Close: 1.19},&#xD;&#xA;  { Date: 1680476400000, Close: 1.19},&#xD;&#xA;  { Date: 1683500400000, Close: 1.19},&#xD;&#xA;  { Date: 1688338800000, Close: 1.09},&#xD;&#xA;  { Date: 1693177200000, Close: 1.29},&#xD;&#xA;  { Date: 1702854000000, Close: 1.19},&#xD;&#xA;  { Date: 1703458800000, Close: 1.19},&#xD;&#xA;  { Date: 1704063600000, Close: 1.19},&#xD;&#xA;  { Date: 1707692400000, Close: 1.19},&#xD;&#xA;  { Date: 1708297200000, Close: 0.89},&#xD;&#xA;  { Date: 1708902000000, Close: 0.89},&#xD;&#xA;  { Date: 1709506800000, Close: 0.89},&#xD;&#xA;  { Date: 1710111600000, Close: 0.89},&#xD;&#xA;  { Date: 1710716400000, Close: 0.89},&#xD;&#xA;  { Date: 1711321200000, Close: 0.89},&#xD;&#xA;  { Date: 1711926000000, Close: 0.89},&#xD;&#xA;  { Date: 1727046000000, Close: 1.09},&#xD;&#xA;  { Date: 1727650800000, Close: 1.09},&#xD;&#xA;  { Date: 1728255600000, Close: 1.09},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Squirtle</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/063---squirtle/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/063---squirtle/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149469.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 1.09},&#xD;&#xA;  { Date: 1591398000000, Close: 2.49},&#xD;&#xA;  { Date: 1601247600000, Close: 3.99},&#xD;&#xA;  { Date: 1601852400000, Close: 4.49},&#xD;&#xA;  { Date: 1604271600000, Close: 10.99},&#xD;&#xA;  { Date: 1604876400000, Close: 10.99},&#xD;&#xA;  { Date: 1605481200000, Close: 10.99},&#xD;&#xA;  { Date: 1606086000000, Close: 10.99},&#xD;&#xA;  { Date: 1606690800000, Close: 9.99},&#xD;&#xA;  { Date: 1607295600000, Close: 6.99},&#xD;&#xA;  { Date: 1607900400000, Close: 9.99},&#xD;&#xA;  { Date: 1608505200000, Close: 6.99},&#xD;&#xA;  { Date: 1609110000000, Close: 6.99},&#xD;&#xA;  { Date: 1609714800000, Close: 8.99},&#xD;&#xA;  { Date: 1610233200000, Close: 8.99},&#xD;&#xA;  { Date: 1610924400000, Close: 6.49},&#xD;&#xA;  { Date: 1611529200000, Close: 6.49},&#xD;&#xA;  { Date: 1612134000000, Close: 6.49},&#xD;&#xA;  { Date: 1612738800000, Close: 5.99},&#xD;&#xA;  { Date: 1613343600000, Close: 5.99},&#xD;&#xA;  { Date: 1613948400000, Close: 5.99},&#xD;&#xA;  { Date: 1614553200000, Close: 5.99},&#xD;&#xA;  { Date: 1615158000000, Close: 6.99},&#xD;&#xA;  { Date: 1615762800000, Close: 6.99},&#xD;&#xA;  { Date: 1616367600000, Close: 6.99},&#xD;&#xA;  { Date: 1616972400000, Close: 6.99},&#xD;&#xA;  { Date: 1617577200000, Close: 6.99},&#xD;&#xA;  { Date: 1618182000000, Close: 6.49},&#xD;&#xA;  { Date: 1618786800000, Close: 5.49},&#xD;&#xA;  { Date: 1619996400000, Close: 5.99},&#xD;&#xA;  { Date: 1620601200000, Close: 5.99},&#xD;&#xA;  { Date: 1621206000000, Close: 5.99},&#xD;&#xA;  { Date: 1621810800000, Close: 5.99},&#xD;&#xA;  { Date: 1622415600000, Close: 5.79},&#xD;&#xA;  { Date: 1623020400000, Close: 5.89},&#xD;&#xA;  { Date: 1623625200000, Close: 5.49},&#xD;&#xA;  { Date: 1624230000000, Close: 5.49},&#xD;&#xA;  { Date: 1624834800000, Close: 4.99},&#xD;&#xA;  { Date: 1625439600000, Close: 5.45},&#xD;&#xA;  { Date: 1626044400000, Close: 5.59},&#xD;&#xA;  { Date: 1626649200000, Close: 5.49},&#xD;&#xA;  { Date: 1628463600000, Close: 5.99},&#xD;&#xA;  { Date: 1629068400000, Close: 5.99},&#xD;&#xA;  { Date: 1629673200000, Close: 5.99},&#xD;&#xA;  { Date: 1630278000000, Close: 5.99},&#xD;&#xA;  { Date: 1630882800000, Close: 5.49},&#xD;&#xA;  { Date: 1631487600000, Close: 5.49},&#xD;&#xA;  { Date: 1632092400000, Close: 5.49},&#xD;&#xA;  { Date: 1632697200000, Close: 5.49},&#xD;&#xA;  { Date: 1633302000000, Close: 4.99},&#xD;&#xA;  { Date: 1633906800000, Close: 4.99},&#xD;&#xA;  { Date: 1634511600000, Close: 4.99},&#xD;&#xA;  { Date: 1635116400000, Close: 4.99},&#xD;&#xA;  { Date: 1635721200000, Close: 4.99},&#xD;&#xA;  { Date: 1636326000000, Close: 4.99},&#xD;&#xA;  { Date: 1636930800000, Close: 4.99},&#xD;&#xA;  { Date: 1637535600000, Close: 4.39},&#xD;&#xA;  { Date: 1638140400000, Close: 4.49},&#xD;&#xA;  { Date: 1638745200000, Close: 4.49},&#xD;&#xA;  { Date: 1639350000000, Close: 4.49},&#xD;&#xA;  { Date: 1639954800000, Close: 3.99},&#xD;&#xA;  { Date: 1640559600000, Close: 3.99},&#xD;&#xA;  { Date: 1641164400000, Close: 3.99},&#xD;&#xA;  { Date: 1643583600000, Close: 4.99},&#xD;&#xA;  { Date: 1644188400000, Close: 4.99},&#xD;&#xA;  { Date: 1644793200000, Close: 4.99},&#xD;&#xA;  { Date: 1645398000000, Close: 5.49},&#xD;&#xA;  { Date: 1646002800000, Close: 5.49},&#xD;&#xA;  { Date: 1646607600000, Close: 5.49},&#xD;&#xA;  { Date: 1647212400000, Close: 5.19},&#xD;&#xA;  { Date: 1647817200000, Close: 5.19},&#xD;&#xA;  { Date: 1648422000000, Close: 4.49},&#xD;&#xA;  { Date: 1649026800000, Close: 4.49},&#xD;&#xA;  { Date: 1649631600000, Close: 4.79},&#xD;&#xA;  { Date: 1650236400000, Close: 4.79},&#xD;&#xA;  { Date: 1650841200000, Close: 4.79},&#xD;&#xA;  { Date: 1659308400000, Close: 5.29},&#xD;&#xA;  { Date: 1661122800000, Close: 5.99},&#xD;&#xA;  { Date: 1661727600000, Close: 5.99},&#xD;&#xA;  { Date: 1662332400000, Close: 5.99},&#xD;&#xA;  { Date: 1663542000000, Close: 5.99},&#xD;&#xA;  { Date: 1664146800000, Close: 5.99},&#xD;&#xA;  { Date: 1664751600000, Close: 5.99},&#xD;&#xA;  { Date: 1665356400000, Close: 5.39},&#xD;&#xA;  { Date: 1665961200000, Close: 4.99},&#xD;&#xA;  { Date: 1666566000000, Close: 4.99},&#xD;&#xA;  { Date: 1667170800000, Close: 4.99},&#xD;&#xA;  { Date: 1667775600000, Close: 3.79},&#xD;&#xA;  { Date: 1668380400000, Close: 3.79},&#xD;&#xA;  { Date: 1668985200000, Close: 3.79},&#xD;&#xA;  { Date: 1678057200000, Close: 3.29},&#xD;&#xA;  { Date: 1678662000000, Close: 3.29},&#xD;&#xA;  { Date: 1679266800000, Close: 3.49},&#xD;&#xA;  { Date: 1681081200000, Close: 3.99},&#xD;&#xA;  { Date: 1681686000000, Close: 3.99},&#xD;&#xA;  { Date: 1682290800000, Close: 3.39},&#xD;&#xA;  { Date: 1682895600000, Close: 3.39},&#xD;&#xA;  { Date: 1683500400000, Close: 3.19},&#xD;&#xA;  { Date: 1693782000000, Close: 2.49},&#xD;&#xA;  { Date: 1695596400000, Close: 2.19},&#xD;&#xA;  { Date: 1696201200000, Close: 2.19},&#xD;&#xA;  { Date: 1696806000000, Close: 2.19},&#xD;&#xA;  { Date: 1697410800000, Close: 2.19},&#xD;&#xA;  { Date: 1698015600000, Close: 1.99},&#xD;&#xA;  { Date: 1699225200000, Close: 1.99},&#xD;&#xA;  { Date: 1702854000000, Close: 1.99},&#xD;&#xA;  { Date: 1703458800000, Close: 1.99},&#xD;&#xA;  { Date: 1704063600000, Close: 1.99},&#xD;&#xA;  { Date: 1704668400000, Close: 2.49},&#xD;&#xA;  { Date: 1706482800000, Close: 2.49},&#xD;&#xA;  { Date: 1708297200000, Close: 2.49},&#xD;&#xA;  { Date: 1708902000000, Close: 2.49},&#xD;&#xA;  { Date: 1709506800000, Close: 2.99},&#xD;&#xA;  { Date: 1710111600000, Close: 2.99},&#xD;&#xA;  { Date: 1710716400000, Close: 2.99},&#xD;&#xA;  { Date: 1711321200000, Close: 2.49},&#xD;&#xA;  { Date: 1711926000000, Close: 2.49},&#xD;&#xA;  { Date: 1712530800000, Close: 2.49},&#xD;&#xA;  { Date: 1714345200000, Close: 2.49},&#xD;&#xA;  { Date: 1714950000000, Close: 2.49},&#xD;&#xA;  { Date: 1715554800000, Close: 2.49},&#xD;&#xA;  { Date: 1716764400000, Close: 2.49},&#xD;&#xA;  { Date: 1717369200000, Close: 2.49},&#xD;&#xA;  { Date: 1727046000000, Close: 2.59},&#xD;&#xA;  { Date: 1727650800000, Close: 2.59},&#xD;&#xA;  { Date: 1728255600000, Close: 2.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Starmie</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/064---starmie/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/064---starmie/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149471.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.79},&#xD;&#xA;  { Date: 1606690800000, Close: 0.99},&#xD;&#xA;  { Date: 1607295600000, Close: 0.99},&#xD;&#xA;  { Date: 1607900400000, Close: 0.99},&#xD;&#xA;  { Date: 1608505200000, Close: 0.99},&#xD;&#xA;  { Date: 1609110000000, Close: 0.99},&#xD;&#xA;  { Date: 1609714800000, Close: 0.79},&#xD;&#xA;  { Date: 1610233200000, Close: 0.79},&#xD;&#xA;  { Date: 1610924400000, Close: 0.79},&#xD;&#xA;  { Date: 1611529200000, Close: 0.79},&#xD;&#xA;  { Date: 1612134000000, Close: 0.79},&#xD;&#xA;  { Date: 1612738800000, Close: 0.79},&#xD;&#xA;  { Date: 1613343600000, Close: 0.79},&#xD;&#xA;  { Date: 1613948400000, Close: 0.79},&#xD;&#xA;  { Date: 1614553200000, Close: 0.79},&#xD;&#xA;  { Date: 1615158000000, Close: 0.79},&#xD;&#xA;  { Date: 1615762800000, Close: 0.79},&#xD;&#xA;  { Date: 1616367600000, Close: 0.79},&#xD;&#xA;  { Date: 1616972400000, Close: 0.79},&#xD;&#xA;  { Date: 1617577200000, Close: 0.79},&#xD;&#xA;  { Date: 1618182000000, Close: 0.79},&#xD;&#xA;  { Date: 1618786800000, Close: 0.69},&#xD;&#xA;  { Date: 1619391600000, Close: 0.69},&#xD;&#xA;  { Date: 1619996400000, Close: 0.69},&#xD;&#xA;  { Date: 1620601200000, Close: 0.69},&#xD;&#xA;  { Date: 1621206000000, Close: 0.69},&#xD;&#xA;  { Date: 1621810800000, Close: 0.69},&#xD;&#xA;  { Date: 1622415600000, Close: 0.69},&#xD;&#xA;  { Date: 1623020400000, Close: 0.69},&#xD;&#xA;  { Date: 1623625200000, Close: 0.69},&#xD;&#xA;  { Date: 1624230000000, Close: 0.69},&#xD;&#xA;  { Date: 1624834800000, Close: 0.59},&#xD;&#xA;  { Date: 1625439600000, Close: 0.59},&#xD;&#xA;  { Date: 1626044400000, Close: 0.59},&#xD;&#xA;  { Date: 1626649200000, Close: 0.59},&#xD;&#xA;  { Date: 1627254000000, Close: 0.59},&#xD;&#xA;  { Date: 1627858800000, Close: 0.59},&#xD;&#xA;  { Date: 1628463600000, Close: 0.59},&#xD;&#xA;  { Date: 1629068400000, Close: 0.59},&#xD;&#xA;  { Date: 1629673200000, Close: 0.59},&#xD;&#xA;  { Date: 1630278000000, Close: 0.59},&#xD;&#xA;  { Date: 1630882800000, Close: 0.59},&#xD;&#xA;  { Date: 1631487600000, Close: 0.59},&#xD;&#xA;  { Date: 1632092400000, Close: 0.59},&#xD;&#xA;  { Date: 1632697200000, Close: 0.59},&#xD;&#xA;  { Date: 1633302000000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.39},&#xD;&#xA;  { Date: 1638745200000, Close: 0.39},&#xD;&#xA;  { Date: 1639350000000, Close: 0.39},&#xD;&#xA;  { Date: 1639954800000, Close: 0.39},&#xD;&#xA;  { Date: 1640559600000, Close: 0.39},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.49},&#xD;&#xA;  { Date: 1649631600000, Close: 0.49},&#xD;&#xA;  { Date: 1650236400000, Close: 0.49},&#xD;&#xA;  { Date: 1650841200000, Close: 0.49},&#xD;&#xA;  { Date: 1651446000000, Close: 0.49},&#xD;&#xA;  { Date: 1652050800000, Close: 0.49},&#xD;&#xA;  { Date: 1652655600000, Close: 0.49},&#xD;&#xA;  { Date: 1656284400000, Close: 0.49},&#xD;&#xA;  { Date: 1656889200000, Close: 0.49},&#xD;&#xA;  { Date: 1657494000000, Close: 0.49},&#xD;&#xA;  { Date: 1663542000000, Close: 0.49},&#xD;&#xA;  { Date: 1664146800000, Close: 0.49},&#xD;&#xA;  { Date: 1664751600000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.49},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1678057200000, Close: 0.49},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1680476400000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.49},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.49},&#xD;&#xA;  { Date: 1683500400000, Close: 0.49},&#xD;&#xA;  { Date: 1684105200000, Close: 0.49},&#xD;&#xA;  { Date: 1684710000000, Close: 0.49},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1685919600000, Close: 0.49},&#xD;&#xA;  { Date: 1686524400000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1696806000000, Close: 0.39},&#xD;&#xA;  { Date: 1697410800000, Close: 0.39},&#xD;&#xA;  { Date: 1698015600000, Close: 0.39},&#xD;&#xA;  { Date: 1698620400000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.59},&#xD;&#xA;  { Date: 1705273200000, Close: 0.59},&#xD;&#xA;  { Date: 1705878000000, Close: 0.69},&#xD;&#xA;  { Date: 1708297200000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Staryu</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/065---staryu/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/065---staryu/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149472.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.35},&#xD;&#xA;  { Date: 1593817200000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.49},&#xD;&#xA;  { Date: 1608505200000, Close: 0.49},&#xD;&#xA;  { Date: 1609110000000, Close: 0.49},&#xD;&#xA;  { Date: 1609714800000, Close: 0.49},&#xD;&#xA;  { Date: 1610233200000, Close: 0.39},&#xD;&#xA;  { Date: 1610924400000, Close: 0.39},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.39},&#xD;&#xA;  { Date: 1625439600000, Close: 0.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1626649200000, Close: 0.39},&#xD;&#xA;  { Date: 1627254000000, Close: 0.39},&#xD;&#xA;  { Date: 1627858800000, Close: 0.39},&#xD;&#xA;  { Date: 1628463600000, Close: 0.39},&#xD;&#xA;  { Date: 1629068400000, Close: 0.39},&#xD;&#xA;  { Date: 1629673200000, Close: 0.39},&#xD;&#xA;  { Date: 1630278000000, Close: 0.39},&#xD;&#xA;  { Date: 1632092400000, Close: 0.39},&#xD;&#xA;  { Date: 1632697200000, Close: 0.39},&#xD;&#xA;  { Date: 1633302000000, Close: 0.39},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.49},&#xD;&#xA;  { Date: 1640559600000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1641769200000, Close: 0.49},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1644188400000, Close: 0.49},&#xD;&#xA;  { Date: 1644793200000, Close: 0.49},&#xD;&#xA;  { Date: 1645398000000, Close: 0.49},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.39},&#xD;&#xA;  { Date: 1649026800000, Close: 0.39},&#xD;&#xA;  { Date: 1649631600000, Close: 0.39},&#xD;&#xA;  { Date: 1650236400000, Close: 0.39},&#xD;&#xA;  { Date: 1650841200000, Close: 0.39},&#xD;&#xA;  { Date: 1651446000000, Close: 0.39},&#xD;&#xA;  { Date: 1652050800000, Close: 0.39},&#xD;&#xA;  { Date: 1652655600000, Close: 0.39},&#xD;&#xA;  { Date: 1653260400000, Close: 0.39},&#xD;&#xA;  { Date: 1653865200000, Close: 0.49},&#xD;&#xA;  { Date: 1654470000000, Close: 0.49},&#xD;&#xA;  { Date: 1655074800000, Close: 0.49},&#xD;&#xA;  { Date: 1655679600000, Close: 0.49},&#xD;&#xA;  { Date: 1656284400000, Close: 0.49},&#xD;&#xA;  { Date: 1656889200000, Close: 0.49},&#xD;&#xA;  { Date: 1657494000000, Close: 0.49},&#xD;&#xA;  { Date: 1658098800000, Close: 0.49},&#xD;&#xA;  { Date: 1658703600000, Close: 0.49},&#xD;&#xA;  { Date: 1659308400000, Close: 0.49},&#xD;&#xA;  { Date: 1659913200000, Close: 0.49},&#xD;&#xA;  { Date: 1660518000000, Close: 0.49},&#xD;&#xA;  { Date: 1661122800000, Close: 0.49},&#xD;&#xA;  { Date: 1661727600000, Close: 0.49},&#xD;&#xA;  { Date: 1663542000000, Close: 0.49},&#xD;&#xA;  { Date: 1664146800000, Close: 0.49},&#xD;&#xA;  { Date: 1664751600000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1673218800000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.39},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1675638000000, Close: 0.39},&#xD;&#xA;  { Date: 1676242800000, Close: 0.39},&#xD;&#xA;  { Date: 1676847600000, Close: 0.39},&#xD;&#xA;  { Date: 1677452400000, Close: 0.39},&#xD;&#xA;  { Date: 1678057200000, Close: 0.39},&#xD;&#xA;  { Date: 1681081200000, Close: 0.49},&#xD;&#xA;  { Date: 1681686000000, Close: 0.49},&#xD;&#xA;  { Date: 1682290800000, Close: 0.49},&#xD;&#xA;  { Date: 1682895600000, Close: 0.49},&#xD;&#xA;  { Date: 1683500400000, Close: 0.39},&#xD;&#xA;  { Date: 1684105200000, Close: 0.39},&#xD;&#xA;  { Date: 1684710000000, Close: 0.39},&#xD;&#xA;  { Date: 1685314800000, Close: 0.39},&#xD;&#xA;  { Date: 1686524400000, Close: 0.49},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1693177200000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1717369200000, Close: 0.59},&#xD;&#xA;  { Date: 1727046000000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Super Energy Removal</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/079---super-energy-removal/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/079---super-energy-removal/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149474.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577401200000, Close: 1.09},&#xD;&#xA;  { Date: 1578697200000, Close: 1.19},&#xD;&#xA;  { Date: 1580857200000, Close: 0.89},&#xD;&#xA;  { Date: 1581116400000, Close: 1.19},&#xD;&#xA;  { Date: 1582758000000, Close: 1.19},&#xD;&#xA;  { Date: 1584399600000, Close: 1.29},&#xD;&#xA;  { Date: 1584572400000, Close: 1.49},&#xD;&#xA;  { Date: 1585004400000, Close: 1.79},&#xD;&#xA;  { Date: 1585263600000, Close: 1.79},&#xD;&#xA;  { Date: 1585350000000, Close: 1.99},&#xD;&#xA;  { Date: 1595026800000, Close: 4.09},&#xD;&#xA;  { Date: 1595372400000, Close: 3.49},&#xD;&#xA;  { Date: 1596582000000, Close: 2.99},&#xD;&#xA;  { Date: 1596754800000, Close: 2.99},&#xD;&#xA;  { Date: 1597100400000, Close: 3.09},&#xD;&#xA;  { Date: 1598310000000, Close: 2.99},&#xD;&#xA;  { Date: 1599606000000, Close: 3.39},&#xD;&#xA;  { Date: 1599865200000, Close: 3.39},&#xD;&#xA;  { Date: 1601334000000, Close: 3.19},&#xD;&#xA;  { Date: 1601938800000, Close: 3.29},&#xD;&#xA;  { Date: 1602543600000, Close: 3.39},&#xD;&#xA;  { Date: 1603148400000, Close: 3.49},&#xD;&#xA;  { Date: 1604444400000, Close: 3.89},&#xD;&#xA;  { Date: 1605135600000, Close: 4.49},&#xD;&#xA;  { Date: 1605913200000, Close: 4.99},&#xD;&#xA;  { Date: 1606345200000, Close: 5.49},&#xD;&#xA;  { Date: 1607036400000, Close: 5.99},&#xD;&#xA;  { Date: 1607554800000, Close: 5.49},&#xD;&#xA;  { Date: 1608073200000, Close: 4.99},&#xD;&#xA;  { Date: 1608591600000, Close: 4.49},&#xD;&#xA;  { Date: 1609282800000, Close: 3.29},&#xD;&#xA;  { Date: 1609974000000, Close: 2.99},&#xD;&#xA;  { Date: 1610665200000, Close: 2.49},&#xD;&#xA;  { Date: 1612911600000, Close: 3.49},&#xD;&#xA;  { Date: 1614294000000, Close: 3.59},&#xD;&#xA;  { Date: 1614812400000, Close: 3.59},&#xD;&#xA;  { Date: 1615503600000, Close: 3.59},&#xD;&#xA;  { Date: 1616022000000, Close: 3.69},&#xD;&#xA;  { Date: 1617663600000, Close: 3.99},&#xD;&#xA;  { Date: 1618009200000, Close: 3.99},&#xD;&#xA;  { Date: 1618268400000, Close: 3.99},&#xD;&#xA;  { Date: 1618354800000, Close: 4.99},&#xD;&#xA;  { Date: 1618873200000, Close: 4.99},&#xD;&#xA;  { Date: 1620860400000, Close: 4.49},&#xD;&#xA;  { Date: 1621378800000, Close: 4.99},&#xD;&#xA;  { Date: 1624489200000, Close: 4.49},&#xD;&#xA;  { Date: 1626908400000, Close: 3.99},&#xD;&#xA;  { Date: 1627945200000, Close: 3.39},&#xD;&#xA;  { Date: 1628031600000, Close: 2.99},&#xD;&#xA;  { Date: 1628895600000, Close: 2.79},&#xD;&#xA;  { Date: 1630450800000, Close: 2.49},&#xD;&#xA;  { Date: 1632438000000, Close: 2.99},&#xD;&#xA;  { Date: 1633388400000, Close: 2.99},&#xD;&#xA;  { Date: 1634943600000, Close: 3.49},&#xD;&#xA;  { Date: 1635375600000, Close: 3.99},&#xD;&#xA;  { Date: 1635980400000, Close: 3.99},&#xD;&#xA;  { Date: 1639522800000, Close: 3.39},&#xD;&#xA;  { Date: 1646434800000, Close: 3.99},&#xD;&#xA;  { Date: 1647385200000, Close: 4.19},&#xD;&#xA;  { Date: 1647471600000, Close: 3.99},&#xD;&#xA;  { Date: 1647558000000, Close: 3.39},&#xD;&#xA;  { Date: 1648508400000, Close: 3.59},&#xD;&#xA;  { Date: 1648767600000, Close: 3.59},&#xD;&#xA;  { Date: 1649113200000, Close: 3.49},&#xD;&#xA;  { Date: 1649718000000, Close: 3.39},&#xD;&#xA;  { Date: 1650236400000, Close: 3.49},&#xD;&#xA;  { Date: 1651618800000, Close: 3.59},&#xD;&#xA;  { Date: 1651791600000, Close: 3.49},&#xD;&#xA;  { Date: 1652569200000, Close: 3.39},&#xD;&#xA;  { Date: 1653001200000, Close: 3.19},&#xD;&#xA;  { Date: 1653606000000, Close: 3.09},&#xD;&#xA;  { Date: 1654210800000, Close: 2.99},&#xD;&#xA;  { Date: 1655334000000, Close: 2.69},&#xD;&#xA;  { Date: 1655420400000, Close: 3.49},&#xD;&#xA;  { Date: 1657148400000, Close: 3.09},&#xD;&#xA;  { Date: 1657321200000, Close: 3.29},&#xD;&#xA;  { Date: 1661900400000, Close: 3.29},&#xD;&#xA;  { Date: 1664233200000, Close: 3.29},&#xD;&#xA;  { Date: 1665356400000, Close: 2.99},&#xD;&#xA;  { Date: 1667862000000, Close: 3.29},&#xD;&#xA;  { Date: 1668898800000, Close: 3.19},&#xD;&#xA;  { Date: 1669676400000, Close: 2.99},&#xD;&#xA;  { Date: 1670367600000, Close: 2.99},&#xD;&#xA;  { Date: 1672441200000, Close: 3.39},&#xD;&#xA;  { Date: 1672700400000, Close: 3.29},&#xD;&#xA;  { Date: 1673910000000, Close: 3.29},&#xD;&#xA;  { Date: 1674774000000, Close: 3.49},&#xD;&#xA;  { Date: 1676934000000, Close: 3.69},&#xD;&#xA;  { Date: 1678230000000, Close: 3.69},&#xD;&#xA;  { Date: 1678921200000, Close: 3.39},&#xD;&#xA;  { Date: 1680822000000, Close: 3.59},&#xD;&#xA;  { Date: 1680908400000, Close: 3.49},&#xD;&#xA;  { Date: 1681254000000, Close: 3.39},&#xD;&#xA;  { Date: 1681686000000, Close: 3.29},&#xD;&#xA;  { Date: 1682550000000, Close: 3.39},&#xD;&#xA;  { Date: 1682722800000, Close: 3.49},&#xD;&#xA;  { Date: 1683241200000, Close: 3.59},&#xD;&#xA;  { Date: 1684882800000, Close: 3.69},&#xD;&#xA;  { Date: 1685228400000, Close: 3.59},&#xD;&#xA;  { Date: 1693609200000, Close: 2.99},&#xD;&#xA;  { Date: 1696633200000, Close: 2.49},&#xD;&#xA;  { Date: 1697151600000, Close: 2.29},&#xD;&#xA;  { Date: 1699570800000, Close: 2.49},&#xD;&#xA;  { Date: 1701558000000, Close: 3.09},&#xD;&#xA;  { Date: 1701730800000, Close: 2.99},&#xD;&#xA;  { Date: 1702422000000, Close: 2.69},&#xD;&#xA;  { Date: 1702508400000, Close: 2.49},&#xD;&#xA;  { Date: 1703631600000, Close: 2.99},&#xD;&#xA;  { Date: 1706137200000, Close: 3.49},&#xD;&#xA;  { Date: 1707519600000, Close: 3.49},&#xD;&#xA;  { Date: 1707778800000, Close: 3.49},&#xD;&#xA;  { Date: 1711753200000, Close: 2.89},&#xD;&#xA;  { Date: 1716332400000, Close: 2.89},&#xD;&#xA;  { Date: 1726527600000, Close: 3.59},&#xD;&#xA;  { Date: 1728342000000, Close: 3.99},&#xD;&#xA;  { Date: 1728428400000, Close: 3.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Super Potion</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/090---super-potion/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/090---super-potion/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149475.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.35},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.35},&#xD;&#xA;  { Date: 1593817200000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.35},&#xD;&#xA;  { Date: 1603666800000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.35},&#xD;&#xA;  { Date: 1605481200000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.39},&#xD;&#xA;  { Date: 1608505200000, Close: 0.39},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1609714800000, Close: 0.35},&#xD;&#xA;  { Date: 1610233200000, Close: 0.35},&#xD;&#xA;  { Date: 1610924400000, Close: 0.35},&#xD;&#xA;  { Date: 1611529200000, Close: 0.35},&#xD;&#xA;  { Date: 1612134000000, Close: 0.35},&#xD;&#xA;  { Date: 1612738800000, Close: 0.35},&#xD;&#xA;  { Date: 1613343600000, Close: 0.35},&#xD;&#xA;  { Date: 1613948400000, Close: 0.35},&#xD;&#xA;  { Date: 1614553200000, Close: 0.35},&#xD;&#xA;  { Date: 1615158000000, Close: 0.35},&#xD;&#xA;  { Date: 1615762800000, Close: 0.35},&#xD;&#xA;  { Date: 1616367600000, Close: 0.35},&#xD;&#xA;  { Date: 1616972400000, Close: 0.35},&#xD;&#xA;  { Date: 1617577200000, Close: 0.35},&#xD;&#xA;  { Date: 1618182000000, Close: 0.35},&#xD;&#xA;  { Date: 1618786800000, Close: 0.35},&#xD;&#xA;  { Date: 1619391600000, Close: 0.35},&#xD;&#xA;  { Date: 1619996400000, Close: 0.35},&#xD;&#xA;  { Date: 1620601200000, Close: 0.35},&#xD;&#xA;  { Date: 1621206000000, Close: 0.35},&#xD;&#xA;  { Date: 1621810800000, Close: 0.35},&#xD;&#xA;  { Date: 1622415600000, Close: 0.35},&#xD;&#xA;  { Date: 1623020400000, Close: 0.35},&#xD;&#xA;  { Date: 1623625200000, Close: 0.35},&#xD;&#xA;  { Date: 1624230000000, Close: 0.35},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1625439600000, Close: 0.35},&#xD;&#xA;  { Date: 1626044400000, Close: 0.35},&#xD;&#xA;  { Date: 1626649200000, Close: 0.35},&#xD;&#xA;  { Date: 1627254000000, Close: 0.35},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1629068400000, Close: 0.35},&#xD;&#xA;  { Date: 1629673200000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1630882800000, Close: 0.35},&#xD;&#xA;  { Date: 1631487600000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.35},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.35},&#xD;&#xA;  { Date: 1670194800000, Close: 0.35},&#xD;&#xA;  { Date: 1670799600000, Close: 0.35},&#xD;&#xA;  { Date: 1671404400000, Close: 0.35},&#xD;&#xA;  { Date: 1672009200000, Close: 0.35},&#xD;&#xA;  { Date: 1672614000000, Close: 0.35},&#xD;&#xA;  { Date: 1673218800000, Close: 0.35},&#xD;&#xA;  { Date: 1673823600000, Close: 0.35},&#xD;&#xA;  { Date: 1674428400000, Close: 0.35},&#xD;&#xA;  { Date: 1675033200000, Close: 0.35},&#xD;&#xA;  { Date: 1675638000000, Close: 0.35},&#xD;&#xA;  { Date: 1676242800000, Close: 0.35},&#xD;&#xA;  { Date: 1676847600000, Close: 0.35},&#xD;&#xA;  { Date: 1677452400000, Close: 0.35},&#xD;&#xA;  { Date: 1678057200000, Close: 0.35},&#xD;&#xA;  { Date: 1678662000000, Close: 0.35},&#xD;&#xA;  { Date: 1679266800000, Close: 0.35},&#xD;&#xA;  { Date: 1679871600000, Close: 0.35},&#xD;&#xA;  { Date: 1680476400000, Close: 0.35},&#xD;&#xA;  { Date: 1681081200000, Close: 0.35},&#xD;&#xA;  { Date: 1681686000000, Close: 0.35},&#xD;&#xA;  { Date: 1682290800000, Close: 0.35},&#xD;&#xA;  { Date: 1682895600000, Close: 0.35},&#xD;&#xA;  { Date: 1683500400000, Close: 0.35},&#xD;&#xA;  { Date: 1684105200000, Close: 0.35},&#xD;&#xA;  { Date: 1684710000000, Close: 0.35},&#xD;&#xA;  { Date: 1685314800000, Close: 0.35},&#xD;&#xA;  { Date: 1685919600000, Close: 0.35},&#xD;&#xA;  { Date: 1686524400000, Close: 0.35},&#xD;&#xA;  { Date: 1687129200000, Close: 0.35},&#xD;&#xA;  { Date: 1687734000000, Close: 0.35},&#xD;&#xA;  { Date: 1688338800000, Close: 0.35},&#xD;&#xA;  { Date: 1688943600000, Close: 0.35},&#xD;&#xA;  { Date: 1689548400000, Close: 0.35},&#xD;&#xA;  { Date: 1690153200000, Close: 0.35},&#xD;&#xA;  { Date: 1690758000000, Close: 0.35},&#xD;&#xA;  { Date: 1691362800000, Close: 0.35},&#xD;&#xA;  { Date: 1691967600000, Close: 0.35},&#xD;&#xA;  { Date: 1692572400000, Close: 0.35},&#xD;&#xA;  { Date: 1693177200000, Close: 0.35},&#xD;&#xA;  { Date: 1693782000000, Close: 0.35},&#xD;&#xA;  { Date: 1694386800000, Close: 0.35},&#xD;&#xA;  { Date: 1694991600000, Close: 0.35},&#xD;&#xA;  { Date: 1695596400000, Close: 0.35},&#xD;&#xA;  { Date: 1696201200000, Close: 0.35},&#xD;&#xA;  { Date: 1696806000000, Close: 0.35},&#xD;&#xA;  { Date: 1697410800000, Close: 0.35},&#xD;&#xA;  { Date: 1698015600000, Close: 0.35},&#xD;&#xA;  { Date: 1698620400000, Close: 0.35},&#xD;&#xA;  { Date: 1699225200000, Close: 0.35},&#xD;&#xA;  { Date: 1699830000000, Close: 0.35},&#xD;&#xA;  { Date: 1700434800000, Close: 0.35},&#xD;&#xA;  { Date: 1701039600000, Close: 0.35},&#xD;&#xA;  { Date: 1701644400000, Close: 0.35},&#xD;&#xA;  { Date: 1702249200000, Close: 0.35},&#xD;&#xA;  { Date: 1702854000000, Close: 0.35},&#xD;&#xA;  { Date: 1703458800000, Close: 0.35},&#xD;&#xA;  { Date: 1704063600000, Close: 0.35},&#xD;&#xA;  { Date: 1704668400000, Close: 0.35},&#xD;&#xA;  { Date: 1705273200000, Close: 0.35},&#xD;&#xA;  { Date: 1705878000000, Close: 0.35},&#xD;&#xA;  { Date: 1706482800000, Close: 0.35},&#xD;&#xA;  { Date: 1707087600000, Close: 0.35},&#xD;&#xA;  { Date: 1707692400000, Close: 0.35},&#xD;&#xA;  { Date: 1708297200000, Close: 0.35},&#xD;&#xA;  { Date: 1708902000000, Close: 0.35},&#xD;&#xA;  { Date: 1709506800000, Close: 0.35},&#xD;&#xA;  { Date: 1710111600000, Close: 0.35},&#xD;&#xA;  { Date: 1710716400000, Close: 0.35},&#xD;&#xA;  { Date: 1711321200000, Close: 0.35},&#xD;&#xA;  { Date: 1711926000000, Close: 0.35},&#xD;&#xA;  { Date: 1712530800000, Close: 0.35},&#xD;&#xA;  { Date: 1713135600000, Close: 0.35},&#xD;&#xA;  { Date: 1713740400000, Close: 0.35},&#xD;&#xA;  { Date: 1714345200000, Close: 0.35},&#xD;&#xA;  { Date: 1714950000000, Close: 0.35},&#xD;&#xA;  { Date: 1715554800000, Close: 0.35},&#xD;&#xA;  { Date: 1716159600000, Close: 0.35},&#xD;&#xA;  { Date: 1716764400000, Close: 0.35},&#xD;&#xA;  { Date: 1717369200000, Close: 0.35},&#xD;&#xA;  { Date: 1717974000000, Close: 0.35},&#xD;&#xA;  { Date: 1718578800000, Close: 0.35},&#xD;&#xA;  { Date: 1719183600000, Close: 0.35},&#xD;&#xA;  { Date: 1719788400000, Close: 0.35},&#xD;&#xA;  { Date: 1720393200000, Close: 0.35},&#xD;&#xA;  { Date: 1720998000000, Close: 0.35},&#xD;&#xA;  { Date: 1721602800000, Close: 0.35},&#xD;&#xA;  { Date: 1722207600000, Close: 0.35},&#xD;&#xA;  { Date: 1722812400000, Close: 0.35},&#xD;&#xA;  { Date: 1727046000000, Close: 0.49},&#xD;&#xA;  { Date: 1727650800000, Close: 0.49},&#xD;&#xA;  { Date: 1728255600000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Switch</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/095---switch/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/095---switch/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149477.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.39},&#xD;&#xA;  { Date: 1593385200000, Close: 0.39},&#xD;&#xA;  { Date: 1593817200000, Close: 0.39},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.35},&#xD;&#xA;  { Date: 1603666800000, Close: 0.35},&#xD;&#xA;  { Date: 1604271600000, Close: 0.35},&#xD;&#xA;  { Date: 1604876400000, Close: 0.35},&#xD;&#xA;  { Date: 1605481200000, Close: 0.35},&#xD;&#xA;  { Date: 1606086000000, Close: 0.35},&#xD;&#xA;  { Date: 1606690800000, Close: 0.35},&#xD;&#xA;  { Date: 1607295600000, Close: 0.35},&#xD;&#xA;  { Date: 1607900400000, Close: 0.35},&#xD;&#xA;  { Date: 1608505200000, Close: 0.35},&#xD;&#xA;  { Date: 1609110000000, Close: 0.35},&#xD;&#xA;  { Date: 1609714800000, Close: 0.35},&#xD;&#xA;  { Date: 1610233200000, Close: 0.35},&#xD;&#xA;  { Date: 1610924400000, Close: 0.35},&#xD;&#xA;  { Date: 1611529200000, Close: 0.35},&#xD;&#xA;  { Date: 1612134000000, Close: 0.35},&#xD;&#xA;  { Date: 1612738800000, Close: 0.35},&#xD;&#xA;  { Date: 1613343600000, Close: 0.35},&#xD;&#xA;  { Date: 1613948400000, Close: 0.35},&#xD;&#xA;  { Date: 1614553200000, Close: 0.35},&#xD;&#xA;  { Date: 1615158000000, Close: 0.35},&#xD;&#xA;  { Date: 1615762800000, Close: 0.35},&#xD;&#xA;  { Date: 1616367600000, Close: 0.35},&#xD;&#xA;  { Date: 1616972400000, Close: 0.35},&#xD;&#xA;  { Date: 1617577200000, Close: 0.35},&#xD;&#xA;  { Date: 1618182000000, Close: 0.35},&#xD;&#xA;  { Date: 1618786800000, Close: 0.35},&#xD;&#xA;  { Date: 1619391600000, Close: 0.35},&#xD;&#xA;  { Date: 1619996400000, Close: 0.35},&#xD;&#xA;  { Date: 1620601200000, Close: 0.35},&#xD;&#xA;  { Date: 1621206000000, Close: 0.35},&#xD;&#xA;  { Date: 1621810800000, Close: 0.35},&#xD;&#xA;  { Date: 1622415600000, Close: 0.35},&#xD;&#xA;  { Date: 1623020400000, Close: 0.35},&#xD;&#xA;  { Date: 1623625200000, Close: 0.35},&#xD;&#xA;  { Date: 1624230000000, Close: 0.35},&#xD;&#xA;  { Date: 1624834800000, Close: 0.35},&#xD;&#xA;  { Date: 1625439600000, Close: 0.35},&#xD;&#xA;  { Date: 1626044400000, Close: 0.35},&#xD;&#xA;  { Date: 1626649200000, Close: 0.35},&#xD;&#xA;  { Date: 1627254000000, Close: 0.35},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1629068400000, Close: 0.35},&#xD;&#xA;  { Date: 1629673200000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1630882800000, Close: 0.35},&#xD;&#xA;  { Date: 1631487600000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.35},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.35},&#xD;&#xA;  { Date: 1670194800000, Close: 0.35},&#xD;&#xA;  { Date: 1670799600000, Close: 0.35},&#xD;&#xA;  { Date: 1671404400000, Close: 0.35},&#xD;&#xA;  { Date: 1672009200000, Close: 0.40},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.59},&#xD;&#xA;  { Date: 1676242800000, Close: 0.59},&#xD;&#xA;  { Date: 1679266800000, Close: 0.69},&#xD;&#xA;  { Date: 1679871600000, Close: 0.69},&#xD;&#xA;  { Date: 1680476400000, Close: 0.69},&#xD;&#xA;  { Date: 1681081200000, Close: 0.69},&#xD;&#xA;  { Date: 1681686000000, Close: 0.69},&#xD;&#xA;  { Date: 1682290800000, Close: 0.69},&#xD;&#xA;  { Date: 1682895600000, Close: 0.69},&#xD;&#xA;  { Date: 1686524400000, Close: 0.69},&#xD;&#xA;  { Date: 1689548400000, Close: 0.69},&#xD;&#xA;  { Date: 1690153200000, Close: 0.69},&#xD;&#xA;  { Date: 1690758000000, Close: 0.69},&#xD;&#xA;  { Date: 1693177200000, Close: 0.69},&#xD;&#xA;  { Date: 1696201200000, Close: 0.69},&#xD;&#xA;  { Date: 1696806000000, Close: 0.69},&#xD;&#xA;  { Date: 1697410800000, Close: 0.69},&#xD;&#xA;  { Date: 1698015600000, Close: 0.69},&#xD;&#xA;  { Date: 1698620400000, Close: 0.69},&#xD;&#xA;  { Date: 1699225200000, Close: 0.69},&#xD;&#xA;  { Date: 1699830000000, Close: 0.69},&#xD;&#xA;  { Date: 1700434800000, Close: 0.69},&#xD;&#xA;  { Date: 1701039600000, Close: 0.39},&#xD;&#xA;  { Date: 1701644400000, Close: 0.39},&#xD;&#xA;  { Date: 1702249200000, Close: 0.39},&#xD;&#xA;  { Date: 1702854000000, Close: 0.39},&#xD;&#xA;  { Date: 1703458800000, Close: 0.39},&#xD;&#xA;  { Date: 1704063600000, Close: 0.39},&#xD;&#xA;  { Date: 1704668400000, Close: 0.39},&#xD;&#xA;  { Date: 1705273200000, Close: 0.39},&#xD;&#xA;  { Date: 1705878000000, Close: 0.39},&#xD;&#xA;  { Date: 1706482800000, Close: 0.39},&#xD;&#xA;  { Date: 1707087600000, Close: 0.39},&#xD;&#xA;  { Date: 1707692400000, Close: 0.39},&#xD;&#xA;  { Date: 1708297200000, Close: 0.39},&#xD;&#xA;  { Date: 1708902000000, Close: 0.39},&#xD;&#xA;  { Date: 1709506800000, Close: 0.39},&#xD;&#xA;  { Date: 1710111600000, Close: 0.39},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1716764400000, Close: 0.59},&#xD;&#xA;  { Date: 1717369200000, Close: 0.59},&#xD;&#xA;  { Date: 1722207600000, Close: 0.69},&#xD;&#xA;  { Date: 1722812400000, Close: 0.69},&#xD;&#xA;  { Date: 1727046000000, Close: 0.79},&#xD;&#xA;  { Date: 1727650800000, Close: 0.79},&#xD;&#xA;  { Date: 1728255600000, Close: 0.79},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Tangela</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/066---tangela/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/066---tangela/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149478.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.59},&#xD;&#xA;  { Date: 1591398000000, Close: 0.45},&#xD;&#xA;  { Date: 1593385200000, Close: 0.45},&#xD;&#xA;  { Date: 1593817200000, Close: 0.45},&#xD;&#xA;  { Date: 1600383600000, Close: 0.39},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.59},&#xD;&#xA;  { Date: 1606690800000, Close: 0.59},&#xD;&#xA;  { Date: 1607295600000, Close: 0.59},&#xD;&#xA;  { Date: 1607900400000, Close: 0.59},&#xD;&#xA;  { Date: 1608505200000, Close: 0.59},&#xD;&#xA;  { Date: 1609110000000, Close: 0.59},&#xD;&#xA;  { Date: 1609714800000, Close: 0.59},&#xD;&#xA;  { Date: 1610233200000, Close: 0.59},&#xD;&#xA;  { Date: 1610924400000, Close: 0.59},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.49},&#xD;&#xA;  { Date: 1614553200000, Close: 0.49},&#xD;&#xA;  { Date: 1615762800000, Close: 0.49},&#xD;&#xA;  { Date: 1616367600000, Close: 0.49},&#xD;&#xA;  { Date: 1616972400000, Close: 0.49},&#xD;&#xA;  { Date: 1617577200000, Close: 0.49},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.59},&#xD;&#xA;  { Date: 1620601200000, Close: 0.59},&#xD;&#xA;  { Date: 1621206000000, Close: 0.59},&#xD;&#xA;  { Date: 1621810800000, Close: 0.59},&#xD;&#xA;  { Date: 1622415600000, Close: 0.59},&#xD;&#xA;  { Date: 1623020400000, Close: 0.59},&#xD;&#xA;  { Date: 1623625200000, Close: 0.59},&#xD;&#xA;  { Date: 1624230000000, Close: 0.59},&#xD;&#xA;  { Date: 1624834800000, Close: 0.59},&#xD;&#xA;  { Date: 1625439600000, Close: 0.59},&#xD;&#xA;  { Date: 1626044400000, Close: 0.59},&#xD;&#xA;  { Date: 1626649200000, Close: 0.59},&#xD;&#xA;  { Date: 1627254000000, Close: 0.59},&#xD;&#xA;  { Date: 1627858800000, Close: 0.59},&#xD;&#xA;  { Date: 1628463600000, Close: 0.59},&#xD;&#xA;  { Date: 1629068400000, Close: 0.59},&#xD;&#xA;  { Date: 1629673200000, Close: 0.59},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.49},&#xD;&#xA;  { Date: 1640559600000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1641769200000, Close: 0.39},&#xD;&#xA;  { Date: 1642374000000, Close: 0.39},&#xD;&#xA;  { Date: 1642978800000, Close: 0.39},&#xD;&#xA;  { Date: 1643583600000, Close: 0.39},&#xD;&#xA;  { Date: 1644188400000, Close: 0.39},&#xD;&#xA;  { Date: 1644793200000, Close: 0.39},&#xD;&#xA;  { Date: 1646607600000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.49},&#xD;&#xA;  { Date: 1649631600000, Close: 0.49},&#xD;&#xA;  { Date: 1650236400000, Close: 0.49},&#xD;&#xA;  { Date: 1650841200000, Close: 0.49},&#xD;&#xA;  { Date: 1655679600000, Close: 0.49},&#xD;&#xA;  { Date: 1656889200000, Close: 0.49},&#xD;&#xA;  { Date: 1660518000000, Close: 0.49},&#xD;&#xA;  { Date: 1661122800000, Close: 0.49},&#xD;&#xA;  { Date: 1661727600000, Close: 0.49},&#xD;&#xA;  { Date: 1662332400000, Close: 0.49},&#xD;&#xA;  { Date: 1662937200000, Close: 0.49},&#xD;&#xA;  { Date: 1663542000000, Close: 0.49},&#xD;&#xA;  { Date: 1664146800000, Close: 0.49},&#xD;&#xA;  { Date: 1664751600000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.49},&#xD;&#xA;  { Date: 1670799600000, Close: 0.49},&#xD;&#xA;  { Date: 1671404400000, Close: 0.49},&#xD;&#xA;  { Date: 1672009200000, Close: 0.59},&#xD;&#xA;  { Date: 1673823600000, Close: 0.59},&#xD;&#xA;  { Date: 1674428400000, Close: 0.59},&#xD;&#xA;  { Date: 1675033200000, Close: 0.59},&#xD;&#xA;  { Date: 1675638000000, Close: 0.59},&#xD;&#xA;  { Date: 1676242800000, Close: 0.59},&#xD;&#xA;  { Date: 1676847600000, Close: 0.59},&#xD;&#xA;  { Date: 1677452400000, Close: 0.59},&#xD;&#xA;  { Date: 1678057200000, Close: 0.59},&#xD;&#xA;  { Date: 1678662000000, Close: 0.49},&#xD;&#xA;  { Date: 1679266800000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1680476400000, Close: 0.59},&#xD;&#xA;  { Date: 1681081200000, Close: 0.59},&#xD;&#xA;  { Date: 1681686000000, Close: 0.59},&#xD;&#xA;  { Date: 1682290800000, Close: 0.59},&#xD;&#xA;  { Date: 1682895600000, Close: 0.59},&#xD;&#xA;  { Date: 1683500400000, Close: 0.59},&#xD;&#xA;  { Date: 1684105200000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1685314800000, Close: 0.49},&#xD;&#xA;  { Date: 1685919600000, Close: 0.49},&#xD;&#xA;  { Date: 1686524400000, Close: 0.49},&#xD;&#xA;  { Date: 1695596400000, Close: 0.39},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1696806000000, Close: 0.39},&#xD;&#xA;  { Date: 1698620400000, Close: 0.39},&#xD;&#xA;  { Date: 1701644400000, Close: 0.39},&#xD;&#xA;  { Date: 1702249200000, Close: 0.69},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1708297200000, Close: 0.49},&#xD;&#xA;  { Date: 1708902000000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.49},&#xD;&#xA;  { Date: 1710111600000, Close: 0.49},&#xD;&#xA;  { Date: 1710716400000, Close: 0.49},&#xD;&#xA;  { Date: 1711321200000, Close: 0.49},&#xD;&#xA;  { Date: 1711926000000, Close: 0.49},&#xD;&#xA;  { Date: 1712530800000, Close: 0.59},&#xD;&#xA;  { Date: 1713135600000, Close: 0.49},&#xD;&#xA;  { Date: 1713740400000, Close: 0.39},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Venusaur</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/015---venusaur/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/015---venusaur/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149513.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1575673200000, Close: 34.99},&#xD;&#xA;  { Date: 1576623600000, Close: 35.99},&#xD;&#xA;  { Date: 1578524400000, Close: 35.99},&#xD;&#xA;  { Date: 1579561200000, Close: 33.99},&#xD;&#xA;  { Date: 1579906800000, Close: 35.99},&#xD;&#xA;  { Date: 1580857200000, Close: 37.99},&#xD;&#xA;  { Date: 1580943600000, Close: 39.99},&#xD;&#xA;  { Date: 1581030000000, Close: 41.99},&#xD;&#xA;  { Date: 1582671600000, Close: 49.99},&#xD;&#xA;  { Date: 1583276400000, Close: 49.99},&#xD;&#xA;  { Date: 1583967600000, Close: 47.99},&#xD;&#xA;  { Date: 1584486000000, Close: 44.99},&#xD;&#xA;  { Date: 1585004400000, Close: 41.99},&#xD;&#xA;  { Date: 1585782000000, Close: 39.99},&#xD;&#xA;  { Date: 1587423600000, Close: 39.89},&#xD;&#xA;  { Date: 1587596400000, Close: 40.99},&#xD;&#xA;  { Date: 1589497200000, Close: 44.99},&#xD;&#xA;  { Date: 1590620400000, Close: 49.99},&#xD;&#xA;  { Date: 1591657200000, Close: 69.99},&#xD;&#xA;  { Date: 1593730800000, Close: 99.99},&#xD;&#xA;  { Date: 1594854000000, Close: 119.99},&#xD;&#xA;  { Date: 1595286000000, Close: 129.99},&#xD;&#xA;  { Date: 1596495600000, Close: 129.99},&#xD;&#xA;  { Date: 1596754800000, Close: 129.99},&#xD;&#xA;  { Date: 1598396400000, Close: 134.99},&#xD;&#xA;  { Date: 1600038000000, Close: 134.99},&#xD;&#xA;  { Date: 1600470000000, Close: 134.99},&#xD;&#xA;  { Date: 1601420400000, Close: 139.99},&#xD;&#xA;  { Date: 1601679600000, Close: 139.99},&#xD;&#xA;  { Date: 1602889200000, Close: 174.99},&#xD;&#xA;  { Date: 1603926000000, Close: 274.99},&#xD;&#xA;  { Date: 1605135600000, Close: 349.99},&#xD;&#xA;  { Date: 1606431600000, Close: 324.99},&#xD;&#xA;  { Date: 1606518000000, Close: 299.99},&#xD;&#xA;  { Date: 1606690800000, Close: 349.99},&#xD;&#xA;  { Date: 1606777200000, Close: 324.99},&#xD;&#xA;  { Date: 1606863600000, Close: 299.99},&#xD;&#xA;  { Date: 1606950000000, Close: 279.99},&#xD;&#xA;  { Date: 1607382000000, Close: 349.99},&#xD;&#xA;  { Date: 1608159600000, Close: 249.95},&#xD;&#xA;  { Date: 1609282800000, Close: 229.99},&#xD;&#xA;  { Date: 1610665200000, Close: 199.99},&#xD;&#xA;  { Date: 1612220400000, Close: 174.99},&#xD;&#xA;  { Date: 1612306800000, Close: 189.99},&#xD;&#xA;  { Date: 1614812400000, Close: 199.99},&#xD;&#xA;  { Date: 1615935600000, Close: 189.99},&#xD;&#xA;  { Date: 1617663600000, Close: 174.99},&#xD;&#xA;  { Date: 1618614000000, Close: 159.99},&#xD;&#xA;  { Date: 1619132400000, Close: 174.99},&#xD;&#xA;  { Date: 1621378800000, Close: 165.99},&#xD;&#xA;  { Date: 1623106800000, Close: 156.99},&#xD;&#xA;  { Date: 1623970800000, Close: 149.99},&#xD;&#xA;  { Date: 1625698800000, Close: 141.99},&#xD;&#xA;  { Date: 1627513200000, Close: 133.99},&#xD;&#xA;  { Date: 1628722800000, Close: 119.99},&#xD;&#xA;  { Date: 1632265200000, Close: 119.99},&#xD;&#xA;  { Date: 1633042800000, Close: 114.99},&#xD;&#xA;  { Date: 1633561200000, Close: 114.99},&#xD;&#xA;  { Date: 1634252400000, Close: 119.99},&#xD;&#xA;  { Date: 1634943600000, Close: 109.99},&#xD;&#xA;  { Date: 1643410800000, Close: 134.99},&#xD;&#xA;  { Date: 1643929200000, Close: 134.99},&#xD;&#xA;  { Date: 1645225200000, Close: 129.99},&#xD;&#xA;  { Date: 1647471600000, Close: 124.99},&#xD;&#xA;  { Date: 1649113200000, Close: 124.99},&#xD;&#xA;  { Date: 1654210800000, Close: 124.99},&#xD;&#xA;  { Date: 1654902000000, Close: 124.99},&#xD;&#xA;  { Date: 1660950000000, Close: 129.99},&#xD;&#xA;  { Date: 1661468400000, Close: 129.99},&#xD;&#xA;  { Date: 1664924400000, Close: 134.99},&#xD;&#xA;  { Date: 1671577200000, Close: 174.99},&#xD;&#xA;  { Date: 1676415600000, Close: 174.99},&#xD;&#xA;  { Date: 1679785200000, Close: 174.99},&#xD;&#xA;  { Date: 1680217200000, Close: 174.99},&#xD;&#xA;  { Date: 1682722800000, Close: 179.99},&#xD;&#xA;  { Date: 1683932400000, Close: 179.99},&#xD;&#xA;  { Date: 1684537200000, Close: 179.99},&#xD;&#xA;  { Date: 1685055600000, Close: 179.99},&#xD;&#xA;  { Date: 1688684400000, Close: 179.99},&#xD;&#xA;  { Date: 1695942000000, Close: 179.99},&#xD;&#xA;  { Date: 1699657200000, Close: 179.99},&#xD;&#xA;  { Date: 1703718000000, Close: 169.99},&#xD;&#xA;  { Date: 1706137200000, Close: 169.99},&#xD;&#xA;  { Date: 1707346800000, Close: 169.99},&#xD;&#xA;  { Date: 1711062000000, Close: 169.99},&#xD;&#xA;  { Date: 1713222000000, Close: 149.99},&#xD;&#xA;  { Date: 1715036400000, Close: 149.99},&#xD;&#xA;  { Date: 1725404400000, Close: 149.99},&#xD;&#xA;  { Date: 1727218800000, Close: 149.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Voltorb</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/067---voltorb/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/067---voltorb/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149521.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.89},&#xD;&#xA;  { Date: 1591398000000, Close: 0.89},&#xD;&#xA;  { Date: 1593385200000, Close: 0.99},&#xD;&#xA;  { Date: 1593817200000, Close: 0.99},&#xD;&#xA;  { Date: 1600383600000, Close: 0.99},&#xD;&#xA;  { Date: 1601247600000, Close: 0.99},&#xD;&#xA;  { Date: 1601852400000, Close: 0.99},&#xD;&#xA;  { Date: 1602457200000, Close: 0.99},&#xD;&#xA;  { Date: 1603062000000, Close: 1.09},&#xD;&#xA;  { Date: 1606086000000, Close: 1.49},&#xD;&#xA;  { Date: 1606690800000, Close: 1.79},&#xD;&#xA;  { Date: 1607295600000, Close: 2.29},&#xD;&#xA;  { Date: 1607900400000, Close: 2.49},&#xD;&#xA;  { Date: 1608505200000, Close: 2.99},&#xD;&#xA;  { Date: 1609110000000, Close: 2.99},&#xD;&#xA;  { Date: 1609714800000, Close: 2.49},&#xD;&#xA;  { Date: 1610233200000, Close: 2.49},&#xD;&#xA;  { Date: 1610924400000, Close: 2.29},&#xD;&#xA;  { Date: 1611529200000, Close: 2.29},&#xD;&#xA;  { Date: 1612134000000, Close: 2.29},&#xD;&#xA;  { Date: 1612738800000, Close: 2.29},&#xD;&#xA;  { Date: 1613343600000, Close: 2.29},&#xD;&#xA;  { Date: 1613948400000, Close: 1.99},&#xD;&#xA;  { Date: 1614553200000, Close: 1.99},&#xD;&#xA;  { Date: 1615158000000, Close: 1.99},&#xD;&#xA;  { Date: 1615762800000, Close: 1.99},&#xD;&#xA;  { Date: 1616367600000, Close: 1.99},&#xD;&#xA;  { Date: 1616972400000, Close: 1.99},&#xD;&#xA;  { Date: 1617577200000, Close: 1.99},&#xD;&#xA;  { Date: 1618182000000, Close: 1.79},&#xD;&#xA;  { Date: 1618786800000, Close: 1.75},&#xD;&#xA;  { Date: 1619391600000, Close: 1.75},&#xD;&#xA;  { Date: 1619996400000, Close: 1.75},&#xD;&#xA;  { Date: 1620601200000, Close: 1.49},&#xD;&#xA;  { Date: 1621206000000, Close: 1.29},&#xD;&#xA;  { Date: 1621810800000, Close: 1.29},&#xD;&#xA;  { Date: 1622415600000, Close: 1.09},&#xD;&#xA;  { Date: 1623020400000, Close: 1.09},&#xD;&#xA;  { Date: 1623625200000, Close: 1.09},&#xD;&#xA;  { Date: 1624230000000, Close: 1.09},&#xD;&#xA;  { Date: 1624834800000, Close: 1.09},&#xD;&#xA;  { Date: 1625439600000, Close: 1.09},&#xD;&#xA;  { Date: 1626044400000, Close: 1.09},&#xD;&#xA;  { Date: 1626649200000, Close: 1.09},&#xD;&#xA;  { Date: 1627254000000, Close: 1.09},&#xD;&#xA;  { Date: 1627858800000, Close: 1.09},&#xD;&#xA;  { Date: 1628463600000, Close: 1.09},&#xD;&#xA;  { Date: 1630278000000, Close: 1.09},&#xD;&#xA;  { Date: 1630882800000, Close: 1.09},&#xD;&#xA;  { Date: 1633906800000, Close: 1.29},&#xD;&#xA;  { Date: 1634511600000, Close: 1.29},&#xD;&#xA;  { Date: 1635116400000, Close: 1.49},&#xD;&#xA;  { Date: 1635721200000, Close: 1.49},&#xD;&#xA;  { Date: 1636326000000, Close: 1.49},&#xD;&#xA;  { Date: 1636930800000, Close: 1.49},&#xD;&#xA;  { Date: 1637535600000, Close: 1.49},&#xD;&#xA;  { Date: 1638140400000, Close: 1.49},&#xD;&#xA;  { Date: 1638745200000, Close: 1.49},&#xD;&#xA;  { Date: 1639350000000, Close: 1.19},&#xD;&#xA;  { Date: 1639954800000, Close: 1.19},&#xD;&#xA;  { Date: 1640559600000, Close: 1.19},&#xD;&#xA;  { Date: 1644793200000, Close: 1.09},&#xD;&#xA;  { Date: 1645398000000, Close: 1.09},&#xD;&#xA;  { Date: 1646002800000, Close: 1.09},&#xD;&#xA;  { Date: 1646607600000, Close: 1.09},&#xD;&#xA;  { Date: 1647212400000, Close: 1.09},&#xD;&#xA;  { Date: 1647817200000, Close: 1.09},&#xD;&#xA;  { Date: 1648422000000, Close: 0.99},&#xD;&#xA;  { Date: 1649026800000, Close: 0.99},&#xD;&#xA;  { Date: 1649631600000, Close: 0.99},&#xD;&#xA;  { Date: 1650236400000, Close: 0.99},&#xD;&#xA;  { Date: 1650841200000, Close: 0.99},&#xD;&#xA;  { Date: 1651446000000, Close: 0.99},&#xD;&#xA;  { Date: 1663542000000, Close: 1.19},&#xD;&#xA;  { Date: 1664146800000, Close: 1.19},&#xD;&#xA;  { Date: 1664751600000, Close: 1.19},&#xD;&#xA;  { Date: 1665356400000, Close: 1.19},&#xD;&#xA;  { Date: 1666566000000, Close: 1.19},&#xD;&#xA;  { Date: 1667170800000, Close: 1.19},&#xD;&#xA;  { Date: 1667775600000, Close: 1.19},&#xD;&#xA;  { Date: 1668380400000, Close: 1.19},&#xD;&#xA;  { Date: 1670799600000, Close: 1.19},&#xD;&#xA;  { Date: 1671404400000, Close: 1.19},&#xD;&#xA;  { Date: 1672614000000, Close: 1.29},&#xD;&#xA;  { Date: 1675033200000, Close: 1.29},&#xD;&#xA;  { Date: 1677452400000, Close: 0.69},&#xD;&#xA;  { Date: 1690153200000, Close: 2.99},&#xD;&#xA;  { Date: 1690758000000, Close: 2.99},&#xD;&#xA;  { Date: 1691362800000, Close: 2.99},&#xD;&#xA;  { Date: 1695596400000, Close: 2.39},&#xD;&#xA;  { Date: 1696201200000, Close: 2.39},&#xD;&#xA;  { Date: 1696806000000, Close: 2.39},&#xD;&#xA;  { Date: 1697410800000, Close: 2.39},&#xD;&#xA;  { Date: 1698015600000, Close: 2.29},&#xD;&#xA;  { Date: 1708297200000, Close: 2.29},&#xD;&#xA;  { Date: 1708902000000, Close: 2.29},&#xD;&#xA;  { Date: 1709506800000, Close: 1.99},&#xD;&#xA;  { Date: 1710111600000, Close: 1.99},&#xD;&#xA;  { Date: 1710716400000, Close: 1.99},&#xD;&#xA;  { Date: 1711321200000, Close: 1.99},&#xD;&#xA;  { Date: 1711926000000, Close: 1.99},&#xD;&#xA;  { Date: 1714345200000, Close: 2.49},&#xD;&#xA;  { Date: 1715554800000, Close: 2.99},&#xD;&#xA;  { Date: 1720393200000, Close: 2.99},&#xD;&#xA;  { Date: 1720998000000, Close: 2.99},&#xD;&#xA;  { Date: 1724022000000, Close: 2.39},&#xD;&#xA;  { Date: 1724626800000, Close: 2.39},&#xD;&#xA;  { Date: 1725231600000, Close: 2.39},&#xD;&#xA;  { Date: 1725836400000, Close: 2.39},&#xD;&#xA;  { Date: 1727046000000, Close: 2.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Vulpix</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/068---vulpix/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/068---vulpix/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149523.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.49},&#xD;&#xA;  { Date: 1591398000000, Close: 0.55},&#xD;&#xA;  { Date: 1593385200000, Close: 0.49},&#xD;&#xA;  { Date: 1593817200000, Close: 0.49},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.79},&#xD;&#xA;  { Date: 1607295600000, Close: 0.79},&#xD;&#xA;  { Date: 1607900400000, Close: 0.89},&#xD;&#xA;  { Date: 1608505200000, Close: 0.89},&#xD;&#xA;  { Date: 1609110000000, Close: 0.89},&#xD;&#xA;  { Date: 1609714800000, Close: 0.59},&#xD;&#xA;  { Date: 1610233200000, Close: 0.59},&#xD;&#xA;  { Date: 1610924400000, Close: 0.59},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.29},&#xD;&#xA;  { Date: 1619391600000, Close: 0.29},&#xD;&#xA;  { Date: 1619996400000, Close: 0.29},&#xD;&#xA;  { Date: 1620601200000, Close: 0.29},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1627254000000, Close: 0.49},&#xD;&#xA;  { Date: 1627858800000, Close: 0.49},&#xD;&#xA;  { Date: 1628463600000, Close: 0.49},&#xD;&#xA;  { Date: 1629068400000, Close: 0.49},&#xD;&#xA;  { Date: 1629673200000, Close: 0.49},&#xD;&#xA;  { Date: 1630278000000, Close: 0.49},&#xD;&#xA;  { Date: 1630882800000, Close: 0.49},&#xD;&#xA;  { Date: 1631487600000, Close: 0.49},&#xD;&#xA;  { Date: 1632092400000, Close: 0.49},&#xD;&#xA;  { Date: 1632697200000, Close: 0.49},&#xD;&#xA;  { Date: 1633302000000, Close: 0.49},&#xD;&#xA;  { Date: 1633906800000, Close: 0.49},&#xD;&#xA;  { Date: 1634511600000, Close: 0.49},&#xD;&#xA;  { Date: 1635116400000, Close: 0.49},&#xD;&#xA;  { Date: 1635721200000, Close: 0.49},&#xD;&#xA;  { Date: 1636326000000, Close: 0.49},&#xD;&#xA;  { Date: 1636930800000, Close: 0.49},&#xD;&#xA;  { Date: 1637535600000, Close: 0.49},&#xD;&#xA;  { Date: 1638140400000, Close: 0.49},&#xD;&#xA;  { Date: 1638745200000, Close: 0.49},&#xD;&#xA;  { Date: 1639350000000, Close: 0.49},&#xD;&#xA;  { Date: 1639954800000, Close: 0.49},&#xD;&#xA;  { Date: 1640559600000, Close: 0.49},&#xD;&#xA;  { Date: 1641164400000, Close: 0.49},&#xD;&#xA;  { Date: 1641769200000, Close: 0.49},&#xD;&#xA;  { Date: 1642374000000, Close: 0.49},&#xD;&#xA;  { Date: 1642978800000, Close: 0.49},&#xD;&#xA;  { Date: 1644793200000, Close: 0.59},&#xD;&#xA;  { Date: 1646002800000, Close: 0.59},&#xD;&#xA;  { Date: 1646607600000, Close: 0.59},&#xD;&#xA;  { Date: 1647212400000, Close: 0.59},&#xD;&#xA;  { Date: 1647817200000, Close: 0.59},&#xD;&#xA;  { Date: 1648422000000, Close: 0.59},&#xD;&#xA;  { Date: 1649026800000, Close: 0.59},&#xD;&#xA;  { Date: 1649631600000, Close: 0.59},&#xD;&#xA;  { Date: 1650236400000, Close: 0.59},&#xD;&#xA;  { Date: 1650841200000, Close: 0.59},&#xD;&#xA;  { Date: 1651446000000, Close: 0.59},&#xD;&#xA;  { Date: 1652050800000, Close: 0.59},&#xD;&#xA;  { Date: 1652655600000, Close: 0.59},&#xD;&#xA;  { Date: 1653260400000, Close: 0.59},&#xD;&#xA;  { Date: 1653865200000, Close: 0.59},&#xD;&#xA;  { Date: 1654470000000, Close: 0.59},&#xD;&#xA;  { Date: 1655074800000, Close: 0.59},&#xD;&#xA;  { Date: 1655679600000, Close: 0.59},&#xD;&#xA;  { Date: 1656284400000, Close: 0.59},&#xD;&#xA;  { Date: 1656889200000, Close: 0.59},&#xD;&#xA;  { Date: 1657494000000, Close: 0.59},&#xD;&#xA;  { Date: 1663542000000, Close: 0.79},&#xD;&#xA;  { Date: 1664146800000, Close: 0.79},&#xD;&#xA;  { Date: 1664751600000, Close: 0.79},&#xD;&#xA;  { Date: 1665356400000, Close: 0.79},&#xD;&#xA;  { Date: 1665961200000, Close: 0.79},&#xD;&#xA;  { Date: 1666566000000, Close: 0.79},&#xD;&#xA;  { Date: 1667170800000, Close: 0.79},&#xD;&#xA;  { Date: 1667775600000, Close: 0.79},&#xD;&#xA;  { Date: 1668380400000, Close: 0.79},&#xD;&#xA;  { Date: 1668985200000, Close: 0.79},&#xD;&#xA;  { Date: 1669590000000, Close: 0.79},&#xD;&#xA;  { Date: 1670194800000, Close: 0.79},&#xD;&#xA;  { Date: 1670799600000, Close: 0.79},&#xD;&#xA;  { Date: 1671404400000, Close: 0.79},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.49},&#xD;&#xA;  { Date: 1681081200000, Close: 0.69},&#xD;&#xA;  { Date: 1681686000000, Close: 0.69},&#xD;&#xA;  { Date: 1682290800000, Close: 0.59},&#xD;&#xA;  { Date: 1684710000000, Close: 0.59},&#xD;&#xA;  { Date: 1685314800000, Close: 0.59},&#xD;&#xA;  { Date: 1688338800000, Close: 0.69},&#xD;&#xA;  { Date: 1688943600000, Close: 0.69},&#xD;&#xA;  { Date: 1693177200000, Close: 0.59},&#xD;&#xA;  { Date: 1693782000000, Close: 0.69},&#xD;&#xA;  { Date: 1695596400000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.49},&#xD;&#xA;  { Date: 1696806000000, Close: 0.49},&#xD;&#xA;  { Date: 1697410800000, Close: 0.49},&#xD;&#xA;  { Date: 1698015600000, Close: 0.49},&#xD;&#xA;  { Date: 1698620400000, Close: 0.49},&#xD;&#xA;  { Date: 1699225200000, Close: 0.49},&#xD;&#xA;  { Date: 1704668400000, Close: 0.49},&#xD;&#xA;  { Date: 1706482800000, Close: 0.49},&#xD;&#xA;  { Date: 1707087600000, Close: 0.49},&#xD;&#xA;  { Date: 1707692400000, Close: 0.49},&#xD;&#xA;  { Date: 1709506800000, Close: 0.59},&#xD;&#xA;  { Date: 1710111600000, Close: 0.69},&#xD;&#xA;  { Date: 1710716400000, Close: 0.59},&#xD;&#xA;  { Date: 1711321200000, Close: 0.59},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1716764400000, Close: 0.49},&#xD;&#xA;  { Date: 1717369200000, Close: 0.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Wartortle</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/042---wartortle/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/042---wartortle/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149527.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.99},&#xD;&#xA;  { Date: 1600383600000, Close: 2.89},&#xD;&#xA;  { Date: 1601247600000, Close: 2.99},&#xD;&#xA;  { Date: 1604876400000, Close: 9.99},&#xD;&#xA;  { Date: 1605481200000, Close: 9.99},&#xD;&#xA;  { Date: 1606086000000, Close: 9.99},&#xD;&#xA;  { Date: 1606690800000, Close: 9.49},&#xD;&#xA;  { Date: 1607295600000, Close: 9.49},&#xD;&#xA;  { Date: 1607900400000, Close: 9.49},&#xD;&#xA;  { Date: 1608505200000, Close: 8.49},&#xD;&#xA;  { Date: 1609110000000, Close: 7.49},&#xD;&#xA;  { Date: 1609714800000, Close: 4.89},&#xD;&#xA;  { Date: 1610233200000, Close: 4.89},&#xD;&#xA;  { Date: 1610924400000, Close: 4.49},&#xD;&#xA;  { Date: 1611529200000, Close: 4.49},&#xD;&#xA;  { Date: 1612134000000, Close: 4.49},&#xD;&#xA;  { Date: 1612738800000, Close: 4.29},&#xD;&#xA;  { Date: 1613343600000, Close: 4.29},&#xD;&#xA;  { Date: 1613948400000, Close: 4.29},&#xD;&#xA;  { Date: 1614553200000, Close: 3.99},&#xD;&#xA;  { Date: 1615158000000, Close: 3.99},&#xD;&#xA;  { Date: 1615762800000, Close: 3.99},&#xD;&#xA;  { Date: 1616367600000, Close: 3.99},&#xD;&#xA;  { Date: 1616972400000, Close: 3.99},&#xD;&#xA;  { Date: 1617577200000, Close: 3.99},&#xD;&#xA;  { Date: 1618182000000, Close: 3.49},&#xD;&#xA;  { Date: 1618786800000, Close: 3.29},&#xD;&#xA;  { Date: 1619391600000, Close: 3.39},&#xD;&#xA;  { Date: 1619996400000, Close: 3.25},&#xD;&#xA;  { Date: 1620601200000, Close: 3.25},&#xD;&#xA;  { Date: 1621206000000, Close: 3.29},&#xD;&#xA;  { Date: 1621810800000, Close: 2.99},&#xD;&#xA;  { Date: 1622415600000, Close: 2.99},&#xD;&#xA;  { Date: 1623625200000, Close: 3.29},&#xD;&#xA;  { Date: 1624230000000, Close: 3.29},&#xD;&#xA;  { Date: 1624834800000, Close: 2.99},&#xD;&#xA;  { Date: 1625439600000, Close: 2.99},&#xD;&#xA;  { Date: 1626044400000, Close: 2.99},&#xD;&#xA;  { Date: 1626649200000, Close: 2.99},&#xD;&#xA;  { Date: 1627254000000, Close: 2.49},&#xD;&#xA;  { Date: 1627858800000, Close: 2.49},&#xD;&#xA;  { Date: 1628463600000, Close: 2.49},&#xD;&#xA;  { Date: 1629068400000, Close: 2.49},&#xD;&#xA;  { Date: 1629673200000, Close: 2.49},&#xD;&#xA;  { Date: 1630278000000, Close: 2.49},&#xD;&#xA;  { Date: 1633906800000, Close: 3.49},&#xD;&#xA;  { Date: 1634511600000, Close: 3.49},&#xD;&#xA;  { Date: 1635116400000, Close: 3.49},&#xD;&#xA;  { Date: 1635721200000, Close: 3.49},&#xD;&#xA;  { Date: 1636326000000, Close: 3.49},&#xD;&#xA;  { Date: 1636930800000, Close: 3.49},&#xD;&#xA;  { Date: 1637535600000, Close: 3.99},&#xD;&#xA;  { Date: 1638140400000, Close: 3.99},&#xD;&#xA;  { Date: 1638745200000, Close: 3.99},&#xD;&#xA;  { Date: 1639350000000, Close: 3.99},&#xD;&#xA;  { Date: 1639954800000, Close: 3.49},&#xD;&#xA;  { Date: 1640559600000, Close: 3.49},&#xD;&#xA;  { Date: 1646607600000, Close: 3.99},&#xD;&#xA;  { Date: 1647212400000, Close: 3.99},&#xD;&#xA;  { Date: 1647817200000, Close: 3.99},&#xD;&#xA;  { Date: 1648422000000, Close: 3.99},&#xD;&#xA;  { Date: 1649026800000, Close: 3.99},&#xD;&#xA;  { Date: 1649631600000, Close: 2.99},&#xD;&#xA;  { Date: 1662332400000, Close: 3.99},&#xD;&#xA;  { Date: 1662937200000, Close: 3.99},&#xD;&#xA;  { Date: 1663542000000, Close: 3.99},&#xD;&#xA;  { Date: 1664146800000, Close: 3.99},&#xD;&#xA;  { Date: 1664751600000, Close: 3.99},&#xD;&#xA;  { Date: 1665356400000, Close: 2.89},&#xD;&#xA;  { Date: 1665961200000, Close: 2.79},&#xD;&#xA;  { Date: 1667775600000, Close: 3.59},&#xD;&#xA;  { Date: 1668380400000, Close: 3.49},&#xD;&#xA;  { Date: 1668985200000, Close: 3.49},&#xD;&#xA;  { Date: 1670799600000, Close: 3.49},&#xD;&#xA;  { Date: 1671404400000, Close: 2.79},&#xD;&#xA;  { Date: 1674428400000, Close: 2.49},&#xD;&#xA;  { Date: 1675033200000, Close: 2.49},&#xD;&#xA;  { Date: 1677452400000, Close: 2.59},&#xD;&#xA;  { Date: 1679871600000, Close: 2.39},&#xD;&#xA;  { Date: 1681081200000, Close: 2.49},&#xD;&#xA;  { Date: 1685314800000, Close: 2.59},&#xD;&#xA;  { Date: 1691362800000, Close: 2.29},&#xD;&#xA;  { Date: 1695596400000, Close: 2.09},&#xD;&#xA;  { Date: 1697410800000, Close: 2.49},&#xD;&#xA;  { Date: 1699225200000, Close: 2.49},&#xD;&#xA;  { Date: 1708297200000, Close: 2.49},&#xD;&#xA;  { Date: 1714345200000, Close: 4.49},&#xD;&#xA;  { Date: 1716159600000, Close: 3.99},&#xD;&#xA;  { Date: 1716764400000, Close: 3.99},&#xD;&#xA;  { Date: 1717369200000, Close: 3.99},&#xD;&#xA;  { Date: 1717974000000, Close: 3.99},&#xD;&#xA;  { Date: 1718578800000, Close: 3.99},&#xD;&#xA;  { Date: 1719183600000, Close: 3.99},&#xD;&#xA;  { Date: 1719788400000, Close: 3.49},&#xD;&#xA;  { Date: 1720393200000, Close: 3.49},&#xD;&#xA;  { Date: 1720998000000, Close: 3.49},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Water Energy</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/102---water-energy/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/102---water-energy/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149528.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.69},&#xD;&#xA;  { Date: 1591398000000, Close: 0.79},&#xD;&#xA;  { Date: 1593385200000, Close: 0.69},&#xD;&#xA;  { Date: 1593817200000, Close: 0.69},&#xD;&#xA;  { Date: 1600383600000, Close: 0.49},&#xD;&#xA;  { Date: 1601247600000, Close: 0.49},&#xD;&#xA;  { Date: 1601852400000, Close: 0.49},&#xD;&#xA;  { Date: 1602457200000, Close: 0.49},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.39},&#xD;&#xA;  { Date: 1604271600000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1605481200000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.49},&#xD;&#xA;  { Date: 1606690800000, Close: 0.49},&#xD;&#xA;  { Date: 1607295600000, Close: 0.49},&#xD;&#xA;  { Date: 1607900400000, Close: 0.39},&#xD;&#xA;  { Date: 1608505200000, Close: 0.39},&#xD;&#xA;  { Date: 1609110000000, Close: 0.39},&#xD;&#xA;  { Date: 1609714800000, Close: 0.35},&#xD;&#xA;  { Date: 1610233200000, Close: 0.35},&#xD;&#xA;  { Date: 1610924400000, Close: 0.35},&#xD;&#xA;  { Date: 1611529200000, Close: 0.35},&#xD;&#xA;  { Date: 1612134000000, Close: 0.35},&#xD;&#xA;  { Date: 1612738800000, Close: 0.49},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.59},&#xD;&#xA;  { Date: 1618786800000, Close: 0.59},&#xD;&#xA;  { Date: 1619391600000, Close: 0.59},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1626649200000, Close: 0.39},&#xD;&#xA;  { Date: 1627254000000, Close: 0.35},&#xD;&#xA;  { Date: 1627858800000, Close: 0.35},&#xD;&#xA;  { Date: 1628463600000, Close: 0.35},&#xD;&#xA;  { Date: 1629068400000, Close: 0.35},&#xD;&#xA;  { Date: 1629673200000, Close: 0.35},&#xD;&#xA;  { Date: 1630278000000, Close: 0.35},&#xD;&#xA;  { Date: 1630882800000, Close: 0.35},&#xD;&#xA;  { Date: 1631487600000, Close: 0.35},&#xD;&#xA;  { Date: 1632092400000, Close: 0.35},&#xD;&#xA;  { Date: 1632697200000, Close: 0.35},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1641164400000, Close: 0.35},&#xD;&#xA;  { Date: 1641769200000, Close: 0.35},&#xD;&#xA;  { Date: 1642374000000, Close: 0.35},&#xD;&#xA;  { Date: 1642978800000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.35},&#xD;&#xA;  { Date: 1644188400000, Close: 0.35},&#xD;&#xA;  { Date: 1644793200000, Close: 0.35},&#xD;&#xA;  { Date: 1645398000000, Close: 0.35},&#xD;&#xA;  { Date: 1646002800000, Close: 0.35},&#xD;&#xA;  { Date: 1646607600000, Close: 0.35},&#xD;&#xA;  { Date: 1647212400000, Close: 0.35},&#xD;&#xA;  { Date: 1647817200000, Close: 0.35},&#xD;&#xA;  { Date: 1648422000000, Close: 0.35},&#xD;&#xA;  { Date: 1649026800000, Close: 0.35},&#xD;&#xA;  { Date: 1649631600000, Close: 0.35},&#xD;&#xA;  { Date: 1650236400000, Close: 0.35},&#xD;&#xA;  { Date: 1650841200000, Close: 0.35},&#xD;&#xA;  { Date: 1651446000000, Close: 0.35},&#xD;&#xA;  { Date: 1652050800000, Close: 0.35},&#xD;&#xA;  { Date: 1652655600000, Close: 0.35},&#xD;&#xA;  { Date: 1653260400000, Close: 0.35},&#xD;&#xA;  { Date: 1653865200000, Close: 0.35},&#xD;&#xA;  { Date: 1654470000000, Close: 0.35},&#xD;&#xA;  { Date: 1655074800000, Close: 0.35},&#xD;&#xA;  { Date: 1655679600000, Close: 0.35},&#xD;&#xA;  { Date: 1656284400000, Close: 0.35},&#xD;&#xA;  { Date: 1656889200000, Close: 0.35},&#xD;&#xA;  { Date: 1657494000000, Close: 0.35},&#xD;&#xA;  { Date: 1658098800000, Close: 0.35},&#xD;&#xA;  { Date: 1658703600000, Close: 0.35},&#xD;&#xA;  { Date: 1659308400000, Close: 0.35},&#xD;&#xA;  { Date: 1659913200000, Close: 0.35},&#xD;&#xA;  { Date: 1660518000000, Close: 0.35},&#xD;&#xA;  { Date: 1661122800000, Close: 0.35},&#xD;&#xA;  { Date: 1661727600000, Close: 0.35},&#xD;&#xA;  { Date: 1662332400000, Close: 0.35},&#xD;&#xA;  { Date: 1662937200000, Close: 0.35},&#xD;&#xA;  { Date: 1663542000000, Close: 0.35},&#xD;&#xA;  { Date: 1664146800000, Close: 0.35},&#xD;&#xA;  { Date: 1664751600000, Close: 0.35},&#xD;&#xA;  { Date: 1665356400000, Close: 0.35},&#xD;&#xA;  { Date: 1665961200000, Close: 0.35},&#xD;&#xA;  { Date: 1666566000000, Close: 0.35},&#xD;&#xA;  { Date: 1667170800000, Close: 0.35},&#xD;&#xA;  { Date: 1667775600000, Close: 0.35},&#xD;&#xA;  { Date: 1668380400000, Close: 0.35},&#xD;&#xA;  { Date: 1668985200000, Close: 0.35},&#xD;&#xA;  { Date: 1669590000000, Close: 0.35},&#xD;&#xA;  { Date: 1670194800000, Close: 0.35},&#xD;&#xA;  { Date: 1670799600000, Close: 0.35},&#xD;&#xA;  { Date: 1671404400000, Close: 0.35},&#xD;&#xA;  { Date: 1672009200000, Close: 0.35},&#xD;&#xA;  { Date: 1672614000000, Close: 0.49},&#xD;&#xA;  { Date: 1673218800000, Close: 0.49},&#xD;&#xA;  { Date: 1673823600000, Close: 0.49},&#xD;&#xA;  { Date: 1674428400000, Close: 0.49},&#xD;&#xA;  { Date: 1675033200000, Close: 0.49},&#xD;&#xA;  { Date: 1675638000000, Close: 0.49},&#xD;&#xA;  { Date: 1676242800000, Close: 0.49},&#xD;&#xA;  { Date: 1676847600000, Close: 0.49},&#xD;&#xA;  { Date: 1677452400000, Close: 0.49},&#xD;&#xA;  { Date: 1679871600000, Close: 0.59},&#xD;&#xA;  { Date: 1680476400000, Close: 0.59},&#xD;&#xA;  { Date: 1681081200000, Close: 0.59},&#xD;&#xA;  { Date: 1681686000000, Close: 0.59},&#xD;&#xA;  { Date: 1682290800000, Close: 0.59},&#xD;&#xA;  { Date: 1682895600000, Close: 0.59},&#xD;&#xA;  { Date: 1683500400000, Close: 0.69},&#xD;&#xA;  { Date: 1685314800000, Close: 0.69},&#xD;&#xA;  { Date: 1686524400000, Close: 0.69},&#xD;&#xA;  { Date: 1689548400000, Close: 0.79},&#xD;&#xA;  { Date: 1690153200000, Close: 0.89},&#xD;&#xA;  { Date: 1690758000000, Close: 0.89},&#xD;&#xA;  { Date: 1691362800000, Close: 0.89},&#xD;&#xA;  { Date: 1691967600000, Close: 0.79},&#xD;&#xA;  { Date: 1692572400000, Close: 0.79},&#xD;&#xA;  { Date: 1695596400000, Close: 0.89},&#xD;&#xA;  { Date: 1696201200000, Close: 0.89},&#xD;&#xA;  { Date: 1696806000000, Close: 0.89},&#xD;&#xA;  { Date: 1697410800000, Close: 0.89},&#xD;&#xA;  { Date: 1698015600000, Close: 0.89},&#xD;&#xA;  { Date: 1698620400000, Close: 0.89},&#xD;&#xA;  { Date: 1699225200000, Close: 0.89},&#xD;&#xA;  { Date: 1699830000000, Close: 0.89},&#xD;&#xA;  { Date: 1700434800000, Close: 0.89},&#xD;&#xA;  { Date: 1701039600000, Close: 0.89},&#xD;&#xA;  { Date: 1701644400000, Close: 0.89},&#xD;&#xA;  { Date: 1702249200000, Close: 0.89},&#xD;&#xA;  { Date: 1702854000000, Close: 0.89},&#xD;&#xA;  { Date: 1703458800000, Close: 0.89},&#xD;&#xA;  { Date: 1704063600000, Close: 0.89},&#xD;&#xA;  { Date: 1704668400000, Close: 0.89},&#xD;&#xA;  { Date: 1705273200000, Close: 0.89},&#xD;&#xA;  { Date: 1705878000000, Close: 0.89},&#xD;&#xA;  { Date: 1707692400000, Close: 0.89},&#xD;&#xA;  { Date: 1708902000000, Close: 0.89},&#xD;&#xA;  { Date: 1709506800000, Close: 0.89},&#xD;&#xA;  { Date: 1710111600000, Close: 0.89},&#xD;&#xA;  { Date: 1710716400000, Close: 0.89},&#xD;&#xA;  { Date: 1711321200000, Close: 0.89},&#xD;&#xA;  { Date: 1711926000000, Close: 0.89},&#xD;&#xA;  { Date: 1716764400000, Close: 0.99},&#xD;&#xA;  { Date: 1717369200000, Close: 0.99},&#xD;&#xA;  { Date: 1717974000000, Close: 0.99},&#xD;&#xA;  { Date: 1718578800000, Close: 0.99},&#xD;&#xA;  { Date: 1719183600000, Close: 0.99},&#xD;&#xA;  { Date: 1719788400000, Close: 0.99},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Weedle</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/069---weedle/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/069---weedle/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149531.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1584486000000, Close: 0.39},&#xD;&#xA;  { Date: 1591398000000, Close: 0.35},&#xD;&#xA;  { Date: 1593385200000, Close: 0.35},&#xD;&#xA;  { Date: 1593817200000, Close: 0.35},&#xD;&#xA;  { Date: 1600383600000, Close: 0.35},&#xD;&#xA;  { Date: 1601247600000, Close: 0.35},&#xD;&#xA;  { Date: 1601852400000, Close: 0.35},&#xD;&#xA;  { Date: 1602457200000, Close: 0.35},&#xD;&#xA;  { Date: 1603062000000, Close: 0.49},&#xD;&#xA;  { Date: 1603666800000, Close: 0.49},&#xD;&#xA;  { Date: 1604876400000, Close: 0.49},&#xD;&#xA;  { Date: 1606086000000, Close: 0.59},&#xD;&#xA;  { Date: 1606690800000, Close: 0.59},&#xD;&#xA;  { Date: 1608505200000, Close: 0.69},&#xD;&#xA;  { Date: 1609110000000, Close: 0.69},&#xD;&#xA;  { Date: 1609714800000, Close: 0.69},&#xD;&#xA;  { Date: 1610233200000, Close: 0.69},&#xD;&#xA;  { Date: 1610924400000, Close: 0.59},&#xD;&#xA;  { Date: 1611529200000, Close: 0.59},&#xD;&#xA;  { Date: 1612134000000, Close: 0.59},&#xD;&#xA;  { Date: 1612738800000, Close: 0.59},&#xD;&#xA;  { Date: 1613343600000, Close: 0.59},&#xD;&#xA;  { Date: 1613948400000, Close: 0.59},&#xD;&#xA;  { Date: 1614553200000, Close: 0.59},&#xD;&#xA;  { Date: 1615158000000, Close: 0.59},&#xD;&#xA;  { Date: 1615762800000, Close: 0.59},&#xD;&#xA;  { Date: 1616367600000, Close: 0.59},&#xD;&#xA;  { Date: 1616972400000, Close: 0.59},&#xD;&#xA;  { Date: 1617577200000, Close: 0.59},&#xD;&#xA;  { Date: 1618182000000, Close: 0.49},&#xD;&#xA;  { Date: 1618786800000, Close: 0.49},&#xD;&#xA;  { Date: 1619391600000, Close: 0.49},&#xD;&#xA;  { Date: 1619996400000, Close: 0.49},&#xD;&#xA;  { Date: 1620601200000, Close: 0.49},&#xD;&#xA;  { Date: 1621206000000, Close: 0.49},&#xD;&#xA;  { Date: 1621810800000, Close: 0.49},&#xD;&#xA;  { Date: 1622415600000, Close: 0.49},&#xD;&#xA;  { Date: 1623020400000, Close: 0.49},&#xD;&#xA;  { Date: 1623625200000, Close: 0.49},&#xD;&#xA;  { Date: 1624230000000, Close: 0.49},&#xD;&#xA;  { Date: 1624834800000, Close: 0.49},&#xD;&#xA;  { Date: 1625439600000, Close: 0.39},&#xD;&#xA;  { Date: 1626044400000, Close: 0.39},&#xD;&#xA;  { Date: 1626649200000, Close: 0.39},&#xD;&#xA;  { Date: 1627254000000, Close: 0.39},&#xD;&#xA;  { Date: 1627858800000, Close: 0.39},&#xD;&#xA;  { Date: 1628463600000, Close: 0.39},&#xD;&#xA;  { Date: 1629068400000, Close: 0.39},&#xD;&#xA;  { Date: 1629673200000, Close: 0.39},&#xD;&#xA;  { Date: 1630278000000, Close: 0.39},&#xD;&#xA;  { Date: 1630882800000, Close: 0.39},&#xD;&#xA;  { Date: 1631487600000, Close: 0.39},&#xD;&#xA;  { Date: 1632092400000, Close: 0.39},&#xD;&#xA;  { Date: 1632697200000, Close: 0.39},&#xD;&#xA;  { Date: 1633302000000, Close: 0.35},&#xD;&#xA;  { Date: 1633906800000, Close: 0.35},&#xD;&#xA;  { Date: 1634511600000, Close: 0.35},&#xD;&#xA;  { Date: 1635116400000, Close: 0.35},&#xD;&#xA;  { Date: 1635721200000, Close: 0.35},&#xD;&#xA;  { Date: 1636326000000, Close: 0.35},&#xD;&#xA;  { Date: 1636930800000, Close: 0.35},&#xD;&#xA;  { Date: 1637535600000, Close: 0.35},&#xD;&#xA;  { Date: 1638140400000, Close: 0.35},&#xD;&#xA;  { Date: 1638745200000, Close: 0.35},&#xD;&#xA;  { Date: 1639350000000, Close: 0.35},&#xD;&#xA;  { Date: 1639954800000, Close: 0.35},&#xD;&#xA;  { Date: 1640559600000, Close: 0.35},&#xD;&#xA;  { Date: 1643583600000, Close: 0.49},&#xD;&#xA;  { Date: 1646002800000, Close: 0.49},&#xD;&#xA;  { Date: 1646607600000, Close: 0.49},&#xD;&#xA;  { Date: 1647212400000, Close: 0.49},&#xD;&#xA;  { Date: 1647817200000, Close: 0.49},&#xD;&#xA;  { Date: 1648422000000, Close: 0.49},&#xD;&#xA;  { Date: 1649026800000, Close: 0.49},&#xD;&#xA;  { Date: 1649631600000, Close: 0.49},&#xD;&#xA;  { Date: 1650236400000, Close: 0.49},&#xD;&#xA;  { Date: 1650841200000, Close: 0.49},&#xD;&#xA;  { Date: 1651446000000, Close: 0.49},&#xD;&#xA;  { Date: 1652050800000, Close: 0.49},&#xD;&#xA;  { Date: 1652655600000, Close: 0.49},&#xD;&#xA;  { Date: 1663542000000, Close: 0.49},&#xD;&#xA;  { Date: 1664146800000, Close: 0.49},&#xD;&#xA;  { Date: 1664751600000, Close: 0.49},&#xD;&#xA;  { Date: 1665356400000, Close: 0.49},&#xD;&#xA;  { Date: 1665961200000, Close: 0.49},&#xD;&#xA;  { Date: 1666566000000, Close: 0.49},&#xD;&#xA;  { Date: 1667170800000, Close: 0.49},&#xD;&#xA;  { Date: 1667775600000, Close: 0.49},&#xD;&#xA;  { Date: 1668380400000, Close: 0.49},&#xD;&#xA;  { Date: 1668985200000, Close: 0.49},&#xD;&#xA;  { Date: 1669590000000, Close: 0.49},&#xD;&#xA;  { Date: 1670194800000, Close: 0.39},&#xD;&#xA;  { Date: 1670799600000, Close: 0.39},&#xD;&#xA;  { Date: 1671404400000, Close: 0.39},&#xD;&#xA;  { Date: 1672009200000, Close: 0.39},&#xD;&#xA;  { Date: 1672614000000, Close: 0.39},&#xD;&#xA;  { Date: 1673218800000, Close: 0.39},&#xD;&#xA;  { Date: 1673823600000, Close: 0.39},&#xD;&#xA;  { Date: 1674428400000, Close: 0.39},&#xD;&#xA;  { Date: 1675033200000, Close: 0.39},&#xD;&#xA;  { Date: 1675638000000, Close: 0.39},&#xD;&#xA;  { Date: 1676242800000, Close: 0.39},&#xD;&#xA;  { Date: 1676847600000, Close: 0.39},&#xD;&#xA;  { Date: 1677452400000, Close: 0.39},&#xD;&#xA;  { Date: 1678057200000, Close: 0.39},&#xD;&#xA;  { Date: 1682290800000, Close: 0.39},&#xD;&#xA;  { Date: 1689548400000, Close: 0.49},&#xD;&#xA;  { Date: 1690153200000, Close: 0.49},&#xD;&#xA;  { Date: 1690758000000, Close: 0.49},&#xD;&#xA;  { Date: 1691362800000, Close: 0.49},&#xD;&#xA;  { Date: 1696201200000, Close: 0.39},&#xD;&#xA;  { Date: 1703458800000, Close: 0.39},&#xD;&#xA;  { Date: 1714345200000, Close: 0.49},&#xD;&#xA;  { Date: 1714950000000, Close: 0.49},&#xD;&#xA;  { Date: 1727046000000, Close: 0.39},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Zapdos</title>
      <link>https://irtom.github.io/website/docs/original-series/base-set/016---zapdos/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/original-series/base-set/016---zapdos/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://52f4e29a8321344e30ae-0f55c9129972ac85d6b1f4e703468e6b.ssl.cf2.rackcdn.com/products/pictures/149539.jpg&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- Styles --&gt;&#xD;&#xA;&lt;style&gt;&#xD;&#xA;#chartcontrols {&#xD;&#xA;  height: auto;&#xD;&#xA;  padding: 5px 5px 0 16px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;#chartdiv {&#xD;&#xA;  width: 100%;&#xD;&#xA;  height: 600px;&#xD;&#xA;  max-width: 100%;&#xD;&#xA;}&#xD;&#xA;&lt;/style&gt;&#xD;&#xA;&lt;!-- Resources --&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/index.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/xy.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/stock.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script src=&#34;https://cdn.amcharts.com/lib/5/themes/Animated.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;!-- Chart code --&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;am5.ready(function() {&#xD;&#xA;&#xD;&#xA;// Create root element&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/getting-started/#Root_element&#xD;&#xA;var root = am5.Root.new(&#34;chartdiv&#34;);&#xD;&#xA;&#xD;&#xA;const myTheme = am5.Theme.new(root);&#xD;&#xA;&#xD;&#xA;myTheme.rule(&#34;Grid&#34;, [&#34;scrollbar&#34;, &#34;minor&#34;]).setAll({&#xD;&#xA;  visible:false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;root.setThemes([&#xD;&#xA;  am5themes_Animated.new(root),&#xD;&#xA;  myTheme&#xD;&#xA;]);&#xD;&#xA;&#xD;&#xA;// Create a stock chart&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Instantiating_the_chart&#xD;&#xA;var stockChart = root.container.children.push(am5stock.StockChart.new(root, {  &#xD;&#xA;  paddingRight: 0&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set global number format&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/&#xD;&#xA;root.numberFormatter.set(&#34;numberFormat&#34;, &#34;#,###.00&#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create a main stock panel (chart)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Adding_panels&#xD;&#xA;var mainPanel = stockChart.panels.push(am5stock.StockPanel.new(root, {&#xD;&#xA;  wheelY: &#34;zoomX&#34;,&#xD;&#xA;  panX: true,&#xD;&#xA;  panY: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create value axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;var valueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {&#xD;&#xA;    pan: &#34;zoom&#34;&#xD;&#xA;  }),&#xD;&#xA;  extraMin: 0.1, // adds some space for for main series&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {}),&#xD;&#xA;  numberFormat: &#34;#,###.00&#34;,&#xD;&#xA;  extraTooltipPrecision: 2&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var dateAxis = mainPanel.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  }),&#xD;&#xA;  tooltip: am5.Tooltip.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;var valueSeries = mainPanel.series.push(am5xy.CandlestickSeries.new(root, {&#xD;&#xA;  name: &#34;Price&#34;,&#xD;&#xA;  clustered: false,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  //highValueYField: &#34;High&#34;,&#xD;&#xA;  //lowValueYField: &#34;Low&#34;,&#xD;&#xA;  //openValueYField: &#34;Open&#34;,&#xD;&#xA;  calculateAggregates: true,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  legendValueText: &#34;[bold]{valueY}&#34;,      //&#34;open: [bold]{openValueY}&#34;, [/] high: [bold]{highValueY}[/] low: [bold]{lowValueY}[/] close: [bold]{valueY}[/]&#34;,&#xD;&#xA;  legendRangeValueText: &#34;&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main value series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;stockChart.set(&#34;stockSeries&#34;, valueSeries);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add a stock legend&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/stock-legend/&#xD;&#xA;var valueLegend = mainPanel.plotContainer.children.push(am5stock.StockLegend.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;}));&#xD;&#xA;valueLegend.settingsButtons.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Create volume axis&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/&#xD;&#xA;//var volumeAxisRenderer = am5xy.AxisRendererY.new(root, {&#xD;&#xA;//  inside: true,&#xD;&#xA;//  pan: &#34;zoom&#34;&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;//volumeAxisRenderer.labels.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;//volumeAxisRenderer.grid.template.set(&#34;forceHidden&#34;, true);&#xD;&#xA;&#xD;&#xA;//var volumeValueAxis = mainPanel.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;//  numberFormat: &#34;#.#a&#34;,&#xD;&#xA;//  height: am5.percent(20),&#xD;&#xA;//  y: am5.percent(100),&#xD;&#xA;//  centerY: am5.percent(100),&#xD;&#xA;//  renderer: volumeAxisRenderer&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;// Add series&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/series/&#xD;&#xA;//var volumeSeries = mainPanel.series.push(am5xy.ColumnSeries.new(root, {&#xD;&#xA;//  name: &#34;Volume&#34;,&#xD;&#xA;//  clustered: false,&#xD;&#xA;//  valueXField: &#34;Date&#34;,&#xD;&#xA;//  valueYField: &#34;Volume&#34;,&#xD;&#xA;//  xAxis: dateAxis,&#xD;&#xA;//  yAxis: volumeValueAxis,&#xD;&#xA;//  legendValueText: &#34;[bold]{valueY.formatNumber(&#39;#,###.0a&#39;)}[/]&#34;&#xD;&#xA;//}));&#xD;&#xA;&#xD;&#xA;//volumeSeries.columns.template.setAll({&#xD;&#xA;//  strokeOpacity: 0,&#xD;&#xA;//  fillOpacity: 0.5&#xD;&#xA;//});&#xD;&#xA;&#xD;&#xA;// color columns by stock rules&#xD;&#xA;//volumeSeries.columns.template.adapters.add(&#34;fill&#34;, function (fill, target) {&#xD;&#xA;//  var dataItem = target.dataItem;&#xD;&#xA;//  if (dataItem) {&#xD;&#xA;//    return stockChart.getVolumeColor(dataItem);&#xD;&#xA;//  }&#xD;&#xA;//  return fill;&#xD;&#xA;//})&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Set main series&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/#Setting_main_series&#xD;&#xA;//stockChart.set(&#34;volumeSeries&#34;, volumeSeries);&#xD;&#xA;//valueLegend.data.setAll([valueSeries, volumeSeries]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add cursor(s)&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/&#xD;&#xA;mainPanel.set(&#34;cursor&#34;, am5xy.XYCursor.new(root, {&#xD;&#xA;  yAxis: valueAxis,&#xD;&#xA;  xAxis: dateAxis,&#xD;&#xA;  snapToSeries: [valueSeries],&#xD;&#xA;  snapToSeriesBy: &#34;y!&#34;&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Add scrollbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/&#xD;&#xA;var scrollbar = mainPanel.set(&#34;scrollbarX&#34;, am5xy.XYChartScrollbar.new(root, {&#xD;&#xA;  orientation: &#34;horizontal&#34;,&#xD;&#xA;  height: 50&#xD;&#xA;}));&#xD;&#xA;stockChart.toolsContainer.children.push(scrollbar);&#xD;&#xA;&#xD;&#xA;var sbDateAxis = scrollbar.chart.xAxes.push(am5xy.GaplessDateAxis.new(root, {&#xD;&#xA;  baseInterval: {&#xD;&#xA;    timeUnit: &#34;day&#34;,&#xD;&#xA;    count: 1&#xD;&#xA;  },&#xD;&#xA;  renderer: am5xy.AxisRendererX.new(root, {&#xD;&#xA;    minorGridEnabled: true&#xD;&#xA;  })&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbValueAxis = scrollbar.chart.yAxes.push(am5xy.ValueAxis.new(root, {&#xD;&#xA;  renderer: am5xy.AxisRendererY.new(root, {})&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;var sbSeries = scrollbar.chart.series.push(am5xy.LineSeries.new(root, {&#xD;&#xA;  valueYField: &#34;Close&#34;,&#xD;&#xA;  valueXField: &#34;Date&#34;,&#xD;&#xA;  xAxis: sbDateAxis,&#xD;&#xA;  yAxis: sbValueAxis&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;sbSeries.fills.template.setAll({&#xD;&#xA;  visible: true,&#xD;&#xA;  fillOpacity: 0.3&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// Set up series type switcher&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/series-type-control/&#xD;&#xA;var seriesSwitcher = am5stock.SeriesTypeControl.new(root, {&#xD;&#xA;  stockChart: stockChart&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;seriesSwitcher.events.on(&#34;selected&#34;, function (ev) {&#xD;&#xA;  setSeriesType(&#34;line&#34;); //ev.item.id);&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;function getNewSettings(series) {&#xD;&#xA;  var newSettings = [];&#xD;&#xA;  am5.array.each([&#34;name&#34;, &#34;valueYField&#34;, &#34;highValueYField&#34;, &#34;lowValueYField&#34;, &#34;openValueYField&#34;, &#34;calculateAggregates&#34;, &#34;valueXField&#34;, &#34;xAxis&#34;, &#34;yAxis&#34;, &#34;legendValueText&#34;, &#34;legendRangeValueText&#34;, &#34;stroke&#34;, &#34;fill&#34;], function (setting) {&#xD;&#xA;    newSettings[setting] = series.get(setting);&#xD;&#xA;  });&#xD;&#xA;  return newSettings;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function setSeriesType(seriesType) {&#xD;&#xA;  // Get current series and its settings&#xD;&#xA;  var currentSeries = stockChart.get(&#34;stockSeries&#34;);&#xD;&#xA;  var newSettings = getNewSettings(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Remove previous series&#xD;&#xA;  var data = currentSeries.data.values;&#xD;&#xA;  mainPanel.series.removeValue(currentSeries);&#xD;&#xA;&#xD;&#xA;  // Create new series&#xD;&#xA;  var series;&#xD;&#xA;  switch (seriesType) {&#xD;&#xA;    case &#34;line&#34;:&#xD;&#xA;      series = mainPanel.series.push(am5xy.LineSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;    case &#34;candlestick&#34;:&#xD;&#xA;    case &#34;procandlestick&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.CandlestickSeries.new(root, newSettings));&#xD;&#xA;      if (seriesType == &#34;procandlestick&#34;) {&#xD;&#xA;        series.columns.template.get(&#34;themeTags&#34;).push(&#34;pro&#34;);&#xD;&#xA;      }&#xD;&#xA;      break;&#xD;&#xA;    case &#34;ohlc&#34;:&#xD;&#xA;      newSettings.clustered = false;&#xD;&#xA;      series = mainPanel.series.push(am5xy.OHLCSeries.new(root, newSettings));&#xD;&#xA;      break;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  // Set new series as stockSeries&#xD;&#xA;  if (series) {&#xD;&#xA;    valueLegend.data.removeValue(currentSeries);&#xD;&#xA;    series.data.setAll(data);&#xD;&#xA;    stockChart.set(&#34;stockSeries&#34;, series);&#xD;&#xA;    var cursor = mainPanel.get(&#34;cursor&#34;);&#xD;&#xA;    if (cursor) {&#xD;&#xA;      cursor.set(&#34;snapToSeries&#34;, [series]);&#xD;&#xA;    }&#xD;&#xA;    valueLegend.data.insertIndex(0, series);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;// Stock toolbar&#xD;&#xA;// -------------------------------------------------------------------------------&#xD;&#xA;// https://www.amcharts.com/docs/v5/charts/stock/toolbar/&#xD;&#xA;var toolbar = am5stock.StockToolbar.new(root, {&#xD;&#xA;  container: document.getElementById(&#34;chartcontrols&#34;),&#xD;&#xA;  stockChart: stockChart,&#xD;&#xA;  controls: [&#xD;&#xA;    //am5stock.IndicatorControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart,&#xD;&#xA;    //  legend: valueLegend&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.DateRangeSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    am5stock.PeriodSelector.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //seriesSwitcher,&#xD;&#xA;    //am5stock.DrawingControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    //am5stock.DataSaveControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //}),&#xD;&#xA;    am5stock.ResetControl.new(root, {&#xD;&#xA;      stockChart: stockChart&#xD;&#xA;    }),&#xD;&#xA;    //am5stock.SettingsControl.new(root, {&#xD;&#xA;    //  stockChart: stockChart&#xD;&#xA;    //})&#xD;&#xA;  ]&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// data&#xD;&#xA;var data = [&#xD;&#xA;{ Date: 1577228400000, Close: 12.99},&#xD;&#xA;  { Date: 1578351600000, Close: 13.99},&#xD;&#xA;  { Date: 1578524400000, Close: 13.99},&#xD;&#xA;  { Date: 1578956400000, Close: 13.99},&#xD;&#xA;  { Date: 1579129200000, Close: 14.99},&#xD;&#xA;  { Date: 1580943600000, Close: 15.99},&#xD;&#xA;  { Date: 1582326000000, Close: 17.99},&#xD;&#xA;  { Date: 1582671600000, Close: 17.99},&#xD;&#xA;  { Date: 1585004400000, Close: 19.99},&#xD;&#xA;  { Date: 1585782000000, Close: 18.99},&#xD;&#xA;  { Date: 1588633200000, Close: 27.99},&#xD;&#xA;  { Date: 1589410800000, Close: 34.99},&#xD;&#xA;  { Date: 1590620400000, Close: 39.99},&#xD;&#xA;  { Date: 1590706800000, Close: 44.99},&#xD;&#xA;  { Date: 1592002800000, Close: 45.99},&#xD;&#xA;  { Date: 1592953200000, Close: 44.99},&#xD;&#xA;  { Date: 1595977200000, Close: 41.99},&#xD;&#xA;  { Date: 1596754800000, Close: 41.99},&#xD;&#xA;  { Date: 1599001200000, Close: 42.99},&#xD;&#xA;  { Date: 1599260400000, Close: 39.99},&#xD;&#xA;  { Date: 1602025200000, Close: 36.99},&#xD;&#xA;  { Date: 1602543600000, Close: 38.99},&#xD;&#xA;  { Date: 1602889200000, Close: 38.99},&#xD;&#xA;  { Date: 1603839600000, Close: 44.99},&#xD;&#xA;  { Date: 1604444400000, Close: 44.99},&#xD;&#xA;  { Date: 1605567600000, Close: 44.99},&#xD;&#xA;  { Date: 1605913200000, Close: 49.99},&#xD;&#xA;  { Date: 1606863600000, Close: 41.99},&#xD;&#xA;  { Date: 1606950000000, Close: 39.99},&#xD;&#xA;  { Date: 1607382000000, Close: 49.99},&#xD;&#xA;  { Date: 1608073200000, Close: 44.99},&#xD;&#xA;  { Date: 1608159600000, Close: 39.99},&#xD;&#xA;  { Date: 1609282800000, Close: 33.99},&#xD;&#xA;  { Date: 1610406000000, Close: 34.99},&#xD;&#xA;  { Date: 1610492400000, Close: 35.99},&#xD;&#xA;  { Date: 1614034800000, Close: 34.99},&#xD;&#xA;  { Date: 1615503600000, Close: 32.99},&#xD;&#xA;  { Date: 1616022000000, Close: 33.99},&#xD;&#xA;  { Date: 1616194800000, Close: 31.99},&#xD;&#xA;  { Date: 1617750000000, Close: 29.99},&#xD;&#xA;  { Date: 1620255600000, Close: 32.99},&#xD;&#xA;  { Date: 1620687600000, Close: 32.99},&#xD;&#xA;  { Date: 1620946800000, Close: 32.99},&#xD;&#xA;  { Date: 1621638000000, Close: 32.99},&#xD;&#xA;  { Date: 1622242800000, Close: 37.99},&#xD;&#xA;  { Date: 1623452400000, Close: 32.99},&#xD;&#xA;  { Date: 1626217200000, Close: 30.99},&#xD;&#xA;  { Date: 1626994800000, Close: 29.99},&#xD;&#xA;  { Date: 1631228400000, Close: 29.99},&#xD;&#xA;  { Date: 1632524400000, Close: 27.99},&#xD;&#xA;  { Date: 1633993200000, Close: 29.49},&#xD;&#xA;  { Date: 1634166000000, Close: 30.99},&#xD;&#xA;  { Date: 1635462000000, Close: 29.99},&#xD;&#xA;  { Date: 1636066800000, Close: 29.99},&#xD;&#xA;  { Date: 1639090800000, Close: 34.99},&#xD;&#xA;  { Date: 1641337200000, Close: 34.99},&#xD;&#xA;  { Date: 1642633200000, Close: 34.99},&#xD;&#xA;  { Date: 1643324400000, Close: 34.99},&#xD;&#xA;  { Date: 1645830000000, Close: 39.99},&#xD;&#xA;  { Date: 1647385200000, Close: 39.99},&#xD;&#xA;  { Date: 1647903600000, Close: 39.99},&#xD;&#xA;  { Date: 1649286000000, Close: 36.99},&#xD;&#xA;  { Date: 1650322800000, Close: 36.99},&#xD;&#xA;  { Date: 1652396400000, Close: 36.99},&#xD;&#xA;  { Date: 1653001200000, Close: 36.99},&#xD;&#xA;  { Date: 1654902000000, Close: 36.99},&#xD;&#xA;  { Date: 1657839600000, Close: 35.99},&#xD;&#xA;  { Date: 1661900400000, Close: 39.99},&#xD;&#xA;  { Date: 1665788400000, Close: 34.99},&#xD;&#xA;  { Date: 1673391600000, Close: 36.99},&#xD;&#xA;  { Date: 1676415600000, Close: 36.99},&#xD;&#xA;  { Date: 1679785200000, Close: 37.99},&#xD;&#xA;  { Date: 1680217200000, Close: 37.99},&#xD;&#xA;  { Date: 1680390000000, Close: 32.89},&#xD;&#xA;  { Date: 1680822000000, Close: 32.49},&#xD;&#xA;  { Date: 1681254000000, Close: 31.49},&#xD;&#xA;  { Date: 1681945200000, Close: 31.49},&#xD;&#xA;  { Date: 1682377200000, Close: 31.49},&#xD;&#xA;  { Date: 1682463600000, Close: 26.99},&#xD;&#xA;  { Date: 1682722800000, Close: 26.99},&#xD;&#xA;  { Date: 1688166000000, Close: 29.99},&#xD;&#xA;  { Date: 1689980400000, Close: 31.99},&#xD;&#xA;  { Date: 1691017200000, Close: 35.49},&#xD;&#xA;  { Date: 1691362800000, Close: 33.89},&#xD;&#xA;  { Date: 1691708400000, Close: 32.99},&#xD;&#xA;  { Date: 1695942000000, Close: 32.99},&#xD;&#xA;  { Date: 1710889200000, Close: 30.99},&#xD;&#xA;  { Date: 1711148400000, Close: 31.09},&#xD;&#xA;  { Date: 1713394800000, Close: 32.99},&#xD;&#xA;  { Date: 1722985200000, Close: 31.59},&#xD;&#xA;  { Date: 1723244400000, Close: 30.99},&#xD;&#xA;  { Date: 1724886000000, Close: 31.69},&#xD;&#xA;  { Date: 1727996400000, Close: 31.69},&#xD;&#xA;  { Date: 1728255600000, Close: 31.69},&#xD;&#xA;];&#xD;&#xA;&#xD;&#xA;var tooltip = am5.Tooltip.new(root, {&#xD;&#xA;  getStrokeFromSprite: false,&#xD;&#xA;  getFillFromSprite: false&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;tooltip.get(&#34;background&#34;).setAll({&#xD;&#xA;  strokeOpacity: 1,&#xD;&#xA;  stroke: am5.color(0x000000),&#xD;&#xA;  fillOpacity: 1,&#xD;&#xA;  fill: am5.color(0xffffff)&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;function makeEvent(date, letter, color, description) {&#xD;&#xA;  var dataItem = dateAxis.createAxisRange(dateAxis.makeDataItem({ value: date }))&#xD;&#xA;  var grid = dataItem.get(&#34;grid&#34;);&#xD;&#xA;  if (grid) {&#xD;&#xA;    grid.setAll({ visible: true, strokeOpacity: 0.2, strokeDasharray: [3, 3] })&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  var bullet = am5.Container.new(root, {&#xD;&#xA;    dy: -100&#xD;&#xA;  });&#xD;&#xA;&#xD;&#xA;  var circle = bullet.children.push(am5.Circle.new(root, {&#xD;&#xA;    radius: 10,&#xD;&#xA;    stroke: color,&#xD;&#xA;    fill: am5.color(0xffffff),&#xD;&#xA;    tooltipText: description,&#xD;&#xA;    tooltip: tooltip,&#xD;&#xA;    tooltipY: 0&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  var label = bullet.children.push(am5.Label.new(root, {&#xD;&#xA;    text: letter,&#xD;&#xA;    centerX: am5.p50,&#xD;&#xA;    centerY: am5.p50&#xD;&#xA;  }));&#xD;&#xA;&#xD;&#xA;  dataItem.set(&#34;bullet&#34;, am5xy.AxisBullet.new(root, {&#xD;&#xA;    location: 0,&#xD;&#xA;    stacked: true,&#xD;&#xA;    sprite: bullet&#xD;&#xA;  }));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//makeEvent(1619006400000, &#34;S&#34;, am5.color(0xff0000), &#34;Split 4:1&#34;)&#xD;&#xA;//makeEvent(1619006400000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;//makeEvent(1634212800000, &#34;D&#34;, am5.color(0x00FF00), &#34;Dividends paid&#34;)&#xD;&#xA;&#xD;&#xA;// set data to all series&#xD;&#xA;valueSeries.data.setAll(data);&#xD;&#xA;//volumeSeries.data.setAll(data);&#xD;&#xA;sbSeries.data.setAll(data);&#xD;&#xA;&#xD;&#xA;// Set series type&#xD;&#xA;setSeriesType(&#34;line&#34;);&#xD;&#xA;&#xD;&#xA;}); // end am5.ready()&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;!-- HTML --&gt;&#xD;&#xA;&lt;div id=&#34;chartcontrols&#34;&gt;&lt;/div&gt;&#xD;&#xA;&lt;div id=&#34;chartdiv&#34;&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Examples</title>
      <link>https://irtom.github.io/website/docs/examples/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/examples/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Do you have any example &lt;strong&gt;applications&lt;/strong&gt; or &lt;strong&gt;code&lt;/strong&gt; for your users in your repo&#xA;or elsewhere? Link to your examples here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Launching Ponycopters</title>
      <link>https://irtom.github.io/website/docs/tasks/ponycopters/launching-ponycopters/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/tasks/ponycopters/launching-ponycopters/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://gohugo.io&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multi-Bear Domicile Setup</title>
      <link>https://irtom.github.io/website/docs/tutorials/multi-bear/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/tutorials/multi-bear/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://gohugo.io&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Porridge Assessment</title>
      <link>https://irtom.github.io/website/docs/tasks/porridge/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/tasks/porridge/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://gohugo.io&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Concepts</title>
      <link>https://irtom.github.io/website/docs/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/concepts/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page that shows you how to use this template site.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;For many projects, users may not need much information beyond the information in the &lt;a href=&#34;https://irtom.github.io/website/website/docs/overview/&#34;&gt;Overview&lt;/a&gt;, so this section is &lt;strong&gt;optional&lt;/strong&gt;. However if there are areas where your users will need a more detailed understanding of a given term or feature in order to do anything useful with your project (or to not make mistakes when using it) put that information in this section. For example, you may want to add some conceptual pages if you have a large project with many components and a complex architecture.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Another Task</title>
      <link>https://irtom.github.io/website/docs/tasks/task/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/tasks/task/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://gohugo.io&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Another Tutorial</title>
      <link>https://irtom.github.io/website/docs/tutorials/tutorial2/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/tutorials/tutorial2/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://gohugo.io&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contribution Guidelines</title>
      <link>https://irtom.github.io/website/docs/contribution-guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/contribution-guidelines/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;These basic sample guidelines assume that your Docsy site is deployed using Netlify and your files are stored in GitHub. You can use the guidelines &amp;ldquo;as is&amp;rdquo; or adapt them with your own instructions: for example, other deployment options, information about your doc project&amp;rsquo;s file structure, project-specific review guidelines, versioning guidelines, or any other information your users might find useful when updating your site. &lt;a href=&#34;https://github.com/kubeflow/website/blob/master/README.md&#34;&gt;Kubeflow&lt;/a&gt; has a great example.&lt;/p&gt;&#xA;&lt;p&gt;Don&amp;rsquo;t forget to link to your own doc repo rather than our example site! Also make sure users can find these guidelines from your doc repo README: either add them there and link to them from this page, add them here and link to them from the README, or include them in both locations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Easy documentation with Docsy</title>
      <link>https://irtom.github.io/website/blog/2018/10/06/easy-documentation-with-docsy/</link>
      <pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/blog/2018/10/06/easy-documentation-with-docsy/</guid>
      <description>&lt;p&gt;&lt;strong&gt;This is a typical blog post that includes images.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The front matter specifies the date of the blog post, its title, a short description that will be displayed on the blog landing page, and its author.&lt;/p&gt;&#xA;&lt;h2 id=&#34;including-images&#34;&gt;Including images&lt;a class=&#34;td-heading-self-link&#34; href=&#34;#including-images&#34; aria-label=&#34;Heading self-link&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;Here&amp;rsquo;s an image (&lt;code&gt;featured-sunset-get.png&lt;/code&gt;) that includes a byline and a caption.&lt;/p&gt;&#xA;&lt;figure class=&#34;card rounded p-2 td-post-card mb-4 mt-4&#34; style=&#34;max-width: 610px&#34;&gt;&#xA;&lt;img class=&#34;card-img-top&#34; src=&#34;https://irtom.github.io/website/website/blog/2018/10/06/easy-documentation-with-docsy/featured-sunset-get_hu18177156491556528792.png&#34; width=&#34;600&#34; height=&#34;300&#34;&gt;&#xA;&lt;figcaption class=&#34;card-body px-0 pt-2 pb-0&#34;&gt;&#xA;&lt;p class=&#34;card-text&#34;&gt;&#xA;&#xA;&#xD;&#xA;Fetch and scale an image in the upcoming Hugo 0.43.&#xD;&#xA;&lt;small class=&#34;text-body-secondary&#34;&gt;&lt;br/&gt;Photo: Riona MacNamara / CC-BY-CA&lt;/small&gt;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Second blog post</title>
      <link>https://irtom.github.io/website/blog/2018/10/06/second-blog-post/</link>
      <pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/blog/2018/10/06/second-blog-post/</guid>
      <description>&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://github.com&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;There should be no margin above this first sentence.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Another Great Release</title>
      <link>https://irtom.github.io/website/blog/2018/01/04/another-great-release/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/blog/2018/01/04/another-great-release/</guid>
      <description>&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://github.com&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs. There should be whitespace between paragraphs.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;There should be no margin above this first sentence.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Example Page</title>
      <link>https://irtom.github.io/website/docs/getting-started/example-page/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/getting-started/example-page/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://gohugo.io&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parameter Reference</title>
      <link>https://irtom.github.io/website/docs/reference/parameter-reference/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/docs/reference/parameter-reference/</guid>
      <description>&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;&#xA;&lt;p&gt;This is a placeholder page. Replace it with your own content.&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Text can be &lt;strong&gt;bold&lt;/strong&gt;, &lt;em&gt;italic&lt;/em&gt;, or &lt;del&gt;strikethrough&lt;/del&gt;. &lt;a href=&#34;https://gohugo.io&#34;&gt;Links&lt;/a&gt; should be blue with no underlines (unless hovered over).&lt;/p&gt;&#xA;&lt;p&gt;There should be whitespace between paragraphs. Vape migas chillwave sriracha poutine try-hard distillery. Tattooed shabby chic small batch, pabst art party heirloom letterpress air plant pop-up. Sustainable chia skateboard art party banjo cardigan normcore affogato vexillologist quinoa meggings man bun master cleanse shoreditch readymade. Yuccie prism four dollar toast tbh cardigan iPhone, tumblr listicle live-edge VHS. Pug lyft normcore hot chicken biodiesel, actually keffiyeh thundercats photo booth pour-over twee fam food truck microdosing banh mi. Vice activated charcoal raclette unicorn live-edge post-ironic. Heirloom vexillologist coloring book, beard deep v letterpress echo park humblebrag tilde.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Goldydocs</title>
      <link>https://irtom.github.io/website/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/about/</guid>
      <description>&lt;link rel=&#34;preload&#34; as=&#34;image&#34; href=&#34;https://irtom.github.io/website/website/about/featured-background_hu4003775461251110261.jpg&#34; media=&#34;(max-width: 1200px)&#34;&gt;&#xA;&lt;link rel=&#34;preload&#34; as=&#34;image&#34; href=&#34;https://irtom.github.io/website/website/about/featured-background_hu2312927490661001000.jpg&#34; media=&#34;(min-width: 1200px)&#34;&gt;&#xA;&lt;style&gt;&#xA;#td-cover-block-0 {&#xA;  background-image: url(/website/about/featured-background_hu4003775461251110261.jpg);&#xA;}&#xA;@media only screen and (min-width: 1200px) {&#xA;  #td-cover-block-0 {&#xA;    background-image: url(/website/about/featured-background_hu2312927490661001000.jpg);&#xA;  }&#xA;}&#xA;&lt;/style&gt;&#xA;&lt;section id=&#34;td-cover-block-0&#34; class=&#34;row td-cover-block td-cover-block--height-auto js-td-cover td-overlay td-overlay--dark -bg-dark&#34;&gt;&#xA;  &lt;div class=&#34;col-12&#34;&gt;&#xA;    &lt;div class=&#34;container td-overlay__inner&#34;&gt;&#xA;      &lt;div class=&#34;text-center&#34;&gt;&#xA;        &lt;h1 class=&#34;display-1 mt-0 mt-md-5 pb-4&#34;&gt;About Goldydocs&lt;/h1&gt;&#xA;        &#xA;        &lt;div class=&#34;pt-3 lead&#34;&gt;&#xA;          &#xA;              &lt;p class=&#34;mt-5&#34;&gt;A sample site using the Docsy Hugo theme.&lt;/p&gt;&#xA;&#xA;          &#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;  &#xA;&lt;/section&gt;&#xA;&#xA;&lt;div&gt;&lt;a id=&#34;td-block-1&#34; class=&#34;td-offset-anchor&#34;&gt;&lt;/a&gt;&lt;/div&gt;&#xA;&lt;section class=&#34;row td-box td-box--1 position-relative td-box--height-auto&#34;&gt;&#xA;&lt;div class=&#34;col-12&#34;&gt;&#xA;&lt;div class=&#34;container text-center td-arrow-down&#34;&gt;&#xA;&lt;div class=&#34;h4 mb-0&#34;&gt;&#xA;&lt;p&gt;Goldydocs is a sample site using the &lt;a href=&#34;https://github.com/google/docsy&#34;&gt;Docsy&lt;/a&gt;&#xA;Hugo theme that shows what it can do and provides you with a template site&#xA;structure. It’s designed for you to clone and edit as much as you like. See the&#xA;different sections of the documentation and site for more ideas.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search Results</title>
      <link>https://irtom.github.io/website/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://irtom.github.io/website/search/</guid>
      <description></description>
    </item>
  </channel>
</rss>
